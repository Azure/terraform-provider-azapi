[
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z0-9-_]+$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Workloads/monitors"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-02-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Workloads/monitors",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "identity": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 0,
        "description": "The managed service identities assigned to this resource."
      },
      "tags": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitorProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 2,
        "description": "State of provisioning of the SAP monitor."
      },
      "errors": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 2,
        "description": "Defines the SAP monitor errors."
      },
      "appLocation": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region."
      },
      "routingPreference": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 0,
        "description": "Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET."
      },
      "zoneRedundancyPreference": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Sets the preference for zone redundancy on resources created for the SAP monitor. By default resources will be created which do not support zone redundancy."
      },
      "managedResourceGroupConfiguration": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Managed resource group configuration"
      },
      "logAnalyticsWorkspaceArmId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ARM ID of the Log Analytics Workspace that is used for SAP monitoring."
      },
      "monitorSubnet": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The subnet which the SAP monitor will be deployed in"
      },
      "appServicePlanConfiguration": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 0,
        "description": "App service plan configuration"
      },
      "msiArmId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The ARM ID of the MSI used for SAP monitoring."
      },
      "storageAccountArmId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The ARM ID of the Storage account used for SAP monitoring."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Migrating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/12"
      },
      {
        "$ref": "#/13"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ErrorDetail",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error code."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error message."
      },
      "target": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error target."
      },
      "details": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 2,
        "description": "The error details."
      },
      "additionalInfo": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 2,
        "description": "The error additional info."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/15"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ErrorAdditionalInfo",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The additional info type."
      },
      "info": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 2,
        "description": "The additional info."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/17"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "RouteAll"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/20"
      },
      {
        "$ref": "#/21"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ManagedResourceGroupConfiguration",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Managed resource group name"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AppServicePlanConfiguration",
    "properties": {
      "tier": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "The App Service plan tier."
      },
      "capacity": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 0,
        "description": "The number of workers in app service plan. If this is not set or set to 0, auto scale will be configured for the app service plan, otherwise, instance count is set to this number."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ElasticPremium"
  },
  {
    "$type": "StringLiteralType",
    "value": "PremiumV3"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/25"
      },
      {
        "$ref": "#/26"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 0
  },
  {
    "$type": "ObjectType",
    "name": "ManagedServiceIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 2,
        "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "tenantId": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 2,
        "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "type": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 1,
        "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."
      },
      "userAssignedIdentities": {
        "type": {
          "$ref": "#/37"
        },
        "flags": 0,
        "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 36,
    "maxLength": 36,
    "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned,UserAssigned"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/31"
      },
      {
        "$ref": "#/32"
      },
      {
        "$ref": "#/33"
      },
      {
        "$ref": "#/34"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 2,
        "description": "The principal ID of the assigned identity."
      },
      "clientId": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 2,
        "description": "The client ID of the assigned identity."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentities",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/36"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/40"
      },
      {
        "$ref": "#/41"
      },
      {
        "$ref": "#/42"
      },
      {
        "$ref": "#/43"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/45"
      },
      {
        "$ref": "#/46"
      },
      {
        "$ref": "#/47"
      },
      {
        "$ref": "#/48"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Workloads/monitors@2024-02-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/4"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "pattern": "^[a-zA-Z0-9-_]+$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Workloads/monitors/alerts"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-02-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Workloads/monitors/alerts",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Alert Instance properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AlertProperties",
    "properties": {
      "errors": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 2,
        "description": "Defines the alert instance errors."
      },
      "alertRuleResourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "ID of the alert rule resource created."
      },
      "templateName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the alert template from which it was created."
      },
      "providerType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The provider type for alert. For example, the value can be SapHana."
      },
      "providerNames": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 0,
        "description": "Name of provider instances associated with the alert."
      },
      "alertRuleProperties": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0,
        "description": "Describes the properties of an alert."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/89"
        },
        "flags": 2,
        "description": "State of provisioning of the alert instance"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AlertRuleProperties",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/60"
        },
        "flags": 0,
        "description": "Indicates whether the alert is in an enabled state."
      },
      "severity": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 0,
        "description": "Severity of the alert. Should be an integer between [0-4]. Value of 0 is severest."
      },
      "actionGroups": {
        "type": {
          "$ref": "#/62"
        },
        "flags": 0,
        "description": "Action Group resource Ids to invoke when the alert fires"
      },
      "threshold": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "The threshold of the alert."
      },
      "thresholdOperator": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 0,
        "description": "The threshold operator of the alert."
      },
      "windowSize": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "The period of time on which the Alert query will be executed."
      },
      "evaluationFrequency": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "How often the scheduled query rule is evaluated."
      },
      "failingPeriodsToAlert": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "The number of failing periods to trigger an alert."
      },
      "failingPeriodsOperator": {
        "type": {
          "$ref": "#/75"
        },
        "flags": 0,
        "description": "The operator for failing periods."
      },
      "muteActionsDuration": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Mute actions for the chosen period of time after the alert is fired."
      },
      "autoMitigate": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0,
        "description": "The value that indicates whether the alert should be automatically resolved or not. The default is Disable."
      },
      "dimension": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Evaluation of metric on a particular column."
      },
      "alertQueryParameters": {
        "type": {
          "$ref": "#/80"
        },
        "flags": 0,
        "description": "The alert query parameters."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/58"
      },
      {
        "$ref": "#/59"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 0,
    "maxValue": 4
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "StringLiteralType",
    "value": "LessThan"
  },
  {
    "$type": "StringLiteralType",
    "value": "GreaterThan"
  },
  {
    "$type": "StringLiteralType",
    "value": "Equal"
  },
  {
    "$type": "StringLiteralType",
    "value": "GreaterThanOrEqual"
  },
  {
    "$type": "StringLiteralType",
    "value": "LessThanOrEqual"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/64"
      },
      {
        "$ref": "#/65"
      },
      {
        "$ref": "#/66"
      },
      {
        "$ref": "#/67"
      },
      {
        "$ref": "#/68"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "LessThan"
  },
  {
    "$type": "StringLiteralType",
    "value": "GreaterThan"
  },
  {
    "$type": "StringLiteralType",
    "value": "Equal"
  },
  {
    "$type": "StringLiteralType",
    "value": "GreaterThanOrEqual"
  },
  {
    "$type": "StringLiteralType",
    "value": "LessThanOrEqual"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/70"
      },
      {
        "$ref": "#/71"
      },
      {
        "$ref": "#/72"
      },
      {
        "$ref": "#/73"
      },
      {
        "$ref": "#/74"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enable"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disable"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/76"
      },
      {
        "$ref": "#/77"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AlertQueryParameter",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the alert query parameter."
      },
      "value": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The value of the alert query parameter."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/79"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Migrating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/81"
      },
      {
        "$ref": "#/82"
      },
      {
        "$ref": "#/83"
      },
      {
        "$ref": "#/84"
      },
      {
        "$ref": "#/85"
      },
      {
        "$ref": "#/86"
      },
      {
        "$ref": "#/87"
      },
      {
        "$ref": "#/88"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Workloads/monitors/alerts@2024-02-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/54"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Workloads/monitors/providerInstances"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-02-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Workloads/monitors/providerInstances",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/94"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProviderInstanceProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 2,
        "description": "State of provisioning of the provider instance"
      },
      "health": {
        "type": {
          "$ref": "#/104"
        },
        "flags": 2,
        "description": "Resource health details"
      },
      "errors": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 2,
        "description": "Defines the provider instance errors."
      },
      "providerSettings": {
        "type": {
          "$ref": "#/110"
        },
        "flags": 0,
        "description": "Defines the provider specific properties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Migrating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/95"
      },
      {
        "$ref": "#/96"
      },
      {
        "$ref": "#/97"
      },
      {
        "$ref": "#/98"
      },
      {
        "$ref": "#/99"
      },
      {
        "$ref": "#/100"
      },
      {
        "$ref": "#/101"
      },
      {
        "$ref": "#/102"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Health",
    "properties": {
      "healthState": {
        "type": {
          "$ref": "#/109"
        },
        "flags": 2,
        "description": "Health state of the resource"
      },
      "impactingReasons": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Reasons impacting health state"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Healthy"
  },
  {
    "$type": "StringLiteralType",
    "value": "Degraded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unavailable"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/105"
      },
      {
        "$ref": "#/106"
      },
      {
        "$ref": "#/107"
      },
      {
        "$ref": "#/108"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ProviderSpecificProperties",
    "discriminator": "providerType",
    "baseProperties": {},
    "elements": {
      "Db2": {
        "$ref": "#/111"
      },
      "MsSqlServer": {
        "$ref": "#/118"
      },
      "Oracle": {
        "$ref": "#/124"
      },
      "PrometheusHaCluster": {
        "$ref": "#/130"
      },
      "PrometheusOS": {
        "$ref": "#/136"
      },
      "SapHana": {
        "$ref": "#/142"
      },
      "SapNetWeaver": {
        "$ref": "#/148"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Db2ProviderInstanceProperties",
    "properties": {
      "hostname": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the target virtual machine name."
      },
      "dbName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the db2 database name."
      },
      "dbPort": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the db2 database sql port."
      },
      "dbUsername": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the db2 database user name."
      },
      "dbPassword": {
        "type": {
          "$ref": "#/112"
        },
        "flags": 0,
        "description": "Gets or sets the db2 database password."
      },
      "dbPasswordUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the key vault URI to secret with the database password."
      },
      "sapSid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SAP System Identifier"
      },
      "sslPreference": {
        "type": {
          "$ref": "#/116"
        },
        "flags": 0,
        "description": "Gets or sets certificate preference if secure communication is enabled."
      },
      "sslCertificateUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the blob URI to SSL certificate for the DB2 Database."
      },
      "providerType": {
        "type": {
          "$ref": "#/117"
        },
        "flags": 1,
        "description": "The provider type. For example, the value can be SapHana."
      }
    }
  },
  {
    "$type": "StringType",
    "sensitive": true
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "RootCertificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServerCertificate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/113"
      },
      {
        "$ref": "#/114"
      },
      {
        "$ref": "#/115"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Db2"
  },
  {
    "$type": "ObjectType",
    "name": "MsSqlServerProviderInstanceProperties",
    "properties": {
      "hostname": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SQL server host name."
      },
      "dbPort": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the database sql port."
      },
      "dbUsername": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the database user name."
      },
      "dbPassword": {
        "type": {
          "$ref": "#/112"
        },
        "flags": 0,
        "description": "Gets or sets the database password."
      },
      "dbPasswordUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the key vault URI to secret with the database password."
      },
      "sapSid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SAP System Identifier"
      },
      "sslPreference": {
        "type": {
          "$ref": "#/122"
        },
        "flags": 0,
        "description": "Gets or sets certificate preference if secure communication is enabled."
      },
      "sslCertificateUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the blob URI to SSL certificate for the SQL Database."
      },
      "providerType": {
        "type": {
          "$ref": "#/123"
        },
        "flags": 1,
        "description": "The provider type. For example, the value can be SapHana."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "RootCertificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServerCertificate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/119"
      },
      {
        "$ref": "#/120"
      },
      {
        "$ref": "#/121"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "MsSqlServer"
  },
  {
    "$type": "ObjectType",
    "name": "OracleProviderInstanceProperties",
    "properties": {
      "hostname": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the target virtual machine name."
      },
      "dbPort": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the oracle database sql port."
      },
      "dbName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the oracle database name."
      },
      "dbUsername": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the oracle database user name."
      },
      "dbPassword": {
        "type": {
          "$ref": "#/112"
        },
        "flags": 0,
        "description": "Gets or sets the oracle database password."
      },
      "dbPasswordUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the key vault URI to secret with the database password."
      },
      "sapSid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SAP System Identifier"
      },
      "sslPreference": {
        "type": {
          "$ref": "#/128"
        },
        "flags": 0,
        "description": "Gets or sets certificate preference if secure communication is enabled."
      },
      "sslCertificateUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the blob URI to SSL certificate for the Oracle Database."
      },
      "providerType": {
        "type": {
          "$ref": "#/129"
        },
        "flags": 1,
        "description": "The provider type. For example, the value can be SapHana."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "RootCertificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServerCertificate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/125"
      },
      {
        "$ref": "#/126"
      },
      {
        "$ref": "#/127"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Oracle"
  },
  {
    "$type": "ObjectType",
    "name": "PrometheusHaClusterProviderInstanceProperties",
    "properties": {
      "prometheusUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "URL of the Node Exporter endpoint."
      },
      "hostname": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the target machine name."
      },
      "sid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the cluster sid."
      },
      "clusterName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the clusterName."
      },
      "sslPreference": {
        "type": {
          "$ref": "#/134"
        },
        "flags": 0,
        "description": "Gets or sets certificate preference if secure communication is enabled."
      },
      "sslCertificateUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the blob URI to SSL certificate for the HA cluster exporter."
      },
      "providerType": {
        "type": {
          "$ref": "#/135"
        },
        "flags": 1,
        "description": "The provider type. For example, the value can be SapHana."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "RootCertificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServerCertificate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/131"
      },
      {
        "$ref": "#/132"
      },
      {
        "$ref": "#/133"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "PrometheusHaCluster"
  },
  {
    "$type": "ObjectType",
    "name": "PrometheusOsProviderInstanceProperties",
    "properties": {
      "prometheusUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "URL of the Node Exporter endpoint"
      },
      "sslPreference": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 0,
        "description": "Gets or sets certificate preference if secure communication is enabled."
      },
      "sslCertificateUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the blob URI to SSL certificate for the prometheus node exporter."
      },
      "sapSid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SAP System Identifier"
      },
      "providerType": {
        "type": {
          "$ref": "#/141"
        },
        "flags": 1,
        "description": "The provider type. For example, the value can be SapHana."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "RootCertificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServerCertificate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/137"
      },
      {
        "$ref": "#/138"
      },
      {
        "$ref": "#/139"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "PrometheusOS"
  },
  {
    "$type": "ObjectType",
    "name": "HanaDbProviderInstanceProperties",
    "properties": {
      "hostname": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the target virtual machine size."
      },
      "dbName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the hana database name."
      },
      "sqlPort": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the database sql port."
      },
      "instanceNumber": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the database instance number."
      },
      "dbUsername": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the database user name."
      },
      "dbPassword": {
        "type": {
          "$ref": "#/112"
        },
        "flags": 0,
        "description": "Gets or sets the database password."
      },
      "dbPasswordUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the key vault URI to secret with the database password."
      },
      "sslCertificateUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the blob URI to SSL certificate for the DB."
      },
      "sslHostNameInCertificate": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the hostname(s) in the SSL certificate."
      },
      "sslPreference": {
        "type": {
          "$ref": "#/146"
        },
        "flags": 0,
        "description": "Gets or sets certificate preference if secure communication is enabled."
      },
      "sapSid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SAP System Identifier."
      },
      "providerType": {
        "type": {
          "$ref": "#/147"
        },
        "flags": 1,
        "description": "The provider type. For example, the value can be SapHana."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "RootCertificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServerCertificate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/143"
      },
      {
        "$ref": "#/144"
      },
      {
        "$ref": "#/145"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "SapHana"
  },
  {
    "$type": "ObjectType",
    "name": "SapNetWeaverProviderInstanceProperties",
    "properties": {
      "sapSid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SAP System Identifier"
      },
      "sapHostname": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the target virtual machine IP Address/FQDN."
      },
      "sapInstanceNr": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the instance number of SAP NetWeaver."
      },
      "sapHostFileEntries": {
        "type": {
          "$ref": "#/149"
        },
        "flags": 0,
        "description": "Gets or sets the list of HostFile Entries"
      },
      "sapUsername": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SAP user name."
      },
      "sapPassword": {
        "type": {
          "$ref": "#/112"
        },
        "flags": 0,
        "description": "Sets the SAP password."
      },
      "sapPasswordUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the key vault URI to secret with the SAP password."
      },
      "sapClientId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SAP Client ID."
      },
      "sapPortNumber": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SAP HTTP port number."
      },
      "sslCertificateUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the blob URI to SSL certificate for the SAP system."
      },
      "sslPreference": {
        "type": {
          "$ref": "#/153"
        },
        "flags": 0,
        "description": "Gets or sets certificate preference if secure communication is enabled."
      },
      "providerType": {
        "type": {
          "$ref": "#/154"
        },
        "flags": 1,
        "description": "The provider type. For example, the value can be SapHana."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "RootCertificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServerCertificate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/150"
      },
      {
        "$ref": "#/151"
      },
      {
        "$ref": "#/152"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "SapNetWeaver"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Workloads/monitors/providerInstances@2024-02-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/93"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Workloads/monitors/sapLandscapeMonitor"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-02-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Workloads/monitors/sapLandscapeMonitor",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/156"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/157"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/158"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/160"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SapLandscapeMonitorProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/166"
        },
        "flags": 2,
        "description": "State of provisioning of the SAP monitor."
      },
      "grouping": {
        "type": {
          "$ref": "#/167"
        },
        "flags": 0,
        "description": "Gets or sets the SID groupings by landscape and Environment."
      },
      "topMetricsThresholds": {
        "type": {
          "$ref": "#/173"
        },
        "flags": 0,
        "description": "Gets or sets the list Top Metric Thresholds for SAP Landscape Monitor Dashboard"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Created"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/161"
      },
      {
        "$ref": "#/162"
      },
      {
        "$ref": "#/163"
      },
      {
        "$ref": "#/164"
      },
      {
        "$ref": "#/165"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SapLandscapeMonitorPropertiesGrouping",
    "properties": {
      "landscape": {
        "type": {
          "$ref": "#/170"
        },
        "flags": 0,
        "description": "Gets or sets the list of landscape to SID mappings."
      },
      "sapApplication": {
        "type": {
          "$ref": "#/171"
        },
        "flags": 0,
        "description": "Gets or sets the list of Sap Applications to SID mappings."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SapLandscapeMonitorSidMapping",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the name of the grouping."
      },
      "topSid": {
        "type": {
          "$ref": "#/169"
        },
        "flags": 0,
        "description": "Gets or sets the list of SID's."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    },
    "maxLength": 50
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/168"
    },
    "maxLength": 50
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/168"
    },
    "maxLength": 50
  },
  {
    "$type": "ObjectType",
    "name": "SapLandscapeMonitorMetricThresholds",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the name of the threshold."
      },
      "green": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Gets or sets the threshold value for Green."
      },
      "yellow": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Gets or sets the threshold value for Yellow."
      },
      "red": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Gets or sets the threshold value for Red."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/172"
    },
    "maxLength": 50
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Workloads/monitors/sapLandscapeMonitor@2024-02-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/159"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Workloads/monitors/alertTemplates"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-02-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Workloads/monitors/alertTemplates",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/176"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/178"
        },
        "flags": 2,
        "description": "Alert Template properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AlertTemplateProperties",
    "properties": {
      "errors": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 2,
        "description": "Defines the SAP monitor Alert Template errors."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/187"
        },
        "flags": 2,
        "description": "State of provisioning of the Alert Template."
      },
      "templateDisplayName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Display name of the alert template."
      },
      "providerType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The provider type for alert template. For example, the value can be SapHana."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of the template."
      },
      "severity": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 0,
        "description": "Severity of the alert. Should be an integer between [0-4]. Value of 0 is most severe and value of 4 is least severe."
      },
      "query": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Query associated with the alert template."
      },
      "thresholdOperator": {
        "type": {
          "$ref": "#/193"
        },
        "flags": 0,
        "description": "Operator used for threshold comparison."
      },
      "defaultThreshold": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Default threshold value."
      },
      "lowerBound": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Minimum possible Default Threshold Value Associated with the Alert Template."
      },
      "upperBound": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Maximum possible Default Threshold Value Associated with the Alert Template."
      },
      "defaultThresholdInputOption": {
        "type": {
          "$ref": "#/197"
        },
        "flags": 0,
        "description": "Input option for the default threshold."
      },
      "alertUnit": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Unit of the alert."
      },
      "metricMeasurement": {
        "type": {
          "$ref": "#/198"
        },
        "flags": 0,
        "description": "Describes the properties for metric measurement in alerts template."
      },
      "queryInputParameters": {
        "type": {
          "$ref": "#/216"
        },
        "flags": 0,
        "description": "Describes the Query Input Parameter properties in alerts template."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Migrating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/179"
      },
      {
        "$ref": "#/180"
      },
      {
        "$ref": "#/181"
      },
      {
        "$ref": "#/182"
      },
      {
        "$ref": "#/183"
      },
      {
        "$ref": "#/184"
      },
      {
        "$ref": "#/185"
      },
      {
        "$ref": "#/186"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "LessThan"
  },
  {
    "$type": "StringLiteralType",
    "value": "GreaterThan"
  },
  {
    "$type": "StringLiteralType",
    "value": "Equal"
  },
  {
    "$type": "StringLiteralType",
    "value": "GreaterThanOrEqual"
  },
  {
    "$type": "StringLiteralType",
    "value": "LessThanOrEqual"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/188"
      },
      {
        "$ref": "#/189"
      },
      {
        "$ref": "#/190"
      },
      {
        "$ref": "#/191"
      },
      {
        "$ref": "#/192"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Required"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotRequired"
  },
  {
    "$type": "StringLiteralType",
    "value": "Optional"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/194"
      },
      {
        "$ref": "#/195"
      },
      {
        "$ref": "#/196"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AlertTemplateMetricMeasurement",
    "properties": {
      "thresholdOperator": {
        "type": {
          "$ref": "#/204"
        },
        "flags": 0,
        "description": "Operator used for threshold comparison."
      },
      "threshold": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "The Threshold Value Associated with the Alert Template for Metric Measurement."
      },
      "metricTriggerType": {
        "type": {
          "$ref": "#/207"
        },
        "flags": 0,
        "description": "Metric Trigger Type Associated with the Alert Template for Metric Measurement."
      },
      "metricColumn": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Metric Column Associated with the Alert Template for Metric Measurement."
      },
      "frequencyInMinutes": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Frequency (mins) value Associated with the Alert Template for Metric Measurement."
      },
      "timeWindowInMinutes": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Time Window (mins) Value Associated with the Alert Template for Metric Measurement."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "LessThan"
  },
  {
    "$type": "StringLiteralType",
    "value": "GreaterThan"
  },
  {
    "$type": "StringLiteralType",
    "value": "Equal"
  },
  {
    "$type": "StringLiteralType",
    "value": "GreaterThanOrEqual"
  },
  {
    "$type": "StringLiteralType",
    "value": "LessThanOrEqual"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/199"
      },
      {
        "$ref": "#/200"
      },
      {
        "$ref": "#/201"
      },
      {
        "$ref": "#/202"
      },
      {
        "$ref": "#/203"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Consecutive"
  },
  {
    "$type": "StringLiteralType",
    "value": "Total"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/205"
      },
      {
        "$ref": "#/206"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AlertTemplateQueryInputParameter",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the Query Input Parameter"
      },
      "type": {
        "type": {
          "$ref": "#/212"
        },
        "flags": 0,
        "description": "Type of the Query Input Parameter"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of the Query Input Parameter"
      },
      "defaultValue": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Default Value of the Query Input Parameter"
      },
      "laQuery": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Log Analytics query associated with the parameter."
      },
      "selectionMode": {
        "type": {
          "$ref": "#/215"
        },
        "flags": 0,
        "description": "Selection mode for the parameter."
      },
      "displayName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Display Name of the Query Input Parameter."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "LogAnalyticsQuery"
  },
  {
    "$type": "StringLiteralType",
    "value": "ProviderProperty"
  },
  {
    "$type": "StringLiteralType",
    "value": "CustomInput"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/209"
      },
      {
        "$ref": "#/210"
      },
      {
        "$ref": "#/211"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Single"
  },
  {
    "$type": "StringLiteralType",
    "value": "Multiple"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/213"
      },
      {
        "$ref": "#/214"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/208"
    },
    "maxLength": 50
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Workloads/monitors/alertTemplates@2024-02-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/177"
    },
    "flags": 1
  }
]