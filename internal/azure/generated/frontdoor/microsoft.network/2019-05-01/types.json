[
  {
    "$type": "StringType",
    "minLength": 5,
    "maxLength": 64,
    "pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Network/frontDoors"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2019-05-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Network/frontDoors",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Properties of the Front Door Load Balancer"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource location."
      },
      "tags": {
        "type": {
          "$ref": "#/159"
        },
        "flags": 0,
        "description": "Resource tags."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FrontDoorProperties",
    "properties": {
      "resourceState": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 2,
        "description": "Resource status of the Front Door."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Provisioning state of the Front Door."
      },
      "cname": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The host that each frontendEndpoint must CNAME to."
      },
      "friendlyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "A friendly name for the frontDoor"
      },
      "routingRules": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0,
        "description": "Routing rules associated with this Front Door."
      },
      "loadBalancingSettings": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 0,
        "description": "Load balancing settings associated with this Front Door instance."
      },
      "healthProbeSettings": {
        "type": {
          "$ref": "#/87"
        },
        "flags": 0,
        "description": "Health probe settings associated with this Front Door instance."
      },
      "backendPools": {
        "type": {
          "$ref": "#/105"
        },
        "flags": 0,
        "description": "Backend pools available to routing rules."
      },
      "frontendEndpoints": {
        "type": {
          "$ref": "#/150"
        },
        "flags": 0,
        "description": "Frontend endpoints available to routing rules."
      },
      "backendPoolsSettings": {
        "type": {
          "$ref": "#/151"
        },
        "flags": 0,
        "description": "Settings for all backendPools"
      },
      "enabledState": {
        "type": {
          "$ref": "#/158"
        },
        "flags": 0,
        "description": "Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "RoutingRule",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "Properties of the Front Door Routing Rule"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource name."
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Resource type."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource ID."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RoutingRuleProperties",
    "properties": {
      "resourceState": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Resource status."
      },
      "frontendEndpoints": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Frontend endpoints associated with this rule"
      },
      "acceptedProtocols": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "Protocol schemes to match for this rule"
      },
      "patternsToMatch": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 0,
        "description": "The route patterns of the rule."
      },
      "enabledState": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 0,
        "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'"
      },
      "routeConfiguration": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 0,
        "description": "A reference to the routing configuration."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/15"
      },
      {
        "$ref": "#/16"
      },
      {
        "$ref": "#/17"
      },
      {
        "$ref": "#/18"
      },
      {
        "$ref": "#/19"
      },
      {
        "$ref": "#/20"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SubResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource ID."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/22"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Http"
  },
  {
    "$type": "StringLiteralType",
    "value": "Https"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/24"
      },
      {
        "$ref": "#/25"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/26"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/29"
      },
      {
        "$ref": "#/30"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "RouteConfiguration",
    "discriminator": "@odata.type",
    "baseProperties": {},
    "elements": {
      "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration": {
        "$ref": "#/33"
      },
      "#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration": {
        "$ref": "#/46"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ForwardingConfiguration",
    "properties": {
      "customForwardingPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path."
      },
      "forwardingProtocol": {
        "type": {
          "$ref": "#/37"
        },
        "flags": 0,
        "description": "Protocol this rule will use when forwarding traffic to backends."
      },
      "cacheConfiguration": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 0,
        "description": "The caching configuration associated with this rule."
      },
      "backendPool": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 0,
        "description": "A reference to the BackendPool which this rule routes to."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "HttpOnly"
  },
  {
    "$type": "StringLiteralType",
    "value": "HttpsOnly"
  },
  {
    "$type": "StringLiteralType",
    "value": "MatchRequest"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/34"
      },
      {
        "$ref": "#/35"
      },
      {
        "$ref": "#/36"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CacheConfiguration",
    "properties": {
      "queryParameterStripDirective": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 0,
        "description": "Treatment of URL query terms when forming the cache key."
      },
      "dynamicCompression": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Whether to use dynamic compression for cached content"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "StripNone"
  },
  {
    "$type": "StringLiteralType",
    "value": "StripAll"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/39"
      },
      {
        "$ref": "#/40"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/42"
      },
      {
        "$ref": "#/43"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration"
  },
  {
    "$type": "ObjectType",
    "name": "RedirectConfiguration",
    "properties": {
      "redirectType": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 0,
        "description": "The redirect type the rule will use when redirecting traffic."
      },
      "redirectProtocol": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "The protocol of the destination to where the traffic is redirected"
      },
      "customHost": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Host to redirect. Leave empty to use the incoming host as the destination host."
      },
      "customPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path."
      },
      "customFragment": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #."
      },
      "customQueryString": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Moved"
  },
  {
    "$type": "StringLiteralType",
    "value": "Found"
  },
  {
    "$type": "StringLiteralType",
    "value": "TemporaryRedirect"
  },
  {
    "$type": "StringLiteralType",
    "value": "PermanentRedirect"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/47"
      },
      {
        "$ref": "#/48"
      },
      {
        "$ref": "#/49"
      },
      {
        "$ref": "#/50"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "HttpOnly"
  },
  {
    "$type": "StringLiteralType",
    "value": "HttpsOnly"
  },
  {
    "$type": "StringLiteralType",
    "value": "MatchRequest"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/52"
      },
      {
        "$ref": "#/53"
      },
      {
        "$ref": "#/54"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/13"
    }
  },
  {
    "$type": "ObjectType",
    "name": "LoadBalancingSettingsModel",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/59"
        },
        "flags": 0,
        "description": "Properties of the load balancing settings"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource name."
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Resource type."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource ID."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LoadBalancingSettingsProperties",
    "properties": {
      "resourceState": {
        "type": {
          "$ref": "#/66"
        },
        "flags": 2,
        "description": "Resource status."
      },
      "sampleSize": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 0,
        "description": "The number of samples to consider for load balancing decisions"
      },
      "successfulSamplesRequired": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 0,
        "description": "The number of samples within the sample period that must succeed"
      },
      "additionalLatencyMilliseconds": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 0,
        "description": "The additional latency in milliseconds for probes to fall into the lowest latency bucket"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/60"
      },
      {
        "$ref": "#/61"
      },
      {
        "$ref": "#/62"
      },
      {
        "$ref": "#/63"
      },
      {
        "$ref": "#/64"
      },
      {
        "$ref": "#/65"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/58"
    }
  },
  {
    "$type": "ObjectType",
    "name": "HealthProbeSettingsModel",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 0,
        "description": "Properties of the health probe settings"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource name."
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Resource type."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource ID."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HealthProbeSettingsProperties",
    "properties": {
      "resourceState": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 2,
        "description": "Resource status."
      },
      "path": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The path to use for the health probe. Default is /"
      },
      "protocol": {
        "type": {
          "$ref": "#/80"
        },
        "flags": 0,
        "description": "Protocol scheme to use for this probe"
      },
      "intervalInSeconds": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 0,
        "description": "The number of seconds between health probes."
      },
      "healthProbeMethod": {
        "type": {
          "$ref": "#/83"
        },
        "flags": 0,
        "description": "Configures which HTTP method to use to probe the backends defined under backendPools."
      },
      "enabledState": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 0,
        "description": "Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/71"
      },
      {
        "$ref": "#/72"
      },
      {
        "$ref": "#/73"
      },
      {
        "$ref": "#/74"
      },
      {
        "$ref": "#/75"
      },
      {
        "$ref": "#/76"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Http"
  },
  {
    "$type": "StringLiteralType",
    "value": "Https"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/78"
      },
      {
        "$ref": "#/79"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "GET"
  },
  {
    "$type": "StringLiteralType",
    "value": "HEAD"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/81"
      },
      {
        "$ref": "#/82"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/84"
      },
      {
        "$ref": "#/85"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/69"
    }
  },
  {
    "$type": "ObjectType",
    "name": "BackendPool",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/89"
        },
        "flags": 0,
        "description": "Properties of the Front Door Backend Pool"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource name."
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Resource type."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource ID."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BackendPoolProperties",
    "properties": {
      "resourceState": {
        "type": {
          "$ref": "#/96"
        },
        "flags": 2,
        "description": "Resource status."
      },
      "backends": {
        "type": {
          "$ref": "#/104"
        },
        "flags": 0,
        "description": "The set of backends for this pool"
      },
      "loadBalancingSettings": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 0,
        "description": "Load balancing settings for a backend pool"
      },
      "healthProbeSettings": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 0,
        "description": "L7 health probe settings for a backend pool"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/90"
      },
      {
        "$ref": "#/91"
      },
      {
        "$ref": "#/92"
      },
      {
        "$ref": "#/93"
      },
      {
        "$ref": "#/94"
      },
      {
        "$ref": "#/95"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Backend",
    "properties": {
      "address": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Location of the backend (IP address or FQDN)"
      },
      "httpPort": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 0,
        "description": "The HTTP TCP port number. Must be between 1 and 65535."
      },
      "httpsPort": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 0,
        "description": "The HTTPS TCP port number. Must be between 1 and 65535."
      },
      "enabledState": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 0,
        "description": "Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'"
      },
      "priority": {
        "type": {
          "$ref": "#/102"
        },
        "flags": 0,
        "description": "Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy."
      },
      "weight": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 0,
        "description": "Weight of this endpoint for load balancing purposes."
      },
      "backendHostHeader": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host."
      }
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 65535
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/99"
      },
      {
        "$ref": "#/100"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 5
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 1000
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/97"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/88"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FrontendEndpoint",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 0,
        "description": "Properties of the Frontend endpoint"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource name."
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Resource type."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource ID."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FrontendEndpointProperties",
    "properties": {
      "resourceState": {
        "type": {
          "$ref": "#/114"
        },
        "flags": 2,
        "description": "Resource status."
      },
      "customHttpsProvisioningState": {
        "type": {
          "$ref": "#/120"
        },
        "flags": 2,
        "description": "Provisioning status of Custom Https of the frontendEndpoint."
      },
      "customHttpsProvisioningSubstate": {
        "type": {
          "$ref": "#/131"
        },
        "flags": 2,
        "description": "Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step."
      },
      "customHttpsConfiguration": {
        "type": {
          "$ref": "#/132"
        },
        "flags": 2,
        "description": "The configuration specifying how to enable HTTPS"
      },
      "hostName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The host name of the frontendEndpoint. Must be a domain name."
      },
      "sessionAffinityEnabledState": {
        "type": {
          "$ref": "#/148"
        },
        "flags": 0,
        "description": "Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'"
      },
      "sessionAffinityTtlSeconds": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 0,
        "description": "UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable."
      },
      "webApplicationFirewallPolicyLink": {
        "type": {
          "$ref": "#/149"
        },
        "flags": 0,
        "description": "Defines the Web Application Firewall policy for each host (if applicable)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/108"
      },
      {
        "$ref": "#/109"
      },
      {
        "$ref": "#/110"
      },
      {
        "$ref": "#/111"
      },
      {
        "$ref": "#/112"
      },
      {
        "$ref": "#/113"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/115"
      },
      {
        "$ref": "#/116"
      },
      {
        "$ref": "#/117"
      },
      {
        "$ref": "#/118"
      },
      {
        "$ref": "#/119"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "SubmittingDomainControlValidationRequest"
  },
  {
    "$type": "StringLiteralType",
    "value": "PendingDomainControlValidationREquestApproval"
  },
  {
    "$type": "StringLiteralType",
    "value": "DomainControlValidationRequestApproved"
  },
  {
    "$type": "StringLiteralType",
    "value": "DomainControlValidationRequestRejected"
  },
  {
    "$type": "StringLiteralType",
    "value": "DomainControlValidationRequestTimedOut"
  },
  {
    "$type": "StringLiteralType",
    "value": "IssuingCertificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "DeployingCertificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "CertificateDeployed"
  },
  {
    "$type": "StringLiteralType",
    "value": "DeletingCertificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "CertificateDeleted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/121"
      },
      {
        "$ref": "#/122"
      },
      {
        "$ref": "#/123"
      },
      {
        "$ref": "#/124"
      },
      {
        "$ref": "#/125"
      },
      {
        "$ref": "#/126"
      },
      {
        "$ref": "#/127"
      },
      {
        "$ref": "#/128"
      },
      {
        "$ref": "#/129"
      },
      {
        "$ref": "#/130"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CustomHttpsConfiguration",
    "properties": {
      "certificateSource": {
        "type": {
          "$ref": "#/135"
        },
        "flags": 1,
        "description": "Defines the source of the SSL certificate"
      },
      "protocolType": {
        "type": {
          "$ref": "#/137"
        },
        "flags": 1,
        "description": "Defines the TLS extension protocol that is used for secure delivery"
      },
      "minimumTlsVersion": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 1,
        "description": "The minimum TLS version required from the clients to establish an SSL handshake with Front Door."
      },
      "keyVaultCertificateSourceParameters": {
        "type": {
          "$ref": "#/141"
        },
        "flags": 0,
        "description": "KeyVault certificate source parameters (if certificateSource=AzureKeyVault)"
      },
      "frontDoorCertificateSourceParameters": {
        "type": {
          "$ref": "#/143"
        },
        "flags": 0,
        "description": "Parameters required for enabling SSL with Front Door-managed certificates (if certificateSource=FrontDoor)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureKeyVault"
  },
  {
    "$type": "StringLiteralType",
    "value": "FrontDoor"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/133"
      },
      {
        "$ref": "#/134"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "ServerNameIndication"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/136"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "1.0"
  },
  {
    "$type": "StringLiteralType",
    "value": "1.2"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/138"
      },
      {
        "$ref": "#/139"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "KeyVaultCertificateSourceParameters",
    "properties": {
      "vault": {
        "type": {
          "$ref": "#/142"
        },
        "flags": 0,
        "description": "The Key Vault containing the SSL certificate"
      },
      "secretName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the Key Vault secret representing the full certificate PFX"
      },
      "secretVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The version of the Key Vault secret representing the full certificate PFX"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KeyVaultCertificateSourceParametersVault",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource ID."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FrontDoorCertificateSourceParameters",
    "properties": {
      "certificateType": {
        "type": {
          "$ref": "#/145"
        },
        "flags": 0,
        "description": "Defines the type of the certificate used for secure connections to a frontendEndpoint"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Dedicated"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/144"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/146"
      },
      {
        "$ref": "#/147"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource ID."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/106"
    }
  },
  {
    "$type": "ObjectType",
    "name": "BackendPoolsSettings",
    "properties": {
      "enforceCertificateNameCheck": {
        "type": {
          "$ref": "#/154"
        },
        "flags": 0,
        "description": "Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests."
      },
      "sendRecvTimeoutSeconds": {
        "type": {
          "$ref": "#/155"
        },
        "flags": 0,
        "description": "Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/152"
      },
      {
        "$ref": "#/153"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 16
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/156"
      },
      {
        "$ref": "#/157"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Network/frontDoors@2019-05-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/4"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 255,
    "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Network/frontDoors/frontendEndpoints"
  },
  {
    "$type": "StringLiteralType",
    "value": "2019-05-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Network/frontDoors/frontendEndpoints",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/161"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/162"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/163"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 2,
        "description": "Properties of the Frontend endpoint"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Network/frontDoors/frontendEndpoints@2019-05-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/164"
    },
    "flags": 1
  },
  {
    "$type": "ObjectType",
    "name": "ValidateCustomDomainInput",
    "properties": {
      "hostName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The host name of the custom domain. Must be a domain name."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ValidateCustomDomainOutput",
    "properties": {
      "customDomainValidated": {
        "type": {
          "$ref": "#/168"
        },
        "flags": 2,
        "description": "Indicates whether the custom domain is valid or not."
      },
      "reason": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The reason why the custom domain is not valid."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Error message describing why the custom domain is not valid."
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "validateCustomDomain",
    "resourceType": "Microsoft.Network/frontDoors",
    "apiVersion": "2019-05-01",
    "output": {
      "$ref": "#/167"
    },
    "input": {
      "$ref": "#/166"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PurgeParameters",
    "properties": {
      "contentPaths": {
        "type": {
          "$ref": "#/171"
        },
        "flags": 1,
        "description": "The path to the content to be purged. Can describe a file path or a wild card directory."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "purge",
    "resourceType": "Microsoft.Network/frontDoors",
    "apiVersion": "2019-05-01",
    "input": {
      "$ref": "#/170"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "enableHttps",
    "resourceType": "Microsoft.Network/frontDoors/frontendEndpoints",
    "apiVersion": "2019-05-01",
    "input": {
      "$ref": "#/132"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "disableHttps",
    "resourceType": "Microsoft.Network/frontDoors/frontendEndpoints",
    "apiVersion": "2019-05-01"
  }
]