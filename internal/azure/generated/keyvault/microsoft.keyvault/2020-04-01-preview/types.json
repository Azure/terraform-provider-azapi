[{"1":{"Kind":1}},{"1":{"Kind":2}},{"1":{"Kind":3}},{"1":{"Kind":4}},{"1":{"Kind":5}},{"1":{"Kind":6}},{"1":{"Kind":7}},{"1":{"Kind":8}},{"6":{"Value":"Microsoft.KeyVault/managedHSMs"}},{"6":{"Value":"2020-04-01-preview"}},{"2":{"Name":"Microsoft.KeyVault/managedHSMs","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":8,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":9,"Flags":10,"Description":"The resource api version"},"properties":{"Type":11,"Flags":0,"Description":"Properties of the managed HSM"},"location":{"Type":4,"Flags":0,"Description":"The supported Azure location where the managed HSM Pool should be created."},"sku":{"Type":25,"Flags":0,"Description":"SKU details"},"tags":{"Type":31,"Flags":0,"Description":"Resource tags"}}}},{"2":{"Name":"ManagedHsmProperties","Properties":{"tenantId":{"Type":4,"Flags":0,"Description":"The Azure Active Directory tenant ID that should be used for authenticating requests to the managed HSM pool."},"initialAdminObjectIds":{"Type":12,"Flags":0,"Description":"Array of initial administrators object ids for this managed hsm pool."},"hsmUri":{"Type":4,"Flags":2,"Description":"The URI of the managed hsm pool for performing operations on keys."},"enableSoftDelete":{"Type":2,"Flags":0,"Description":"Property to specify whether the 'soft delete' functionality is enabled for this managed HSM pool. If it's not set to any value(true or false) when creating new managed HSM pool, it will be set to true by default. Once set to true, it cannot be reverted to false."},"softDeleteRetentionInDays":{"Type":3,"Flags":0,"Description":"softDelete data retention days. It accepts >=7 and <=90."},"enablePurgeProtection":{"Type":2,"Flags":0,"Description":"Property specifying whether protection against purge is enabled for this managed HSM pool. Setting this property to true activates protection against purge for this managed HSM pool and its content - only the Managed HSM service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible."},"createMode":{"Type":15,"Flags":0,"Description":"The create mode to indicate whether the resource is being created or is being recovered from a deleted resource."},"statusMessage":{"Type":4,"Flags":2,"Description":"Resource Status Message."},"provisioningState":{"Type":24,"Flags":2,"Description":"Provisioning state."}}}},{"3":{"ItemType":4}},{"6":{"Value":"recover"}},{"6":{"Value":"default"}},{"5":{"Elements":[13,14]}},{"6":{"Value":"Succeeded"}},{"6":{"Value":"Provisioning"}},{"6":{"Value":"Failed"}},{"6":{"Value":"Updating"}},{"6":{"Value":"Deleting"}},{"6":{"Value":"Activated"}},{"6":{"Value":"SecurityDomainRestore"}},{"6":{"Value":"Restoring"}},{"5":{"Elements":[16,17,18,19,20,21,22,23,4]}},{"2":{"Name":"ManagedHsmSku","Properties":{"family":{"Type":27,"Flags":1,"Description":"SKU Family of the managed HSM Pool"},"name":{"Type":30,"Flags":1,"Description":"SKU of the managed HSM Pool"}}}},{"6":{"Value":"B"}},{"5":{"Elements":[26,4]}},{"6":{"Value":"Standard_B1"}},{"6":{"Value":"Custom_B32"}},{"5":{"Elements":[28,29]}},{"2":{"Name":"ManagedHsmResourceTags","Properties":{},"AdditionalProperties":4}},{"4":{"Name":"Microsoft.KeyVault/managedHSMs@2020-04-01-preview","ScopeType":8,"Body":10}},{"6":{"Value":"Microsoft.KeyVault/vaults/keys"}},{"6":{"Value":"2020-04-01-preview"}},{"2":{"Name":"Microsoft.KeyVault/vaults/keys","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":33,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":34,"Flags":10,"Description":"The resource api version"},"tags":{"Type":36,"Flags":0,"Description":"The tags that will be assigned to the key."},"properties":{"Type":37,"Flags":1,"Description":"The properties of the key to be created."},"location":{"Type":4,"Flags":2,"Description":"Azure location of the key vault resource."}}}},{"2":{"Name":"KeyCreateParametersTags","Properties":{},"AdditionalProperties":4}},{"2":{"Name":"KeyProperties","Properties":{"attributes":{"Type":38,"Flags":0,"Description":"The attributes of the key."},"kty":{"Type":48,"Flags":0,"Description":"The type of the key. For valid values, see JsonWebKeyType."},"keyOps":{"Type":57,"Flags":0},"keySize":{"Type":3,"Flags":0,"Description":"The key size in bits. For example: 2048, 3072, or 4096 for RSA."},"curveName":{"Type":62,"Flags":0,"Description":"The elliptic curve name. For valid values, see JsonWebKeyCurveName."},"keyUri":{"Type":4,"Flags":2,"Description":"The URI to retrieve the current version of the key."},"keyUriWithVersion":{"Type":4,"Flags":2,"Description":"The URI to retrieve the specific version of the key."}}}},{"2":{"Name":"KeyAttributes","Properties":{"enabled":{"Type":2,"Flags":0,"Description":"Determines whether or not the object is enabled."},"nbf":{"Type":3,"Flags":0,"Description":"Not before date in seconds since 1970-01-01T00:00:00Z."},"exp":{"Type":3,"Flags":0,"Description":"Expiry date in seconds since 1970-01-01T00:00:00Z."},"created":{"Type":3,"Flags":2,"Description":"Creation time in seconds since 1970-01-01T00:00:00Z."},"updated":{"Type":3,"Flags":2,"Description":"Last updated time in seconds since 1970-01-01T00:00:00Z."},"recoveryLevel":{"Type":43,"Flags":2,"Description":"The deletion recovery level currently in effect for the object. If it contains 'Purgeable', then the object can be permanently deleted by a privileged user; otherwise, only the system can purge the object at the end of the retention interval."}}}},{"6":{"Value":"Purgeable"}},{"6":{"Value":"Recoverable+Purgeable"}},{"6":{"Value":"Recoverable"}},{"6":{"Value":"Recoverable+ProtectedSubscription"}},{"5":{"Elements":[39,40,41,42,4]}},{"6":{"Value":"EC"}},{"6":{"Value":"EC-HSM"}},{"6":{"Value":"RSA"}},{"6":{"Value":"RSA-HSM"}},{"5":{"Elements":[44,45,46,47,4]}},{"6":{"Value":"encrypt"}},{"6":{"Value":"decrypt"}},{"6":{"Value":"sign"}},{"6":{"Value":"verify"}},{"6":{"Value":"wrapKey"}},{"6":{"Value":"unwrapKey"}},{"6":{"Value":"import"}},{"5":{"Elements":[49,50,51,52,53,54,55,4]}},{"3":{"ItemType":56}},{"6":{"Value":"P-256"}},{"6":{"Value":"P-384"}},{"6":{"Value":"P-521"}},{"6":{"Value":"P-256K"}},{"5":{"Elements":[58,59,60,61,4]}},{"4":{"Name":"Microsoft.KeyVault/vaults/keys@2020-04-01-preview","ScopeType":8,"Body":35}},{"6":{"Value":"Microsoft.KeyVault/vaults"}},{"6":{"Value":"2020-04-01-preview"}},{"2":{"Name":"Microsoft.KeyVault/vaults","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":64,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":65,"Flags":10,"Description":"The resource api version"},"location":{"Type":4,"Flags":1,"Description":"The supported Azure location where the key vault should be created."},"tags":{"Type":67,"Flags":0,"Description":"The tags that will be assigned to the key vault."},"properties":{"Type":68,"Flags":1,"Description":"Properties of the vault"},"systemData":{"Type":176,"Flags":2,"Description":"System metadata for the key vault."}}}},{"2":{"Name":"VaultCreateOrUpdateParametersTags","Properties":{},"AdditionalProperties":4}},{"2":{"Name":"VaultProperties","Properties":{"tenantId":{"Type":4,"Flags":1,"Description":"The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."},"sku":{"Type":69,"Flags":1,"Description":"SKU details"},"accessPolicies":{"Type":139,"Flags":0,"Description":"An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required."},"vaultUri":{"Type":4,"Flags":0,"Description":"The URI of the vault for performing operations on keys and secrets."},"enabledForDeployment":{"Type":2,"Flags":0,"Description":"Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."},"enabledForDiskEncryption":{"Type":2,"Flags":0,"Description":"Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."},"enabledForTemplateDeployment":{"Type":2,"Flags":0,"Description":"Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault."},"enableSoftDelete":{"Type":2,"Flags":0,"Description":"Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false."},"softDeleteRetentionInDays":{"Type":3,"Flags":0,"Description":"softDelete data retention days. It accepts >=7 and <=90."},"enableRbacAuthorization":{"Type":2,"Flags":0,"Description":"Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC."},"createMode":{"Type":142,"Flags":0,"Description":"The vault's create mode to indicate whether the vault need to be recovered or not."},"enablePurgeProtection":{"Type":2,"Flags":0,"Description":"Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value."},"networkAcls":{"Type":143,"Flags":0,"Description":"Rules governing the accessibility of the key vault from specific network locations."},"provisioningState":{"Type":156,"Flags":0,"Description":"Provisioning state of the vault."},"privateEndpointConnections":{"Type":175,"Flags":2,"Description":"List of private endpoint connections associated with the key vault."}}}},{"2":{"Name":"Sku","Properties":{"family":{"Type":71,"Flags":1,"Description":"SKU family name"},"name":{"Type":74,"Flags":1,"Description":"SKU name to specify whether the key vault is a standard vault or a premium vault."}}}},{"6":{"Value":"A"}},{"5":{"Elements":[70,4]}},{"6":{"Value":"standard"}},{"6":{"Value":"premium"}},{"5":{"Elements":[72,73]}},{"2":{"Name":"AccessPolicyEntry","Properties":{"tenantId":{"Type":4,"Flags":1,"Description":"The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."},"objectId":{"Type":4,"Flags":1,"Description":"The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies."},"applicationId":{"Type":4,"Flags":0,"Description":"Application ID of the client making request on behalf of a principal"},"permissions":{"Type":76,"Flags":1,"Description":"Permissions the identity has for keys, secrets and certificates."}}}},{"2":{"Name":"Permissions","Properties":{"keys":{"Type":94,"Flags":0,"Description":"Permissions to keys"},"secrets":{"Type":104,"Flags":0,"Description":"Permissions to secrets"},"certificates":{"Type":122,"Flags":0,"Description":"Permissions to certificates"},"storage":{"Type":138,"Flags":0,"Description":"Permissions to storage accounts"}}}},{"6":{"Value":"encrypt"}},{"6":{"Value":"decrypt"}},{"6":{"Value":"wrapKey"}},{"6":{"Value":"unwrapKey"}},{"6":{"Value":"sign"}},{"6":{"Value":"verify"}},{"6":{"Value":"get"}},{"6":{"Value":"list"}},{"6":{"Value":"create"}},{"6":{"Value":"update"}},{"6":{"Value":"import"}},{"6":{"Value":"delete"}},{"6":{"Value":"backup"}},{"6":{"Value":"restore"}},{"6":{"Value":"recover"}},{"6":{"Value":"purge"}},{"5":{"Elements":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,4]}},{"3":{"ItemType":93}},{"6":{"Value":"get"}},{"6":{"Value":"list"}},{"6":{"Value":"set"}},{"6":{"Value":"delete"}},{"6":{"Value":"backup"}},{"6":{"Value":"restore"}},{"6":{"Value":"recover"}},{"6":{"Value":"purge"}},{"5":{"Elements":[95,96,97,98,99,100,101,102,4]}},{"3":{"ItemType":103}},{"6":{"Value":"get"}},{"6":{"Value":"list"}},{"6":{"Value":"delete"}},{"6":{"Value":"create"}},{"6":{"Value":"import"}},{"6":{"Value":"update"}},{"6":{"Value":"managecontacts"}},{"6":{"Value":"getissuers"}},{"6":{"Value":"listissuers"}},{"6":{"Value":"setissuers"}},{"6":{"Value":"deleteissuers"}},{"6":{"Value":"manageissuers"}},{"6":{"Value":"recover"}},{"6":{"Value":"purge"}},{"6":{"Value":"backup"}},{"6":{"Value":"restore"}},{"5":{"Elements":[105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,4]}},{"3":{"ItemType":121}},{"6":{"Value":"get"}},{"6":{"Value":"list"}},{"6":{"Value":"delete"}},{"6":{"Value":"set"}},{"6":{"Value":"update"}},{"6":{"Value":"regeneratekey"}},{"6":{"Value":"recover"}},{"6":{"Value":"purge"}},{"6":{"Value":"backup"}},{"6":{"Value":"restore"}},{"6":{"Value":"setsas"}},{"6":{"Value":"listsas"}},{"6":{"Value":"getsas"}},{"6":{"Value":"deletesas"}},{"5":{"Elements":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,4]}},{"3":{"ItemType":137}},{"3":{"ItemType":75}},{"6":{"Value":"recover"}},{"6":{"Value":"default"}},{"5":{"Elements":[140,141]}},{"2":{"Name":"NetworkRuleSet","Properties":{"bypass":{"Type":146,"Flags":0,"Description":"Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'."},"defaultAction":{"Type":149,"Flags":0,"Description":"The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated."},"ipRules":{"Type":151,"Flags":0,"Description":"The list of IP address rules."},"virtualNetworkRules":{"Type":153,"Flags":0,"Description":"The list of virtual network rules."}}}},{"6":{"Value":"AzureServices"}},{"6":{"Value":"None"}},{"5":{"Elements":[144,145,4]}},{"6":{"Value":"Allow"}},{"6":{"Value":"Deny"}},{"5":{"Elements":[147,148,4]}},{"2":{"Name":"IPRule","Properties":{"value":{"Type":4,"Flags":1,"Description":"An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78)."}}}},{"3":{"ItemType":150}},{"2":{"Name":"VirtualNetworkRule","Properties":{"id":{"Type":4,"Flags":1,"Description":"Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'."},"ignoreMissingVnetServiceEndpoint":{"Type":2,"Flags":0,"Description":"Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured."}}}},{"3":{"ItemType":152}},{"6":{"Value":"Succeeded"}},{"6":{"Value":"RegisteringDns"}},{"5":{"Elements":[154,155,4]}},{"2":{"Name":"PrivateEndpointConnectionItem","Properties":{"id":{"Type":4,"Flags":0,"Description":"Id of private endpoint connection."},"etag":{"Type":4,"Flags":0,"Description":"Modified whenever there is a change in the state of private endpoint connection."},"properties":{"Type":158,"Flags":0,"Description":"Private endpoint connection properties."}}}},{"2":{"Name":"PrivateEndpointConnectionProperties","Properties":{"privateEndpoint":{"Type":159,"Flags":0,"Description":"Properties of the private endpoint object."},"privateLinkServiceConnectionState":{"Type":160,"Flags":0,"Description":"Approval state of the private link connection."},"provisioningState":{"Type":174,"Flags":2,"Description":"Provisioning state of the private endpoint connection."}}}},{"2":{"Name":"PrivateEndpoint","Properties":{"id":{"Type":4,"Flags":2,"Description":"Full identifier of the private endpoint resource."}}}},{"2":{"Name":"PrivateLinkServiceConnectionState","Properties":{"status":{"Type":165,"Flags":0,"Description":"Indicates whether the connection has been approved, rejected or removed by the key vault owner."},"description":{"Type":4,"Flags":0,"Description":"The reason for approval or rejection."},"actionsRequired":{"Type":167,"Flags":0,"Description":"A message indicating if changes on the service provider require any updates on the consumer."}}}},{"6":{"Value":"Pending"}},{"6":{"Value":"Approved"}},{"6":{"Value":"Rejected"}},{"6":{"Value":"Disconnected"}},{"5":{"Elements":[161,162,163,164,4]}},{"6":{"Value":"None"}},{"5":{"Elements":[166,4]}},{"6":{"Value":"Succeeded"}},{"6":{"Value":"Creating"}},{"6":{"Value":"Updating"}},{"6":{"Value":"Deleting"}},{"6":{"Value":"Failed"}},{"6":{"Value":"Disconnected"}},{"5":{"Elements":[168,169,170,171,172,173,4]}},{"3":{"ItemType":157}},{"2":{"Name":"SystemData","Properties":{"createdBy":{"Type":4,"Flags":0,"Description":"The identity that created key vault resource."},"createdByType":{"Type":181,"Flags":0,"Description":"The type of identity that created key vault resource."},"createdAt":{"Type":4,"Flags":0,"Description":"The timestamp of key vault resource creation (UTC)."},"lastModifiedBy":{"Type":4,"Flags":0,"Description":"The identity that last modified key vault resource."},"lastModifiedByType":{"Type":186,"Flags":0,"Description":"The type of identity that last modified key vault resource."},"lastModifiedAt":{"Type":4,"Flags":0,"Description":"The timestamp of key vault resource last modification (UTC)."}}}},{"6":{"Value":"User"}},{"6":{"Value":"Application"}},{"6":{"Value":"ManagedIdentity"}},{"6":{"Value":"Key"}},{"5":{"Elements":[177,178,179,180,4]}},{"6":{"Value":"User"}},{"6":{"Value":"Application"}},{"6":{"Value":"ManagedIdentity"}},{"6":{"Value":"Key"}},{"5":{"Elements":[182,183,184,185,4]}},{"4":{"Name":"Microsoft.KeyVault/vaults@2020-04-01-preview","ScopeType":8,"Body":66}},{"6":{"Value":"add"}},{"6":{"Value":"replace"}},{"6":{"Value":"remove"}},{"5":{"Elements":[188,189,190]}},{"6":{"Value":"Microsoft.KeyVault/vaults/accessPolicies"}},{"6":{"Value":"2020-04-01-preview"}},{"2":{"Name":"Microsoft.KeyVault/vaults/accessPolicies","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":191,"Flags":9,"Description":"The resource name"},"type":{"Type":192,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":193,"Flags":10,"Description":"The resource api version"},"location":{"Type":4,"Flags":2,"Description":"The resource type of the access policy."},"properties":{"Type":195,"Flags":1,"Description":"Properties of the access policy"}}}},{"2":{"Name":"VaultAccessPolicyProperties","Properties":{"accessPolicies":{"Type":196,"Flags":1,"Description":"An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID."}}}},{"3":{"ItemType":75}},{"4":{"Name":"Microsoft.KeyVault/vaults/accessPolicies@2020-04-01-preview","ScopeType":8,"Body":194}},{"6":{"Value":"Microsoft.KeyVault/vaults/privateEndpointConnections"}},{"6":{"Value":"2020-04-01-preview"}},{"2":{"Name":"Microsoft.KeyVault/vaults/privateEndpointConnections","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":198,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":199,"Flags":10,"Description":"The resource api version"},"properties":{"Type":158,"Flags":0,"Description":"Resource properties."},"etag":{"Type":4,"Flags":0,"Description":"Modified whenever there is a change in the state of private endpoint connection."},"location":{"Type":4,"Flags":2,"Description":"Azure location of the key vault resource."},"tags":{"Type":201,"Flags":2,"Description":"Tags assigned to the key vault resource."}}}},{"2":{"Name":"ResourceTags","Properties":{},"AdditionalProperties":4}},{"4":{"Name":"Microsoft.KeyVault/vaults/privateEndpointConnections@2020-04-01-preview","ScopeType":8,"Body":200}},{"6":{"Value":"Microsoft.KeyVault/vaults/secrets"}},{"6":{"Value":"2020-04-01-preview"}},{"2":{"Name":"Microsoft.KeyVault/vaults/secrets","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":203,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":204,"Flags":10,"Description":"The resource api version"},"tags":{"Type":206,"Flags":0,"Description":"The tags that will be assigned to the secret."},"properties":{"Type":207,"Flags":1,"Description":"Properties of the secret"},"location":{"Type":4,"Flags":2,"Description":"Azure location of the key vault resource."}}}},{"2":{"Name":"SecretCreateOrUpdateParametersTags","Properties":{},"AdditionalProperties":4}},{"2":{"Name":"SecretProperties","Properties":{"value":{"Type":4,"Flags":0,"Description":"The value of the secret. NOTE: 'value' will never be returned from the service, as APIs using this model are is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets."},"contentType":{"Type":4,"Flags":0,"Description":"The content type of the secret."},"attributes":{"Type":208,"Flags":0,"Description":"The attributes of the secret."},"secretUri":{"Type":4,"Flags":2,"Description":"The URI to retrieve the current version of the secret."},"secretUriWithVersion":{"Type":4,"Flags":2,"Description":"The URI to retrieve the specific version of the secret."}}}},{"2":{"Name":"SecretAttributes","Properties":{"enabled":{"Type":2,"Flags":0,"Description":"Determines whether the object is enabled."},"nbf":{"Type":3,"Flags":0,"Description":"Not before date in seconds since 1970-01-01T00:00:00Z."},"exp":{"Type":3,"Flags":0,"Description":"Expiry date in seconds since 1970-01-01T00:00:00Z."},"created":{"Type":3,"Flags":2,"Description":"Creation time in seconds since 1970-01-01T00:00:00Z."},"updated":{"Type":3,"Flags":2,"Description":"Last updated time in seconds since 1970-01-01T00:00:00Z."}}}},{"4":{"Name":"Microsoft.KeyVault/vaults/secrets@2020-04-01-preview","ScopeType":8,"Body":205}}]