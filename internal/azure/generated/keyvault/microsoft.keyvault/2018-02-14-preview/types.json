[
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z0-9-]{1,127}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.KeyVault/vaults/secrets"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-02-14-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.KeyVault/vaults/secrets",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "tags": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "The tags that will be assigned to the secret."
      },
      "properties": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 1,
        "description": "Properties of the secret"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The supported Azure location where the key vault should be created."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretCreateOrUpdateParametersTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretProperties",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The value of the secret. NOTE: 'value' will never be returned from the service, as APIs using this model are is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets."
      },
      "contentType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The content type of the secret."
      },
      "attributes": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "The attributes of the secret."
      },
      "secretUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The URI to retrieve the current version of the secret."
      },
      "secretUriWithVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The URI to retrieve the specific version of the secret."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretAttributes",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "Determines whether the object is enabled."
      },
      "nbf": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 0,
        "description": "Not before date in seconds since 1970-01-01T00:00:00Z."
      },
      "exp": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 0,
        "description": "Expiry date in seconds since 1970-01-01T00:00:00Z."
      },
      "created": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 2,
        "description": "Creation time in seconds since 1970-01-01T00:00:00Z."
      },
      "updated": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 2,
        "description": "Last updated time in seconds since 1970-01-01T00:00:00Z."
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.KeyVault/vaults/secrets@2018-02-14-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/4"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z0-9-]{3,24}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.KeyVault/vaults"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-02-14-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.KeyVault/vaults",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/11"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The supported Azure location where the key vault should be created."
      },
      "tags": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "The tags that will be assigned to the key vault."
      },
      "properties": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 1,
        "description": "Properties of the vault"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VaultCreateOrUpdateParametersTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VaultProperties",
    "properties": {
      "tenantId": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 1,
        "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."
      },
      "sku": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 1,
        "description": "SKU details"
      },
      "accessPolicies": {
        "type": {
          "$ref": "#/88"
        },
        "flags": 0,
        "description": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID."
      },
      "vaultUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The URI of the vault for performing operations on keys and secrets."
      },
      "enabledForDeployment": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
      },
      "enabledForDiskEncryption": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
      },
      "enabledForTemplateDeployment": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
      },
      "enableSoftDelete": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value."
      },
      "createMode": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 0,
        "description": "The vault's create mode to indicate whether the vault need to be recovered or not."
      },
      "enablePurgeProtection": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value."
      },
      "networkAcls": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 0,
        "description": "A collection of rules governing the accessibility of the vault from specific network locations."
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 36,
    "maxLength": 36,
    "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
  },
  {
    "$type": "ObjectType",
    "name": "Sku",
    "properties": {
      "family": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 1,
        "description": "SKU family name"
      },
      "name": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "SKU name to specify whether the key vault is a standard vault or a premium vault."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "A"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/19"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "standard"
  },
  {
    "$type": "StringLiteralType",
    "value": "premium"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/21"
      },
      {
        "$ref": "#/22"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AccessPolicyEntry",
    "properties": {
      "tenantId": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 1,
        "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."
      },
      "objectId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies."
      },
      "applicationId": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Application ID of the client making request on behalf of a principal"
      },
      "permissions": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 1,
        "description": "Permissions the identity has for keys, secrets and certificates."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Permissions",
    "properties": {
      "keys": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "Permissions to keys"
      },
      "secrets": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 0,
        "description": "Permissions to secrets"
      },
      "certificates": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 0,
        "description": "Permissions to certificates"
      },
      "storage": {
        "type": {
          "$ref": "#/87"
        },
        "flags": 0,
        "description": "Permissions to storage accounts"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "encrypt"
  },
  {
    "$type": "StringLiteralType",
    "value": "decrypt"
  },
  {
    "$type": "StringLiteralType",
    "value": "wrapKey"
  },
  {
    "$type": "StringLiteralType",
    "value": "unwrapKey"
  },
  {
    "$type": "StringLiteralType",
    "value": "sign"
  },
  {
    "$type": "StringLiteralType",
    "value": "verify"
  },
  {
    "$type": "StringLiteralType",
    "value": "get"
  },
  {
    "$type": "StringLiteralType",
    "value": "list"
  },
  {
    "$type": "StringLiteralType",
    "value": "create"
  },
  {
    "$type": "StringLiteralType",
    "value": "update"
  },
  {
    "$type": "StringLiteralType",
    "value": "import"
  },
  {
    "$type": "StringLiteralType",
    "value": "delete"
  },
  {
    "$type": "StringLiteralType",
    "value": "backup"
  },
  {
    "$type": "StringLiteralType",
    "value": "restore"
  },
  {
    "$type": "StringLiteralType",
    "value": "recover"
  },
  {
    "$type": "StringLiteralType",
    "value": "purge"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/26"
      },
      {
        "$ref": "#/27"
      },
      {
        "$ref": "#/28"
      },
      {
        "$ref": "#/29"
      },
      {
        "$ref": "#/30"
      },
      {
        "$ref": "#/31"
      },
      {
        "$ref": "#/32"
      },
      {
        "$ref": "#/33"
      },
      {
        "$ref": "#/34"
      },
      {
        "$ref": "#/35"
      },
      {
        "$ref": "#/36"
      },
      {
        "$ref": "#/37"
      },
      {
        "$ref": "#/38"
      },
      {
        "$ref": "#/39"
      },
      {
        "$ref": "#/40"
      },
      {
        "$ref": "#/41"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/42"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "get"
  },
  {
    "$type": "StringLiteralType",
    "value": "list"
  },
  {
    "$type": "StringLiteralType",
    "value": "set"
  },
  {
    "$type": "StringLiteralType",
    "value": "delete"
  },
  {
    "$type": "StringLiteralType",
    "value": "backup"
  },
  {
    "$type": "StringLiteralType",
    "value": "restore"
  },
  {
    "$type": "StringLiteralType",
    "value": "recover"
  },
  {
    "$type": "StringLiteralType",
    "value": "purge"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/44"
      },
      {
        "$ref": "#/45"
      },
      {
        "$ref": "#/46"
      },
      {
        "$ref": "#/47"
      },
      {
        "$ref": "#/48"
      },
      {
        "$ref": "#/49"
      },
      {
        "$ref": "#/50"
      },
      {
        "$ref": "#/51"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/52"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "get"
  },
  {
    "$type": "StringLiteralType",
    "value": "list"
  },
  {
    "$type": "StringLiteralType",
    "value": "delete"
  },
  {
    "$type": "StringLiteralType",
    "value": "create"
  },
  {
    "$type": "StringLiteralType",
    "value": "import"
  },
  {
    "$type": "StringLiteralType",
    "value": "update"
  },
  {
    "$type": "StringLiteralType",
    "value": "managecontacts"
  },
  {
    "$type": "StringLiteralType",
    "value": "getissuers"
  },
  {
    "$type": "StringLiteralType",
    "value": "listissuers"
  },
  {
    "$type": "StringLiteralType",
    "value": "setissuers"
  },
  {
    "$type": "StringLiteralType",
    "value": "deleteissuers"
  },
  {
    "$type": "StringLiteralType",
    "value": "manageissuers"
  },
  {
    "$type": "StringLiteralType",
    "value": "recover"
  },
  {
    "$type": "StringLiteralType",
    "value": "purge"
  },
  {
    "$type": "StringLiteralType",
    "value": "backup"
  },
  {
    "$type": "StringLiteralType",
    "value": "restore"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/54"
      },
      {
        "$ref": "#/55"
      },
      {
        "$ref": "#/56"
      },
      {
        "$ref": "#/57"
      },
      {
        "$ref": "#/58"
      },
      {
        "$ref": "#/59"
      },
      {
        "$ref": "#/60"
      },
      {
        "$ref": "#/61"
      },
      {
        "$ref": "#/62"
      },
      {
        "$ref": "#/63"
      },
      {
        "$ref": "#/64"
      },
      {
        "$ref": "#/65"
      },
      {
        "$ref": "#/66"
      },
      {
        "$ref": "#/67"
      },
      {
        "$ref": "#/68"
      },
      {
        "$ref": "#/69"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/70"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "get"
  },
  {
    "$type": "StringLiteralType",
    "value": "list"
  },
  {
    "$type": "StringLiteralType",
    "value": "delete"
  },
  {
    "$type": "StringLiteralType",
    "value": "set"
  },
  {
    "$type": "StringLiteralType",
    "value": "update"
  },
  {
    "$type": "StringLiteralType",
    "value": "regeneratekey"
  },
  {
    "$type": "StringLiteralType",
    "value": "recover"
  },
  {
    "$type": "StringLiteralType",
    "value": "purge"
  },
  {
    "$type": "StringLiteralType",
    "value": "backup"
  },
  {
    "$type": "StringLiteralType",
    "value": "restore"
  },
  {
    "$type": "StringLiteralType",
    "value": "setsas"
  },
  {
    "$type": "StringLiteralType",
    "value": "listsas"
  },
  {
    "$type": "StringLiteralType",
    "value": "getsas"
  },
  {
    "$type": "StringLiteralType",
    "value": "deletesas"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/72"
      },
      {
        "$ref": "#/73"
      },
      {
        "$ref": "#/74"
      },
      {
        "$ref": "#/75"
      },
      {
        "$ref": "#/76"
      },
      {
        "$ref": "#/77"
      },
      {
        "$ref": "#/78"
      },
      {
        "$ref": "#/79"
      },
      {
        "$ref": "#/80"
      },
      {
        "$ref": "#/81"
      },
      {
        "$ref": "#/82"
      },
      {
        "$ref": "#/83"
      },
      {
        "$ref": "#/84"
      },
      {
        "$ref": "#/85"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/86"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/24"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "recover"
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/89"
      },
      {
        "$ref": "#/90"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NetworkRuleSet",
    "properties": {
      "bypass": {
        "type": {
          "$ref": "#/95"
        },
        "flags": 0,
        "description": "Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'."
      },
      "defaultAction": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 0,
        "description": "The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated."
      },
      "ipRules": {
        "type": {
          "$ref": "#/100"
        },
        "flags": 0,
        "description": "The list of IP address rules."
      },
      "virtualNetworkRules": {
        "type": {
          "$ref": "#/102"
        },
        "flags": 0,
        "description": "The list of virtual network rules."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureServices"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/93"
      },
      {
        "$ref": "#/94"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Allow"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deny"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/96"
      },
      {
        "$ref": "#/97"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "IPRule",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78)."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/99"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualNetworkRule",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/101"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.KeyVault/vaults@2018-02-14-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/14"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "add"
  },
  {
    "$type": "StringLiteralType",
    "value": "replace"
  },
  {
    "$type": "StringLiteralType",
    "value": "remove"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/104"
      },
      {
        "$ref": "#/105"
      },
      {
        "$ref": "#/106"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.KeyVault/vaults/accessPolicies"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-02-14-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.KeyVault/vaults/accessPolicies",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/108"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/109"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The resource type of the access policy."
      },
      "properties": {
        "type": {
          "$ref": "#/111"
        },
        "flags": 1,
        "description": "Properties of the access policy"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VaultAccessPolicyProperties",
    "properties": {
      "accessPolicies": {
        "type": {
          "$ref": "#/112"
        },
        "flags": 1,
        "description": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/24"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.KeyVault/vaults/accessPolicies@2018-02-14-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/110"
    },
    "flags": 0
  },
  {
    "$type": "ResourceFunctionType",
    "name": "purge",
    "resourceType": "Microsoft.KeyVault/locations/deletedVaults",
    "apiVersion": "2018-02-14-preview"
  }
]