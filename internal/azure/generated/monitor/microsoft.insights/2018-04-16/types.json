[
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Insights/scheduledQueryRules"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-04-16"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Insights/scheduledQueryRules",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "The rule properties of the resource."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Resource location"
      },
      "tags": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0,
        "description": "Resource tags"
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
      },
      "etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LogSearchRule",
    "properties": {
      "createdWithApiVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The api-version used when creating this alert rule"
      },
      "isLegacyLogAnalyticsRule": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 2,
        "description": "True if alert rule is legacy Log Analytic rule"
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The description of the Log Search rule."
      },
      "displayName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The display name of the alert rule"
      },
      "autoMitigate": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "The flag that indicates whether the alert should be automatically resolved or not. The default is false."
      },
      "enabled": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "The flag which indicates whether the Log Search rule is enabled. Value should be true or false"
      },
      "lastUpdatedTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Last time the rule was updated in IS08601 format."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 2,
        "description": "Provisioning state of the scheduled query rule"
      },
      "source": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 1,
        "description": "Data Source against which rule will Query Data"
      },
      "schedule": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 0,
        "description": "Schedule (Frequency, Time Window) for rule. Required for action type - AlertingAction"
      },
      "action": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 1,
        "description": "Action needs to be taken on rule execution."
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "StringLiteralType",
    "value": "true"
  },
  {
    "$type": "StringLiteralType",
    "value": "false"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deploying"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/12"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Source",
    "properties": {
      "query": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Log search query. Required for action type - AlertingAction"
      },
      "authorizedResources": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "List of  Resource referred into query"
      },
      "dataSourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The resource uri over which log search query is to be run."
      },
      "queryType": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Set value to 'ResultCount' ."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ResultCount"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/16"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Schedule",
    "properties": {
      "frequencyInMinutes": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 1,
        "description": "frequency (in minutes) at which rule condition should be evaluated."
      },
      "timeWindowInMinutes": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 1,
        "description": "Time window for which data needs to be fetched for query (should be greater than or equal to frequencyInMinutes)."
      }
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Action",
    "discriminator": "odata.type",
    "baseProperties": {},
    "elements": {
      "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction": {
        "$ref": "#/21"
      },
      "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.LogToMetricAction": {
        "$ref": "#/48"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AlertingAction",
    "properties": {
      "severity": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 1,
        "description": "Severity of the alert"
      },
      "aznsAction": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 0,
        "description": "Azure action group reference."
      },
      "throttlingInMin": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 0,
        "description": "time (in minutes) for which Alerts should be throttled or suppressed."
      },
      "trigger": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 1,
        "description": "The trigger condition that results in the alert rule being."
      },
      "odata.type": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 1,
        "description": "Specifies the action. Supported values - AlertingAction, LogToMetricAction"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "0"
  },
  {
    "$type": "StringLiteralType",
    "value": "1"
  },
  {
    "$type": "StringLiteralType",
    "value": "2"
  },
  {
    "$type": "StringLiteralType",
    "value": "3"
  },
  {
    "$type": "StringLiteralType",
    "value": "4"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/22"
      },
      {
        "$ref": "#/23"
      },
      {
        "$ref": "#/24"
      },
      {
        "$ref": "#/25"
      },
      {
        "$ref": "#/26"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AzNsActionGroup",
    "properties": {
      "actionGroup": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 0,
        "description": "Azure Action Group reference."
      },
      "emailSubject": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Custom subject override for all email ids in Azure action group"
      },
      "customWebhookPayload": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Custom payload to be sent for all webhook URI in Azure action group"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TriggerCondition",
    "properties": {
      "thresholdOperator": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 1,
        "description": "Evaluation operation for rule - 'GreaterThan' or 'LessThan."
      },
      "threshold": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 1,
        "description": "Result or count threshold based on which rule should be triggered."
      },
      "metricTrigger": {
        "type": {
          "$ref": "#/37"
        },
        "flags": 0,
        "description": "Trigger condition for metric query rule"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "GreaterThanOrEqual"
  },
  {
    "$type": "StringLiteralType",
    "value": "LessThanOrEqual"
  },
  {
    "$type": "StringLiteralType",
    "value": "GreaterThan"
  },
  {
    "$type": "StringLiteralType",
    "value": "LessThan"
  },
  {
    "$type": "StringLiteralType",
    "value": "Equal"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/31"
      },
      {
        "$ref": "#/32"
      },
      {
        "$ref": "#/33"
      },
      {
        "$ref": "#/34"
      },
      {
        "$ref": "#/35"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "LogMetricTrigger",
    "properties": {
      "thresholdOperator": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "Evaluation operation for Metric -'GreaterThan' or 'LessThan' or 'Equal'."
      },
      "threshold": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 0,
        "description": "The threshold of the metric trigger."
      },
      "metricTriggerType": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 0,
        "description": "Metric Trigger Type - 'Consecutive' or 'Total'"
      },
      "metricColumn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Evaluation of metric on a particular column"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "GreaterThanOrEqual"
  },
  {
    "$type": "StringLiteralType",
    "value": "LessThanOrEqual"
  },
  {
    "$type": "StringLiteralType",
    "value": "GreaterThan"
  },
  {
    "$type": "StringLiteralType",
    "value": "LessThan"
  },
  {
    "$type": "StringLiteralType",
    "value": "Equal"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/38"
      },
      {
        "$ref": "#/39"
      },
      {
        "$ref": "#/40"
      },
      {
        "$ref": "#/41"
      },
      {
        "$ref": "#/42"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Consecutive"
  },
  {
    "$type": "StringLiteralType",
    "value": "Total"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/44"
      },
      {
        "$ref": "#/45"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
  },
  {
    "$type": "ObjectType",
    "name": "LogToMetricAction",
    "properties": {
      "criteria": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 1,
        "description": "Criteria of Metric"
      },
      "odata.type": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 1,
        "description": "Specifies the action. Supported values - AlertingAction, LogToMetricAction"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Criteria",
    "properties": {
      "metricName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the metric"
      },
      "dimensions": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 0,
        "description": "List of Dimensions for creating metric"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Dimension",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the dimension"
      },
      "operator": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 1,
        "description": "Operator for dimension values"
      },
      "values": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 1,
        "description": "List of dimension values"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Include"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/51"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/50"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/49"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.LogToMetricAction"
  },
  {
    "$type": "ObjectType",
    "name": "ResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Insights/scheduledQueryRules@2018-04-16",
    "scopeType": 8,
    "body": {
      "$ref": "#/3"
    },
    "flags": 0
  }
]