[
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.KubernetesConfiguration/sourceControlConfigurations"
  },
  {
    "$type": "StringLiteralType",
    "value": "2020-07-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.KubernetesConfiguration/sourceControlConfigurations",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Properties to create a Source Control Configuration resource"
      },
      "systemData": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 0,
        "description": "Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SourceControlConfigurationProperties",
    "properties": {
      "repositoryUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Url of the SourceControl Repository."
      },
      "operatorNamespace": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The namespace to which this operator is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only."
      },
      "operatorInstanceName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Instance name of the operator - identifying the specific configuration."
      },
      "operatorType": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Type of the operator"
      },
      "operatorParams": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Any Parameters for the Operator instance in string format."
      },
      "configurationProtectedSettings": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "Name-value pairs of protected configuration settings for the configuration"
      },
      "operatorScope": {
        "type": {
          "$ref": "#/10"
        },
        "flags": 0,
        "description": "Scope at which the operator will be installed."
      },
      "repositoryPublicKey": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Public Key associated with this SourceControl configuration (either generated within the cluster or provided by the user)."
      },
      "sshKnownHostsContents": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Base64-encoded known_hosts contents containing public SSH keys required to access private Git instances"
      },
      "enableHelmOperator": {
        "type": {
          "$ref": "#/11"
        },
        "flags": 0,
        "description": "Option to enable Helm Operator for this git configuration."
      },
      "helmOperatorProperties": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Properties for Helm operator."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 2,
        "description": "The provisioning state of the resource provider."
      },
      "complianceStatus": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 2,
        "description": "Compliance Status of the Configuration"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Flux"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/5"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ConfigurationProtectedSettings",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "cluster"
  },
  {
    "$type": "StringLiteralType",
    "value": "namespace"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ObjectType",
    "name": "HelmOperatorProperties",
    "properties": {
      "chartVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Version of the operator Helm chart."
      },
      "chartValues": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Values override for the operator Helm chart."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/13"
      },
      {
        "$ref": "#/14"
      },
      {
        "$ref": "#/15"
      },
      {
        "$ref": "#/16"
      },
      {
        "$ref": "#/17"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ComplianceStatus",
    "properties": {
      "complianceState": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 2,
        "description": "The compliance state of the configuration."
      },
      "lastConfigApplied": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Datetime the configuration was last applied."
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Message from when the configuration was applied."
      },
      "messageLevel": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 0,
        "description": "Level of the message."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Compliant"
  },
  {
    "$type": "StringLiteralType",
    "value": "Noncompliant"
  },
  {
    "$type": "StringLiteralType",
    "value": "Installed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/20"
      },
      {
        "$ref": "#/21"
      },
      {
        "$ref": "#/22"
      },
      {
        "$ref": "#/23"
      },
      {
        "$ref": "#/24"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "StringLiteralType",
    "value": "Warning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Information"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/26"
      },
      {
        "$ref": "#/27"
      },
      {
        "$ref": "#/28"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A string identifier for the identity that created the resource"
      },
      "createdByType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of identity that created the resource: user, application, managedIdentity, key"
      },
      "createdAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The timestamp of resource creation (UTC)"
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A string identifier for the identity that last modified the resource"
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of identity that last modified the resource: user, application, managedIdentity, key"
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.KubernetesConfiguration/sourceControlConfigurations@2020-07-01-preview",
    "scopeType": 16,
    "body": {
      "$ref": "#/3"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.KubernetesConfiguration/extensions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2020-07-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.KubernetesConfiguration/extensions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 0,
        "description": "Properties of an Extension Instance resource"
      },
      "systemData": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 0,
        "description": "Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ExtensionInstanceProperties",
    "properties": {
      "extensionType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher."
      },
      "autoUpgradeMinorVersion": {
        "type": {
          "$ref": "#/11"
        },
        "flags": 0,
        "description": "Flag to note if this instance participates in auto upgrade of minor version, or not."
      },
      "releaseTrain": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ReleaseTrain this extension instance participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'."
      },
      "version": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Version of the extension for this extension instance, if it is 'pinned' to a specific version. autoUpgradeMinorVersion must be 'false'."
      },
      "scope": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "Scope at which the extension instance is installed."
      },
      "configurationSettings": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 0,
        "description": "Configuration settings, as name-value pairs for configuring this instance of the extension."
      },
      "configurationProtectedSettings": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 0,
        "description": "Configuration settings that are sensitive, as name-value pairs for configuring this instance of the extension."
      },
      "installState": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 2,
        "description": "Status of installation of this instance of the extension."
      },
      "statuses": {
        "type": {
          "$ref": "#/50"
        },
        "flags": 0,
        "description": "Status from this instance of the extension."
      },
      "creationTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "DateLiteral (per ISO8601) noting the time the resource was created by the client (user)."
      },
      "lastModifiedTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "DateLiteral (per ISO8601) noting the time the resource was modified by the client (user)."
      },
      "lastStatusTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "DateLiteral (per ISO8601) noting the time of last status from the agent."
      },
      "errorInfo": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 2,
        "description": "Error information from the Agent - e.g. errors during installation."
      },
      "identity": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 0,
        "description": "The identity of the configuration."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Scope",
    "properties": {
      "cluster": {
        "type": {
          "$ref": "#/37"
        },
        "flags": 0,
        "description": "Specifies that the scope of the extensionInstance is Cluster"
      },
      "namespace": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 0,
        "description": "Specifies that the scope of the extensionInstance is Namespace"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScopeCluster",
    "properties": {
      "releaseNamespace": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Namespace where the extension Release must be placed, for a Cluster scoped extensionInstance.  If this namespace does not exist, it will be created"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScopeNamespace",
    "properties": {
      "targetNamespace": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Namespace where the extensionInstance will be created for an Namespace scoped extensionInstance.  If this namespace does not exist, it will be created"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ConfigurationSettings",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ExtensionProtectedSettings",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Installed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/41"
      },
      {
        "$ref": "#/42"
      },
      {
        "$ref": "#/43"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ExtensionStatus",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Status code provided by the Extension"
      },
      "displayStatus": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Short description of status of this instance of the extension."
      },
      "level": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Level of the status."
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Detailed message of the status from the Extension instance."
      },
      "time": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "DateLiteral (per ISO8601) noting the time of installation status."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "StringLiteralType",
    "value": "Warning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Information"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/46"
      },
      {
        "$ref": "#/47"
      },
      {
        "$ref": "#/48"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ErrorDefinition",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Service specific error code which serves as the substatus for the HTTP error code."
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Description of the error."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ConfigurationIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The principal id of the system assigned identity which is used by the configuration."
      },
      "tenantId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The tenant id of the system assigned identity which is used by the configuration."
      },
      "type": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "The type of identity used for the configuration. Type 'SystemAssigned' will use an implicitly created identity. Type 'None' will not use Managed Identity for the configuration."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/53"
      },
      {
        "$ref": "#/54"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.KubernetesConfiguration/extensions@2020-07-01-preview",
    "scopeType": 16,
    "body": {
      "$ref": "#/34"
    },
    "flags": 0
  }
]