[
  {
    "$type": "StringType",
    "maxLength": 256
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Devices/provisioningServices/certificates"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2020-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Devices/provisioningServices/certificates",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "certificate": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 4,
        "description": "Base-64 representation of the X509 leaf certificate .cer file or just .pem file content."
      },
      "properties": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 2,
        "description": "properties of a certificate"
      },
      "etag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The entity tag."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CertificateProperties",
    "properties": {
      "subject": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The certificate's subject name."
      },
      "expiry": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The certificate's expiration date and time."
      },
      "thumbprint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The certificate's thumbprint."
      },
      "isVerified": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "Determines whether certificate has been verified."
      },
      "certificate": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 2,
        "description": "base-64 representation of X509 certificate .cer file or just .pem file content."
      },
      "created": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The certificate's creation date and time."
      },
      "updated": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The certificate's last update date and time."
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Devices/provisioningServices/certificates@2020-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/4"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Devices/provisioningServices"
  },
  {
    "$type": "StringLiteralType",
    "value": "2020-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Devices/provisioningServices",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/10"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "etag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention."
      },
      "properties": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 1,
        "description": "Service specific properties for a provisioning service"
      },
      "sku": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 1,
        "description": "Sku info for a provisioning Service."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The resource location."
      },
      "tags": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 0,
        "description": "The resource tags."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IotDpsPropertiesDescription",
    "properties": {
      "state": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 0,
        "description": "Current state of the provisioning service."
      },
      "ipFilterRules": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The IP filter rules."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ARM provisioning state of the provisioning service."
      },
      "iotHubs": {
        "type": {
          "$ref": "#/37"
        },
        "flags": 0,
        "description": "List of IoT hubs associated with this provisioning service."
      },
      "allocationPolicy": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 0,
        "description": "Allocation policy to be used by this provisioning service."
      },
      "serviceOperationsHostName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Service endpoint for provisioning service."
      },
      "deviceProvisioningHostName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Device endpoint for this provisioning service."
      },
      "idScope": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Unique identifier of this provisioning service."
      },
      "authorizationPolicies": {
        "type": {
          "$ref": "#/50"
        },
        "flags": 0,
        "description": "List of authorization keys for a provisioning service."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Activating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Active"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleted"
  },
  {
    "$type": "StringLiteralType",
    "value": "ActivationFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "DeletionFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Transitioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Suspending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Suspended"
  },
  {
    "$type": "StringLiteralType",
    "value": "Resuming"
  },
  {
    "$type": "StringLiteralType",
    "value": "FailingOver"
  },
  {
    "$type": "StringLiteralType",
    "value": "FailoverFailed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/13"
      },
      {
        "$ref": "#/14"
      },
      {
        "$ref": "#/15"
      },
      {
        "$ref": "#/16"
      },
      {
        "$ref": "#/17"
      },
      {
        "$ref": "#/18"
      },
      {
        "$ref": "#/19"
      },
      {
        "$ref": "#/20"
      },
      {
        "$ref": "#/21"
      },
      {
        "$ref": "#/22"
      },
      {
        "$ref": "#/23"
      },
      {
        "$ref": "#/24"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "IpFilterRule",
    "properties": {
      "filterName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the IP filter rule."
      },
      "action": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 1,
        "description": "The desired action for requests captured by this rule."
      },
      "ipMask": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "A string that contains the IP address range in CIDR notation for the rule."
      },
      "target": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Target for requests captured by this rule."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accept"
  },
  {
    "$type": "StringLiteralType",
    "value": "Reject"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/27"
      },
      {
        "$ref": "#/28"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "all"
  },
  {
    "$type": "StringLiteralType",
    "value": "serviceApi"
  },
  {
    "$type": "StringLiteralType",
    "value": "deviceApi"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/30"
      },
      {
        "$ref": "#/31"
      },
      {
        "$ref": "#/32"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/26"
    }
  },
  {
    "$type": "ObjectType",
    "name": "IotHubDefinitionDescription",
    "properties": {
      "applyAllocationPolicy": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "flag for applying allocationPolicy or not for a given iot hub."
      },
      "allocationWeight": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "weight to apply for a given iot h."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Host name of the IoT hub."
      },
      "connectionString": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Connection string og the IoT hub."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "ARM region of the IoT hub."
      }
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/35"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Hashed"
  },
  {
    "$type": "StringLiteralType",
    "value": "GeoLatency"
  },
  {
    "$type": "StringLiteralType",
    "value": "Static"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/38"
      },
      {
        "$ref": "#/39"
      },
      {
        "$ref": "#/40"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SharedAccessSignatureAuthorizationRuleAccessRightsDescription",
    "properties": {
      "keyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Name of the key."
      },
      "primaryKey": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Primary SAS key value."
      },
      "secondaryKey": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Secondary SAS key value."
      },
      "rights": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 1,
        "description": "Rights that this key has."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ServiceConfig"
  },
  {
    "$type": "StringLiteralType",
    "value": "EnrollmentRead"
  },
  {
    "$type": "StringLiteralType",
    "value": "EnrollmentWrite"
  },
  {
    "$type": "StringLiteralType",
    "value": "DeviceConnect"
  },
  {
    "$type": "StringLiteralType",
    "value": "RegistrationStatusRead"
  },
  {
    "$type": "StringLiteralType",
    "value": "RegistrationStatusWrite"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/43"
      },
      {
        "$ref": "#/44"
      },
      {
        "$ref": "#/45"
      },
      {
        "$ref": "#/46"
      },
      {
        "$ref": "#/47"
      },
      {
        "$ref": "#/48"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/42"
    }
  },
  {
    "$type": "ObjectType",
    "name": "IotDpsSkuInfo",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 0,
        "description": "Sku name."
      },
      "tier": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Pricing tier name of the provisioning service."
      },
      "capacity": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The number of units to provision"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "S1"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/52"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Devices/provisioningServices@2020-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/11"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "VerificationCodeResponse",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Name of certificate."
      },
      "etag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Request etag."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The resource identifier."
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The resource type."
      },
      "properties": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VerificationCodeResponseProperties",
    "properties": {
      "verificationCode": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Verification code."
      },
      "subject": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Certificate subject."
      },
      "expiry": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Code expiry."
      },
      "thumbprint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Certificate thumbprint."
      },
      "isVerified": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Indicate if the certificate is verified by owner of private key."
      },
      "created": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Certificate created time."
      },
      "updated": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Certificate updated time."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "generateVerificationCode",
    "resourceType": "Microsoft.Devices/provisioningServices/certificates",
    "apiVersion": "2020-01-01",
    "output": {
      "$ref": "#/56"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VerificationCodeRequest",
    "properties": {
      "certificate": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "base-64 representation of X509 certificate .cer file or just .pem file content."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CertificateResponse",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "properties of a certificate"
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The resource identifier."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the certificate."
      },
      "etag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The entity tag."
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The resource type."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "verify",
    "resourceType": "Microsoft.Devices/provisioningServices/certificates",
    "apiVersion": "2020-01-01",
    "output": {
      "$ref": "#/60"
    },
    "input": {
      "$ref": "#/59"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SharedAccessSignatureAuthorizationRuleListResult",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "The list of shared access policies."
      },
      "nextLink": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The next link."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/42"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listkeys",
    "resourceType": "Microsoft.Devices/provisioningServices",
    "apiVersion": "2020-01-01",
    "output": {
      "$ref": "#/62"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listkeys",
    "resourceType": "Microsoft.Devices/provisioningServices/keys",
    "apiVersion": "2020-01-01",
    "output": {
      "$ref": "#/42"
    }
  }
]