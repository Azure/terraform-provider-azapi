[
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/containerApps/authConfigs"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/containerApps/authConfigs",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "AuthConfig resource specific properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AuthConfigProperties",
    "properties": {
      "platform": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "The configuration settings of the platform of ContainerApp Service Authentication/Authorization."
      },
      "globalValidation": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "The configuration settings that determines the validation flow of users using  Service Authentication/Authorization."
      },
      "identityProviders": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization."
      },
      "login": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 0,
        "description": "The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization."
      },
      "httpSettings": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization."
      },
      "encryptionSettings": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 0,
        "description": "The configuration settings of the secrets references of encryption key and signing key for ContainerApp Service Authentication/Authorization."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AuthPlatform",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>."
      },
      "runtimeVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of certain features in the Authentication / Authorization module."
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ObjectType",
    "name": "GlobalValidation",
    "properties": {
      "unauthenticatedClientAction": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "The action to take when an unauthenticated client attempts to access the app."
      },
      "redirectToProvider": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The default authentication provider to use when multiple providers are configured.\nThis setting is only needed if multiple providers are configured and the unauthenticated client\naction is set to \"RedirectToLoginPage\"."
      },
      "excludedPaths": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0,
        "description": "The paths for which unauthenticated flow would not be redirected to the login page."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "RedirectToLoginPage"
  },
  {
    "$type": "StringLiteralType",
    "value": "AllowAnonymous"
  },
  {
    "$type": "StringLiteralType",
    "value": "Return401"
  },
  {
    "$type": "StringLiteralType",
    "value": "Return403"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "IdentityProviders",
    "properties": {
      "azureActiveDirectory": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "The configuration settings of the Azure Active directory provider."
      },
      "facebook": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 0,
        "description": "The configuration settings of the Facebook provider."
      },
      "gitHub": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "The configuration settings of the GitHub provider."
      },
      "google": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 0,
        "description": "The configuration settings of the Google provider."
      },
      "twitter": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 0,
        "description": "The configuration settings of the Twitter provider."
      },
      "apple": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 0,
        "description": "The configuration settings of the Apple provider."
      },
      "azureStaticWebApps": {
        "type": {
          "$ref": "#/42"
        },
        "flags": 0,
        "description": "The configuration settings of the Azure Static Web Apps provider."
      },
      "customOpenIdConnectProviders": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 0,
        "description": "The map of the name of the alias of each custom Open ID Connect provider to the\nconfiguration settings of the custom Open ID Connect provider."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureActiveDirectory",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "<code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>."
      },
      "registration": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 0,
        "description": "The configuration settings of the Azure Active Directory app registration."
      },
      "login": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "The configuration settings of the Azure Active Directory login flow."
      },
      "validation": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 0,
        "description": "The configuration settings of the Azure Active Directory token validation flow."
      },
      "isAutoProvisioned": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.\nThis is an internal flag primarily intended to support the Azure Management Portal. Users should not\nread or write to this property."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureActiveDirectoryRegistration",
    "properties": {
      "openIdIssuer": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html"
      },
      "clientId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html"
      },
      "clientSecretSettingName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The app setting name that contains the client secret of the relying party application."
      },
      "clientSecretCertificateThumbprint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret. It is also optional."
      },
      "clientSecretCertificateSubjectAlternativeName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional."
      },
      "clientSecretCertificateIssuer": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureActiveDirectoryLogin",
    "properties": {
      "loginParameters": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 0,
        "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\"."
      },
      "disableWWWAuthenticate": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "<code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureActiveDirectoryValidation",
    "properties": {
      "jwtClaimChecks": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The configuration settings of the checks that should be made while validating the JWT Claims."
      },
      "allowedAudiences": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "The list of audiences that can make successful authentication/authorization requests."
      },
      "defaultAuthorizationPolicy": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 0,
        "description": "The configuration settings of the default authorization policy."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JwtClaimChecks",
    "properties": {
      "allowedGroups": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The list of the allowed groups."
      },
      "allowedClientApplications": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 0,
        "description": "The list of the allowed client applications."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefaultAuthorizationPolicy",
    "properties": {
      "allowedPrincipals": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 0,
        "description": "The configuration settings of the Azure Active Directory allowed principals."
      },
      "allowedApplications": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 0,
        "description": "The configuration settings of the Azure Active Directory allowed applications."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AllowedPrincipals",
    "properties": {
      "groups": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 0,
        "description": "The list of the allowed groups."
      },
      "identities": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "The list of the allowed identities."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Facebook",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "<code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>."
      },
      "registration": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 0,
        "description": "The configuration settings of the app registration for the Facebook provider."
      },
      "graphApiVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The version of the Facebook api to be used while logging in."
      },
      "login": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 0,
        "description": "The configuration settings of the login flow."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AppRegistration",
    "properties": {
      "appId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The App ID of the app used for login."
      },
      "appSecretSettingName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The app setting name that contains the app secret."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LoginScopes",
    "properties": {
      "scopes": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 0,
        "description": "A list of the scopes that should be requested while authenticating."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "GitHub",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "<code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>."
      },
      "registration": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The configuration settings of the app registration for the GitHub provider."
      },
      "login": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 0,
        "description": "The configuration settings of the login flow."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClientRegistration",
    "properties": {
      "clientId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Client ID of the app used for login."
      },
      "clientSecretSettingName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The app setting name that contains the client secret."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Google",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "<code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>."
      },
      "registration": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The configuration settings of the app registration for the Google provider."
      },
      "login": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 0,
        "description": "The configuration settings of the login flow."
      },
      "validation": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The configuration settings of the Azure Active Directory token validation flow."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AllowedAudiencesValidation",
    "properties": {
      "allowedAudiences": {
        "type": {
          "$ref": "#/37"
        },
        "flags": 0,
        "description": "The configuration settings of the allowed list of audiences from which to validate the JWT token."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Twitter",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "<code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>."
      },
      "registration": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 0,
        "description": "The configuration settings of the app registration for the Twitter provider."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TwitterRegistration",
    "properties": {
      "consumerKey": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in"
      },
      "consumerSecretSettingName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter\napplication used for sign-in."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Apple",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "<code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>."
      },
      "registration": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 0,
        "description": "The configuration settings of the Apple registration."
      },
      "login": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 0,
        "description": "The configuration settings of the login flow."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AppleRegistration",
    "properties": {
      "clientId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Client ID of the app used for login."
      },
      "clientSecretSettingName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The app setting name that contains the client secret."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureStaticWebApps",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "<code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>."
      },
      "registration": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "The configuration settings of the Azure Static Web Apps registration."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureStaticWebAppsRegistration",
    "properties": {
      "clientId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Client ID of the app used for login."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomOpenIdConnectProvider",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "<code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>."
      },
      "registration": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "The configuration settings of the app registration for the custom Open ID Connect provider."
      },
      "login": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "The configuration settings of the login flow of the custom Open ID Connect provider."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "OpenIdConnectRegistration",
    "properties": {
      "clientId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The client id of the custom Open ID Connect provider."
      },
      "clientCredential": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 0,
        "description": "The authentication credentials of the custom Open ID Connect provider."
      },
      "openIdConnectConfiguration": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "OpenIdConnectClientCredential",
    "properties": {
      "method": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 0,
        "description": "The method that should be used to authenticate the user."
      },
      "clientSecretSettingName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The app setting that contains the client secret for the custom Open ID Connect provider."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ClientSecretPost"
  },
  {
    "$type": "ObjectType",
    "name": "OpenIdConnectConfig",
    "properties": {
      "authorizationEndpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The endpoint to be used to make an authorization request."
      },
      "tokenEndpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The endpoint to be used to request a token."
      },
      "issuer": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The endpoint that issues the token."
      },
      "certificationUri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The endpoint that provides the keys necessary to validate the token."
      },
      "wellKnownOpenIdConfiguration": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The endpoint that contains all the configuration endpoints for the provider."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "OpenIdConnectLogin",
    "properties": {
      "nameClaimType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the claim that contains the users name."
      },
      "scopes": {
        "type": {
          "$ref": "#/50"
        },
        "flags": 0,
        "description": "A list of the scopes that should be requested while authenticating."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "IdentityProvidersCustomOpenIdConnectProviders",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/44"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Login",
    "properties": {
      "routes": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 0,
        "description": "The routes that specify the endpoints used for login and logout requests."
      },
      "tokenStore": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 0,
        "description": "The configuration settings of the token store."
      },
      "preserveUrlFragmentsForLogins": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "<code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>."
      },
      "allowedExternalRedirectUrls": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0,
        "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\nThis is an advanced setting typically only needed by Windows Store application backends.\nNote that URLs within the current domain are always implicitly allowed."
      },
      "cookieExpiration": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 0,
        "description": "The configuration settings of the session cookie's expiration."
      },
      "nonce": {
        "type": {
          "$ref": "#/62"
        },
        "flags": 0,
        "description": "The configuration settings of the nonce used in the login flow."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LoginRoutes",
    "properties": {
      "logoutEndpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The endpoint at which a logout request should be made."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TokenStore",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>."
      },
      "tokenRefreshExtensionHours": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "The number of hours after session token expiration that a session token can be used to\ncall the token refresh API. The default is 72 hours."
      },
      "azureBlobStorage": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 0,
        "description": "The configuration settings of the storage of the tokens if blob storage is used."
      }
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ObjectType",
    "name": "BlobStorageTokenStore",
    "properties": {
      "sasUrlSettingName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the app secrets containing the SAS URL of the blob storage containing the tokens."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CookieExpiration",
    "properties": {
      "convention": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 0,
        "description": "The convention used when determining the session cookie's expiration."
      },
      "timeToExpiration": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The time after the request is made when the session cookie should expire."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "FixedTime"
  },
  {
    "$type": "StringLiteralType",
    "value": "IdentityProviderDerived"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/59"
      },
      {
        "$ref": "#/60"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Nonce",
    "properties": {
      "validateNonce": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "<code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>."
      },
      "nonceExpirationInterval": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The time after the request is made when the nonce should expire."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HttpSettings",
    "properties": {
      "requireHttps": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "<code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>."
      },
      "routes": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "The configuration settings of the paths HTTP requests."
      },
      "forwardProxy": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 0,
        "description": "The configuration settings of a forward proxy used to make the requests."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HttpSettingsRoutes",
    "properties": {
      "apiPrefix": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The prefix that should precede all the authentication/authorization paths."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ForwardProxy",
    "properties": {
      "convention": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 0,
        "description": "The convention used to determine the url of the request made."
      },
      "customHostHeaderName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the header containing the host of the request."
      },
      "customProtoHeaderName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the header containing the scheme of the request."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NoProxy"
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard"
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/66"
      },
      {
        "$ref": "#/67"
      },
      {
        "$ref": "#/68"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "EncryptionSettings",
    "properties": {
      "containerAppAuthEncryptionSecretName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The secret name which is referenced for EncryptionKey."
      },
      "containerAppAuthSigningSecretName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The secret name which is referenced for SigningKey."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/81"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/72"
      },
      {
        "$ref": "#/73"
      },
      {
        "$ref": "#/74"
      },
      {
        "$ref": "#/75"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/77"
      },
      {
        "$ref": "#/78"
      },
      {
        "$ref": "#/79"
      },
      {
        "$ref": "#/80"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/containerApps/authConfigs@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/3"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/connectedEnvironments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/connectedEnvironments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/83"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/84"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 0,
        "description": "The complex type of the extended location."
      },
      "properties": {
        "type": {
          "$ref": "#/89"
        },
        "flags": 0,
        "description": "ConnectedEnvironment resource specific properties"
      },
      "tags": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ExtendedLocation",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the extended location."
      },
      "type": {
        "type": {
          "$ref": "#/88"
        },
        "flags": 0,
        "description": "The type of the extended location."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CustomLocation"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/87"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ConnectedEnvironmentProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 2,
        "description": "Provisioning state of the Kubernetes Environment."
      },
      "deploymentErrors": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Any errors that occurred during deployment or deployment validation"
      },
      "defaultDomain": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Default Domain Name for the cluster"
      },
      "staticIp": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Static IP of the connectedEnvironment"
      },
      "daprAIConnectionString": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 0,
        "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry"
      },
      "customDomainConfiguration": {
        "type": {
          "$ref": "#/100"
        },
        "flags": 0,
        "description": "Custom domain configuration for the environment"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Waiting"
  },
  {
    "$type": "StringLiteralType",
    "value": "InitializationInProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "InfrastructureSetupInProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "InfrastructureSetupComplete"
  },
  {
    "$type": "StringLiteralType",
    "value": "ScheduledForDelete"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/90"
      },
      {
        "$ref": "#/91"
      },
      {
        "$ref": "#/92"
      },
      {
        "$ref": "#/93"
      },
      {
        "$ref": "#/94"
      },
      {
        "$ref": "#/95"
      },
      {
        "$ref": "#/96"
      },
      {
        "$ref": "#/97"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringType",
    "sensitive": true
  },
  {
    "$type": "ObjectType",
    "name": "CustomDomainConfiguration",
    "properties": {
      "customDomainVerificationId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Id used to verify domain name ownership"
      },
      "dnsSuffix": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Dns suffix for the environment domain"
      },
      "certificateKeyVaultProperties": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 0,
        "description": "Certificate stored in Azure Key Vault."
      },
      "certificateValue": {
        "type": {
          "$ref": "#/102"
        },
        "flags": 0,
        "description": "PFX or PEM blob"
      },
      "certificatePassword": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 0,
        "description": "Certificate password"
      },
      "expirationDate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Certificate expiration date."
      },
      "thumbprint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Certificate thumbprint."
      },
      "subjectName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Subject name of the certificate."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CertificateKeyVaultProperties",
    "properties": {
      "identity": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity."
      },
      "keyVaultUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "URL pointing to the Azure Key Vault secret that holds the certificate."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/connectedEnvironments@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/85"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/connectedEnvironments/certificates"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/connectedEnvironments/certificates",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/105"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/106"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/108"
        },
        "flags": 0,
        "description": "Certificate resource specific properties"
      },
      "tags": {
        "type": {
          "$ref": "#/116"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CertificateProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/114"
        },
        "flags": 2,
        "description": "Provisioning state of the certificate."
      },
      "certificateKeyVaultProperties": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 0,
        "description": "Properties for a certificate stored in a Key Vault."
      },
      "password": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 4,
        "description": "Certificate password."
      },
      "subjectName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Subject name of the certificate."
      },
      "subjectAlternativeNames": {
        "type": {
          "$ref": "#/115"
        },
        "flags": 2,
        "description": "Subject alternative names the certificate applies to."
      },
      "value": {
        "type": {
          "$ref": "#/102"
        },
        "flags": 4,
        "description": "PFX or PEM blob"
      },
      "issuer": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Certificate issuer."
      },
      "issueDate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Certificate issue Date."
      },
      "expirationDate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Certificate expiration date."
      },
      "thumbprint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Certificate thumbprint."
      },
      "valid": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "Is the certificate valid?."
      },
      "publicKeyHash": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Public key hash."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "DeleteFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/109"
      },
      {
        "$ref": "#/110"
      },
      {
        "$ref": "#/111"
      },
      {
        "$ref": "#/112"
      },
      {
        "$ref": "#/113"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/connectedEnvironments/certificates@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/107"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/connectedEnvironments/daprComponents"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/connectedEnvironments/daprComponents",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/118"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/119"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/121"
        },
        "flags": 0,
        "description": "Dapr Component resource specific properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DaprComponentProperties",
    "properties": {
      "componentType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Component type"
      },
      "version": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Component version"
      },
      "ignoreErrors": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Boolean describing if the component errors are ignores"
      },
      "initTimeout": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Initialization timeout"
      },
      "secrets": {
        "type": {
          "$ref": "#/123"
        },
        "flags": 0,
        "description": "Collection of secrets used by a Dapr component"
      },
      "secretStoreComponent": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of a Dapr component to retrieve component secrets from"
      },
      "metadata": {
        "type": {
          "$ref": "#/125"
        },
        "flags": 0,
        "description": "Component metadata"
      },
      "scopes": {
        "type": {
          "$ref": "#/126"
        },
        "flags": 0,
        "description": "Names of container apps that can use this Dapr component"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Secret",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Secret Name."
      },
      "value": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 4,
        "description": "Secret Value."
      },
      "identity": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity."
      },
      "keyVaultUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure Key Vault URL pointing to the secret referenced by the container app."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/122"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DaprMetadata",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata property name."
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata property value."
      },
      "secretRef": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the Dapr Component secret from which to pull the metadata property value."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/124"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/connectedEnvironments/daprComponents@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/120"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/connectedEnvironments/storages"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/connectedEnvironments/storages",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/128"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/129"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/131"
        },
        "flags": 0,
        "description": "Storage properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ConnectedEnvironmentStorageProperties",
    "properties": {
      "azureFile": {
        "type": {
          "$ref": "#/132"
        },
        "flags": 0,
        "description": "Azure file properties"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureFileProperties",
    "properties": {
      "accountName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Storage account name for azure file."
      },
      "accountKey": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 0,
        "description": "Storage account key for azure file."
      },
      "accessMode": {
        "type": {
          "$ref": "#/135"
        },
        "flags": 0,
        "description": "Access mode for storage"
      },
      "shareName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure file share name."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnly"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWrite"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/133"
      },
      {
        "$ref": "#/134"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/connectedEnvironments/storages@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/130"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/containerApps"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/containerApps",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/137"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/138"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 0,
        "description": "The complex type of the extended location."
      },
      "identity": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 0,
        "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code."
      },
      "managedBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
      },
      "properties": {
        "type": {
          "$ref": "#/149"
        },
        "flags": 0,
        "description": "ContainerApp resource specific properties"
      },
      "tags": {
        "type": {
          "$ref": "#/277"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedServiceIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/141"
        },
        "flags": 2,
        "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "tenantId": {
        "type": {
          "$ref": "#/141"
        },
        "flags": 2,
        "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "type": {
        "type": {
          "$ref": "#/146"
        },
        "flags": 1,
        "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."
      },
      "userAssignedIdentities": {
        "type": {
          "$ref": "#/148"
        },
        "flags": 0,
        "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 36,
    "maxLength": 36,
    "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned,UserAssigned"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/142"
      },
      {
        "$ref": "#/143"
      },
      {
        "$ref": "#/144"
      },
      {
        "$ref": "#/145"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/141"
        },
        "flags": 2,
        "description": "The principal ID of the assigned identity."
      },
      "clientId": {
        "type": {
          "$ref": "#/141"
        },
        "flags": 2,
        "description": "The client ID of the assigned identity."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentities",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/147"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerAppProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/155"
        },
        "flags": 2,
        "description": "Provisioning state of the Container App."
      },
      "runningStatus": {
        "type": {
          "$ref": "#/161"
        },
        "flags": 2,
        "description": "Running status of the Container App."
      },
      "managedEnvironmentId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Deprecated. Resource ID of the Container App's environment."
      },
      "environmentId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Resource ID of environment."
      },
      "workloadProfileName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Workload profile name to pin for container app execution."
      },
      "latestRevisionName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Name of the latest revision of the Container App."
      },
      "latestReadyRevisionName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Name of the latest ready revision of the Container App."
      },
      "latestRevisionFqdn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Fully Qualified Domain Name of the latest revision of the Container App."
      },
      "customDomainVerificationId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Id used to verify domain name ownership"
      },
      "configuration": {
        "type": {
          "$ref": "#/162"
        },
        "flags": 0,
        "description": "Non versioned Container App configuration properties."
      },
      "template": {
        "type": {
          "$ref": "#/221"
        },
        "flags": 0,
        "description": "Container App versioned application definition."
      },
      "outboundIpAddresses": {
        "type": {
          "$ref": "#/276"
        },
        "flags": 2,
        "description": "Outbound IP Addresses for container app."
      },
      "eventStreamEndpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The endpoint of the eventstream of the container app."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/150"
      },
      {
        "$ref": "#/151"
      },
      {
        "$ref": "#/152"
      },
      {
        "$ref": "#/153"
      },
      {
        "$ref": "#/154"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Progressing"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopped"
  },
  {
    "$type": "StringLiteralType",
    "value": "Suspended"
  },
  {
    "$type": "StringLiteralType",
    "value": "Ready"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/156"
      },
      {
        "$ref": "#/157"
      },
      {
        "$ref": "#/158"
      },
      {
        "$ref": "#/159"
      },
      {
        "$ref": "#/160"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Configuration",
    "properties": {
      "secrets": {
        "type": {
          "$ref": "#/163"
        },
        "flags": 0,
        "description": "Collection of secrets used by a Container app"
      },
      "activeRevisionsMode": {
        "type": {
          "$ref": "#/166"
        },
        "flags": 0,
        "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>"
      },
      "ingress": {
        "type": {
          "$ref": "#/167"
        },
        "flags": 0,
        "description": "Ingress configurations."
      },
      "registries": {
        "type": {
          "$ref": "#/201"
        },
        "flags": 0,
        "description": "Collection of private container registry credentials for containers used by the Container app"
      },
      "dapr": {
        "type": {
          "$ref": "#/202"
        },
        "flags": 0,
        "description": "Dapr configuration for the Container App."
      },
      "runtime": {
        "type": {
          "$ref": "#/211"
        },
        "flags": 0,
        "description": "App runtime configuration for the Container App."
      },
      "maxInactiveRevisions": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Optional. Max inactive revisions a Container App can have."
      },
      "service": {
        "type": {
          "$ref": "#/213"
        },
        "flags": 0,
        "description": "Container App to be a dev Container App Service"
      },
      "identitySettings": {
        "type": {
          "$ref": "#/220"
        },
        "flags": 0,
        "description": "Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/122"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Multiple"
  },
  {
    "$type": "StringLiteralType",
    "value": "Single"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/164"
      },
      {
        "$ref": "#/165"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Ingress",
    "properties": {
      "fqdn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Hostname."
      },
      "external": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Bool indicating if app exposes an external http endpoint"
      },
      "targetPort": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Target Port in containers for traffic from ingress"
      },
      "exposedPort": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Exposed Port in containers for TCP traffic from ingress"
      },
      "transport": {
        "type": {
          "$ref": "#/172"
        },
        "flags": 0,
        "description": "Ingress transport protocol"
      },
      "traffic": {
        "type": {
          "$ref": "#/174"
        },
        "flags": 0,
        "description": "Traffic weights for app's revisions"
      },
      "customDomains": {
        "type": {
          "$ref": "#/179"
        },
        "flags": 0,
        "description": "custom domain bindings for Container Apps' hostnames."
      },
      "allowInsecure": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections"
      },
      "ipSecurityRestrictions": {
        "type": {
          "$ref": "#/184"
        },
        "flags": 0,
        "description": "Rules to restrict incoming IP address."
      },
      "stickySessions": {
        "type": {
          "$ref": "#/185"
        },
        "flags": 0,
        "description": "Sticky Sessions for Single Revision Mode"
      },
      "clientCertificateMode": {
        "type": {
          "$ref": "#/192"
        },
        "flags": 0,
        "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate."
      },
      "corsPolicy": {
        "type": {
          "$ref": "#/193"
        },
        "flags": 0,
        "description": "CORS policy for container app"
      },
      "additionalPortMappings": {
        "type": {
          "$ref": "#/199"
        },
        "flags": 0,
        "description": "Settings to expose additional ports on container app"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "auto"
  },
  {
    "$type": "StringLiteralType",
    "value": "http"
  },
  {
    "$type": "StringLiteralType",
    "value": "http2"
  },
  {
    "$type": "StringLiteralType",
    "value": "tcp"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/168"
      },
      {
        "$ref": "#/169"
      },
      {
        "$ref": "#/170"
      },
      {
        "$ref": "#/171"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrafficWeight",
    "properties": {
      "revisionName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of a revision"
      },
      "weight": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Traffic weight assigned to a revision"
      },
      "latestRevision": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Indicates that the traffic weight belongs to a latest stable revision"
      },
      "label": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Associates a traffic label with a revision"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/173"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomDomain",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Hostname."
      },
      "bindingType": {
        "type": {
          "$ref": "#/178"
        },
        "flags": 0,
        "description": "Custom Domain binding type."
      },
      "certificateId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "SniEnabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/176"
      },
      {
        "$ref": "#/177"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/175"
    }
  },
  {
    "$type": "ObjectType",
    "name": "IpSecurityRestrictionRule",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name for the IP restriction rule."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field."
      },
      "ipAddressRange": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "CIDR notation to match incoming IP address"
      },
      "action": {
        "type": {
          "$ref": "#/183"
        },
        "flags": 1,
        "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Allow"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deny"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/181"
      },
      {
        "$ref": "#/182"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/180"
    }
  },
  {
    "$type": "ObjectType",
    "name": "IngressStickySessions",
    "properties": {
      "affinity": {
        "type": {
          "$ref": "#/188"
        },
        "flags": 0,
        "description": "Sticky Session Affinity"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "sticky"
  },
  {
    "$type": "StringLiteralType",
    "value": "none"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/186"
      },
      {
        "$ref": "#/187"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "ignore"
  },
  {
    "$type": "StringLiteralType",
    "value": "accept"
  },
  {
    "$type": "StringLiteralType",
    "value": "require"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/189"
      },
      {
        "$ref": "#/190"
      },
      {
        "$ref": "#/191"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CorsPolicy",
    "properties": {
      "allowedOrigins": {
        "type": {
          "$ref": "#/194"
        },
        "flags": 1,
        "description": "Specifies the content for the access-control-allow-origins header"
      },
      "allowedMethods": {
        "type": {
          "$ref": "#/195"
        },
        "flags": 0,
        "description": "Specifies the content for the access-control-allow-methods header"
      },
      "allowedHeaders": {
        "type": {
          "$ref": "#/196"
        },
        "flags": 0,
        "description": "Specifies the content for the access-control-allow-headers header"
      },
      "exposeHeaders": {
        "type": {
          "$ref": "#/197"
        },
        "flags": 0,
        "description": "Specifies the content for the access-control-expose-headers header"
      },
      "maxAge": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Specifies the content for the access-control-max-age header"
      },
      "allowCredentials": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Specifies whether the resource allows credentials"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "IngressPortMapping",
    "properties": {
      "external": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 1,
        "description": "Specifies whether the app port is accessible outside of the environment"
      },
      "targetPort": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 1,
        "description": "Specifies the port user's container listens on"
      },
      "exposedPort": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/198"
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryCredentials",
    "properties": {
      "server": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Container Registry Server"
      },
      "username": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Container Registry Username"
      },
      "passwordSecretRef": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the Secret that contains the registry login password"
      },
      "identity": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/200"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Dapr",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Boolean indicating if the Dapr side car is enabled"
      },
      "appId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Dapr application identifier"
      },
      "appProtocol": {
        "type": {
          "$ref": "#/205"
        },
        "flags": 0,
        "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http"
      },
      "appPort": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Tells Dapr which port your application is listening on"
      },
      "httpReadBufferSize": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB."
      },
      "httpMaxRequestSize": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB."
      },
      "logLevel": {
        "type": {
          "$ref": "#/210"
        },
        "flags": 0,
        "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info."
      },
      "enableApiLogging": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Enables API logging for the Dapr sidecar"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "http"
  },
  {
    "$type": "StringLiteralType",
    "value": "grpc"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/203"
      },
      {
        "$ref": "#/204"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "info"
  },
  {
    "$type": "StringLiteralType",
    "value": "debug"
  },
  {
    "$type": "StringLiteralType",
    "value": "warn"
  },
  {
    "$type": "StringLiteralType",
    "value": "error"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/206"
      },
      {
        "$ref": "#/207"
      },
      {
        "$ref": "#/208"
      },
      {
        "$ref": "#/209"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Runtime",
    "properties": {
      "java": {
        "type": {
          "$ref": "#/212"
        },
        "flags": 0,
        "description": "Java app configuration"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RuntimeJava",
    "properties": {
      "enableMetrics": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Enable jmx core metrics for the java app"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Service",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Dev ContainerApp service type"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IdentitySettings",
    "properties": {
      "identity": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity."
      },
      "lifecycle": {
        "type": {
          "$ref": "#/219"
        },
        "flags": 0,
        "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Init"
  },
  {
    "$type": "StringLiteralType",
    "value": "Main"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "All"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/215"
      },
      {
        "$ref": "#/216"
      },
      {
        "$ref": "#/217"
      },
      {
        "$ref": "#/218"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/214"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Template",
    "properties": {
      "revisionSuffix": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "User friendly suffix that is appended to the revision name"
      },
      "terminationGracePeriodSeconds": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds."
      },
      "initContainers": {
        "type": {
          "$ref": "#/230"
        },
        "flags": 0,
        "description": "List of specialized containers that run before app containers."
      },
      "containers": {
        "type": {
          "$ref": "#/249"
        },
        "flags": 0,
        "description": "List of container definitions for the Container App."
      },
      "scale": {
        "type": {
          "$ref": "#/250"
        },
        "flags": 0,
        "description": "Scaling properties for the Container App."
      },
      "volumes": {
        "type": {
          "$ref": "#/273"
        },
        "flags": 0,
        "description": "List of volume definitions for the Container App."
      },
      "serviceBinds": {
        "type": {
          "$ref": "#/275"
        },
        "flags": 0,
        "description": "List of container app services bound to the app"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "InitContainer",
    "properties": {
      "image": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Container image tag."
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Custom container name."
      },
      "command": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 0,
        "description": "Container start command."
      },
      "args": {
        "type": {
          "$ref": "#/224"
        },
        "flags": 0,
        "description": "Container start command arguments."
      },
      "env": {
        "type": {
          "$ref": "#/226"
        },
        "flags": 0,
        "description": "Container environment variables."
      },
      "resources": {
        "type": {
          "$ref": "#/227"
        },
        "flags": 0,
        "description": "Container resource requirements."
      },
      "volumeMounts": {
        "type": {
          "$ref": "#/229"
        },
        "flags": 0,
        "description": "Container volume mounts."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentVar",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Environment variable name."
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Non-secret environment variable value."
      },
      "secretRef": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the Container App secret from which to pull the environment variable value."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/225"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerResources",
    "properties": {
      "cpu": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Required CPU in cores, e.g. 0.5"
      },
      "memory": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Required memory, e.g. \"250Mb\""
      },
      "ephemeralStorage": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Ephemeral Storage, e.g. \"1Gi\""
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VolumeMount",
    "properties": {
      "volumeName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "This must match the Name of a Volume."
      },
      "mountPath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Path within the container at which the volume should be mounted.Must not contain ':'."
      },
      "subPath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/228"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/222"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Container",
    "properties": {
      "probes": {
        "type": {
          "$ref": "#/244"
        },
        "flags": 0,
        "description": "List of probes for the container."
      },
      "image": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Container image tag."
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Custom container name."
      },
      "command": {
        "type": {
          "$ref": "#/245"
        },
        "flags": 0,
        "description": "Container start command."
      },
      "args": {
        "type": {
          "$ref": "#/246"
        },
        "flags": 0,
        "description": "Container start command arguments."
      },
      "env": {
        "type": {
          "$ref": "#/247"
        },
        "flags": 0,
        "description": "Container environment variables."
      },
      "resources": {
        "type": {
          "$ref": "#/227"
        },
        "flags": 0,
        "description": "Container resource requirements."
      },
      "volumeMounts": {
        "type": {
          "$ref": "#/248"
        },
        "flags": 0,
        "description": "Container volume mounts."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerAppProbe",
    "properties": {
      "failureThreshold": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10."
      },
      "httpGet": {
        "type": {
          "$ref": "#/233"
        },
        "flags": 0,
        "description": "HTTPGet specifies the http request to perform."
      },
      "initialDelaySeconds": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60."
      },
      "periodSeconds": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240."
      },
      "successThreshold": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10."
      },
      "tcpSocket": {
        "type": {
          "$ref": "#/239"
        },
        "flags": 0,
        "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported."
      },
      "terminationGracePeriodSeconds": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)"
      },
      "timeoutSeconds": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240."
      },
      "type": {
        "type": {
          "$ref": "#/243"
        },
        "flags": 0,
        "description": "The type of probe."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerAppProbeHttpGet",
    "properties": {
      "host": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
      },
      "httpHeaders": {
        "type": {
          "$ref": "#/235"
        },
        "flags": 0,
        "description": "Custom headers to set in the request. HTTP allows repeated headers."
      },
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Path to access on the HTTP server."
      },
      "port": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 1,
        "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
      },
      "scheme": {
        "type": {
          "$ref": "#/238"
        },
        "flags": 0,
        "description": "Scheme to use for connecting to the host. Defaults to HTTP."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerAppProbeHttpGetHttpHeadersItem",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The header field name"
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The header field value"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/234"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "HTTP"
  },
  {
    "$type": "StringLiteralType",
    "value": "HTTPS"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/236"
      },
      {
        "$ref": "#/237"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ContainerAppProbeTcpSocket",
    "properties": {
      "host": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Optional: Host name to connect to, defaults to the pod IP."
      },
      "port": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 1,
        "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Liveness"
  },
  {
    "$type": "StringLiteralType",
    "value": "Readiness"
  },
  {
    "$type": "StringLiteralType",
    "value": "Startup"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/240"
      },
      {
        "$ref": "#/241"
      },
      {
        "$ref": "#/242"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/232"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/225"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/228"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/231"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Scale",
    "properties": {
      "minReplicas": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Optional. Minimum number of container replicas."
      },
      "maxReplicas": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set."
      },
      "cooldownPeriod": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set."
      },
      "pollingInterval": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set."
      },
      "rules": {
        "type": {
          "$ref": "#/264"
        },
        "flags": 0,
        "description": "Scaling rules."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScaleRule",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Scale Rule Name"
      },
      "azureQueue": {
        "type": {
          "$ref": "#/252"
        },
        "flags": 0,
        "description": "Azure Queue based scaling."
      },
      "custom": {
        "type": {
          "$ref": "#/255"
        },
        "flags": 0,
        "description": "Custom scale rule."
      },
      "http": {
        "type": {
          "$ref": "#/258"
        },
        "flags": 0,
        "description": "HTTP requests based scaling."
      },
      "tcp": {
        "type": {
          "$ref": "#/261"
        },
        "flags": 0,
        "description": "Tcp requests based scaling."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "QueueScaleRule",
    "properties": {
      "accountName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Storage account name. required if using managed identity to authenticate"
      },
      "queueName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Queue name."
      },
      "queueLength": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Queue length."
      },
      "auth": {
        "type": {
          "$ref": "#/254"
        },
        "flags": 0,
        "description": "Authentication secrets for the queue scale rule."
      },
      "identity": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScaleRuleAuth",
    "properties": {
      "secretRef": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the secret from which to pull the auth params."
      },
      "triggerParameter": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Trigger Parameter that uses the secret"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/253"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomScaleRule",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc."
      },
      "metadata": {
        "type": {
          "$ref": "#/256"
        },
        "flags": 0,
        "description": "Metadata properties to describe custom scale rule."
      },
      "auth": {
        "type": {
          "$ref": "#/257"
        },
        "flags": 0,
        "description": "Authentication secrets for the custom scale rule."
      },
      "identity": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomScaleRuleMetadata",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/253"
    }
  },
  {
    "$type": "ObjectType",
    "name": "HttpScaleRule",
    "properties": {
      "metadata": {
        "type": {
          "$ref": "#/259"
        },
        "flags": 0,
        "description": "Metadata properties to describe http scale rule."
      },
      "auth": {
        "type": {
          "$ref": "#/260"
        },
        "flags": 0,
        "description": "Authentication secrets for the custom scale rule."
      },
      "identity": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HttpScaleRuleMetadata",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/253"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TcpScaleRule",
    "properties": {
      "metadata": {
        "type": {
          "$ref": "#/262"
        },
        "flags": 0,
        "description": "Metadata properties to describe tcp scale rule."
      },
      "auth": {
        "type": {
          "$ref": "#/263"
        },
        "flags": 0,
        "description": "Authentication secrets for the tcp scale rule."
      },
      "identity": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TcpScaleRuleMetadata",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/253"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/251"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Volume",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Volume name."
      },
      "storageType": {
        "type": {
          "$ref": "#/270"
        },
        "flags": 0,
        "description": "Storage type for the volume. If not provided, use EmptyDir."
      },
      "storageName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of storage resource. No need to provide for EmptyDir and Secret."
      },
      "secrets": {
        "type": {
          "$ref": "#/272"
        },
        "flags": 0,
        "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume."
      },
      "mountOptions": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureFile"
  },
  {
    "$type": "StringLiteralType",
    "value": "EmptyDir"
  },
  {
    "$type": "StringLiteralType",
    "value": "Secret"
  },
  {
    "$type": "StringLiteralType",
    "value": "NfsAzureFile"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/266"
      },
      {
        "$ref": "#/267"
      },
      {
        "$ref": "#/268"
      },
      {
        "$ref": "#/269"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SecretVolumeItem",
    "properties": {
      "secretRef": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the Container App secret from which to pull the secret value."
      },
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/271"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/265"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ServiceBind",
    "properties": {
      "serviceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Resource id of the target service"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the service bind"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/274"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/containerApps@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/139"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "pattern": "^[-\\w\\._\\(\\)]+$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/jobs"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/jobs",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/279"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/280"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/281"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 0,
        "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code."
      },
      "properties": {
        "type": {
          "$ref": "#/283"
        },
        "flags": 0,
        "description": "Container Apps Job resource specific properties."
      },
      "tags": {
        "type": {
          "$ref": "#/310"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/289"
        },
        "flags": 2,
        "description": "Provisioning state of the Container Apps Job."
      },
      "environmentId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Resource ID of environment."
      },
      "workloadProfileName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Workload profile name to pin for container apps job execution."
      },
      "configuration": {
        "type": {
          "$ref": "#/290"
        },
        "flags": 0,
        "description": "Container Apps Job configuration properties."
      },
      "template": {
        "type": {
          "$ref": "#/305"
        },
        "flags": 0,
        "description": "Container Apps job definition."
      },
      "outboundIpAddresses": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 2,
        "description": "Outbound IP Addresses of a container apps job."
      },
      "eventStreamEndpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The endpoint of the eventstream of the container apps job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/284"
      },
      {
        "$ref": "#/285"
      },
      {
        "$ref": "#/286"
      },
      {
        "$ref": "#/287"
      },
      {
        "$ref": "#/288"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "JobConfiguration",
    "properties": {
      "secrets": {
        "type": {
          "$ref": "#/291"
        },
        "flags": 0,
        "description": "Collection of secrets used by a Container Apps Job"
      },
      "triggerType": {
        "type": {
          "$ref": "#/295"
        },
        "flags": 1,
        "description": "Trigger type of the job"
      },
      "replicaTimeout": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 1,
        "description": "Maximum number of seconds a replica is allowed to run."
      },
      "replicaRetryLimit": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Maximum number of retries before failing the job."
      },
      "manualTriggerConfig": {
        "type": {
          "$ref": "#/296"
        },
        "flags": 0,
        "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default"
      },
      "scheduleTriggerConfig": {
        "type": {
          "$ref": "#/297"
        },
        "flags": 0,
        "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default"
      },
      "eventTriggerConfig": {
        "type": {
          "$ref": "#/298"
        },
        "flags": 0,
        "description": "Trigger configuration of an event driven job."
      },
      "registries": {
        "type": {
          "$ref": "#/303"
        },
        "flags": 0,
        "description": "Collection of private container registry credentials used by a Container apps job"
      },
      "identitySettings": {
        "type": {
          "$ref": "#/304"
        },
        "flags": 0,
        "description": "Optional settings for Managed Identities that are assigned to the Container App Job. If a Managed Identity is not specified here, default settings will be used."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/122"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Schedule"
  },
  {
    "$type": "StringLiteralType",
    "value": "Event"
  },
  {
    "$type": "StringLiteralType",
    "value": "Manual"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/292"
      },
      {
        "$ref": "#/293"
      },
      {
        "$ref": "#/294"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "JobConfigurationManualTriggerConfig",
    "properties": {
      "replicaCompletionCount": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Minimum number of successful replica completions before overall job completion."
      },
      "parallelism": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Number of parallel replicas of a job that can run at a given time."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobConfigurationScheduleTriggerConfig",
    "properties": {
      "replicaCompletionCount": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Minimum number of successful replica completions before overall job completion."
      },
      "cronExpression": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Cron formatted repeating schedule (\"* * * * *\") of a Cron Job."
      },
      "parallelism": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Number of parallel replicas of a job that can run at a given time."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobConfigurationEventTriggerConfig",
    "properties": {
      "replicaCompletionCount": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Minimum number of successful replica completions before overall job completion."
      },
      "parallelism": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Number of parallel replicas of a job that can run at a given time."
      },
      "scale": {
        "type": {
          "$ref": "#/299"
        },
        "flags": 0,
        "description": "Scaling configurations for event driven jobs."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobScale",
    "properties": {
      "pollingInterval": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Interval to check each event source in seconds. Defaults to 30s"
      },
      "minExecutions": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Minimum number of job executions that are created for a trigger, default 0"
      },
      "maxExecutions": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Maximum number of job executions that are created for a trigger, default 100."
      },
      "rules": {
        "type": {
          "$ref": "#/302"
        },
        "flags": 0,
        "description": "Scaling rules."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobScaleRule",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Scale Rule Name"
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Type of the scale rule\neg: azure-servicebus, redis etc."
      },
      "metadata": {
        "type": {
          "$ref": "#/102"
        },
        "flags": 0,
        "description": "Metadata properties to describe the scale rule."
      },
      "auth": {
        "type": {
          "$ref": "#/301"
        },
        "flags": 0,
        "description": "Authentication secrets for the scale rule."
      },
      "identity": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/253"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/300"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/200"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/214"
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobTemplate",
    "properties": {
      "initContainers": {
        "type": {
          "$ref": "#/306"
        },
        "flags": 0,
        "description": "List of specialized containers that run before app containers."
      },
      "containers": {
        "type": {
          "$ref": "#/307"
        },
        "flags": 0,
        "description": "List of container definitions for the Container App."
      },
      "volumes": {
        "type": {
          "$ref": "#/308"
        },
        "flags": 0,
        "description": "List of volume definitions for the Container App."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/222"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/231"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/265"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/jobs@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/282"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/managedEnvironments/javaComponents"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/managedEnvironments/javaComponents",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/279"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/312"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/313"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 0,
        "description": "Java Component resource specific properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "JavaComponentProperties",
    "discriminator": "componentType",
    "baseProperties": {
      "provisioningState": {
        "type": {
          "$ref": "#/321"
        },
        "flags": 2,
        "description": "Provisioning state of the Java Component."
      },
      "configurations": {
        "type": {
          "$ref": "#/323"
        },
        "flags": 0,
        "description": "List of Java Components configuration properties"
      },
      "scale": {
        "type": {
          "$ref": "#/324"
        },
        "flags": 0,
        "description": "Java component scaling configurations"
      },
      "serviceBinds": {
        "type": {
          "$ref": "#/326"
        },
        "flags": 0,
        "description": "List of Java Components that are bound to the Java component"
      }
    },
    "elements": {
      "SpringBootAdmin": {
        "$ref": "#/327"
      },
      "SpringCloudConfig": {
        "$ref": "#/330"
      },
      "SpringCloudEureka": {
        "$ref": "#/332"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/316"
      },
      {
        "$ref": "#/317"
      },
      {
        "$ref": "#/318"
      },
      {
        "$ref": "#/319"
      },
      {
        "$ref": "#/320"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "JavaComponentConfigurationProperty",
    "properties": {
      "propertyName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the property"
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The value of the property"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/322"
    }
  },
  {
    "$type": "ObjectType",
    "name": "JavaComponentPropertiesScale",
    "properties": {
      "minReplicas": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Optional. Minimum number of Java component replicas. Defaults to 1 if not set"
      },
      "maxReplicas": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Optional. Maximum number of Java component replicas"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JavaComponentServiceBind",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the service bind"
      },
      "serviceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Resource id of the target service"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/325"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SpringBootAdminComponent",
    "properties": {
      "ingress": {
        "type": {
          "$ref": "#/328"
        },
        "flags": 0,
        "description": "Java Component Ingress configurations."
      },
      "componentType": {
        "type": {
          "$ref": "#/329"
        },
        "flags": 1,
        "description": "Type of the Java Component."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JavaComponentIngress",
    "properties": {
      "fqdn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Hostname of the Java Component endpoint"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SpringBootAdmin"
  },
  {
    "$type": "ObjectType",
    "name": "SpringCloudConfigComponent",
    "properties": {
      "componentType": {
        "type": {
          "$ref": "#/331"
        },
        "flags": 1,
        "description": "Type of the Java Component."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SpringCloudConfig"
  },
  {
    "$type": "ObjectType",
    "name": "SpringCloudEurekaComponent",
    "properties": {
      "ingress": {
        "type": {
          "$ref": "#/328"
        },
        "flags": 0,
        "description": "Java Component Ingress configurations."
      },
      "componentType": {
        "type": {
          "$ref": "#/333"
        },
        "flags": 1,
        "description": "Type of the Java Component."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SpringCloudEureka"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/managedEnvironments/javaComponents@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/314"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/managedEnvironments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/managedEnvironments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/335"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/336"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Kind of the Environment."
      },
      "identity": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 0,
        "description": "Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or credentials in code."
      },
      "properties": {
        "type": {
          "$ref": "#/338"
        },
        "flags": 0,
        "description": "Managed environment resource specific properties"
      },
      "tags": {
        "type": {
          "$ref": "#/361"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedEnvironmentProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/349"
        },
        "flags": 2,
        "description": "Provisioning state of the Environment."
      },
      "daprAIInstrumentationKey": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 0,
        "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry"
      },
      "daprAIConnectionString": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 0,
        "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry"
      },
      "vnetConfiguration": {
        "type": {
          "$ref": "#/350"
        },
        "flags": 0,
        "description": "Vnet configuration for the environment"
      },
      "deploymentErrors": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Any errors that occurred during deployment or deployment validation"
      },
      "defaultDomain": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Default Domain Name for the cluster"
      },
      "staticIp": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Static IP of the Environment"
      },
      "appLogsConfiguration": {
        "type": {
          "$ref": "#/351"
        },
        "flags": 0,
        "description": "Cluster configuration which enables the log daemon to export app logs to configured destination."
      },
      "zoneRedundant": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Whether or not this Managed Environment is zone-redundant."
      },
      "customDomainConfiguration": {
        "type": {
          "$ref": "#/100"
        },
        "flags": 0,
        "description": "Custom domain configuration for the environment"
      },
      "eventStreamEndpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The endpoint of the eventstream of the Environment."
      },
      "workloadProfiles": {
        "type": {
          "$ref": "#/354"
        },
        "flags": 0,
        "description": "Workload profiles configured for the Managed Environment."
      },
      "kedaConfiguration": {
        "type": {
          "$ref": "#/355"
        },
        "flags": 0,
        "description": "The configuration of Keda component."
      },
      "daprConfiguration": {
        "type": {
          "$ref": "#/356"
        },
        "flags": 0,
        "description": "The configuration of Dapr component."
      },
      "infrastructureResourceGroup": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet."
      },
      "peerAuthentication": {
        "type": {
          "$ref": "#/357"
        },
        "flags": 0,
        "description": "Peer authentication settings for the Managed Environment"
      },
      "peerTrafficConfiguration": {
        "type": {
          "$ref": "#/359"
        },
        "flags": 0,
        "description": "Peer traffic settings for the Managed Environment"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Waiting"
  },
  {
    "$type": "StringLiteralType",
    "value": "InitializationInProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "InfrastructureSetupInProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "InfrastructureSetupComplete"
  },
  {
    "$type": "StringLiteralType",
    "value": "ScheduledForDelete"
  },
  {
    "$type": "StringLiteralType",
    "value": "UpgradeRequested"
  },
  {
    "$type": "StringLiteralType",
    "value": "UpgradeFailed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/339"
      },
      {
        "$ref": "#/340"
      },
      {
        "$ref": "#/341"
      },
      {
        "$ref": "#/342"
      },
      {
        "$ref": "#/343"
      },
      {
        "$ref": "#/344"
      },
      {
        "$ref": "#/345"
      },
      {
        "$ref": "#/346"
      },
      {
        "$ref": "#/347"
      },
      {
        "$ref": "#/348"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "VnetConfiguration",
    "properties": {
      "internal": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property"
      },
      "infrastructureSubnetId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges."
      },
      "dockerBridgeCidr": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges."
      },
      "platformReservedCidr": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges."
      },
      "platformReservedDnsIP": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AppLogsConfiguration",
    "properties": {
      "destination": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'"
      },
      "logAnalyticsConfiguration": {
        "type": {
          "$ref": "#/352"
        },
        "flags": 0,
        "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LogAnalyticsConfiguration",
    "properties": {
      "customerId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Log analytics customer id"
      },
      "sharedKey": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 4,
        "description": "Log analytics customer key"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkloadProfile",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Workload profile type for the workloads to run on."
      },
      "workloadProfileType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Workload profile type for the workloads to run on."
      },
      "minimumCount": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "The minimum capacity."
      },
      "maximumCount": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "The maximum capacity."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/353"
    }
  },
  {
    "$type": "ObjectType",
    "name": "KedaConfiguration",
    "properties": {
      "version": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The version of Keda"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DaprConfiguration",
    "properties": {
      "version": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The version of Dapr"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedEnvironmentPropertiesPeerAuthentication",
    "properties": {
      "mtls": {
        "type": {
          "$ref": "#/358"
        },
        "flags": 0,
        "description": "Mutual TLS authentication settings for the Managed Environment"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Mtls",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Boolean indicating whether the mutual TLS authentication is enabled"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedEnvironmentPropertiesPeerTrafficConfiguration",
    "properties": {
      "encryption": {
        "type": {
          "$ref": "#/360"
        },
        "flags": 0,
        "description": "Peer traffic encryption settings for the Managed Environment"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedEnvironmentPropertiesPeerTrafficConfigurationEncryption",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Boolean indicating whether the peer traffic encryption is enabled"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/managedEnvironments@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/337"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/managedEnvironments/certificates"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/managedEnvironments/certificates",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/363"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/108"
        },
        "flags": 0,
        "description": "Certificate resource specific properties"
      },
      "tags": {
        "type": {
          "$ref": "#/366"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/managedEnvironments/certificates@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/365"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/managedEnvironments/managedCertificates"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/managedEnvironments/managedCertificates",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/368"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/369"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/371"
        },
        "flags": 0,
        "description": "Certificate resource specific properties"
      },
      "tags": {
        "type": {
          "$ref": "#/382"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedCertificateProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/377"
        },
        "flags": 2,
        "description": "Provisioning state of the certificate."
      },
      "subjectName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Subject name of the certificate."
      },
      "error": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Any error occurred during the certificate provision."
      },
      "domainControlValidation": {
        "type": {
          "$ref": "#/381"
        },
        "flags": 0,
        "description": "Selected type of domain control validation for managed certificates."
      },
      "validationToken": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A TXT token used for DNS TXT domain control validation when issuing this type of managed certificates."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "DeleteFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/372"
      },
      {
        "$ref": "#/373"
      },
      {
        "$ref": "#/374"
      },
      {
        "$ref": "#/375"
      },
      {
        "$ref": "#/376"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "CNAME"
  },
  {
    "$type": "StringLiteralType",
    "value": "HTTP"
  },
  {
    "$type": "StringLiteralType",
    "value": "TXT"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/378"
      },
      {
        "$ref": "#/379"
      },
      {
        "$ref": "#/380"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/managedEnvironments/managedCertificates@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/370"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/managedEnvironments/daprComponents"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/managedEnvironments/daprComponents",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/384"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/385"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/121"
        },
        "flags": 0,
        "description": "Dapr Component resource specific properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/managedEnvironments/daprComponents@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/386"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/managedEnvironments/storages"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/managedEnvironments/storages",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/388"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/389"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/391"
        },
        "flags": 0,
        "description": "Storage properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedEnvironmentStorageProperties",
    "properties": {
      "azureFile": {
        "type": {
          "$ref": "#/132"
        },
        "flags": 0,
        "description": "Azure file properties"
      },
      "nfsAzureFile": {
        "type": {
          "$ref": "#/392"
        },
        "flags": 0,
        "description": "NFS Azure file properties"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NfsAzureFileProperties",
    "properties": {
      "server": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Server for NFS azure file. Specify the Azure storage account server address."
      },
      "accessMode": {
        "type": {
          "$ref": "#/395"
        },
        "flags": 0,
        "description": "Access mode for storage"
      },
      "shareName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "NFS Azure file share name."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnly"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWrite"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/393"
      },
      {
        "$ref": "#/394"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/managedEnvironments/storages@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/390"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 3,
    "maxLength": 63,
    "pattern": "^[a-z][a-z0-9]*$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/sessionPools"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/sessionPools",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/397"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/398"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/399"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 0,
        "description": "Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code."
      },
      "properties": {
        "type": {
          "$ref": "#/401"
        },
        "flags": 0,
        "description": "Container App session pool resource specific properties"
      },
      "tags": {
        "type": {
          "$ref": "#/442"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SessionPoolProperties",
    "properties": {
      "environmentId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Resource ID of the session pool's environment."
      },
      "containerType": {
        "type": {
          "$ref": "#/404"
        },
        "flags": 0,
        "description": "The container type of the sessions."
      },
      "poolManagementType": {
        "type": {
          "$ref": "#/407"
        },
        "flags": 0,
        "description": "The pool management type of the session pool."
      },
      "nodeCount": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 2,
        "description": "The number of nodes the session pool is using."
      },
      "scaleConfiguration": {
        "type": {
          "$ref": "#/408"
        },
        "flags": 0,
        "description": "The scale configuration of the session pool."
      },
      "secrets": {
        "type": {
          "$ref": "#/410"
        },
        "flags": 0,
        "description": "The secrets of the session pool."
      },
      "dynamicPoolConfiguration": {
        "type": {
          "$ref": "#/411"
        },
        "flags": 0,
        "description": "The pool configuration if the poolManagementType is dynamic."
      },
      "customContainerTemplate": {
        "type": {
          "$ref": "#/416"
        },
        "flags": 0,
        "description": "The custom container configuration if the containerType is CustomContainer."
      },
      "sessionNetworkConfiguration": {
        "type": {
          "$ref": "#/425"
        },
        "flags": 0,
        "description": "The network configuration of the sessions in the session pool."
      },
      "poolManagementEndpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The endpoint to manage the pool."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/434"
        },
        "flags": 2,
        "description": "Provisioning state of the session pool."
      },
      "managedIdentitySettings": {
        "type": {
          "$ref": "#/441"
        },
        "flags": 0,
        "description": "Optional settings for a Managed Identity that is assigned to the Session pool."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CustomContainer"
  },
  {
    "$type": "StringLiteralType",
    "value": "PythonLTS"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/402"
      },
      {
        "$ref": "#/403"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Manual"
  },
  {
    "$type": "StringLiteralType",
    "value": "Dynamic"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/405"
      },
      {
        "$ref": "#/406"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ScaleConfiguration",
    "properties": {
      "maxConcurrentSessions": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "The maximum count of sessions at the same time."
      },
      "readySessionInstances": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "The minimum count of ready session instances."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SessionPoolSecret",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Secret Name."
      },
      "value": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 4,
        "description": "Secret Value."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/409"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DynamicPoolConfiguration",
    "properties": {
      "lifecycleConfiguration": {
        "type": {
          "$ref": "#/412"
        },
        "flags": 0,
        "description": "The lifecycle configuration of a session in the dynamic session pool"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LifecycleConfiguration",
    "properties": {
      "lifecycleType": {
        "type": {
          "$ref": "#/415"
        },
        "flags": 0,
        "description": "The lifecycle type of the session pool."
      },
      "cooldownPeriodInSeconds": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "The cooldown period of a session in seconds when the lifecycle type is 'Timed'."
      },
      "maxAlivePeriodInSeconds": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "The maximum alive period of a session in seconds when the lifecycle type is 'OnContainerExit'."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Timed"
  },
  {
    "$type": "StringLiteralType",
    "value": "OnContainerExit"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/413"
      },
      {
        "$ref": "#/414"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CustomContainerTemplate",
    "properties": {
      "registryCredentials": {
        "type": {
          "$ref": "#/417"
        },
        "flags": 0,
        "description": "Private container registry credentials for containers used by the sessions of the session pool."
      },
      "containers": {
        "type": {
          "$ref": "#/423"
        },
        "flags": 0,
        "description": "List of container definitions for the sessions of the session pool."
      },
      "ingress": {
        "type": {
          "$ref": "#/424"
        },
        "flags": 0,
        "description": "Session pool ingress configuration."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SessionRegistryCredentials",
    "properties": {
      "server": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Container registry server."
      },
      "username": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Container registry username."
      },
      "passwordSecretRef": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the secret that contains the registry login password"
      },
      "identity": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SessionContainer",
    "properties": {
      "image": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Container image tag."
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Custom container name."
      },
      "command": {
        "type": {
          "$ref": "#/419"
        },
        "flags": 0,
        "description": "Container start command."
      },
      "args": {
        "type": {
          "$ref": "#/420"
        },
        "flags": 0,
        "description": "Container start command arguments."
      },
      "env": {
        "type": {
          "$ref": "#/421"
        },
        "flags": 0,
        "description": "Container environment variables."
      },
      "resources": {
        "type": {
          "$ref": "#/422"
        },
        "flags": 0,
        "description": "Container resource requirements."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/225"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SessionContainerResources",
    "properties": {
      "cpu": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Required CPU in cores, e.g. 0.5"
      },
      "memory": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Required memory, e.g. \"250Mb\""
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/418"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SessionIngress",
    "properties": {
      "targetPort": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Target port in containers for traffic from ingress"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SessionNetworkConfiguration",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/428"
        },
        "flags": 0,
        "description": "Network status for the sessions."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "EgressEnabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "EgressDisabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/426"
      },
      {
        "$ref": "#/427"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/429"
      },
      {
        "$ref": "#/430"
      },
      {
        "$ref": "#/431"
      },
      {
        "$ref": "#/432"
      },
      {
        "$ref": "#/433"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ManagedIdentitySetting",
    "properties": {
      "identity": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The resource ID of a user-assigned managed identity that is assigned to the Session Pool, or 'system' for system-assigned identity."
      },
      "lifecycle": {
        "type": {
          "$ref": "#/440"
        },
        "flags": 0,
        "description": "Use to select the lifecycle stages of a Session Pool during which the Managed Identity should be available."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Init"
  },
  {
    "$type": "StringLiteralType",
    "value": "Main"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "All"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/436"
      },
      {
        "$ref": "#/437"
      },
      {
        "$ref": "#/438"
      },
      {
        "$ref": "#/439"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/435"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/sessionPools@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/400"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/containerApps/sourcecontrols"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/containerApps/sourcecontrols",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/444"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/445"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/447"
        },
        "flags": 0,
        "description": "SourceControl resource specific properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SourceControlProperties",
    "properties": {
      "operationState": {
        "type": {
          "$ref": "#/452"
        },
        "flags": 2,
        "description": "Current provisioning State of the operation"
      },
      "repoUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The repo url which will be integrated to ContainerApp."
      },
      "branch": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The branch which will trigger the auto deployment"
      },
      "githubActionConfiguration": {
        "type": {
          "$ref": "#/453"
        },
        "flags": 0,
        "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/448"
      },
      {
        "$ref": "#/449"
      },
      {
        "$ref": "#/450"
      },
      {
        "$ref": "#/451"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "GithubActionConfiguration",
    "properties": {
      "registryInfo": {
        "type": {
          "$ref": "#/454"
        },
        "flags": 0,
        "description": "Registry configurations."
      },
      "azureCredentials": {
        "type": {
          "$ref": "#/455"
        },
        "flags": 0,
        "description": "AzureCredentials configurations."
      },
      "contextPath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Context path"
      },
      "githubPersonalAccessToken": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 4,
        "description": "One time Github PAT to configure github environment"
      },
      "image": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Image name"
      },
      "publishType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Code or Image"
      },
      "os": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Operation system"
      },
      "runtimeStack": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Runtime stack"
      },
      "runtimeVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Runtime version"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryInfo",
    "properties": {
      "registryUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "registry server Url."
      },
      "registryUserName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "registry username."
      },
      "registryPassword": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 4,
        "description": "registry secret."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureCredentials",
    "properties": {
      "clientId": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 4,
        "description": "Client Id."
      },
      "clientSecret": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 4,
        "description": "Client Secret."
      },
      "tenantId": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 4,
        "description": "Tenant Id."
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 4,
        "description": "Kind of auth github does for deploying the template"
      },
      "subscriptionId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Subscription Id."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/containerApps/sourcecontrols@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/446"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/containerApps/revisions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/containerApps/revisions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/457"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/458"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/460"
        },
        "flags": 2,
        "description": "Revision resource specific properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RevisionProperties",
    "properties": {
      "createdTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Timestamp describing when the revision was created\nby controller"
      },
      "lastActiveTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Timestamp describing when the revision was last active. Only meaningful when revision is inactive"
      },
      "fqdn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Fully qualified domain name of the revision"
      },
      "template": {
        "type": {
          "$ref": "#/221"
        },
        "flags": 2,
        "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time"
      },
      "active": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "Boolean describing if the Revision is Active"
      },
      "replicas": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 2,
        "description": "Number of pods currently running for this revision"
      },
      "trafficWeight": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 2,
        "description": "Traffic weight assigned to this revision"
      },
      "provisioningError": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Optional Field - Platform Error Message"
      },
      "healthState": {
        "type": {
          "$ref": "#/464"
        },
        "flags": 2,
        "description": "Current health State of the revision"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/470"
        },
        "flags": 2,
        "description": "Current provisioning State of the revision"
      },
      "runningState": {
        "type": {
          "$ref": "#/477"
        },
        "flags": 2,
        "description": "Current running state of the revision"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Healthy"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unhealthy"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/461"
      },
      {
        "$ref": "#/462"
      },
      {
        "$ref": "#/463"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioned"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deprovisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deprovisioned"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/465"
      },
      {
        "$ref": "#/466"
      },
      {
        "$ref": "#/467"
      },
      {
        "$ref": "#/468"
      },
      {
        "$ref": "#/469"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Processing"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopped"
  },
  {
    "$type": "StringLiteralType",
    "value": "Degraded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/471"
      },
      {
        "$ref": "#/472"
      },
      {
        "$ref": "#/473"
      },
      {
        "$ref": "#/474"
      },
      {
        "$ref": "#/475"
      },
      {
        "$ref": "#/476"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/containerApps/revisions@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/459"
    },
    "flags": 1
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/containerApps/revisions/replicas"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/containerApps/revisions/replicas",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/479"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/480"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/482"
        },
        "flags": 2,
        "description": "Replica resource specific properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ReplicaProperties",
    "properties": {
      "createdTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Timestamp describing when the pod was created by controller"
      },
      "runningState": {
        "type": {
          "$ref": "#/486"
        },
        "flags": 2,
        "description": "Current running state of the replica"
      },
      "runningStateDetails": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The details of replica current running state"
      },
      "containers": {
        "type": {
          "$ref": "#/492"
        },
        "flags": 0,
        "description": "The containers collection under a replica."
      },
      "initContainers": {
        "type": {
          "$ref": "#/493"
        },
        "flags": 0,
        "description": "The init containers collection under a replica."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotRunning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/483"
      },
      {
        "$ref": "#/484"
      },
      {
        "$ref": "#/485"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ReplicaContainer",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Name of the Container"
      },
      "containerId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Id of the Container"
      },
      "ready": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "The container ready status"
      },
      "started": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "The container start status"
      },
      "restartCount": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "The container restart count"
      },
      "runningState": {
        "type": {
          "$ref": "#/491"
        },
        "flags": 2,
        "description": "Current running state of the container"
      },
      "runningStateDetails": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The details of container current running state"
      },
      "logStreamEndpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Log Stream endpoint"
      },
      "execEndpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Container exec endpoint"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Terminated"
  },
  {
    "$type": "StringLiteralType",
    "value": "Waiting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/488"
      },
      {
        "$ref": "#/489"
      },
      {
        "$ref": "#/490"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/487"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/487"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/containerApps/revisions/replicas@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/481"
    },
    "flags": 1
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/containerApps/detectors"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/containerApps/detectors",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/495"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/496"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/498"
        },
        "flags": 2,
        "description": "Diagnostics resource specific properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnosticsProperties",
    "properties": {
      "metadata": {
        "type": {
          "$ref": "#/499"
        },
        "flags": 0,
        "description": "Metadata of the diagnostics response."
      },
      "dataset": {
        "type": {
          "$ref": "#/509"
        },
        "flags": 0,
        "description": "Set of data collections associated with the response."
      },
      "status": {
        "type": {
          "$ref": "#/510"
        },
        "flags": 0,
        "description": "Status of the diagnostics response."
      },
      "dataProviderMetadata": {
        "type": {
          "$ref": "#/511"
        },
        "flags": 0,
        "description": "List of data providers' metadata."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnosticsDefinition",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Unique detector name"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Display Name of the detector"
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Details of the diagnostics info"
      },
      "author": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Authors' names of the detector"
      },
      "category": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Category of the detector"
      },
      "supportTopicList": {
        "type": {
          "$ref": "#/501"
        },
        "flags": 0,
        "description": "List of support topics"
      },
      "analysisTypes": {
        "type": {
          "$ref": "#/502"
        },
        "flags": 0,
        "description": "List of analysis types"
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Authors' names of the detector"
      },
      "score": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 2,
        "description": "Authors' names of the detector"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnosticSupportTopic",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Unique topic identifier"
      },
      "pesId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "PES identifier"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/500"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnosticsDataApiResponse",
    "properties": {
      "table": {
        "type": {
          "$ref": "#/504"
        },
        "flags": 0,
        "description": "Table response"
      },
      "renderingProperties": {
        "type": {
          "$ref": "#/508"
        },
        "flags": 0,
        "description": "Details of the table response"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnosticDataTableResponseObject",
    "properties": {
      "tableName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Table name"
      },
      "columns": {
        "type": {
          "$ref": "#/506"
        },
        "flags": 0,
        "description": "Columns in the table"
      },
      "rows": {
        "type": {
          "$ref": "#/507"
        },
        "flags": 0,
        "description": "Rows in the table"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnosticDataTableResponseColumn",
    "properties": {
      "columnName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Column name"
      },
      "dataType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Data type of the column"
      },
      "columnType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Column type"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/505"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/102"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnosticRendering",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Rendering type"
      },
      "title": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Title of the table"
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Description of the table"
      },
      "isVisible": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Flag if the table should be rendered"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/503"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnosticsStatus",
    "properties": {
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Diagnostic message"
      },
      "statusId": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Status"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnosticDataProviderMetadata",
    "properties": {
      "providerName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of data provider"
      },
      "propertyBag": {
        "type": {
          "$ref": "#/513"
        },
        "flags": 0,
        "description": "Collection of properties"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnosticDataProviderMetadataPropertyBagItem",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Property name"
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Property value"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/512"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/containerApps/detectors@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/497"
    },
    "flags": 1
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/containerApps/detectorProperties/revisions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/containerApps/detectorProperties/revisions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/515"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/516"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/460"
        },
        "flags": 2,
        "description": "Revision resource specific properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/containerApps/detectorProperties/revisions@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/517"
    },
    "flags": 1
  },
  {
    "$type": "StringLiteralType",
    "value": "rootApi"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/containerApps/detectorProperties"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/containerApps/detectorProperties",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/519"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/520"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/521"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 2,
        "description": "The complex type of the extended location."
      },
      "identity": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 2,
        "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code."
      },
      "managedBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
      },
      "properties": {
        "type": {
          "$ref": "#/149"
        },
        "flags": 2,
        "description": "ContainerApp resource specific properties"
      },
      "tags": {
        "type": {
          "$ref": "#/523"
        },
        "flags": 2,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/containerApps/detectorProperties@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/522"
    },
    "flags": 1
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/managedEnvironments/detectors"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/managedEnvironments/detectors",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/525"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/526"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/498"
        },
        "flags": 2,
        "description": "Diagnostics resource specific properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/managedEnvironments/detectors@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/527"
    },
    "flags": 1
  },
  {
    "$type": "StringLiteralType",
    "value": "rootApi"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/managedEnvironments/detectorProperties"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/managedEnvironments/detectorProperties",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/529"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/530"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/531"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Kind of the Environment."
      },
      "identity": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 2,
        "description": "Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or credentials in code."
      },
      "properties": {
        "type": {
          "$ref": "#/338"
        },
        "flags": 2,
        "description": "Managed environment resource specific properties"
      },
      "tags": {
        "type": {
          "$ref": "#/533"
        },
        "flags": 2,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/managedEnvironments/detectorProperties@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/532"
    },
    "flags": 1
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/jobs/detectors"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/jobs/detectors",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/279"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/535"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/536"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/498"
        },
        "flags": 2,
        "description": "Diagnostics resource specific properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/jobs/detectors@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/537"
    },
    "flags": 1
  },
  {
    "$type": "StringType",
    "pattern": "^[-\\w\\._]+$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.App/jobs/detectorProperties"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.App/jobs/detectorProperties",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/539"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/540"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/541"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 2,
        "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code."
      },
      "properties": {
        "type": {
          "$ref": "#/283"
        },
        "flags": 2,
        "description": "Container Apps Job resource specific properties."
      },
      "tags": {
        "type": {
          "$ref": "#/543"
        },
        "flags": 2,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.App/jobs/detectorProperties@2025-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/542"
    },
    "flags": 1
  },
  {
    "$type": "ObjectType",
    "name": "CheckNameAvailabilityRequest",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the resource for which availability needs to be checked."
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource type."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CheckNameAvailabilityResponse",
    "properties": {
      "nameAvailable": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Indicates if the resource name is available."
      },
      "reason": {
        "type": {
          "$ref": "#/549"
        },
        "flags": 0,
        "description": "The reason why the given name is not available."
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Detailed reason why the given name is available."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Invalid"
  },
  {
    "$type": "StringLiteralType",
    "value": "AlreadyExists"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/547"
      },
      {
        "$ref": "#/548"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceFunctionType",
    "name": "checkNameAvailability",
    "resourceType": "Microsoft.App/connectedEnvironments",
    "apiVersion": "2025-01-01",
    "output": {
      "$ref": "#/546"
    },
    "input": {
      "$ref": "#/545"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DaprSecretsCollection",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/553"
        },
        "flags": 1,
        "description": "Collection of secrets used by a Dapr component"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DaprSecret",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Secret Name."
      },
      "value": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 2,
        "description": "Secret Value."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/552"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listSecrets",
    "resourceType": "Microsoft.App/connectedEnvironments/daprComponents",
    "apiVersion": "2025-01-01",
    "output": {
      "$ref": "#/551"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomHostnameAnalysisResult",
    "properties": {
      "hostName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Host name that was analyzed"
      },
      "isHostnameAlreadyVerified": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "<code>true</code> if hostname is already verified; otherwise, <code>false</code>."
      },
      "customDomainVerificationTest": {
        "type": {
          "$ref": "#/559"
        },
        "flags": 2,
        "description": "DNS verification test result."
      },
      "customDomainVerificationFailureInfo": {
        "type": {
          "$ref": "#/560"
        },
        "flags": 2,
        "description": "Raw failure information if DNS verification fails."
      },
      "hasConflictOnManagedEnvironment": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "<code>true</code> if there is a conflict on the Container App's managed environment; otherwise, <code>false</code>."
      },
      "conflictWithEnvironmentCustomDomain": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "<code>true</code> if there is a conflict on the Container App's managed environment level custom domain; otherwise, <code>false</code>."
      },
      "conflictingContainerAppResourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Name of the conflicting Container App on the Managed Environment if it's within the same subscription."
      },
      "cNameRecords": {
        "type": {
          "$ref": "#/563"
        },
        "flags": 0,
        "description": "CName records visible for this hostname."
      },
      "txtRecords": {
        "type": {
          "$ref": "#/564"
        },
        "flags": 0,
        "description": "TXT records visible for this hostname."
      },
      "aRecords": {
        "type": {
          "$ref": "#/565"
        },
        "flags": 0,
        "description": "A records visible for this hostname."
      },
      "alternateCNameRecords": {
        "type": {
          "$ref": "#/566"
        },
        "flags": 0,
        "description": "Alternate CName records visible for this hostname."
      },
      "alternateTxtRecords": {
        "type": {
          "$ref": "#/567"
        },
        "flags": 0,
        "description": "Alternate TXT records visible for this hostname."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Passed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Skipped"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/556"
      },
      {
        "$ref": "#/557"
      },
      {
        "$ref": "#/558"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CustomHostnameAnalysisResultCustomDomainVerificationFailureInfo",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Standardized string to programmatically identify the error."
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Detailed error description and debugging information."
      },
      "target": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Detailed error description and debugging information."
      },
      "details": {
        "type": {
          "$ref": "#/562"
        },
        "flags": 0,
        "description": "Details or the error"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomHostnameAnalysisResultCustomDomainVerificationFailureInfoDetailsItem",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Standardized string to programmatically identify the error."
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Detailed error description and debugging information."
      },
      "target": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Detailed error description and debugging information."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/561"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listCustomHostNameAnalysis",
    "resourceType": "Microsoft.App/containerApps",
    "apiVersion": "2025-01-01",
    "output": {
      "$ref": "#/555"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretsCollection",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/571"
        },
        "flags": 1,
        "description": "Collection of resources."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerAppSecret",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Secret Name."
      },
      "value": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 2,
        "description": "Secret Value."
      },
      "identity": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity."
      },
      "keyVaultUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Azure Key Vault URL pointing to the secret referenced by the container app."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/570"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listSecrets",
    "resourceType": "Microsoft.App/containerApps",
    "apiVersion": "2025-01-01",
    "output": {
      "$ref": "#/569"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerAppAuthToken",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/574"
        },
        "flags": 0,
        "description": "Container App auth token resource specific properties"
      },
      "tags": {
        "type": {
          "$ref": "#/575"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\""
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerAppAuthTokenProperties",
    "properties": {
      "token": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 2,
        "description": "Auth token value."
      },
      "expires": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Token expiration date."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "getAuthtoken",
    "resourceType": "Microsoft.App/containerApps",
    "apiVersion": "2025-01-01",
    "output": {
      "$ref": "#/573"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerApp",
    "properties": {
      "extendedLocation": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 0,
        "description": "The complex type of the extended location."
      },
      "identity": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 0,
        "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code."
      },
      "managedBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
      },
      "properties": {
        "type": {
          "$ref": "#/149"
        },
        "flags": 0,
        "description": "ContainerApp resource specific properties"
      },
      "tags": {
        "type": {
          "$ref": "#/578"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\""
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "start",
    "resourceType": "Microsoft.App/containerApps",
    "apiVersion": "2025-01-01",
    "output": {
      "$ref": "#/577"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "stop",
    "resourceType": "Microsoft.App/containerApps",
    "apiVersion": "2025-01-01",
    "output": {
      "$ref": "#/577"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "activate",
    "resourceType": "Microsoft.App/containerApps/revisions",
    "apiVersion": "2025-01-01"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "deactivate",
    "resourceType": "Microsoft.App/containerApps/revisions",
    "apiVersion": "2025-01-01"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "restart",
    "resourceType": "Microsoft.App/containerApps/revisions",
    "apiVersion": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "JobExecutionTemplate",
    "properties": {
      "containers": {
        "type": {
          "$ref": "#/589"
        },
        "flags": 0,
        "description": "List of container definitions for the Container Apps Job."
      },
      "initContainers": {
        "type": {
          "$ref": "#/590"
        },
        "flags": 0,
        "description": "List of specialized containers that run before job containers."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobExecutionContainer",
    "properties": {
      "image": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Container image tag."
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Custom container name."
      },
      "command": {
        "type": {
          "$ref": "#/586"
        },
        "flags": 0,
        "description": "Container start command."
      },
      "args": {
        "type": {
          "$ref": "#/587"
        },
        "flags": 0,
        "description": "Container start command arguments."
      },
      "env": {
        "type": {
          "$ref": "#/588"
        },
        "flags": 0,
        "description": "Container environment variables."
      },
      "resources": {
        "type": {
          "$ref": "#/227"
        },
        "flags": 0,
        "description": "Container resource requirements."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/225"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/585"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/585"
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobExecutionBase",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Job execution name."
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Job execution Id."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "start",
    "resourceType": "Microsoft.App/jobs",
    "apiVersion": "2025-01-01",
    "output": {
      "$ref": "#/591"
    },
    "input": {
      "$ref": "#/584"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerAppJobExecutions",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/604"
        },
        "flags": 1,
        "description": "Collection of resources."
      },
      "nextLink": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Link to next page of resources."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobExecution",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Job execution Name."
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Job execution Id."
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Job execution type"
      },
      "properties": {
        "type": {
          "$ref": "#/595"
        },
        "flags": 0,
        "description": "Container Apps Job execution specific properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobExecutionProperties",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/603"
        },
        "flags": 2,
        "description": "Current running State of the job"
      },
      "startTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Job execution start time."
      },
      "endTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Job execution end time."
      },
      "template": {
        "type": {
          "$ref": "#/584"
        },
        "flags": 0,
        "description": "Job's execution container."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Processing"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopped"
  },
  {
    "$type": "StringLiteralType",
    "value": "Degraded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/596"
      },
      {
        "$ref": "#/597"
      },
      {
        "$ref": "#/598"
      },
      {
        "$ref": "#/599"
      },
      {
        "$ref": "#/600"
      },
      {
        "$ref": "#/601"
      },
      {
        "$ref": "#/602"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/594"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "stop",
    "resourceType": "Microsoft.App/jobs",
    "apiVersion": "2025-01-01",
    "output": {
      "$ref": "#/593"
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobSecretsCollection",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/607"
        },
        "flags": 1,
        "description": "Collection of resources."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/122"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listSecrets",
    "resourceType": "Microsoft.App/jobs",
    "apiVersion": "2025-01-01",
    "output": {
      "$ref": "#/606"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "stop",
    "resourceType": "Microsoft.App/jobs/executions",
    "apiVersion": "2025-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentAuthToken",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/611"
        },
        "flags": 0,
        "description": "Environment auth token resource specific properties"
      },
      "tags": {
        "type": {
          "$ref": "#/612"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\""
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentAuthTokenProperties",
    "properties": {
      "token": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 2,
        "description": "Auth token value."
      },
      "expires": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Token expiration date."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "getAuthtoken",
    "resourceType": "Microsoft.App/managedEnvironments",
    "apiVersion": "2025-01-01",
    "output": {
      "$ref": "#/610"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "checkNameAvailability",
    "resourceType": "Microsoft.App/managedEnvironments",
    "apiVersion": "2025-01-01",
    "output": {
      "$ref": "#/546"
    },
    "input": {
      "$ref": "#/545"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listSecrets",
    "resourceType": "Microsoft.App/managedEnvironments/daprComponents",
    "apiVersion": "2025-01-01",
    "output": {
      "$ref": "#/551"
    }
  }
]