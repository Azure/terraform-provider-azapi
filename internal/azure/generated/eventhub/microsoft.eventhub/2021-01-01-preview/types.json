[
  {
    "$type": "StringType",
    "minLength": 6,
    "maxLength": 50,
    "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2021-01-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "sku": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Properties of sku resource"
      },
      "identity": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Properties of BYOK Identity description"
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system meta data relating to this resource."
      },
      "properties": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "Namespace properties supplied for create namespace operation."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource location."
      },
      "tags": {
        "type": {
          "$ref": "#/59"
        },
        "flags": 0,
        "description": "Resource tags."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Sku",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 1,
        "description": "Name of this SKU."
      },
      "tier": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0,
        "description": "The billing tier of this particular SKU."
      },
      "capacity": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Basic"
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard"
  },
  {
    "$type": "StringLiteralType",
    "value": "Premium"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Basic"
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard"
  },
  {
    "$type": "StringLiteralType",
    "value": "Premium"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/12"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 0
  },
  {
    "$type": "ObjectType",
    "name": "Identity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "ObjectId from the KeyVault"
      },
      "tenantId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "TenantId from the KeyVault"
      },
      "type": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Type of managed service identity."
      },
      "userAssignedIdentities": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 0,
        "description": "Properties for User Assigned Identities"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned, UserAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/16"
      },
      {
        "$ref": "#/17"
      },
      {
        "$ref": "#/18"
      },
      {
        "$ref": "#/19"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ComponentsSgqdofSchemasIdentityPropertiesUserassignedidentitiesAdditionalproperties",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Principal Id of user assigned identity"
      },
      "clientId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Client Id of user assigned identity"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IdentityUserAssignedIdentities",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/21"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/24"
      },
      {
        "$ref": "#/25"
      },
      {
        "$ref": "#/26"
      },
      {
        "$ref": "#/27"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/29"
      },
      {
        "$ref": "#/30"
      },
      {
        "$ref": "#/31"
      },
      {
        "$ref": "#/32"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "EHNamespaceProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Provisioning state of the Namespace."
      },
      "status": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Status of the Namespace."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time the Namespace was created."
      },
      "updatedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time the Namespace was updated."
      },
      "serviceBusEndpoint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Endpoint you can use to perform Service Bus operations."
      },
      "clusterArmId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Cluster ARM ID of the Namespace."
      },
      "metricId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Identifier for Azure Insights metrics."
      },
      "isAutoInflateEnabled": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 0,
        "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
      },
      "maximumThroughputUnits": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)"
      },
      "kafkaEnabled": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 0,
        "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
      },
      "zoneRedundant": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 0,
        "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
      },
      "encryption": {
        "type": {
          "$ref": "#/37"
        },
        "flags": 0,
        "description": "Properties of BYOK Encryption description"
      },
      "privateEndpointConnections": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 0,
        "description": "List of private endpoint connections."
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "IntegerType",
    "minValue": 0,
    "maxValue": 20
  },
  {
    "$type": "ObjectType",
    "name": "Encryption",
    "properties": {
      "keyVaultProperties": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 0,
        "description": "Properties of KeyVault"
      },
      "keySource": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 0,
        "description": "Enumerates the possible value of keySource for Encryption"
      },
      "requireInfrastructureEncryption": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 0,
        "description": "Enable Infrastructure Encryption (Double Encryption)"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KeyVaultProperties",
    "properties": {
      "keyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the Key from KeyVault"
      },
      "keyVaultUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Uri of KeyVault"
      },
      "keyVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Key Version"
      },
      "identity": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentityProperties",
    "properties": {
      "userAssignedIdentity": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM ID of user Identity selected for encryption"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/38"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.KeyVault"
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnection",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "Properties of the PrivateEndpointConnection."
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system meta data relating to this resource."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnectionProperties",
    "properties": {
      "privateEndpoint": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "The Private Endpoint resource for this Connection."
      },
      "privateLinkServiceConnectionState": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "Details about the state of the connection."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0,
        "description": "Provisioning state of the Private Endpoint Connection."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpoint",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ARM identifier for Private Endpoint."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ConnectionState",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/50"
        },
        "flags": 0,
        "description": "Status of the connection."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of the connection state."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Approved"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rejected"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disconnected"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/46"
      },
      {
        "$ref": "#/47"
      },
      {
        "$ref": "#/48"
      },
      {
        "$ref": "#/49"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/51"
      },
      {
        "$ref": "#/52"
      },
      {
        "$ref": "#/53"
      },
      {
        "$ref": "#/54"
      },
      {
        "$ref": "#/55"
      },
      {
        "$ref": "#/56"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/42"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces@2021-01-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/4"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/networkRuleSets"
  },
  {
    "$type": "StringLiteralType",
    "value": "2021-01-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/networkRuleSets",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/62"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 0,
        "description": "NetworkRuleSet properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system meta data relating to this resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NetworkRuleSetProperties",
    "properties": {
      "trustedServiceAccessEnabled": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 0,
        "description": "Value that indicates whether Trusted Service Access is Enabled or not."
      },
      "defaultAction": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 0,
        "description": "Default Action for Network Rule Set"
      },
      "virtualNetworkRules": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 0,
        "description": "List VirtualNetwork Rules"
      },
      "ipRules": {
        "type": {
          "$ref": "#/75"
        },
        "flags": 0,
        "description": "List of IpRules"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Allow"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deny"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/66"
      },
      {
        "$ref": "#/67"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NWRuleSetVirtualNetworkRules",
    "properties": {
      "subnet": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 0,
        "description": "Subnet properties"
      },
      "ignoreMissingVnetServiceEndpoint": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 0,
        "description": "Value that indicates whether to ignore missing Vnet Service Endpoint"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Subnet",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource ID of Virtual Network Subnet"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/69"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NWRuleSetIpRules",
    "properties": {
      "ipMask": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "IP Mask"
      },
      "action": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 0,
        "description": "The IP Filter Action"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Allow"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/73"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/72"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/networkRuleSets@2021-01-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/64"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 1
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/authorizationRules"
  },
  {
    "$type": "StringLiteralType",
    "value": "2021-01-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/authorizationRules",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/79"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/81"
        },
        "flags": 0,
        "description": "Properties supplied to create or update AuthorizationRule"
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system meta data relating to this resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AuthorizationRuleProperties",
    "properties": {
      "rights": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 1,
        "description": "The rights associated with the rule."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Manage"
  },
  {
    "$type": "StringLiteralType",
    "value": "Send"
  },
  {
    "$type": "StringLiteralType",
    "value": "Listen"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/82"
      },
      {
        "$ref": "#/83"
      },
      {
        "$ref": "#/84"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/85"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/authorizationRules@2021-01-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/80"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/privateEndpointConnections"
  },
  {
    "$type": "StringLiteralType",
    "value": "2021-01-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/privateEndpointConnections",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/88"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/89"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "Properties of the PrivateEndpointConnection."
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system meta data relating to this resource."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/privateEndpointConnections@2021-01-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/90"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 256
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/eventhubs"
  },
  {
    "$type": "StringLiteralType",
    "value": "2021-01-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/eventhubs",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/94"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/96"
        },
        "flags": 0,
        "description": "Properties supplied to the Create Or Update Event Hub operation."
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system meta data relating to this resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EventhubProperties",
    "properties": {
      "partitionIds": {
        "type": {
          "$ref": "#/97"
        },
        "flags": 2,
        "description": "Current number of shards on the Event Hub."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Exact time the Event Hub was created."
      },
      "updatedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The exact time the message was updated."
      },
      "messageRetentionInDays": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 0,
        "description": "Number of days to retain the events for this Event Hub, value should be 1 to 7 days"
      },
      "partitionCount": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 0,
        "description": "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions."
      },
      "status": {
        "type": {
          "$ref": "#/108"
        },
        "flags": 0,
        "description": "Enumerates the possible values for the status of the Event Hub."
      },
      "captureDescription": {
        "type": {
          "$ref": "#/109"
        },
        "flags": 0,
        "description": "Properties of capture description"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 1
  },
  {
    "$type": "StringLiteralType",
    "value": "Active"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Restoring"
  },
  {
    "$type": "StringLiteralType",
    "value": "SendDisabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReceiveDisabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Renaming"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/99"
      },
      {
        "$ref": "#/100"
      },
      {
        "$ref": "#/101"
      },
      {
        "$ref": "#/102"
      },
      {
        "$ref": "#/103"
      },
      {
        "$ref": "#/104"
      },
      {
        "$ref": "#/105"
      },
      {
        "$ref": "#/106"
      },
      {
        "$ref": "#/107"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CaptureDescription",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 0,
        "description": "A value that indicates whether capture description is enabled."
      },
      "encoding": {
        "type": {
          "$ref": "#/112"
        },
        "flags": 0,
        "description": "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version"
      },
      "intervalInSeconds": {
        "type": {
          "$ref": "#/113"
        },
        "flags": 0,
        "description": "The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds"
      },
      "sizeLimitInBytes": {
        "type": {
          "$ref": "#/114"
        },
        "flags": 0,
        "description": "The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes"
      },
      "destination": {
        "type": {
          "$ref": "#/115"
        },
        "flags": 0,
        "description": "Properties of Destination where capture will be stored. (Storage Account, Blob Names)"
      },
      "skipEmptyArchives": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 0,
        "description": "A value that indicates whether to Skip Empty Archives"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Avro"
  },
  {
    "$type": "StringLiteralType",
    "value": "AvroDeflate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/110"
      },
      {
        "$ref": "#/111"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 60,
    "maxValue": 900
  },
  {
    "$type": "IntegerType",
    "minValue": 10485760,
    "maxValue": 524288000
  },
  {
    "$type": "ObjectType",
    "name": "Destination",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name for capture destination"
      },
      "properties": {
        "type": {
          "$ref": "#/116"
        },
        "flags": 0,
        "description": "Properties describing the storage account, blob container and archive name format for capture destination"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DestinationProperties",
    "properties": {
      "storageAccountResourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource id of the storage account to be used to create the blobs"
      },
      "blobContainer": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Blob container Name"
      },
      "archiveNameFormat": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/eventhubs@2021-01-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/95"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules"
  },
  {
    "$type": "StringLiteralType",
    "value": "2021-01-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/118"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/119"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/81"
        },
        "flags": 0,
        "description": "Properties supplied to create or update AuthorizationRule"
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system meta data relating to this resource."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules@2021-01-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/120"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 50
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs"
  },
  {
    "$type": "StringLiteralType",
    "value": "2021-01-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/122"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/123"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/124"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/126"
        },
        "flags": 0,
        "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system meta data relating to this resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ArmDisasterRecoveryProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/130"
        },
        "flags": 2,
        "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'"
      },
      "partnerNamespace": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
      },
      "alternateName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Alternate name specified when alias and namespace names are same."
      },
      "role": {
        "type": {
          "$ref": "#/134"
        },
        "flags": 2,
        "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'"
      },
      "pendingReplicationOperationsCount": {
        "type": {
          "$ref": "#/135"
        },
        "flags": 2,
        "description": "Number of entities pending to be replicated."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/127"
      },
      {
        "$ref": "#/128"
      },
      {
        "$ref": "#/129"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Primary"
  },
  {
    "$type": "StringLiteralType",
    "value": "PrimaryNotReplicating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Secondary"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/131"
      },
      {
        "$ref": "#/132"
      },
      {
        "$ref": "#/133"
      }
    ]
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs@2021-01-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/125"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/eventhubs/consumergroups"
  },
  {
    "$type": "StringLiteralType",
    "value": "2021-01-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/122"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/137"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/138"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 0,
        "description": "Single item in List or Get Consumer group operation"
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system meta data relating to this resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ConsumerGroupProperties",
    "properties": {
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Exact time the message was created."
      },
      "updatedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The exact time the message was updated."
      },
      "userMetadata": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/eventhubs/consumergroups@2021-01-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/139"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs/authorizationRules"
  },
  {
    "$type": "StringLiteralType",
    "value": "2021-01-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs/authorizationRules",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/142"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/143"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/81"
        },
        "flags": 2,
        "description": "Properties supplied to create or update AuthorizationRule"
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system meta data relating to this resource."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs/authorizationRules@2021-01-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/144"
    },
    "flags": 1
  },
  {
    "$type": "ObjectType",
    "name": "AccessKeys",
    "properties": {
      "primaryConnectionString": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Primary connection string of the created namespace AuthorizationRule."
      },
      "secondaryConnectionString": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Secondary connection string of the created namespace AuthorizationRule."
      },
      "aliasPrimaryConnectionString": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Primary connection string of the alias if GEO DR is enabled"
      },
      "aliasSecondaryConnectionString": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Secondary  connection string of the alias if GEO DR is enabled"
      },
      "primaryKey": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
      },
      "secondaryKey": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
      },
      "keyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "A string that describes the AuthorizationRule."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listKeys",
    "resourceType": "Microsoft.EventHub/namespaces/authorizationRules",
    "apiVersion": "2021-01-01-preview",
    "output": {
      "$ref": "#/146"
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegenerateAccessKeyParameters",
    "properties": {
      "keyType": {
        "type": {
          "$ref": "#/151"
        },
        "flags": 1,
        "description": "The access key to regenerate."
      },
      "key": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "PrimaryKey"
  },
  {
    "$type": "StringLiteralType",
    "value": "SecondaryKey"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/149"
      },
      {
        "$ref": "#/150"
      }
    ]
  },
  {
    "$type": "ResourceFunctionType",
    "name": "regenerateKeys",
    "resourceType": "Microsoft.EventHub/namespaces/authorizationRules",
    "apiVersion": "2021-01-01-preview",
    "output": {
      "$ref": "#/146"
    },
    "input": {
      "$ref": "#/148"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listKeys",
    "resourceType": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
    "apiVersion": "2021-01-01-preview",
    "output": {
      "$ref": "#/146"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "regenerateKeys",
    "resourceType": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
    "apiVersion": "2021-01-01-preview",
    "output": {
      "$ref": "#/146"
    },
    "input": {
      "$ref": "#/148"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "breakPairing",
    "resourceType": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs",
    "apiVersion": "2021-01-01-preview"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "failover",
    "resourceType": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs",
    "apiVersion": "2021-01-01-preview"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listKeys",
    "resourceType": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs/authorizationRules",
    "apiVersion": "2021-01-01-preview",
    "output": {
      "$ref": "#/146"
    }
  }
]