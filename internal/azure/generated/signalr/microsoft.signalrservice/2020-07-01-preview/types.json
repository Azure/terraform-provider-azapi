[{"1":{"Kind":1}},{"1":{"Kind":2}},{"1":{"Kind":3}},{"1":{"Kind":4}},{"1":{"Kind":5}},{"1":{"Kind":6}},{"1":{"Kind":7}},{"1":{"Kind":8}},{"6":{"Value":"Microsoft.SignalRService/signalR"}},{"6":{"Value":"2020-07-01-preview"}},{"2":{"Name":"Microsoft.SignalRService/signalR","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":8,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":9,"Flags":10,"Description":"The resource api version"},"sku":{"Type":11,"Flags":0,"Description":"The billing information of the resource.(e.g. Free, Standard)"},"properties":{"Type":17,"Flags":0,"Description":"Settings used to provision or configure the resource"},"kind":{"Type":95,"Flags":0,"Description":"The kind of the service - e.g. \"SignalR\" for \"Microsoft.SignalRService/SignalR\""},"identity":{"Type":96,"Flags":0,"Description":"The managed identity response"},"location":{"Type":4,"Flags":0,"Description":"The GEO location of the resource. e.g. West US | East US | North Central US | South Central US."},"tags":{"Type":103,"Flags":0,"Description":"Tags of the service which is a list of key value pairs that describe the resource."}}}},{"2":{"Name":"ResourceSku","Properties":{"name":{"Type":4,"Flags":1,"Description":"The name of the SKU. Required.\r\n\r\nAllowed values: Standard_S1, Free_F1"},"tier":{"Type":16,"Flags":0,"Description":"Optional tier of this particular SKU. 'Standard' or 'Free'. \r\n\r\n`Basic` is deprecated, use `Standard` instead."},"size":{"Type":4,"Flags":2,"Description":"Not used. Retained for future use."},"family":{"Type":4,"Flags":2,"Description":"Not used. Retained for future use."},"capacity":{"Type":3,"Flags":0,"Description":"Optional, integer. The unit count of SignalR resource. 1 by default.\r\n\r\nIf present, following values are allowed:\r\n    Free: 1\r\n    Standard: 1,2,5,10,20,50,100"}}}},{"6":{"Value":"Free"}},{"6":{"Value":"Basic"}},{"6":{"Value":"Standard"}},{"6":{"Value":"Premium"}},{"5":{"Elements":[12,13,14,15,4]}},{"2":{"Name":"SignalRProperties","Properties":{"provisioningState":{"Type":27,"Flags":2,"Description":"Provisioning state of the resource."},"externalIP":{"Type":4,"Flags":2,"Description":"The publicly accessible IP of the resource."},"hostName":{"Type":4,"Flags":2,"Description":"FQDN of the service instance."},"publicPort":{"Type":3,"Flags":2,"Description":"The publicly accessible port of the resource which is designed for browser/client side usage."},"serverPort":{"Type":3,"Flags":2,"Description":"The publicly accessible port of the resource which is designed for customer server side usage."},"version":{"Type":4,"Flags":2,"Description":"Version of the resource. Probably you need the same or higher version of client SDKs."},"privateEndpointConnections":{"Type":47,"Flags":2,"Description":"Private endpoint connections to the resource."},"tls":{"Type":48,"Flags":0,"Description":"TLS settings."},"features":{"Type":55,"Flags":0,"Description":"List of SignalR featureFlags. e.g. ServiceMode.\r\n\r\nFeatureFlags that are not included in the parameters for the update operation will not be modified.\r\nAnd the response will only include featureFlags that are explicitly set. \r\nWhen a featureFlag is not explicitly set, SignalR service will use its globally default value. \r\nBut keep in mind, the default value doesn't mean \"false\". It varies in terms of different FeatureFlags."},"cors":{"Type":56,"Flags":0,"Description":"Cross-Origin Resource Sharing (CORS) settings."},"upstream":{"Type":58,"Flags":0,"Description":"Upstream settings when the Azure SignalR is in server-less mode."},"networkACLs":{"Type":66,"Flags":0,"Description":"Network ACLs"}}}},{"6":{"Value":"Unknown"}},{"6":{"Value":"Succeeded"}},{"6":{"Value":"Failed"}},{"6":{"Value":"Canceled"}},{"6":{"Value":"Running"}},{"6":{"Value":"Creating"}},{"6":{"Value":"Updating"}},{"6":{"Value":"Deleting"}},{"6":{"Value":"Moving"}},{"5":{"Elements":[18,19,20,21,22,23,24,25,26,4]}},{"2":{"Name":"PrivateEndpointConnection","Properties":{"properties":{"Type":29,"Flags":0,"Description":"Properties of the private endpoint connection"},"id":{"Type":4,"Flags":2,"Description":"Fully qualified resource Id for the resource."},"name":{"Type":4,"Flags":2,"Description":"The name of the resource."},"type":{"Type":4,"Flags":2,"Description":"The type of the resource - e.g. \"Microsoft.SignalRService/SignalR\""}}}},{"2":{"Name":"PrivateEndpointConnectionProperties","Properties":{"provisioningState":{"Type":39,"Flags":2,"Description":"Provisioning state of the private endpoint connection"},"privateEndpoint":{"Type":40,"Flags":0,"Description":"Private endpoint associated with the private endpoint connection"},"privateLinkServiceConnectionState":{"Type":41,"Flags":0,"Description":"Connection state"}}}},{"6":{"Value":"Unknown"}},{"6":{"Value":"Succeeded"}},{"6":{"Value":"Failed"}},{"6":{"Value":"Canceled"}},{"6":{"Value":"Running"}},{"6":{"Value":"Creating"}},{"6":{"Value":"Updating"}},{"6":{"Value":"Deleting"}},{"6":{"Value":"Moving"}},{"5":{"Elements":[30,31,32,33,34,35,36,37,38,4]}},{"2":{"Name":"PrivateEndpoint","Properties":{"id":{"Type":4,"Flags":0,"Description":"Full qualified Id of the private endpoint"}}}},{"2":{"Name":"PrivateLinkServiceConnectionState","Properties":{"status":{"Type":46,"Flags":0,"Description":"Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."},"description":{"Type":4,"Flags":0,"Description":"The reason for approval/rejection of the connection."},"actionsRequired":{"Type":4,"Flags":0,"Description":"A message indicating if changes on the service provider require any updates on the consumer."}}}},{"6":{"Value":"Pending"}},{"6":{"Value":"Approved"}},{"6":{"Value":"Rejected"}},{"6":{"Value":"Disconnected"}},{"5":{"Elements":[42,43,44,45,4]}},{"3":{"ItemType":28}},{"2":{"Name":"SignalRTlsSettings","Properties":{"clientCertEnabled":{"Type":2,"Flags":0,"Description":"Request client certificate during TLS handshake if enabled"}}}},{"2":{"Name":"SignalRFeature","Properties":{"flag":{"Type":53,"Flags":1,"Description":"FeatureFlags is the supported features of Azure SignalR service.\r\n- ServiceMode: Flag for backend server for SignalR service. Values allowed: \"Default\": have your own backend server; \"Serverless\": your application doesn't have a backend server; \"Classic\": for backward compatibility. Support both Default and Serverless mode but not recommended; \"PredefinedOnly\": for future use.\r\n- EnableConnectivityLogs: \"true\"/\"false\", to enable/disable the connectivity log category respectively."},"value":{"Type":4,"Flags":1,"Description":"Value of the feature flag. See Azure SignalR service document https://docs.microsoft.com/azure/azure-signalr/ for allowed values."},"properties":{"Type":54,"Flags":0,"Description":"Optional properties related to this feature."}}}},{"6":{"Value":"ServiceMode"}},{"6":{"Value":"EnableConnectivityLogs"}},{"6":{"Value":"EnableMessagingLogs"}},{"5":{"Elements":[50,51,52,4]}},{"2":{"Name":"SignalRFeatureProperties","Properties":{},"AdditionalProperties":4}},{"3":{"ItemType":49}},{"2":{"Name":"SignalRCorsSettings","Properties":{"allowedOrigins":{"Type":57,"Flags":0,"Description":"Gets or sets the list of origins that should be allowed to make cross-origin calls (for example: http://example.com:12345). Use \"*\" to allow all. If omitted, allow all by default."}}}},{"3":{"ItemType":4}},{"2":{"Name":"ServerlessUpstreamSettings","Properties":{"templates":{"Type":65,"Flags":0,"Description":"Gets or sets the list of Upstream URL templates. Order matters, and the first matching template takes effects."}}}},{"2":{"Name":"UpstreamTemplate","Properties":{"hubPattern":{"Type":4,"Flags":0,"Description":"Gets or sets the matching pattern for hub names. If not set, it matches any hub.\r\nThere are 3 kind of patterns supported:\r\n    1. \"*\", it to matches any hub name\r\n    2. Combine multiple hubs with \",\", for example \"hub1,hub2\", it matches \"hub1\" and \"hub2\"\r\n    3. The single hub name, for example, \"hub1\", it matches \"hub1\""},"eventPattern":{"Type":4,"Flags":0,"Description":"Gets or sets the matching pattern for event names. If not set, it matches any event.\r\nThere are 3 kind of patterns supported:\r\n    1. \"*\", it to matches any event name\r\n    2. Combine multiple events with \",\", for example \"connect,disconnect\", it matches event \"connect\" and \"disconnect\"\r\n    3. The single event name, for example, \"connect\", it matches \"connect\""},"categoryPattern":{"Type":4,"Flags":0,"Description":"Gets or sets the matching pattern for category names. If not set, it matches any category.\r\nThere are 3 kind of patterns supported:\r\n    1. \"*\", it to matches any category name\r\n    2. Combine multiple categories with \",\", for example \"connections,messages\", it matches category \"connections\" and \"messages\"\r\n    3. The single category name, for example, \"connections\", it matches the category \"connections\""},"urlTemplate":{"Type":4,"Flags":1,"Description":"Gets or sets the Upstream URL template. You can use 3 predefined parameters {hub}, {category} {event} inside the template, the value of the Upstream URL is dynamically calculated when the client request comes in.\r\nFor example, if the urlTemplate is `http://example.com/{hub}/api/{event}`, with a client request from hub `chat` connects, it will first POST to this URL: `http://example.com/chat/api/connect`."},"auth":{"Type":60,"Flags":0,"Description":"Gets or sets the auth settings for an upstream. If not set, no auth is used for upstream messages."}}}},{"2":{"Name":"UpstreamAuthSettings","Properties":{"type":{"Type":63,"Flags":0,"Description":"Gets or sets the type of auth. None or ManagedIdentity is supported now."},"managedIdentity":{"Type":64,"Flags":0,"Description":"Gets or sets the managed identity settings. It's required if the auth type is set to ManagedIdentity."}}}},{"6":{"Value":"None"}},{"6":{"Value":"ManagedIdentity"}},{"5":{"Elements":[61,62,4]}},{"2":{"Name":"ManagedIdentitySettings","Properties":{"resource":{"Type":4,"Flags":0,"Description":"The Resource indicating the App ID URI of the target resource.\r\nIt also appears in the aud (audience) claim of the issued token."}}}},{"3":{"ItemType":59}},{"2":{"Name":"SignalRNetworkACLs","Properties":{"defaultAction":{"Type":69,"Flags":0,"Description":"Default action when no other rule matches"},"publicNetwork":{"Type":70,"Flags":0,"Description":"ACL for requests from public network"},"privateEndpoints":{"Type":92,"Flags":0,"Description":"ACLs for requests from private endpoints"}}}},{"6":{"Value":"Allow"}},{"6":{"Value":"Deny"}},{"5":{"Elements":[67,68,4]}},{"2":{"Name":"NetworkACL","Properties":{"allow":{"Type":75,"Flags":0,"Description":"Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI."},"deny":{"Type":80,"Flags":0,"Description":"Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI."}}}},{"6":{"Value":"ClientConnection"}},{"6":{"Value":"ServerConnection"}},{"6":{"Value":"RESTAPI"}},{"5":{"Elements":[71,72,73,4]}},{"3":{"ItemType":74}},{"6":{"Value":"ClientConnection"}},{"6":{"Value":"ServerConnection"}},{"6":{"Value":"RESTAPI"}},{"5":{"Elements":[76,77,78,4]}},{"3":{"ItemType":79}},{"2":{"Name":"PrivateEndpointACL","Properties":{"name":{"Type":4,"Flags":1,"Description":"Name of the private endpoint connection"},"allow":{"Type":86,"Flags":0,"Description":"Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI."},"deny":{"Type":91,"Flags":0,"Description":"Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI."}}}},{"6":{"Value":"ClientConnection"}},{"6":{"Value":"ServerConnection"}},{"6":{"Value":"RESTAPI"}},{"5":{"Elements":[82,83,84,4]}},{"3":{"ItemType":85}},{"6":{"Value":"ClientConnection"}},{"6":{"Value":"ServerConnection"}},{"6":{"Value":"RESTAPI"}},{"5":{"Elements":[87,88,89,4]}},{"3":{"ItemType":90}},{"3":{"ItemType":81}},{"6":{"Value":"SignalR"}},{"6":{"Value":"RawWebSockets"}},{"5":{"Elements":[93,94,4]}},{"2":{"Name":"ManagedIdentity","Properties":{"type":{"Type":100,"Flags":0,"Description":"Represent the identity type: systemAssigned, userAssigned, None"},"userAssignedIdentities":{"Type":102,"Flags":0,"Description":"Get or set the user assigned identities"},"principalId":{"Type":4,"Flags":2,"Description":"Get the principal id for the system assigned identity.\r\nOnly be used in response."},"tenantId":{"Type":4,"Flags":2,"Description":"Get the tenant id for the system assigned identity.\r\nOnly be used in response"}}}},{"6":{"Value":"None"}},{"6":{"Value":"SystemAssigned"}},{"6":{"Value":"UserAssigned"}},{"5":{"Elements":[97,98,99,4]}},{"2":{"Name":"UserAssignedIdentityProperty","Properties":{"principalId":{"Type":4,"Flags":2,"Description":"Get the principal id for the user assigned identity"},"clientId":{"Type":4,"Flags":2,"Description":"Get the client id for the user assigned identity"}}}},{"2":{"Name":"ManagedIdentityUserAssignedIdentities","Properties":{},"AdditionalProperties":101}},{"2":{"Name":"TrackedResourceTags","Properties":{},"AdditionalProperties":4}},{"4":{"Name":"Microsoft.SignalRService/signalR@2020-07-01-preview","ScopeType":8,"Body":10,"Flags":0}},{"6":{"Value":"Microsoft.SignalRService/signalR/privateEndpointConnections"}},{"6":{"Value":"2020-07-01-preview"}},{"2":{"Name":"Microsoft.SignalRService/signalR/privateEndpointConnections","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":105,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":106,"Flags":10,"Description":"The resource api version"},"properties":{"Type":29,"Flags":0,"Description":"Properties of the private endpoint connection"}}}},{"4":{"Name":"Microsoft.SignalRService/signalR/privateEndpointConnections@2020-07-01-preview","ScopeType":8,"Body":107,"Flags":0}},{"2":{"Name":"NameAvailabilityParameters","Properties":{"type":{"Type":4,"Flags":1,"Description":"The resource type. Can be \"Microsoft.SignalRService/SignalR\" or \"Microsoft.SignalRService/webPubSub\""},"name":{"Type":4,"Flags":1,"Description":"The SignalR service name to validate. e.g.\"my-signalR-name-here\""}}}},{"2":{"Name":"NameAvailability","Properties":{"nameAvailable":{"Type":2,"Flags":0,"Description":"Indicates whether the name is available or not."},"reason":{"Type":4,"Flags":0,"Description":"The reason of the availability. Required if name is not available."},"message":{"Type":4,"Flags":0,"Description":"The message of the operation."}}}},{"8":{"Name":"checkNameAvailability","ResourceType":"Microsoft.SignalRService/locations","ApiVersion":"2020-07-01-preview","Output":110,"Input":109}},{"2":{"Name":"SignalRKeys","Properties":{"primaryKey":{"Type":4,"Flags":0,"Description":"The primary access key."},"secondaryKey":{"Type":4,"Flags":0,"Description":"The secondary access key."},"primaryConnectionString":{"Type":4,"Flags":0,"Description":"Connection string constructed via the primaryKey"},"secondaryConnectionString":{"Type":4,"Flags":0,"Description":"Connection string constructed via the secondaryKey"}}}},{"8":{"Name":"listKeys","ResourceType":"Microsoft.SignalRService/signalR","ApiVersion":"2020-07-01-preview","Output":112}},{"2":{"Name":"RegenerateKeyParameters","Properties":{"keyType":{"Type":117,"Flags":0,"Description":"The keyType to regenerate. Must be either 'primary' or 'secondary'(case-insensitive)."}}}},{"6":{"Value":"Primary"}},{"6":{"Value":"Secondary"}},{"5":{"Elements":[115,116,4]}},{"8":{"Name":"regenerateKey","ResourceType":"Microsoft.SignalRService/signalR","ApiVersion":"2020-07-01-preview","Input":114}},{"8":{"Name":"restart","ResourceType":"Microsoft.SignalRService/signalR","ApiVersion":"2020-07-01-preview"}}]