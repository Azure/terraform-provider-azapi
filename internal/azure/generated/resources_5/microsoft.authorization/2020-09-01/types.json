[
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Authorization/policyAssignments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2020-09-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Authorization/policyAssignments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Properties for the policy assignment."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the policy assignment. Only required when utilizing managed identity."
      },
      "identity": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "The managed identity associated with the policy assignment."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PolicyAssignmentProperties",
    "properties": {
      "displayName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The display name of the policy assignment."
      },
      "policyDefinitionId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The ID of the policy definition or policy set definition being assigned."
      },
      "scope": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The scope for the policy assignment."
      },
      "notScopes": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "The policy's excluded scopes."
      },
      "parameters": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "The parameter values for the assigned policy rule. The keys are the parameter names."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "This message will be part of response in case of policy violation."
      },
      "metadata": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "The policy assignment metadata. Metadata is an open ended object and is typically a collection of key value pairs."
      },
      "enforcementMode": {
        "type": {
          "$ref": "#/11"
        },
        "flags": 0,
        "description": "The policy assignment enforcement mode. Possible values are Default and DoNotEnforce."
      },
      "nonComplianceMessages": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0,
        "description": "The messages that describe why a resource is non-compliant with the policy."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ParameterValuesValue",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "The value of the parameter."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ObjectType",
    "name": "ParameterValues",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/6"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "DoNotEnforce"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NonComplianceMessage",
    "properties": {
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "A message that describes why a resource is non-compliant with the policy. This is shown in 'deny' error messages and on resource's non-compliant compliance results."
      },
      "policyDefinitionReferenceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The policy definition reference ID within a policy set definition the message is intended for. This is only applicable if the policy assignment assigns a policy set definition. If this is not provided the message applies to all policies assigned by this policy assignment."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/12"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Identity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The principal ID of the resource identity."
      },
      "tenantId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The tenant ID of the resource identity."
      },
      "type": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "The identity type. This is the only required field when adding a system assigned identity to a resource."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/15"
      },
      {
        "$ref": "#/16"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Authorization/policyAssignments@2020-09-01",
    "scopeType": 0,
    "body": {
      "$ref": "#/3"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2020-09-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Authorization/policyDefinitions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 0,
        "description": "The policy definition properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PolicyDefinitionProperties",
    "properties": {
      "policyType": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static."
      },
      "mode": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data."
      },
      "displayName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The display name of the policy definition."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The policy definition description."
      },
      "policyRule": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "The policy rule."
      },
      "metadata": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "The policy definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs."
      },
      "parameters": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 0,
        "description": "The parameter definitions for parameters used in the policy rule. The keys are the parameter names."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "StringLiteralType",
    "value": "BuiltIn"
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "StringLiteralType",
    "value": "Static"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/23"
      },
      {
        "$ref": "#/24"
      },
      {
        "$ref": "#/25"
      },
      {
        "$ref": "#/26"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ParameterDefinitionsValue",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The data type of the parameter."
      },
      "allowedValues": {
        "type": {
          "$ref": "#/37"
        },
        "flags": 0,
        "description": "The allowed values for the parameter."
      },
      "defaultValue": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "The default value for the parameter if no value is provided."
      },
      "metadata": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 0,
        "description": "General metadata for the parameter."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "String"
  },
  {
    "$type": "StringLiteralType",
    "value": "Array"
  },
  {
    "$type": "StringLiteralType",
    "value": "Object"
  },
  {
    "$type": "StringLiteralType",
    "value": "Boolean"
  },
  {
    "$type": "StringLiteralType",
    "value": "Integer"
  },
  {
    "$type": "StringLiteralType",
    "value": "Float"
  },
  {
    "$type": "StringLiteralType",
    "value": "DateTime"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/29"
      },
      {
        "$ref": "#/30"
      },
      {
        "$ref": "#/31"
      },
      {
        "$ref": "#/32"
      },
      {
        "$ref": "#/33"
      },
      {
        "$ref": "#/34"
      },
      {
        "$ref": "#/35"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/7"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ParameterDefinitionsValueMetadata",
    "properties": {
      "displayName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The display name for the parameter."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The description of the parameter."
      },
      "strongType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Used when assigning the policy definition through the portal. Provides a context aware list of values for the user to choose from."
      },
      "assignPermissions": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 0,
        "description": "Set to true to have Azure portal create role assignments on the resource ID or resource scope value of this parameter during policy assignment. This property is useful in case you wish to assign permissions outside the assignment scope."
      }
    },
    "additionalProperties": {
      "$ref": "#/7"
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ObjectType",
    "name": "ParameterDefinitions",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/28"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Authorization/policyDefinitions@2020-09-01",
    "scopeType": 7,
    "readOnlyScopes": 1,
    "body": {
      "$ref": "#/21"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Authorization/policySetDefinitions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2020-09-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Authorization/policySetDefinitions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/42"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "The policy definition properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PolicySetDefinitionProperties",
    "properties": {
      "policyType": {
        "type": {
          "$ref": "#/50"
        },
        "flags": 0,
        "description": "The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static."
      },
      "displayName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The display name of the policy set definition."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The policy set definition description."
      },
      "metadata": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "The policy set definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs."
      },
      "parameters": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 0,
        "description": "The policy set definition parameters that can be used in policy definition references."
      },
      "policyDefinitions": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 1,
        "description": "An array of policy definition references."
      },
      "policyDefinitionGroups": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0,
        "description": "The metadata describing groups of policy definition references within the policy set definition."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "StringLiteralType",
    "value": "BuiltIn"
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "StringLiteralType",
    "value": "Static"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/46"
      },
      {
        "$ref": "#/47"
      },
      {
        "$ref": "#/48"
      },
      {
        "$ref": "#/49"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ParameterDefinitions",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/28"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PolicyDefinitionReference",
    "properties": {
      "policyDefinitionId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The ID of the policy definition or policy set definition."
      },
      "parameters": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 0,
        "description": "The parameter values for the referenced policy rule. The keys are the parameter names."
      },
      "policyDefinitionReferenceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A unique id (within the policy set definition) for this policy definition reference."
      },
      "groupNames": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 0,
        "description": "The name of the groups that this policy definition reference belongs to."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ParameterValues",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/6"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/52"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PolicyDefinitionGroup",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the group."
      },
      "displayName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The group's display name."
      },
      "category": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The group's category."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The group's description."
      },
      "additionalMetadataId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A resource ID of a resource that contains additional metadata about the group."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/56"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Authorization/policySetDefinitions@2020-09-01",
    "scopeType": 7,
    "readOnlyScopes": 1,
    "body": {
      "$ref": "#/44"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Authorization/dataPolicyManifests"
  },
  {
    "$type": "StringLiteralType",
    "value": "2020-09-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Authorization/dataPolicyManifests",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/59"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/60"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/62"
        },
        "flags": 2,
        "description": "The data policy manifest properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataPolicyManifestProperties",
    "properties": {
      "namespaces": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "The list of namespaces for the data policy manifest."
      },
      "policyMode": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The policy mode of the data policy manifest."
      },
      "isBuiltInOnly": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 0,
        "description": "A value indicating whether policy mode is allowed only in built-in definitions."
      },
      "resourceTypeAliases": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 0,
        "description": "An array of resource type aliases."
      },
      "effects": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "The effect definition."
      },
      "fieldValues": {
        "type": {
          "$ref": "#/94"
        },
        "flags": 0,
        "description": "The non-alias field accessor values that can be used in the policy rule."
      },
      "resourceFunctions": {
        "type": {
          "$ref": "#/95"
        },
        "flags": 0,
        "description": "The resource functions definition specified in the data manifest."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceTypeAliases",
    "properties": {
      "resourceType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource type name."
      },
      "aliases": {
        "type": {
          "$ref": "#/90"
        },
        "flags": 0,
        "description": "The aliases for property names."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Alias",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The alias name."
      },
      "paths": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 0,
        "description": "The paths for an alias."
      },
      "type": {
        "type": {
          "$ref": "#/89"
        },
        "flags": 0,
        "description": "The type of the alias."
      },
      "defaultPath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The default path for an alias."
      },
      "defaultPattern": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 0,
        "description": "The default pattern for an alias."
      },
      "defaultMetadata": {
        "type": {
          "$ref": "#/72"
        },
        "flags": 2,
        "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AliasPath",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The path of an alias."
      },
      "apiVersions": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 0,
        "description": "The API versions."
      },
      "pattern": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 0,
        "description": "The pattern for an alias path."
      },
      "metadata": {
        "type": {
          "$ref": "#/72"
        },
        "flags": 2,
        "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AliasPattern",
    "properties": {
      "phrase": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The alias pattern phrase."
      },
      "variable": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The alias pattern variable."
      },
      "type": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 0,
        "description": "The type of alias pattern"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "StringLiteralType",
    "value": "Extract"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/69"
      },
      {
        "$ref": "#/70"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AliasPathMetadata",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/81"
        },
        "flags": 2,
        "description": "The type of the token that the alias path is referring to."
      },
      "attributes": {
        "type": {
          "$ref": "#/84"
        },
        "flags": 2,
        "description": "The attributes of the token that the alias path is referring to."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "StringLiteralType",
    "value": "Any"
  },
  {
    "$type": "StringLiteralType",
    "value": "String"
  },
  {
    "$type": "StringLiteralType",
    "value": "Object"
  },
  {
    "$type": "StringLiteralType",
    "value": "Array"
  },
  {
    "$type": "StringLiteralType",
    "value": "Integer"
  },
  {
    "$type": "StringLiteralType",
    "value": "Number"
  },
  {
    "$type": "StringLiteralType",
    "value": "Boolean"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/73"
      },
      {
        "$ref": "#/74"
      },
      {
        "$ref": "#/75"
      },
      {
        "$ref": "#/76"
      },
      {
        "$ref": "#/77"
      },
      {
        "$ref": "#/78"
      },
      {
        "$ref": "#/79"
      },
      {
        "$ref": "#/80"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Modifiable"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/82"
      },
      {
        "$ref": "#/83"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/66"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "StringLiteralType",
    "value": "PlainText"
  },
  {
    "$type": "StringLiteralType",
    "value": "Mask"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/86"
      },
      {
        "$ref": "#/87"
      },
      {
        "$ref": "#/88"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/65"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/64"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataEffect",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The data effect name."
      },
      "detailsSchema": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "The data effect details schema."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/92"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataManifestResourceFunctionsDefinition",
    "properties": {
      "standard": {
        "type": {
          "$ref": "#/96"
        },
        "flags": 0,
        "description": "The standard resource functions (subscription and/or resourceGroup)."
      },
      "custom": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 0,
        "description": "An array of data manifest custom resource definition."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataManifestCustomResourceFunctionDefinition",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The function name as it will appear in the policy rule. eg - 'vault'."
      },
      "fullyQualifiedResourceType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The fully qualified control plane resource type that this function represents. eg - 'Microsoft.KeyVault/vaults'."
      },
      "defaultProperties": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 0,
        "description": "The top-level properties that can be selected on the function's output. eg - [ \"name\", \"location\" ] if vault().name and vault().location are supported"
      },
      "allowCustomProperties": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 0,
        "description": "A value indicating whether the custom properties within the property bag are allowed. Needs api-version to be specified in the policy rule eg - vault('2019-06-01')."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/97"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Authorization/dataPolicyManifests@2020-09-01",
    "scopeType": 1,
    "body": {
      "$ref": "#/61"
    },
    "flags": 1
  }
]