[
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ConnectedVMwarevSphere/virtualMachines"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-01-10-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ConnectedVMwarevSphere/virtualMachines",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "Resource properties."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Gets or sets the location."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 0,
        "description": "Gets or sets the extended location."
      },
      "systemData": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 2,
        "description": "The system data."
      },
      "tags": {
        "type": {
          "$ref": "#/97"
        },
        "flags": 0,
        "description": "Gets or sets the Resource tags."
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
      },
      "identity": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 0,
        "description": "The identity of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineProperties",
    "properties": {
      "resourcePoolId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will\r\ndeploy."
      },
      "templateId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the ARM Id of the template resource to deploy the virtual machine."
      },
      "vCenterId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides."
      },
      "placementProfile": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Placement properties."
      },
      "osProfile": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "OS properties."
      },
      "hardwareProfile": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 0,
        "description": "Hardware properties."
      },
      "networkProfile": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 0,
        "description": "Network properties."
      },
      "storageProfile": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Storage properties."
      },
      "guestAgentProfile": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 0,
        "description": "Guest agent status properties."
      },
      "securityProfile": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0,
        "description": "Gets the security profile."
      },
      "moRefId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine."
      },
      "inventoryItemId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the inventory Item ID for the virtual machine."
      },
      "moName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the vCenter Managed Object name for the virtual machine."
      },
      "folderPath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the folder path of the vm."
      },
      "instanceUuid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the instance uuid of the vm."
      },
      "smbiosUuid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the SMBIOS UUID of the vm."
      },
      "firmwareType": {
        "type": {
          "$ref": "#/82"
        },
        "flags": 0,
        "description": "Firmware type"
      },
      "powerState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets the power state of the virtual machine."
      },
      "customResourceName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets the name of the corresponding resource in Kubernetes."
      },
      "uuid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets a unique identifier for this resource."
      },
      "statuses": {
        "type": {
          "$ref": "#/84"
        },
        "flags": 2,
        "description": "The resource status information."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the provisioning state."
      },
      "vmId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets a unique identifier for the vm resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PlacementProfile",
    "properties": {
      "resourcePoolId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will deploy."
      },
      "clusterId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the ARM Id of the cluster resource on which this virtual machine will deploy."
      },
      "hostId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the ARM Id of the host resource on which this virtual machine will deploy."
      },
      "datastoreId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the ARM Id of the datastore resource on which the data for the virtual machine will be kept."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "OsProfile",
    "properties": {
      "computerName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets computer name."
      },
      "adminUsername": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets administrator username."
      },
      "adminPassword": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 4,
        "description": "Gets or sets administrator password."
      },
      "guestId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the guestId."
      },
      "allowExtensionOperations": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Gets or sets a value indicating whether the VM is ready for extension operations."
      },
      "osType": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Gets or sets the type of the os."
      },
      "osName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets os name."
      },
      "toolsRunningStatus": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the current running status of VMware Tools running in the guest operating system."
      },
      "toolsVersionStatus": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system."
      },
      "toolsVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the current version of VMware Tools."
      },
      "windowsConfiguration": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0,
        "description": "Specifies the windows configuration for update management."
      },
      "linuxConfiguration": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Specifies the linux configuration for update management."
      }
    }
  },
  {
    "$type": "StringType",
    "sensitive": true
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Windows"
  },
  {
    "$type": "StringLiteralType",
    "value": "Linux"
  },
  {
    "$type": "StringLiteralType",
    "value": "Other"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "OsProfileWindowsConfiguration",
    "properties": {
      "patchSettings": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "Specifies the patch settings."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PatchSettings",
    "properties": {
      "assessmentMode": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the assessment mode."
      },
      "patchMode": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the patch mode."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "OsProfileLinuxConfiguration",
    "properties": {
      "patchSettings": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "Specifies the patch settings."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HardwareProfile",
    "properties": {
      "memorySizeMB": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Gets or sets memory size in MBs for the vm."
      },
      "numCPUs": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Gets or sets the number of vCPUs for the vm."
      },
      "numCoresPerSocket": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified."
      },
      "cpuHotAddEnabled": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running."
      },
      "cpuHotRemoveEnabled": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running."
      },
      "memoryHotAddEnabled": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Gets or sets a value indicating whether memory can be added while this virtual machine is running."
      }
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ObjectType",
    "name": "NetworkProfile",
    "properties": {
      "networkInterfaces": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "Gets or sets the list of network interfaces associated with the virtual machine."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NetworkInterface",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the name of the network interface."
      },
      "label": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to."
      },
      "ipAddresses": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 2,
        "description": "Gets or sets the nic ip addresses."
      },
      "macAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the NIC MAC address."
      },
      "networkId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine."
      },
      "nicType": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "NIC type"
      },
      "powerOnBoot": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 0,
        "description": "Gets or sets the power on boot."
      },
      "networkMoRefId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to."
      },
      "networkMoName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to."
      },
      "deviceKey": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Gets or sets the device key value."
      },
      "ipSettings": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 0,
        "description": "Gets or sets the ipsettings."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "vmxnet3"
  },
  {
    "$type": "StringLiteralType",
    "value": "vmxnet2"
  },
  {
    "$type": "StringLiteralType",
    "value": "vmxnet"
  },
  {
    "$type": "StringLiteralType",
    "value": "e1000"
  },
  {
    "$type": "StringLiteralType",
    "value": "e1000e"
  },
  {
    "$type": "StringLiteralType",
    "value": "pcnet32"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/21"
      },
      {
        "$ref": "#/22"
      },
      {
        "$ref": "#/23"
      },
      {
        "$ref": "#/24"
      },
      {
        "$ref": "#/25"
      },
      {
        "$ref": "#/26"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/28"
      },
      {
        "$ref": "#/29"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NicIPSettings",
    "properties": {
      "allocationMethod": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 0,
        "description": "Gets or sets the nic allocation method."
      },
      "dnsServers": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 0,
        "description": "Gets or sets the dns servers."
      },
      "gateway": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 0,
        "description": "Gets or sets the gateway."
      },
      "ipAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the ip address for the nic."
      },
      "subnetMask": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the mask."
      },
      "primaryWinsServer": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the primary server."
      },
      "secondaryWinsServer": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the secondary server."
      },
      "ipAddressInfo": {
        "type": {
          "$ref": "#/42"
        },
        "flags": 2,
        "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "unset"
  },
  {
    "$type": "StringLiteralType",
    "value": "dynamic"
  },
  {
    "$type": "StringLiteralType",
    "value": "static"
  },
  {
    "$type": "StringLiteralType",
    "value": "linklayer"
  },
  {
    "$type": "StringLiteralType",
    "value": "random"
  },
  {
    "$type": "StringLiteralType",
    "value": "other"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/32"
      },
      {
        "$ref": "#/33"
      },
      {
        "$ref": "#/34"
      },
      {
        "$ref": "#/35"
      },
      {
        "$ref": "#/36"
      },
      {
        "$ref": "#/37"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NicIPAddressSettings",
    "properties": {
      "allocationMethod": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets the ip address allocation method."
      },
      "ipAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets the ip address for the nic."
      },
      "subnetMask": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets the mask."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/41"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/19"
    }
  },
  {
    "$type": "ObjectType",
    "name": "StorageProfile",
    "properties": {
      "disks": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 0,
        "description": "Gets or sets the list of virtual disks associated with the virtual machine."
      },
      "scsiControllers": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 2,
        "description": "Gets or sets the list of virtual SCSI controllers associated with the virtual machine."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualDisk",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the name of the virtual disk."
      },
      "label": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the label of the virtual disk in vCenter."
      },
      "diskObjectId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the disk object id."
      },
      "diskSizeGB": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Gets or sets the disk total size."
      },
      "deviceKey": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Gets or sets the device key value."
      },
      "diskMode": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Gets or sets the disk mode."
      },
      "controllerKey": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Gets or sets the controller id."
      },
      "unitNumber": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Gets or sets the unit number of the disk on the controller."
      },
      "deviceName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the device name."
      },
      "diskType": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0,
        "description": "Gets or sets the disk backing type."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "persistent"
  },
  {
    "$type": "StringLiteralType",
    "value": "independent_persistent"
  },
  {
    "$type": "StringLiteralType",
    "value": "independent_nonpersistent"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/46"
      },
      {
        "$ref": "#/47"
      },
      {
        "$ref": "#/48"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "flat"
  },
  {
    "$type": "StringLiteralType",
    "value": "pmem"
  },
  {
    "$type": "StringLiteralType",
    "value": "rawphysical"
  },
  {
    "$type": "StringLiteralType",
    "value": "rawvirtual"
  },
  {
    "$type": "StringLiteralType",
    "value": "sparse"
  },
  {
    "$type": "StringLiteralType",
    "value": "sesparse"
  },
  {
    "$type": "StringLiteralType",
    "value": "unknown"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/50"
      },
      {
        "$ref": "#/51"
      },
      {
        "$ref": "#/52"
      },
      {
        "$ref": "#/53"
      },
      {
        "$ref": "#/54"
      },
      {
        "$ref": "#/55"
      },
      {
        "$ref": "#/56"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualScsiController",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Gets or sets the controller type."
      },
      "controllerKey": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Gets or sets the key of the controller."
      },
      "busNumber": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Gets or sets the bus number of the controller."
      },
      "scsiCtlrUnitNumber": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Gets or sets the SCSI controller unit number."
      },
      "sharing": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 0,
        "description": "Gets or sets the sharing mode."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "lsilogic"
  },
  {
    "$type": "StringLiteralType",
    "value": "buslogic"
  },
  {
    "$type": "StringLiteralType",
    "value": "pvscsi"
  },
  {
    "$type": "StringLiteralType",
    "value": "lsilogicsas"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/60"
      },
      {
        "$ref": "#/61"
      },
      {
        "$ref": "#/62"
      },
      {
        "$ref": "#/63"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "noSharing"
  },
  {
    "$type": "StringLiteralType",
    "value": "physicalSharing"
  },
  {
    "$type": "StringLiteralType",
    "value": "virtualSharing"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/65"
      },
      {
        "$ref": "#/66"
      },
      {
        "$ref": "#/67"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/59"
    }
  },
  {
    "$type": "ObjectType",
    "name": "GuestAgentProfile",
    "properties": {
      "vmUuid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Specifies the VM's unique SMBIOS ID."
      },
      "status": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 2,
        "description": "The status of the hybrid machine agent."
      },
      "lastStatusChange": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The time of the last status change."
      },
      "agentVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The hybrid machine agent full version."
      },
      "errorDetails": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 2,
        "description": "Details about the error state."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Connected"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disconnected"
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/71"
      },
      {
        "$ref": "#/72"
      },
      {
        "$ref": "#/73"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ErrorDetail",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The error's code."
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "A human readable error message."
      },
      "target": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Indicates which property in the request is responsible for the error."
      },
      "details": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 0,
        "description": "Additional error details."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/75"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/75"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecurityProfile",
    "properties": {
      "uefiSettings": {
        "type": {
          "$ref": "#/79"
        },
        "flags": 0,
        "description": "Specifies the security settings like secure boot used while creating the virtual machine."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UefiSettings",
    "properties": {
      "secureBootEnabled": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "Specifies whether secure boot should be enabled on the virtual machine."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "bios"
  },
  {
    "$type": "StringLiteralType",
    "value": "efi"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/80"
      },
      {
        "$ref": "#/81"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceStatus",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of the condition."
      },
      "status": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Status of the condition."
      },
      "reason": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The reason for the condition's status."
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A human readable message indicating details about the status."
      },
      "severity": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Severity with which to treat failures of this type of condition."
      },
      "lastUpdatedAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The last update time for this condition."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/83"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ExtendedLocation",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The extended location type."
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The extended location name."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/96"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/87"
      },
      {
        "$ref": "#/88"
      },
      {
        "$ref": "#/89"
      },
      {
        "$ref": "#/90"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/92"
      },
      {
        "$ref": "#/93"
      },
      {
        "$ref": "#/94"
      },
      {
        "$ref": "#/95"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Identity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The principal id of managed service identity."
      },
      "tenantId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The tenant of managed service identity."
      },
      "type": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 1,
        "description": "The type of managed service identity."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/99"
      },
      {
        "$ref": "#/100"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ConnectedVMwarevSphere/virtualMachines@2022-01-10-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/3"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ConnectedVMwarevSphere/resourcePools"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-01-10-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ConnectedVMwarevSphere/resourcePools",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/104"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/106"
        },
        "flags": 1,
        "description": "Resource properties."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Gets or sets the location."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 0,
        "description": "Gets or sets the extended location."
      },
      "systemData": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 2,
        "description": "The system data."
      },
      "tags": {
        "type": {
          "$ref": "#/108"
        },
        "flags": 0,
        "description": "Gets or sets the Resource tags."
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourcePoolProperties",
    "properties": {
      "uuid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets a unique identifier for this resource."
      },
      "vCenterId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides."
      },
      "moRefId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool."
      },
      "inventoryItemId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the inventory Item ID for the resource pool."
      },
      "moName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the vCenter Managed Object name for the resource pool."
      },
      "cpuSharesLevel": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers."
      },
      "cpuReservationMHz": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed\r\nto be available."
      },
      "cpuLimitMHz": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.\r\nUtilization will not exceed this limit even if there are available resources."
      },
      "memSharesLevel": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers."
      },
      "memReservationMB": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "Gets or sets MemReservationMB which specifies the guaranteed available memory in\r\nmegabytes."
      },
      "memLimitMB": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "Gets or sets MemLimitMB specifies a memory usage limit in megabytes.\r\nUtilization will not exceed the specified limit even if there are available resources."
      },
      "customResourceName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets the name of the corresponding resource in Kubernetes."
      },
      "statuses": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 2,
        "description": "The resource status information."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the provisioning state."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/83"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourcePoolTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ConnectedVMwarevSphere/resourcePools@2022-01-10-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/105"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ConnectedVMwarevSphere/clusters"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-01-10-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ConnectedVMwarevSphere/clusters",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/110"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/111"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/113"
        },
        "flags": 1,
        "description": "Resource properties."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Gets or sets the location."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 0,
        "description": "Gets or sets the extended location."
      },
      "systemData": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 2,
        "description": "The system data."
      },
      "tags": {
        "type": {
          "$ref": "#/117"
        },
        "flags": 0,
        "description": "Gets or sets the Resource tags."
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterProperties",
    "properties": {
      "uuid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets a unique identifier for this resource."
      },
      "vCenterId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides."
      },
      "moRefId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster."
      },
      "inventoryItemId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the inventory Item ID for the cluster."
      },
      "moName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the vCenter Managed Object name for the cluster."
      },
      "statuses": {
        "type": {
          "$ref": "#/114"
        },
        "flags": 2,
        "description": "The resource status information."
      },
      "customResourceName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets the name of the corresponding resource in Kubernetes."
      },
      "datastoreIds": {
        "type": {
          "$ref": "#/115"
        },
        "flags": 2,
        "description": "Gets or sets the datastore ARM ids."
      },
      "networkIds": {
        "type": {
          "$ref": "#/116"
        },
        "flags": 2,
        "description": "Gets or sets the network ARM ids."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the provisioning state."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/83"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ConnectedVMwarevSphere/clusters@2022-01-10-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/112"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ConnectedVMwarevSphere/hosts"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-01-10-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ConnectedVMwarevSphere/hosts",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/119"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/120"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/122"
        },
        "flags": 1,
        "description": "Resource properties."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Gets or sets the location."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 0,
        "description": "Gets or sets the extended location."
      },
      "systemData": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 2,
        "description": "The system data."
      },
      "tags": {
        "type": {
          "$ref": "#/124"
        },
        "flags": 0,
        "description": "Gets or sets the Resource tags."
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HostProperties",
    "properties": {
      "uuid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets a unique identifier for this resource."
      },
      "vCenterId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the ARM Id of the vCenter resource in which this host resides."
      },
      "moRefId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the host."
      },
      "inventoryItemId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the inventory Item ID for the host."
      },
      "moName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the vCenter Managed Object name for the host."
      },
      "statuses": {
        "type": {
          "$ref": "#/123"
        },
        "flags": 2,
        "description": "The resource status information."
      },
      "customResourceName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets the name of the corresponding resource in Kubernetes."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the provisioning state."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/83"
    }
  },
  {
    "$type": "ObjectType",
    "name": "HostTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ConnectedVMwarevSphere/hosts@2022-01-10-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/121"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ConnectedVMwarevSphere/datastores"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-01-10-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ConnectedVMwarevSphere/datastores",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/126"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/127"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/129"
        },
        "flags": 1,
        "description": "Resource properties."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Gets or sets the location."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 0,
        "description": "Gets or sets the extended location."
      },
      "systemData": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 2,
        "description": "The system data."
      },
      "tags": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 0,
        "description": "Gets or sets the Resource tags."
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DatastoreProperties",
    "properties": {
      "uuid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets a unique identifier for this resource."
      },
      "vCenterId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the ARM Id of the vCenter resource in which this datastore resides."
      },
      "moRefId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore."
      },
      "inventoryItemId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the inventory Item ID for the datastore."
      },
      "moName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the vCenter Managed Object name for the datastore."
      },
      "statuses": {
        "type": {
          "$ref": "#/130"
        },
        "flags": 2,
        "description": "The resource status information."
      },
      "customResourceName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets the name of the corresponding resource in Kubernetes."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/139"
        },
        "flags": 2,
        "description": "Provisioning state of the resource."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/83"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Created"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/131"
      },
      {
        "$ref": "#/132"
      },
      {
        "$ref": "#/133"
      },
      {
        "$ref": "#/134"
      },
      {
        "$ref": "#/135"
      },
      {
        "$ref": "#/136"
      },
      {
        "$ref": "#/137"
      },
      {
        "$ref": "#/138"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DatastoreTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ConnectedVMwarevSphere/datastores@2022-01-10-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/128"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ConnectedVMwarevSphere/vcenters"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-01-10-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ConnectedVMwarevSphere/vcenters",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/142"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/143"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/145"
        },
        "flags": 1,
        "description": "Resource properties."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Gets or sets the location."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 0,
        "description": "Gets or sets the extended location."
      },
      "systemData": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 2,
        "description": "The system data."
      },
      "tags": {
        "type": {
          "$ref": "#/149"
        },
        "flags": 0,
        "description": "Gets or sets the Resource tags."
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VCenterProperties",
    "properties": {
      "uuid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets a unique identifier for this resource."
      },
      "fqdn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Gets or sets the FQDN/IPAddress of the vCenter."
      },
      "port": {
        "type": {
          "$ref": "#/146"
        },
        "flags": 0,
        "description": "Gets or sets the port of the vCenter."
      },
      "version": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the version of the vCenter."
      },
      "instanceUuid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the instance UUID of the vCenter."
      },
      "connectionStatus": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the connection status to the vCenter."
      },
      "customResourceName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets the name of the corresponding resource in Kubernetes."
      },
      "credentials": {
        "type": {
          "$ref": "#/147"
        },
        "flags": 0,
        "description": "Username / Password Credentials to connect to vcenter."
      },
      "statuses": {
        "type": {
          "$ref": "#/148"
        },
        "flags": 2,
        "description": "The resource status information."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the provisioning state."
      }
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 65535
  },
  {
    "$type": "ObjectType",
    "name": "VICredential",
    "properties": {
      "username": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets username to connect with the vCenter."
      },
      "password": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 4,
        "description": "Gets or sets the password to connect with the vCenter."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/83"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VCenterTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ConnectedVMwarevSphere/vcenters@2022-01-10-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/144"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-01-10-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/151"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/152"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/154"
        },
        "flags": 1,
        "description": "Resource properties."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Gets or sets the location."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 0,
        "description": "Gets or sets the extended location."
      },
      "systemData": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 2,
        "description": "The system data."
      },
      "tags": {
        "type": {
          "$ref": "#/165"
        },
        "flags": 0,
        "description": "Gets or sets the Resource tags."
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineTemplateProperties",
    "properties": {
      "uuid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets a unique identifier for this resource."
      },
      "vCenterId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides."
      },
      "moRefId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine\r\ntemplate."
      },
      "inventoryItemId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the inventory Item ID for the virtual machine template."
      },
      "moName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the vCenter Managed Object name for the virtual machine template."
      },
      "memorySizeMB": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "Gets or sets memory size in MBs for the template."
      },
      "numCPUs": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "Gets or sets the number of vCPUs for the template."
      },
      "numCoresPerSocket": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "Gets or sets the number of cores per socket for the template.\r\nDefaults to 1 if unspecified."
      },
      "osType": {
        "type": {
          "$ref": "#/158"
        },
        "flags": 2,
        "description": "Gets or sets the type of the os."
      },
      "osName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets os name."
      },
      "folderPath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the folder path of the template."
      },
      "networkInterfaces": {
        "type": {
          "$ref": "#/159"
        },
        "flags": 2,
        "description": "Gets or sets the network interfaces of the template."
      },
      "disks": {
        "type": {
          "$ref": "#/160"
        },
        "flags": 2,
        "description": "Gets or sets the disks the template."
      },
      "customResourceName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets the name of the corresponding resource in Kubernetes."
      },
      "toolsVersionStatus": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system."
      },
      "toolsVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the current version of VMware Tools."
      },
      "firmwareType": {
        "type": {
          "$ref": "#/163"
        },
        "flags": 2,
        "description": "Firmware type"
      },
      "statuses": {
        "type": {
          "$ref": "#/164"
        },
        "flags": 2,
        "description": "The resource status information."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the provisioning state."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Windows"
  },
  {
    "$type": "StringLiteralType",
    "value": "Linux"
  },
  {
    "$type": "StringLiteralType",
    "value": "Other"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/155"
      },
      {
        "$ref": "#/156"
      },
      {
        "$ref": "#/157"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/19"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "bios"
  },
  {
    "$type": "StringLiteralType",
    "value": "efi"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/161"
      },
      {
        "$ref": "#/162"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/83"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineTemplateTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates@2022-01-10-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/153"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ConnectedVMwarevSphere/virtualNetworks"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-01-10-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ConnectedVMwarevSphere/virtualNetworks",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/167"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/168"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/170"
        },
        "flags": 1,
        "description": "Resource properties."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Gets or sets the location."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 0,
        "description": "Gets or sets the extended location."
      },
      "systemData": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 2,
        "description": "The system data."
      },
      "tags": {
        "type": {
          "$ref": "#/172"
        },
        "flags": 0,
        "description": "Gets or sets the Resource tags."
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualNetworkProperties",
    "properties": {
      "uuid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets a unique identifier for this resource."
      },
      "vCenterId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides."
      },
      "moRefId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network."
      },
      "inventoryItemId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the inventory Item ID for the virtual network."
      },
      "moName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the vCenter Managed Object name for the virtual network."
      },
      "customResourceName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets the name of the corresponding resource in Kubernetes."
      },
      "statuses": {
        "type": {
          "$ref": "#/171"
        },
        "flags": 2,
        "description": "The resource status information."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the provisioning state."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/83"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualNetworkTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ConnectedVMwarevSphere/virtualNetworks@2022-01-10-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/169"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ConnectedVMwarevSphere/vcenters/inventoryItems"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-01-10-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ConnectedVMwarevSphere/vcenters/inventoryItems",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/174"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 1,
        "description": "Resource properties."
      },
      "systemData": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 2,
        "description": "The system data."
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "InventoryItemProperties",
    "discriminator": "inventoryType",
    "baseProperties": {
      "managedResourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the tracked resource id corresponding to the inventory resource."
      },
      "moRefId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item."
      },
      "moName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the vCenter Managed Object name for the inventory item."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the provisioning state."
      }
    },
    "elements": {
      "Cluster": {
        "$ref": "#/178"
      },
      "Datastore": {
        "$ref": "#/180"
      },
      "Host": {
        "$ref": "#/182"
      },
      "ResourcePool": {
        "$ref": "#/185"
      },
      "VirtualMachine": {
        "$ref": "#/187"
      },
      "VirtualMachineTemplate": {
        "$ref": "#/194"
      },
      "VirtualNetwork": {
        "$ref": "#/200"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterInventoryItem",
    "properties": {
      "inventoryType": {
        "type": {
          "$ref": "#/179"
        },
        "flags": 1,
        "description": "They inventory type."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Cluster"
  },
  {
    "$type": "ObjectType",
    "name": "DatastoreInventoryItem",
    "properties": {
      "capacityGB": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Gets or sets Maximum capacity of this datastore, in GBs."
      },
      "freeSpaceGB": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Gets or sets Available space of this datastore, in GBs."
      },
      "inventoryType": {
        "type": {
          "$ref": "#/181"
        },
        "flags": 1,
        "description": "They inventory type."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Datastore"
  },
  {
    "$type": "ObjectType",
    "name": "HostInventoryItem",
    "properties": {
      "parent": {
        "type": {
          "$ref": "#/183"
        },
        "flags": 0,
        "description": "Parent host inventory resource details."
      },
      "inventoryType": {
        "type": {
          "$ref": "#/184"
        },
        "flags": 1,
        "description": "They inventory type."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "InventoryItemDetails",
    "properties": {
      "inventoryItemId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the inventory Item ID for the resource."
      },
      "moName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the vCenter Managed Object name for the resource."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Host"
  },
  {
    "$type": "ObjectType",
    "name": "ResourcePoolInventoryItem",
    "properties": {
      "parent": {
        "type": {
          "$ref": "#/183"
        },
        "flags": 0,
        "description": "Parent resourcePool inventory resource details."
      },
      "inventoryType": {
        "type": {
          "$ref": "#/186"
        },
        "flags": 1,
        "description": "They inventory type."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ResourcePool"
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineInventoryItem",
    "properties": {
      "osType": {
        "type": {
          "$ref": "#/191"
        },
        "flags": 0,
        "description": "Gets or sets the type of the os."
      },
      "osName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets os name."
      },
      "ipAddresses": {
        "type": {
          "$ref": "#/192"
        },
        "flags": 0,
        "description": "Gets or sets the nic ip addresses."
      },
      "folderPath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the folder path of the vm."
      },
      "host": {
        "type": {
          "$ref": "#/183"
        },
        "flags": 0,
        "description": "Host inventory resource details."
      },
      "resourcePool": {
        "type": {
          "$ref": "#/183"
        },
        "flags": 0,
        "description": "ResourcePool inventory resource details."
      },
      "instanceUuid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the instance uuid of the vm."
      },
      "smbiosUuid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the SMBIOS UUID of the vm."
      },
      "powerState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets the power state of the virtual machine."
      },
      "toolsRunningStatus": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the current running status of VMware Tools running in the guest operating system."
      },
      "toolsVersionStatus": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system."
      },
      "toolsVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the current version of VMware Tools."
      },
      "inventoryType": {
        "type": {
          "$ref": "#/193"
        },
        "flags": 1,
        "description": "They inventory type."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Windows"
  },
  {
    "$type": "StringLiteralType",
    "value": "Linux"
  },
  {
    "$type": "StringLiteralType",
    "value": "Other"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/188"
      },
      {
        "$ref": "#/189"
      },
      {
        "$ref": "#/190"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "VirtualMachine"
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineTemplateInventoryItem",
    "properties": {
      "memorySizeMB": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Gets or sets memory size in MBs for the template."
      },
      "numCPUs": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Gets or sets the number of vCPUs for the template."
      },
      "numCoresPerSocket": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Gets or sets the number of cores per socket for the template.\r\nDefaults to 1 if unspecified."
      },
      "osType": {
        "type": {
          "$ref": "#/198"
        },
        "flags": 0,
        "description": "Gets or sets the type of the os."
      },
      "osName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets os name."
      },
      "folderPath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the folder path of the template."
      },
      "inventoryType": {
        "type": {
          "$ref": "#/199"
        },
        "flags": 1,
        "description": "They inventory type."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Windows"
  },
  {
    "$type": "StringLiteralType",
    "value": "Linux"
  },
  {
    "$type": "StringLiteralType",
    "value": "Other"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/195"
      },
      {
        "$ref": "#/196"
      },
      {
        "$ref": "#/197"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "VirtualMachineTemplate"
  },
  {
    "$type": "ObjectType",
    "name": "VirtualNetworkInventoryItem",
    "properties": {
      "inventoryType": {
        "type": {
          "$ref": "#/201"
        },
        "flags": 1,
        "description": "They inventory type."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "VirtualNetwork"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ConnectedVMwarevSphere/vcenters/inventoryItems@2022-01-10-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/176"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ConnectedVMwarevSphere/virtualMachines/hybridIdentityMetadata"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-01-10-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ConnectedVMwarevSphere/virtualMachines/hybridIdentityMetadata",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/203"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/204"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/206"
        },
        "flags": 1,
        "description": "Resource properties."
      },
      "systemData": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 2,
        "description": "The system data."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HybridIdentityMetadataProperties",
    "properties": {
      "vmId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the Vm Id."
      },
      "publicKey": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the Public Key."
      },
      "identity": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 2,
        "description": "The identity of the resource."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the provisioning state."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ConnectedVMwarevSphere/virtualMachines/hybridIdentityMetadata@2022-01-10-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/205"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ConnectedVMwarevSphere/virtualMachines/extensions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-01-10-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ConnectedVMwarevSphere/virtualMachines/extensions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/209"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/211"
        },
        "flags": 0,
        "description": "Describes Machine Extension Properties."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets the location."
      },
      "systemData": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 2,
        "description": "The system data."
      },
      "tags": {
        "type": {
          "$ref": "#/219"
        },
        "flags": 0,
        "description": "Gets or sets the Resource tags."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MachineExtensionProperties",
    "properties": {
      "forceUpdateTag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
      },
      "publisher": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the extension handler publisher."
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
      },
      "typeHandlerVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the version of the script handler."
      },
      "enableAutomaticUpgrade": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
      },
      "autoUpgradeMinorVersion": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
      },
      "settings": {
        "type": {
          "$ref": "#/212"
        },
        "flags": 0,
        "description": "Json formatted public settings for the extension."
      },
      "protectedSettings": {
        "type": {
          "$ref": "#/212"
        },
        "flags": 0,
        "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The provisioning state, which only appears in the response."
      },
      "instanceView": {
        "type": {
          "$ref": "#/213"
        },
        "flags": 0,
        "description": "The machine extension instance view."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ObjectType",
    "name": "MachineExtensionPropertiesInstanceView",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The machine extension name."
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
      },
      "typeHandlerVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Specifies the version of the script handler."
      },
      "status": {
        "type": {
          "$ref": "#/214"
        },
        "flags": 0,
        "description": "Instance view status."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MachineExtensionInstanceViewStatus",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The status code."
      },
      "level": {
        "type": {
          "$ref": "#/218"
        },
        "flags": 2,
        "description": "The level code."
      },
      "displayStatus": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The short localizable label for the status."
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The detailed status message, including for alerts and error messages."
      },
      "time": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The time of the status."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Info"
  },
  {
    "$type": "StringLiteralType",
    "value": "Warning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/215"
      },
      {
        "$ref": "#/216"
      },
      {
        "$ref": "#/217"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "MachineExtensionTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ConnectedVMwarevSphere/virtualMachines/extensions@2022-01-10-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/210"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ConnectedVMwarevSphere/virtualMachines/guestAgents"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-01-10-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ConnectedVMwarevSphere/virtualMachines/guestAgents",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/221"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/222"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/224"
        },
        "flags": 1,
        "description": "Resource properties."
      },
      "systemData": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 2,
        "description": "The system data."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GuestAgentProperties",
    "properties": {
      "uuid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets a unique identifier for this resource."
      },
      "credentials": {
        "type": {
          "$ref": "#/225"
        },
        "flags": 0,
        "description": "Username / Password Credentials to provision guest agent."
      },
      "httpProxyConfig": {
        "type": {
          "$ref": "#/226"
        },
        "flags": 0,
        "description": "HTTP Proxy configuration for the VM."
      },
      "provisioningAction": {
        "type": {
          "$ref": "#/230"
        },
        "flags": 0,
        "description": "Gets or sets the guest agent provisioning action."
      },
      "status": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the guest agent status."
      },
      "customResourceName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets the name of the corresponding resource in Kubernetes."
      },
      "statuses": {
        "type": {
          "$ref": "#/231"
        },
        "flags": 2,
        "description": "The resource status information."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Gets or sets the provisioning state."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GuestCredential",
    "properties": {
      "username": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets username to connect with the guest."
      },
      "password": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 4,
        "description": "Gets or sets the password to connect with the guest."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HttpProxyConfiguration",
    "properties": {
      "httpsProxy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gets or sets httpsProxy url."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "install"
  },
  {
    "$type": "StringLiteralType",
    "value": "uninstall"
  },
  {
    "$type": "StringLiteralType",
    "value": "repair"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/227"
      },
      {
        "$ref": "#/228"
      },
      {
        "$ref": "#/229"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/83"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ConnectedVMwarevSphere/virtualMachines/guestAgents@2022-01-10-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/223"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineAssessPatchesResult",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/239"
        },
        "flags": 2,
        "description": "The overall success or failure status of the operation. It remains \"InProgress\" until the operation completes. At that point it will become \"Unknown\", \"Failed\", \"Succeeded\", or \"CompletedWithWarnings.\""
      },
      "assessmentActivityId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The activity ID of the operation that produced this result."
      },
      "rebootPending": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred."
      },
      "availablePatchCountByClassification": {
        "type": {
          "$ref": "#/240"
        },
        "flags": 0,
        "description": "Summarization of patches available for installation on the machine by classification."
      },
      "startDateTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The UTC timestamp when the operation began."
      },
      "lastModifiedDateTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The UTC timestamp when the operation finished."
      },
      "startedBy": {
        "type": {
          "$ref": "#/243"
        },
        "flags": 2,
        "description": "Indicates if operation was triggered by user or by platform."
      },
      "patchServiceUsed": {
        "type": {
          "$ref": "#/250"
        },
        "flags": 2,
        "description": "Specifies the patch service used for the operation."
      },
      "osType": {
        "type": {
          "$ref": "#/253"
        },
        "flags": 2,
        "description": "The operating system type of the machine."
      },
      "errorDetails": {
        "type": {
          "$ref": "#/75"
        },
        "flags": 2,
        "description": "The errors that were encountered during execution of the operation. The details array contains the list of them."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "CompletedWithWarnings"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/234"
      },
      {
        "$ref": "#/235"
      },
      {
        "$ref": "#/236"
      },
      {
        "$ref": "#/237"
      },
      {
        "$ref": "#/238"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AvailablePatchCountByClassification",
    "properties": {
      "security": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "Number of security patches available for installation."
      },
      "critical": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "Number of critical patches available for installation."
      },
      "definition": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "Number of definition patches available for installation."
      },
      "updateRollup": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "Number of update Rollup patches available for installation."
      },
      "featurePack": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "Number of feature pack patches available for installation."
      },
      "servicePack": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "Number of service pack patches available for installation."
      },
      "tools": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "Number of tools patches available for installation."
      },
      "updates": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "Number of updates category patches available for installation."
      },
      "other": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "Number of other patches available for installation."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Platform"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/241"
      },
      {
        "$ref": "#/242"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "WU"
  },
  {
    "$type": "StringLiteralType",
    "value": "WU_WSUS"
  },
  {
    "$type": "StringLiteralType",
    "value": "YUM"
  },
  {
    "$type": "StringLiteralType",
    "value": "APT"
  },
  {
    "$type": "StringLiteralType",
    "value": "Zypper"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/244"
      },
      {
        "$ref": "#/245"
      },
      {
        "$ref": "#/246"
      },
      {
        "$ref": "#/247"
      },
      {
        "$ref": "#/248"
      },
      {
        "$ref": "#/249"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Windows"
  },
  {
    "$type": "StringLiteralType",
    "value": "Linux"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/251"
      },
      {
        "$ref": "#/252"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceFunctionType",
    "name": "assessPatches",
    "resourceType": "Microsoft.ConnectedVMwarevSphere/virtualMachines",
    "apiVersion": "2022-01-10-preview",
    "output": {
      "$ref": "#/233"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineInstallPatchesParameters",
    "properties": {
      "maximumDuration": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Specifies the maximum amount of time that the operation will run. It must be an ISO 8601-compliant duration string such as PT4H (4 hours)"
      },
      "rebootSetting": {
        "type": {
          "$ref": "#/259"
        },
        "flags": 1,
        "description": "Defines when it is acceptable to reboot a VM during a software update operation."
      },
      "windowsParameters": {
        "type": {
          "$ref": "#/260"
        },
        "flags": 0,
        "description": "Input for InstallPatches on a Windows VM, as directly received by the API"
      },
      "linuxParameters": {
        "type": {
          "$ref": "#/273"
        },
        "flags": 0,
        "description": "Input for InstallPatches on a Linux VM, as directly received by the API"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "IfRequired"
  },
  {
    "$type": "StringLiteralType",
    "value": "Never"
  },
  {
    "$type": "StringLiteralType",
    "value": "Always"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/256"
      },
      {
        "$ref": "#/257"
      },
      {
        "$ref": "#/258"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "WindowsParameters",
    "properties": {
      "classificationsToInclude": {
        "type": {
          "$ref": "#/270"
        },
        "flags": 0,
        "description": "The update classifications to select when installing patches for Windows."
      },
      "kbNumbersToInclude": {
        "type": {
          "$ref": "#/271"
        },
        "flags": 0,
        "description": "Kbs to include in the patch operation"
      },
      "kbNumbersToExclude": {
        "type": {
          "$ref": "#/272"
        },
        "flags": 0,
        "description": "Kbs to exclude in the patch operation"
      },
      "excludeKbsRequiringReboot": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "Filters out Kbs that don't have an InstallationRebootBehavior of 'NeverReboots' when this is set to true."
      },
      "maxPatchPublishDate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "This is used to install patches that were published on or before this given max published date."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Critical"
  },
  {
    "$type": "StringLiteralType",
    "value": "Security"
  },
  {
    "$type": "StringLiteralType",
    "value": "UpdateRollUp"
  },
  {
    "$type": "StringLiteralType",
    "value": "FeaturePack"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicePack"
  },
  {
    "$type": "StringLiteralType",
    "value": "Definition"
  },
  {
    "$type": "StringLiteralType",
    "value": "Tools"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updates"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/261"
      },
      {
        "$ref": "#/262"
      },
      {
        "$ref": "#/263"
      },
      {
        "$ref": "#/264"
      },
      {
        "$ref": "#/265"
      },
      {
        "$ref": "#/266"
      },
      {
        "$ref": "#/267"
      },
      {
        "$ref": "#/268"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/269"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "LinuxParameters",
    "properties": {
      "classificationsToInclude": {
        "type": {
          "$ref": "#/278"
        },
        "flags": 0,
        "description": "The update classifications to select when installing patches for Linux."
      },
      "packageNameMasksToInclude": {
        "type": {
          "$ref": "#/279"
        },
        "flags": 0,
        "description": "packages to include in the patch operation. Format: packageName_packageVersion"
      },
      "packageNameMasksToExclude": {
        "type": {
          "$ref": "#/280"
        },
        "flags": 0,
        "description": "packages to exclude in the patch operation. Format: packageName_packageVersion"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Critical"
  },
  {
    "$type": "StringLiteralType",
    "value": "Security"
  },
  {
    "$type": "StringLiteralType",
    "value": "Other"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/274"
      },
      {
        "$ref": "#/275"
      },
      {
        "$ref": "#/276"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/277"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineInstallPatchesResult",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/287"
        },
        "flags": 2,
        "description": "The overall success or failure status of the operation. It remains \"InProgress\" until the operation completes. At that point it will become \"Failed\", \"Succeeded\", \"Unknown\" or \"CompletedWithWarnings.\""
      },
      "installationActivityId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The activity ID of the operation that produced this result."
      },
      "rebootStatus": {
        "type": {
          "$ref": "#/294"
        },
        "flags": 2,
        "description": "The reboot state of the VM following completion of the operation."
      },
      "maintenanceWindowExceeded": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Whether the operation ran out of time before it completed all its intended actions."
      },
      "excludedPatchCount": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "The number of patches that were not installed due to the user blocking their installation."
      },
      "notSelectedPatchCount": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "The number of patches that were detected as available for install, but did not meet the operation's criteria."
      },
      "pendingPatchCount": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "The number of patches that were identified as meeting the installation criteria, but were not able to be installed. Typically this happens when maintenanceWindowExceeded == true."
      },
      "installedPatchCount": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "The number of patches successfully installed."
      },
      "failedPatchCount": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 2,
        "description": "The number of patches that could not be installed due to some issue. See errors for details."
      },
      "startDateTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The UTC timestamp when the operation began."
      },
      "lastModifiedDateTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The UTC timestamp when the operation finished."
      },
      "startedBy": {
        "type": {
          "$ref": "#/297"
        },
        "flags": 2,
        "description": "Indicates if operation was triggered by user or by platform."
      },
      "patchServiceUsed": {
        "type": {
          "$ref": "#/304"
        },
        "flags": 2,
        "description": "Specifies the patch service used for the operation."
      },
      "osType": {
        "type": {
          "$ref": "#/307"
        },
        "flags": 2,
        "description": "The operating system type of the machine."
      },
      "errorDetails": {
        "type": {
          "$ref": "#/75"
        },
        "flags": 2,
        "description": "The errors that were encountered during execution of the operation. The details array contains the list of them."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "CompletedWithWarnings"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/282"
      },
      {
        "$ref": "#/283"
      },
      {
        "$ref": "#/284"
      },
      {
        "$ref": "#/285"
      },
      {
        "$ref": "#/286"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotNeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Required"
  },
  {
    "$type": "StringLiteralType",
    "value": "Started"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Completed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/288"
      },
      {
        "$ref": "#/289"
      },
      {
        "$ref": "#/290"
      },
      {
        "$ref": "#/291"
      },
      {
        "$ref": "#/292"
      },
      {
        "$ref": "#/293"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Platform"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/295"
      },
      {
        "$ref": "#/296"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "WU"
  },
  {
    "$type": "StringLiteralType",
    "value": "WU_WSUS"
  },
  {
    "$type": "StringLiteralType",
    "value": "YUM"
  },
  {
    "$type": "StringLiteralType",
    "value": "APT"
  },
  {
    "$type": "StringLiteralType",
    "value": "Zypper"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/298"
      },
      {
        "$ref": "#/299"
      },
      {
        "$ref": "#/300"
      },
      {
        "$ref": "#/301"
      },
      {
        "$ref": "#/302"
      },
      {
        "$ref": "#/303"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Windows"
  },
  {
    "$type": "StringLiteralType",
    "value": "Linux"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/305"
      },
      {
        "$ref": "#/306"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceFunctionType",
    "name": "installPatches",
    "resourceType": "Microsoft.ConnectedVMwarevSphere/virtualMachines",
    "apiVersion": "2022-01-10-preview",
    "output": {
      "$ref": "#/281"
    },
    "input": {
      "$ref": "#/255"
    }
  },
  {
    "$type": "ObjectType",
    "name": "StopVirtualMachineOptions",
    "properties": {
      "skipShutdown": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "Gets or sets a value indicating whether to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Defaults to false."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "stop",
    "resourceType": "Microsoft.ConnectedVMwarevSphere/virtualMachines",
    "apiVersion": "2022-01-10-preview",
    "input": {
      "$ref": "#/309"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "start",
    "resourceType": "Microsoft.ConnectedVMwarevSphere/virtualMachines",
    "apiVersion": "2022-01-10-preview"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "restart",
    "resourceType": "Microsoft.ConnectedVMwarevSphere/virtualMachines",
    "apiVersion": "2022-01-10-preview"
  }
]