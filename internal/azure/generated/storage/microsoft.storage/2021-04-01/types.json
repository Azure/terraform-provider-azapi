[{"1":{"Kind":1}},{"1":{"Kind":2}},{"1":{"Kind":3}},{"1":{"Kind":4}},{"1":{"Kind":5}},{"1":{"Kind":6}},{"1":{"Kind":7}},{"1":{"Kind":8}},{"6":{"Value":"Microsoft.Storage/storageAccounts"}},{"6":{"Value":"2021-04-01"}},{"2":{"Name":"Microsoft.Storage/storageAccounts","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":8,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":9,"Flags":10,"Description":"The resource api version"},"sku":{"Type":11,"Flags":1,"Description":"Required. Gets or sets the SKU name."},"kind":{"Type":29,"Flags":1,"Description":"Required. Indicates the type of storage account."},"location":{"Type":4,"Flags":1,"Description":"Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed."},"extendedLocation":{"Type":30,"Flags":0,"Description":"Optional. Set the extended location of the resource. If not set, the storage account will be created in Azure main region. Otherwise it will be created in the specified extended location"},"tags":{"Type":33,"Flags":0,"Description":"Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters."},"identity":{"Type":34,"Flags":0,"Description":"The identity of the resource."},"properties":{"Type":42,"Flags":0,"Description":"The parameters used to create the storage account."}}}},{"2":{"Name":"Sku","Properties":{"name":{"Type":20,"Flags":1,"Description":"The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType."},"tier":{"Type":23,"Flags":2,"Description":"The SKU tier. This is based on the SKU name."}}}},{"6":{"Value":"Standard_LRS"}},{"6":{"Value":"Standard_GRS"}},{"6":{"Value":"Standard_RAGRS"}},{"6":{"Value":"Standard_ZRS"}},{"6":{"Value":"Premium_LRS"}},{"6":{"Value":"Premium_ZRS"}},{"6":{"Value":"Standard_GZRS"}},{"6":{"Value":"Standard_RAGZRS"}},{"5":{"Elements":[12,13,14,15,16,17,18,19,4]}},{"6":{"Value":"Standard"}},{"6":{"Value":"Premium"}},{"5":{"Elements":[21,22]}},{"6":{"Value":"Storage"}},{"6":{"Value":"StorageV2"}},{"6":{"Value":"BlobStorage"}},{"6":{"Value":"FileStorage"}},{"6":{"Value":"BlockBlobStorage"}},{"5":{"Elements":[24,25,26,27,28,4]}},{"2":{"Name":"ExtendedLocation","Properties":{"name":{"Type":4,"Flags":0,"Description":"The name of the extended location."},"type":{"Type":32,"Flags":0,"Description":"The type of the extended location."}}}},{"6":{"Value":"EdgeZone"}},{"5":{"Elements":[31,4]}},{"2":{"Name":"StorageAccountCreateParametersTags","Properties":{},"AdditionalProperties":4}},{"2":{"Name":"Identity","Properties":{"principalId":{"Type":4,"Flags":2,"Description":"The principal ID of resource identity."},"tenantId":{"Type":4,"Flags":2,"Description":"The tenant ID of resource."},"type":{"Type":39,"Flags":1,"Description":"The identity type."},"userAssignedIdentities":{"Type":41,"Flags":0,"Description":"Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here."}}}},{"6":{"Value":"None"}},{"6":{"Value":"SystemAssigned"}},{"6":{"Value":"UserAssigned"}},{"6":{"Value":"SystemAssigned,UserAssigned"}},{"5":{"Elements":[35,36,37,38,4]}},{"2":{"Name":"UserAssignedIdentity","Properties":{"principalId":{"Type":4,"Flags":2,"Description":"The principal ID of the identity."},"clientId":{"Type":4,"Flags":2,"Description":"The client ID of the identity."}}}},{"2":{"Name":"IdentityUserAssignedIdentities","Properties":{},"AdditionalProperties":40}},{"2":{"Name":"StorageAccountPropertiesCreateParametersOrStorageAccountProperties","Properties":{"sasPolicy":{"Type":43,"Flags":0,"Description":"SasPolicy assigned to the storage account."},"keyPolicy":{"Type":46,"Flags":0,"Description":"KeyPolicy assigned to the storage account."},"customDomain":{"Type":47,"Flags":0,"Description":"User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property."},"encryption":{"Type":48,"Flags":0,"Description":"Not applicable. Azure Storage encryption is enabled for all storage accounts and cannot be disabled."},"networkAcls":{"Type":59,"Flags":0,"Description":"Network rule set"},"accessTier":{"Type":84,"Flags":0,"Description":"Required for storage accounts where kind = BlobStorage. The access tier used for billing."},"azureFilesIdentityBasedAuthentication":{"Type":85,"Flags":0,"Description":"Provides the identity based authentication settings for Azure Files."},"supportsHttpsTrafficOnly":{"Type":2,"Flags":0,"Description":"Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01."},"isHnsEnabled":{"Type":2,"Flags":0,"Description":"Account HierarchicalNamespace enabled if sets to true."},"largeFileSharesState":{"Type":99,"Flags":0,"Description":"Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled."},"routingPreference":{"Type":100,"Flags":0,"Description":"Maintains information about the network routing choice opted by the user for data transfer"},"allowBlobPublicAccess":{"Type":2,"Flags":0,"Description":"Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property."},"minimumTlsVersion":{"Type":107,"Flags":0,"Description":"Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property."},"allowSharedKeyAccess":{"Type":2,"Flags":0,"Description":"Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true."},"isNfsV3Enabled":{"Type":2,"Flags":0,"Description":"NFS 3.0 protocol support enabled if set to true."},"allowCrossTenantReplication":{"Type":2,"Flags":0,"Description":"Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property."},"provisioningState":{"Type":111,"Flags":2,"Description":"Gets the status of the storage account at the time the operation was called."},"primaryEndpoints":{"Type":112,"Flags":2,"Description":"Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint."},"primaryLocation":{"Type":4,"Flags":2,"Description":"Gets the location of the primary data center for the storage account."},"statusOfPrimary":{"Type":117,"Flags":2,"Description":"Gets the status indicating whether the primary location of the storage account is available or unavailable."},"lastGeoFailoverTime":{"Type":4,"Flags":2,"Description":"Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS."},"secondaryLocation":{"Type":4,"Flags":2,"Description":"Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS."},"statusOfSecondary":{"Type":120,"Flags":2,"Description":"Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS."},"creationTime":{"Type":4,"Flags":2,"Description":"Gets the creation date and time of the storage account in UTC."},"keyCreationTime":{"Type":121,"Flags":2,"Description":"Storage account keys creation time."},"secondaryEndpoints":{"Type":112,"Flags":2,"Description":"Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS."},"geoReplicationStats":{"Type":122,"Flags":2,"Description":"Geo Replication Stats"},"failoverInProgress":{"Type":2,"Flags":2,"Description":"If the failover is in progress, the value will be true, otherwise, it will be null."},"privateEndpointConnections":{"Type":140,"Flags":2,"Description":"List of private endpoint connection associated with the specified storage account"},"blobRestoreStatus":{"Type":141,"Flags":2,"Description":"Blob restore status"}}}},{"2":{"Name":"SasPolicy","Properties":{"sasExpirationPeriod":{"Type":4,"Flags":1,"Description":"The SAS expiration period, DD.HH:MM:SS."},"expirationAction":{"Type":45,"Flags":1,"Description":"The SAS expiration action. Can only be Log."}}}},{"6":{"Value":"Log"}},{"5":{"Elements":[44,4]}},{"2":{"Name":"KeyPolicy","Properties":{"keyExpirationPeriodInDays":{"Type":3,"Flags":1,"Description":"The key expiration period in days."}}}},{"2":{"Name":"CustomDomain","Properties":{"name":{"Type":4,"Flags":1,"Description":"Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source."},"useSubDomainName":{"Type":2,"Flags":0,"Description":"Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates."}}}},{"2":{"Name":"Encryption","Properties":{"services":{"Type":49,"Flags":0,"Description":"List of services which support encryption."},"keySource":{"Type":56,"Flags":1,"Description":"The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault"},"requireInfrastructureEncryption":{"Type":2,"Flags":0,"Description":"A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest."},"keyvaultproperties":{"Type":57,"Flags":0,"Description":"Properties provided by key vault."},"identity":{"Type":58,"Flags":0,"Description":"The identity to be used with service-side encryption at rest."}}}},{"2":{"Name":"EncryptionServices","Properties":{"blob":{"Type":50,"Flags":0,"Description":"The encryption function of the blob storage service."},"file":{"Type":50,"Flags":0,"Description":"The encryption function of the file storage service."},"table":{"Type":50,"Flags":0,"Description":"The encryption function of the table storage service."},"queue":{"Type":50,"Flags":0,"Description":"The encryption function of the queue storage service."}}}},{"2":{"Name":"EncryptionService","Properties":{"enabled":{"Type":2,"Flags":0,"Description":"A boolean indicating whether or not the service encrypts the data as it is stored."},"lastEnabledTime":{"Type":4,"Flags":2,"Description":"Gets a rough estimate of the date/time when the encryption was last enabled by the user. Only returned when encryption is enabled. There might be some unencrypted blobs which were written after this time, as it is just a rough estimate."},"keyType":{"Type":53,"Flags":0,"Description":"Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used."}}}},{"6":{"Value":"Service"}},{"6":{"Value":"Account"}},{"5":{"Elements":[51,52,4]}},{"6":{"Value":"Microsoft.Storage"}},{"6":{"Value":"Microsoft.Keyvault"}},{"5":{"Elements":[54,55,4]}},{"2":{"Name":"KeyVaultProperties","Properties":{"keyname":{"Type":4,"Flags":0,"Description":"The name of KeyVault key."},"keyversion":{"Type":4,"Flags":0,"Description":"The version of KeyVault key."},"keyvaulturi":{"Type":4,"Flags":0,"Description":"The Uri of KeyVault."},"currentVersionedKeyIdentifier":{"Type":4,"Flags":2,"Description":"The object identifier of the current versioned Key Vault Key in use."},"lastKeyRotationTimestamp":{"Type":4,"Flags":2,"Description":"Timestamp of last rotation of the Key Vault Key."}}}},{"2":{"Name":"EncryptionIdentity","Properties":{"userAssignedIdentity":{"Type":4,"Flags":0,"Description":"Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account."}}}},{"2":{"Name":"NetworkRuleSet","Properties":{"bypass":{"Type":64,"Flags":0,"Description":"Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics."},"resourceAccessRules":{"Type":66,"Flags":0,"Description":"Sets the resource access rules"},"virtualNetworkRules":{"Type":75,"Flags":0,"Description":"Sets the virtual network rules"},"ipRules":{"Type":78,"Flags":0,"Description":"Sets the IP ACL rules"},"defaultAction":{"Type":81,"Flags":1,"Description":"Specifies the default action of allow or deny when no other rules match."}}}},{"6":{"Value":"None"}},{"6":{"Value":"Logging"}},{"6":{"Value":"Metrics"}},{"6":{"Value":"AzureServices"}},{"5":{"Elements":[60,61,62,63,4]}},{"2":{"Name":"ResourceAccessRule","Properties":{"tenantId":{"Type":4,"Flags":0,"Description":"Tenant Id"},"resourceId":{"Type":4,"Flags":0,"Description":"Resource Id"}}}},{"3":{"ItemType":65}},{"2":{"Name":"VirtualNetworkRule","Properties":{"id":{"Type":4,"Flags":1,"Description":"Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}."},"action":{"Type":68,"Flags":0,"Description":"The action of virtual network rule."},"state":{"Type":74,"Flags":0,"Description":"Gets the state of virtual network rule."}}}},{"6":{"Value":"Allow"}},{"6":{"Value":"Provisioning"}},{"6":{"Value":"Deprovisioning"}},{"6":{"Value":"Succeeded"}},{"6":{"Value":"Failed"}},{"6":{"Value":"NetworkSourceDeleted"}},{"5":{"Elements":[69,70,71,72,73,4]}},{"3":{"ItemType":67}},{"2":{"Name":"IPRule","Properties":{"value":{"Type":4,"Flags":1,"Description":"Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed."},"action":{"Type":77,"Flags":0,"Description":"The action of IP ACL rule."}}}},{"6":{"Value":"Allow"}},{"3":{"ItemType":76}},{"6":{"Value":"Allow"}},{"6":{"Value":"Deny"}},{"5":{"Elements":[79,80]}},{"6":{"Value":"Hot"}},{"6":{"Value":"Cool"}},{"5":{"Elements":[82,83]}},{"2":{"Name":"AzureFilesIdentityBasedAuthentication","Properties":{"directoryServiceOptions":{"Type":89,"Flags":1,"Description":"Indicates the directory service used."},"activeDirectoryProperties":{"Type":90,"Flags":0,"Description":"Required if choose AD."},"defaultSharePermission":{"Type":96,"Flags":0,"Description":"Default share permission for users using Kerberos authentication if RBAC role is not assigned."}}}},{"6":{"Value":"None"}},{"6":{"Value":"AADDS"}},{"6":{"Value":"AD"}},{"5":{"Elements":[86,87,88,4]}},{"2":{"Name":"ActiveDirectoryProperties","Properties":{"domainName":{"Type":4,"Flags":1,"Description":"Specifies the primary domain that the AD DNS server is authoritative for."},"netBiosDomainName":{"Type":4,"Flags":1,"Description":"Specifies the NetBIOS domain name."},"forestName":{"Type":4,"Flags":1,"Description":"Specifies the Active Directory forest to get."},"domainGuid":{"Type":4,"Flags":1,"Description":"Specifies the domain GUID."},"domainSid":{"Type":4,"Flags":1,"Description":"Specifies the security identifier (SID)."},"azureStorageSid":{"Type":4,"Flags":1,"Description":"Specifies the security identifier (SID) for Azure Storage."}}}},{"6":{"Value":"None"}},{"6":{"Value":"StorageFileDataSmbShareReader"}},{"6":{"Value":"StorageFileDataSmbShareContributor"}},{"6":{"Value":"StorageFileDataSmbShareElevatedContributor"}},{"6":{"Value":"StorageFileDataSmbShareOwner"}},{"5":{"Elements":[91,92,93,94,95,4]}},{"6":{"Value":"Disabled"}},{"6":{"Value":"Enabled"}},{"5":{"Elements":[97,98,4]}},{"2":{"Name":"RoutingPreference","Properties":{"routingChoice":{"Type":103,"Flags":0,"Description":"Routing Choice defines the kind of network routing opted by the user."},"publishMicrosoftEndpoints":{"Type":2,"Flags":0,"Description":"A boolean flag which indicates whether microsoft routing storage endpoints are to be published"},"publishInternetEndpoints":{"Type":2,"Flags":0,"Description":"A boolean flag which indicates whether internet routing storage endpoints are to be published"}}}},{"6":{"Value":"MicrosoftRouting"}},{"6":{"Value":"InternetRouting"}},{"5":{"Elements":[101,102,4]}},{"6":{"Value":"TLS1_0"}},{"6":{"Value":"TLS1_1"}},{"6":{"Value":"TLS1_2"}},{"5":{"Elements":[104,105,106,4]}},{"6":{"Value":"Creating"}},{"6":{"Value":"ResolvingDNS"}},{"6":{"Value":"Succeeded"}},{"5":{"Elements":[108,109,110]}},{"2":{"Name":"Endpoints","Properties":{"blob":{"Type":4,"Flags":2,"Description":"Gets the blob endpoint."},"queue":{"Type":4,"Flags":2,"Description":"Gets the queue endpoint."},"table":{"Type":4,"Flags":2,"Description":"Gets the table endpoint."},"file":{"Type":4,"Flags":2,"Description":"Gets the file endpoint."},"web":{"Type":4,"Flags":2,"Description":"Gets the web endpoint."},"dfs":{"Type":4,"Flags":2,"Description":"Gets the dfs endpoint."},"microsoftEndpoints":{"Type":113,"Flags":0,"Description":"Gets the microsoft routing storage endpoints."},"internetEndpoints":{"Type":114,"Flags":0,"Description":"Gets the internet routing storage endpoints"}}}},{"2":{"Name":"StorageAccountMicrosoftEndpoints","Properties":{"blob":{"Type":4,"Flags":2,"Description":"Gets the blob endpoint."},"queue":{"Type":4,"Flags":2,"Description":"Gets the queue endpoint."},"table":{"Type":4,"Flags":2,"Description":"Gets the table endpoint."},"file":{"Type":4,"Flags":2,"Description":"Gets the file endpoint."},"web":{"Type":4,"Flags":2,"Description":"Gets the web endpoint."},"dfs":{"Type":4,"Flags":2,"Description":"Gets the dfs endpoint."}}}},{"2":{"Name":"StorageAccountInternetEndpoints","Properties":{"blob":{"Type":4,"Flags":2,"Description":"Gets the blob endpoint."},"file":{"Type":4,"Flags":2,"Description":"Gets the file endpoint."},"web":{"Type":4,"Flags":2,"Description":"Gets the web endpoint."},"dfs":{"Type":4,"Flags":2,"Description":"Gets the dfs endpoint."}}}},{"6":{"Value":"available"}},{"6":{"Value":"unavailable"}},{"5":{"Elements":[115,116]}},{"6":{"Value":"available"}},{"6":{"Value":"unavailable"}},{"5":{"Elements":[118,119]}},{"2":{"Name":"KeyCreationTime","Properties":{"key1":{"Type":4,"Flags":0},"key2":{"Type":4,"Flags":0}}}},{"2":{"Name":"GeoReplicationStats","Properties":{"status":{"Type":126,"Flags":2,"Description":"The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable."},"lastSyncTime":{"Type":4,"Flags":2,"Description":"All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap."},"canFailover":{"Type":2,"Flags":2,"Description":"A boolean flag which indicates whether or not account failover is supported for the account."}}}},{"6":{"Value":"Live"}},{"6":{"Value":"Bootstrap"}},{"6":{"Value":"Unavailable"}},{"5":{"Elements":[123,124,125,4]}},{"2":{"Name":"PrivateEndpointConnection","Properties":{"properties":{"Type":128,"Flags":0,"Description":"Resource properties."},"id":{"Type":4,"Flags":2,"Description":"Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"},"name":{"Type":4,"Flags":2,"Description":"The name of the resource"},"type":{"Type":4,"Flags":2,"Description":"The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""}}}},{"2":{"Name":"PrivateEndpointConnectionProperties","Properties":{"privateEndpoint":{"Type":129,"Flags":0,"Description":"The resource of private end point."},"privateLinkServiceConnectionState":{"Type":130,"Flags":1,"Description":"A collection of information about the state of the connection between service consumer and provider."},"provisioningState":{"Type":139,"Flags":2,"Description":"The provisioning state of the private endpoint connection resource."}}}},{"2":{"Name":"PrivateEndpoint","Properties":{"id":{"Type":4,"Flags":2,"Description":"The ARM identifier for Private Endpoint"}}}},{"2":{"Name":"PrivateLinkServiceConnectionState","Properties":{"status":{"Type":134,"Flags":0,"Description":"Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."},"description":{"Type":4,"Flags":0,"Description":"The reason for approval/rejection of the connection."},"actionRequired":{"Type":4,"Flags":0,"Description":"A message indicating if changes on the service provider require any updates on the consumer."}}}},{"6":{"Value":"Pending"}},{"6":{"Value":"Approved"}},{"6":{"Value":"Rejected"}},{"5":{"Elements":[131,132,133,4]}},{"6":{"Value":"Succeeded"}},{"6":{"Value":"Creating"}},{"6":{"Value":"Deleting"}},{"6":{"Value":"Failed"}},{"5":{"Elements":[135,136,137,138,4]}},{"3":{"ItemType":127}},{"2":{"Name":"BlobRestoreStatus","Properties":{"status":{"Type":145,"Flags":2,"Description":"The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed."},"failureReason":{"Type":4,"Flags":2,"Description":"Failure reason when blob restore is failed."},"restoreId":{"Type":4,"Flags":2,"Description":"Id for tracking blob restore request."},"parameters":{"Type":146,"Flags":2,"Description":"Blob restore request parameters."}}}},{"6":{"Value":"InProgress"}},{"6":{"Value":"Complete"}},{"6":{"Value":"Failed"}},{"5":{"Elements":[142,143,144,4]}},{"2":{"Name":"BlobRestoreParameters","Properties":{"timeToRestore":{"Type":4,"Flags":1,"Description":"Restore blob to the specified time."},"blobRanges":{"Type":148,"Flags":1,"Description":"Blob ranges to restore."}}}},{"2":{"Name":"BlobRestoreRange","Properties":{"startRange":{"Type":4,"Flags":1,"Description":"Blob start range. This is inclusive. Empty means account start."},"endRange":{"Type":4,"Flags":1,"Description":"Blob end range. This is exclusive. Empty means account end."}}}},{"3":{"ItemType":147}},{"4":{"Name":"Microsoft.Storage/storageAccounts@2021-04-01","ScopeType":8,"Body":10,"Flags":0}},{"6":{"Value":"default"}},{"5":{"Elements":[150,4]}},{"6":{"Value":"Microsoft.Storage/storageAccounts/managementPolicies"}},{"6":{"Value":"2021-04-01"}},{"2":{"Name":"Microsoft.Storage/storageAccounts/managementPolicies","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":151,"Flags":9,"Description":"The resource name"},"type":{"Type":152,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":153,"Flags":10,"Description":"The resource api version"},"properties":{"Type":155,"Flags":0,"Description":"Returns the Storage Account Data Policies Rules."}}}},{"2":{"Name":"ManagementPolicyProperties","Properties":{"lastModifiedTime":{"Type":4,"Flags":2,"Description":"Returns the date and time the ManagementPolicies was last modified."},"policy":{"Type":156,"Flags":1,"Description":"The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts."}}}},{"2":{"Name":"ManagementPolicySchema","Properties":{"rules":{"Type":172,"Flags":1,"Description":"The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts."}}}},{"2":{"Name":"ManagementPolicyRule","Properties":{"enabled":{"Type":2,"Flags":0,"Description":"Rule is enabled if set to true."},"name":{"Type":4,"Flags":1,"Description":"A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy."},"type":{"Type":159,"Flags":1,"Description":"The valid value is Lifecycle"},"definition":{"Type":160,"Flags":1,"Description":"An object that defines the Lifecycle rule."}}}},{"6":{"Value":"Lifecycle"}},{"5":{"Elements":[158,4]}},{"2":{"Name":"ManagementPolicyDefinition","Properties":{"actions":{"Type":161,"Flags":1,"Description":"An object that defines the action set."},"filters":{"Type":167,"Flags":0,"Description":"An object that defines the filter set."}}}},{"2":{"Name":"ManagementPolicyAction","Properties":{"baseBlob":{"Type":162,"Flags":0,"Description":"The management policy action for base blob"},"snapshot":{"Type":164,"Flags":0,"Description":"The management policy action for snapshot"},"version":{"Type":166,"Flags":0,"Description":"The management policy action for version"}}}},{"2":{"Name":"ManagementPolicyBaseBlob","Properties":{"tierToCool":{"Type":163,"Flags":0,"Description":"The function to tier blobs to cool storage. Support blobs currently at Hot tier"},"tierToArchive":{"Type":163,"Flags":0,"Description":"The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier"},"delete":{"Type":163,"Flags":0,"Description":"The function to delete the blob"},"enableAutoTierToHotFromCool":{"Type":2,"Flags":0,"Description":"This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan."}}}},{"2":{"Name":"DateAfterModification","Properties":{"daysAfterModificationGreaterThan":{"Type":3,"Flags":0,"Description":"Value indicating the age in days after last modification"},"daysAfterLastAccessTimeGreaterThan":{"Type":3,"Flags":0,"Description":"Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy"}}}},{"2":{"Name":"ManagementPolicySnapShot","Properties":{"tierToCool":{"Type":165,"Flags":0,"Description":"The function to tier blob snapshot to cool storage. Support blob snapshot currently at Hot tier"},"tierToArchive":{"Type":165,"Flags":0,"Description":"The function to tier blob snapshot to archive storage. Support blob snapshot currently at Hot or Cool tier"},"delete":{"Type":165,"Flags":0,"Description":"The function to delete the blob snapshot"}}}},{"2":{"Name":"DateAfterCreation","Properties":{"daysAfterCreationGreaterThan":{"Type":3,"Flags":1,"Description":"Value indicating the age in days after creation"}}}},{"2":{"Name":"ManagementPolicyVersion","Properties":{"tierToCool":{"Type":165,"Flags":0,"Description":"The function to tier blob version to cool storage. Support blob version currently at Hot tier"},"tierToArchive":{"Type":165,"Flags":0,"Description":"The function to tier blob version to archive storage. Support blob version currently at Hot or Cool tier"},"delete":{"Type":165,"Flags":0,"Description":"The function to delete the blob version"}}}},{"2":{"Name":"ManagementPolicyFilter","Properties":{"prefixMatch":{"Type":168,"Flags":0,"Description":"An array of strings for prefixes to be match."},"blobTypes":{"Type":169,"Flags":1,"Description":"An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob."},"blobIndexMatch":{"Type":171,"Flags":0,"Description":"An array of blob index tag based filters, there can be at most 10 tag filters"}}}},{"3":{"ItemType":4}},{"3":{"ItemType":4}},{"2":{"Name":"TagFilter","Properties":{"name":{"Type":4,"Flags":1,"Description":"This is the filter tag name, it can have 1 - 128 characters"},"op":{"Type":4,"Flags":1,"Description":"This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported"},"value":{"Type":4,"Flags":1,"Description":"This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters"}}}},{"3":{"ItemType":170}},{"3":{"ItemType":157}},{"4":{"Name":"Microsoft.Storage/storageAccounts/managementPolicies@2021-04-01","ScopeType":8,"Body":154,"Flags":0}},{"6":{"Value":"default"}},{"5":{"Elements":[174,4]}},{"6":{"Value":"Microsoft.Storage/storageAccounts/inventoryPolicies"}},{"6":{"Value":"2021-04-01"}},{"2":{"Name":"Microsoft.Storage/storageAccounts/inventoryPolicies","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":175,"Flags":9,"Description":"The resource name"},"type":{"Type":176,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":177,"Flags":10,"Description":"The resource api version"},"properties":{"Type":179,"Flags":0,"Description":"Returns the storage account blob inventory policy rules."},"systemData":{"Type":199,"Flags":2,"Description":"Metadata pertaining to creation and last modification of the resource."}}}},{"2":{"Name":"BlobInventoryPolicyProperties","Properties":{"lastModifiedTime":{"Type":4,"Flags":2,"Description":"Returns the last modified date and time of the blob inventory policy."},"policy":{"Type":180,"Flags":1,"Description":"The storage account blob inventory policy object. It is composed of policy rules."}}}},{"2":{"Name":"BlobInventoryPolicySchema","Properties":{"enabled":{"Type":2,"Flags":1,"Description":"Policy is enabled if set to true."},"type":{"Type":182,"Flags":1,"Description":"The valid value is Inventory"},"rules":{"Type":198,"Flags":1,"Description":"The storage account blob inventory policy rules. The rule is applied when it is enabled."}}}},{"6":{"Value":"Inventory"}},{"5":{"Elements":[181,4]}},{"2":{"Name":"BlobInventoryPolicyRule","Properties":{"enabled":{"Type":2,"Flags":1,"Description":"Rule is enabled when set to true."},"name":{"Type":4,"Flags":1,"Description":"A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy."},"destination":{"Type":4,"Flags":1,"Description":"Container name where blob inventory files are stored. Must be pre-created."},"definition":{"Type":184,"Flags":1,"Description":"An object that defines the blob inventory policy rule."}}}},{"2":{"Name":"BlobInventoryPolicyDefinition","Properties":{"filters":{"Type":185,"Flags":0,"Description":"An object that defines the filter set."},"format":{"Type":190,"Flags":1,"Description":"This is a required field, it specifies the format for the inventory files."},"schedule":{"Type":193,"Flags":1,"Description":"This is a required field. This field is used to schedule an inventory formation."},"objectType":{"Type":196,"Flags":1,"Description":"This is a required field. This field specifies the scope of the inventory created either at the blob or container level."},"schemaFields":{"Type":197,"Flags":1,"Description":"This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts."}}}},{"2":{"Name":"BlobInventoryPolicyFilter","Properties":{"prefixMatch":{"Type":186,"Flags":0,"Description":"An array of strings for blob prefixes to be matched."},"blobTypes":{"Type":187,"Flags":0,"Description":"An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs. This field is required when definition.objectType property is set to 'Blob'."},"includeBlobVersions":{"Type":2,"Flags":0,"Description":"Includes blob versions in blob inventory when value is set to true. The definition.schemaFields values 'VersionId and IsCurrentVersion' are required if this property is set to true, else they must be excluded."},"includeSnapshots":{"Type":2,"Flags":0,"Description":"Includes blob snapshots in blob inventory when value is set to true. The definition.schemaFields value 'Snapshot' is required if this property is set to true, else it must be excluded."}}}},{"3":{"ItemType":4}},{"3":{"ItemType":4}},{"6":{"Value":"Csv"}},{"6":{"Value":"Parquet"}},{"5":{"Elements":[188,189,4]}},{"6":{"Value":"Daily"}},{"6":{"Value":"Weekly"}},{"5":{"Elements":[191,192,4]}},{"6":{"Value":"Blob"}},{"6":{"Value":"Container"}},{"5":{"Elements":[194,195,4]}},{"3":{"ItemType":4}},{"3":{"ItemType":183}},{"2":{"Name":"SystemData","Properties":{"createdBy":{"Type":4,"Flags":0,"Description":"The identity that created the resource."},"createdByType":{"Type":204,"Flags":0,"Description":"The type of identity that created the resource."},"createdAt":{"Type":4,"Flags":0,"Description":"The timestamp of resource creation (UTC)."},"lastModifiedBy":{"Type":4,"Flags":0,"Description":"The identity that last modified the resource."},"lastModifiedByType":{"Type":209,"Flags":0,"Description":"The type of identity that last modified the resource."},"lastModifiedAt":{"Type":4,"Flags":0,"Description":"The timestamp of resource last modification (UTC)"}}}},{"6":{"Value":"User"}},{"6":{"Value":"Application"}},{"6":{"Value":"ManagedIdentity"}},{"6":{"Value":"Key"}},{"5":{"Elements":[200,201,202,203,4]}},{"6":{"Value":"User"}},{"6":{"Value":"Application"}},{"6":{"Value":"ManagedIdentity"}},{"6":{"Value":"Key"}},{"5":{"Elements":[205,206,207,208,4]}},{"4":{"Name":"Microsoft.Storage/storageAccounts/inventoryPolicies@2021-04-01","ScopeType":8,"Body":178,"Flags":0}},{"6":{"Value":"Microsoft.Storage/storageAccounts/privateEndpointConnections"}},{"6":{"Value":"2021-04-01"}},{"2":{"Name":"Microsoft.Storage/storageAccounts/privateEndpointConnections","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":211,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":212,"Flags":10,"Description":"The resource api version"},"properties":{"Type":128,"Flags":0,"Description":"Resource properties."}}}},{"4":{"Name":"Microsoft.Storage/storageAccounts/privateEndpointConnections@2021-04-01","ScopeType":8,"Body":213,"Flags":0}},{"6":{"Value":"Microsoft.Storage/storageAccounts/objectReplicationPolicies"}},{"6":{"Value":"2021-04-01"}},{"2":{"Name":"Microsoft.Storage/storageAccounts/objectReplicationPolicies","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":215,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":216,"Flags":10,"Description":"The resource api version"},"properties":{"Type":218,"Flags":0,"Description":"Returns the Storage Account Object Replication Policy."}}}},{"2":{"Name":"ObjectReplicationPolicyProperties","Properties":{"policyId":{"Type":4,"Flags":2,"Description":"A unique id for object replication policy."},"enabledTime":{"Type":4,"Flags":2,"Description":"Indicates when the policy is enabled on the source account."},"sourceAccount":{"Type":4,"Flags":1,"Description":"Required. Source account name. It should be full resource id if allowCrossTenantReplication set to false."},"destinationAccount":{"Type":4,"Flags":1,"Description":"Required. Destination account name. It should be full resource id if allowCrossTenantReplication set to false."},"rules":{"Type":222,"Flags":0,"Description":"The storage account object replication rules."}}}},{"2":{"Name":"ObjectReplicationPolicyRule","Properties":{"ruleId":{"Type":4,"Flags":0,"Description":"Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account."},"sourceContainer":{"Type":4,"Flags":1,"Description":"Required. Source container name."},"destinationContainer":{"Type":4,"Flags":1,"Description":"Required. Destination container name."},"filters":{"Type":220,"Flags":0,"Description":"Optional. An object that defines the filter set."}}}},{"2":{"Name":"ObjectReplicationPolicyFilter","Properties":{"prefixMatch":{"Type":221,"Flags":0,"Description":"Optional. Filters the results to replicate only blobs whose names begin with the specified prefix."},"minCreationTime":{"Type":4,"Flags":0,"Description":"Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z"}}}},{"3":{"ItemType":4}},{"3":{"ItemType":219}},{"4":{"Name":"Microsoft.Storage/storageAccounts/objectReplicationPolicies@2021-04-01","ScopeType":8,"Body":217,"Flags":0}},{"6":{"Value":"Microsoft.Storage/storageAccounts/encryptionScopes"}},{"6":{"Value":"2021-04-01"}},{"2":{"Name":"Microsoft.Storage/storageAccounts/encryptionScopes","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":224,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":225,"Flags":10,"Description":"The resource api version"},"properties":{"Type":227,"Flags":0,"Description":"Properties of the encryption scope."}}}},{"2":{"Name":"EncryptionScopeProperties","Properties":{"source":{"Type":230,"Flags":0,"Description":"The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault."},"state":{"Type":233,"Flags":0,"Description":"The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled."},"creationTime":{"Type":4,"Flags":2,"Description":"Gets the creation date and time of the encryption scope in UTC."},"lastModifiedTime":{"Type":4,"Flags":2,"Description":"Gets the last modification date and time of the encryption scope in UTC."},"keyVaultProperties":{"Type":234,"Flags":0,"Description":"The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'."},"requireInfrastructureEncryption":{"Type":2,"Flags":0,"Description":"A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest."}}}},{"6":{"Value":"Microsoft.Storage"}},{"6":{"Value":"Microsoft.KeyVault"}},{"5":{"Elements":[228,229,4]}},{"6":{"Value":"Enabled"}},{"6":{"Value":"Disabled"}},{"5":{"Elements":[231,232,4]}},{"2":{"Name":"EncryptionScopeKeyVaultProperties","Properties":{"keyUri":{"Type":4,"Flags":0,"Description":"The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope."},"currentVersionedKeyIdentifier":{"Type":4,"Flags":2,"Description":"The object identifier of the current versioned Key Vault Key in use."},"lastKeyRotationTimestamp":{"Type":4,"Flags":2,"Description":"Timestamp of last rotation of the Key Vault Key."}}}},{"4":{"Name":"Microsoft.Storage/storageAccounts/encryptionScopes@2021-04-01","ScopeType":8,"Body":226,"Flags":0}},{"6":{"Value":"default"}},{"5":{"Elements":[236,4]}},{"6":{"Value":"Microsoft.Storage/storageAccounts/blobServices"}},{"6":{"Value":"2021-04-01"}},{"2":{"Name":"Microsoft.Storage/storageAccounts/blobServices","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":237,"Flags":9,"Description":"The resource name"},"type":{"Type":238,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":239,"Flags":10,"Description":"The resource api version"},"properties":{"Type":241,"Flags":0,"Description":"The properties of a storage account’s Blob service."},"sku":{"Type":11,"Flags":2,"Description":"Sku name and tier."}}}},{"2":{"Name":"BlobServicePropertiesProperties","Properties":{"cors":{"Type":242,"Flags":0,"Description":"Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service."},"defaultServiceVersion":{"Type":4,"Flags":0,"Description":"DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions."},"deleteRetentionPolicy":{"Type":257,"Flags":0,"Description":"The blob service properties for blob soft delete."},"isVersioningEnabled":{"Type":2,"Flags":0,"Description":"Versioning is enabled if set to true."},"automaticSnapshotPolicyEnabled":{"Type":2,"Flags":0,"Description":"Deprecated in favor of isVersioningEnabled property."},"changeFeed":{"Type":258,"Flags":0,"Description":"The blob service properties for change feed events."},"restorePolicy":{"Type":259,"Flags":0,"Description":"The blob service properties for blob restore policy."},"containerDeleteRetentionPolicy":{"Type":257,"Flags":0,"Description":"The blob service properties for container soft delete."},"lastAccessTimeTrackingPolicy":{"Type":260,"Flags":0,"Description":"The blob service property to configure last access time based tracking policy."}}}},{"2":{"Name":"CorsRules","Properties":{"corsRules":{"Type":256,"Flags":0,"Description":"The List of CORS rules. You can include up to five CorsRule elements in the request."}}}},{"2":{"Name":"CorsRule","Properties":{"allowedOrigins":{"Type":244,"Flags":1,"Description":"Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\" to allow all domains"},"allowedMethods":{"Type":253,"Flags":1,"Description":"Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin."},"maxAgeInSeconds":{"Type":3,"Flags":1,"Description":"Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response."},"exposedHeaders":{"Type":254,"Flags":1,"Description":"Required if CorsRule element is present. A list of response headers to expose to CORS clients."},"allowedHeaders":{"Type":255,"Flags":1,"Description":"Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request."}}}},{"3":{"ItemType":4}},{"6":{"Value":"DELETE"}},{"6":{"Value":"GET"}},{"6":{"Value":"HEAD"}},{"6":{"Value":"MERGE"}},{"6":{"Value":"POST"}},{"6":{"Value":"OPTIONS"}},{"6":{"Value":"PUT"}},{"5":{"Elements":[245,246,247,248,249,250,251,4]}},{"3":{"ItemType":252}},{"3":{"ItemType":4}},{"3":{"ItemType":4}},{"3":{"ItemType":243}},{"2":{"Name":"DeleteRetentionPolicy","Properties":{"enabled":{"Type":2,"Flags":0,"Description":"Indicates whether DeleteRetentionPolicy is enabled."},"days":{"Type":3,"Flags":0,"Description":"Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365."}}}},{"2":{"Name":"ChangeFeed","Properties":{"enabled":{"Type":2,"Flags":0,"Description":"Indicates whether change feed event logging is enabled for the Blob service."},"retentionInDays":{"Type":3,"Flags":0,"Description":"Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed."}}}},{"2":{"Name":"RestorePolicyProperties","Properties":{"enabled":{"Type":2,"Flags":1,"Description":"Blob restore is enabled if set to true."},"days":{"Type":3,"Flags":0,"Description":"how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days."},"lastEnabledTime":{"Type":4,"Flags":2,"Description":"Deprecated in favor of minRestoreTime property."},"minRestoreTime":{"Type":4,"Flags":2,"Description":"Returns the minimum date and time that the restore can be started."}}}},{"2":{"Name":"LastAccessTimeTrackingPolicy","Properties":{"enable":{"Type":2,"Flags":1,"Description":"When set to true last access time based tracking is enabled."},"name":{"Type":262,"Flags":0,"Description":"Name of the policy. The valid value is AccessTimeTracking. This field is currently read only"},"trackingGranularityInDays":{"Type":3,"Flags":0,"Description":"The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1"},"blobType":{"Type":263,"Flags":0,"Description":"An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only"}}}},{"6":{"Value":"AccessTimeTracking"}},{"5":{"Elements":[261,4]}},{"3":{"ItemType":4}},{"4":{"Name":"Microsoft.Storage/storageAccounts/blobServices@2021-04-01","ScopeType":8,"Body":240,"Flags":0}},{"6":{"Value":"Microsoft.Storage/storageAccounts/blobServices/containers"}},{"6":{"Value":"2021-04-01"}},{"2":{"Name":"Microsoft.Storage/storageAccounts/blobServices/containers","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":265,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":266,"Flags":10,"Description":"The resource api version"},"properties":{"Type":268,"Flags":0,"Description":"Properties of the blob container."},"etag":{"Type":4,"Flags":2,"Description":"Resource Etag."}}}},{"2":{"Name":"ContainerProperties","Properties":{"version":{"Type":4,"Flags":2,"Description":"The version of the deleted blob container."},"deleted":{"Type":2,"Flags":2,"Description":"Indicates whether the blob container was deleted."},"deletedTime":{"Type":4,"Flags":2,"Description":"Blob container deletion time."},"remainingRetentionDays":{"Type":3,"Flags":2,"Description":"Remaining retention days for soft deleted blob container."},"defaultEncryptionScope":{"Type":4,"Flags":0,"Description":"Default the container to use specified encryption scope for all writes."},"denyEncryptionScopeOverride":{"Type":2,"Flags":0,"Description":"Block override of encryption scope from the container default."},"publicAccess":{"Type":272,"Flags":0,"Description":"Specifies whether data in the container may be accessed publicly and the level of access."},"lastModifiedTime":{"Type":4,"Flags":2,"Description":"Returns the date and time the container was last modified."},"leaseStatus":{"Type":275,"Flags":2,"Description":"The lease status of the container."},"leaseState":{"Type":281,"Flags":2,"Description":"Lease state of the container."},"leaseDuration":{"Type":284,"Flags":2,"Description":"Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased."},"metadata":{"Type":285,"Flags":0,"Description":"A name-value pair to associate with the container as metadata."},"immutabilityPolicy":{"Type":286,"Flags":2,"Description":"The ImmutabilityPolicy property of the container."},"legalHold":{"Type":297,"Flags":2,"Description":"The LegalHold property of the container."},"hasLegalHold":{"Type":2,"Flags":2,"Description":"The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account."},"hasImmutabilityPolicy":{"Type":2,"Flags":2,"Description":"The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container."},"immutableStorageWithVersioning":{"Type":300,"Flags":0,"Description":"The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process."}}}},{"6":{"Value":"Container"}},{"6":{"Value":"Blob"}},{"6":{"Value":"None"}},{"5":{"Elements":[269,270,271]}},{"6":{"Value":"Locked"}},{"6":{"Value":"Unlocked"}},{"5":{"Elements":[273,274,4]}},{"6":{"Value":"Available"}},{"6":{"Value":"Leased"}},{"6":{"Value":"Expired"}},{"6":{"Value":"Breaking"}},{"6":{"Value":"Broken"}},{"5":{"Elements":[276,277,278,279,280,4]}},{"6":{"Value":"Infinite"}},{"6":{"Value":"Fixed"}},{"5":{"Elements":[282,283,4]}},{"2":{"Name":"ContainerPropertiesMetadata","Properties":{},"AdditionalProperties":4}},{"2":{"Name":"ImmutabilityPolicyProperties","Properties":{"properties":{"Type":287,"Flags":0,"Description":"The properties of an ImmutabilityPolicy of a blob container."},"etag":{"Type":4,"Flags":2,"Description":"ImmutabilityPolicy Etag."},"updateHistory":{"Type":296,"Flags":2,"Description":"The ImmutabilityPolicy update history of the blob container."}}}},{"2":{"Name":"ImmutabilityPolicyProperty","Properties":{"immutabilityPeriodSinceCreationInDays":{"Type":3,"Flags":0,"Description":"The immutability period for the blobs in the container since the policy creation, in days."},"state":{"Type":290,"Flags":2,"Description":"The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked."},"allowProtectedAppendWrites":{"Type":2,"Flags":0,"Description":"This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API"}}}},{"6":{"Value":"Locked"}},{"6":{"Value":"Unlocked"}},{"5":{"Elements":[288,289,4]}},{"2":{"Name":"UpdateHistoryProperty","Properties":{"update":{"Type":295,"Flags":2,"Description":"The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend."},"immutabilityPeriodSinceCreationInDays":{"Type":3,"Flags":2,"Description":"The immutability period for the blobs in the container since the policy creation, in days."},"timestamp":{"Type":4,"Flags":2,"Description":"Returns the date and time the ImmutabilityPolicy was updated."},"objectIdentifier":{"Type":4,"Flags":2,"Description":"Returns the Object ID of the user who updated the ImmutabilityPolicy."},"tenantId":{"Type":4,"Flags":2,"Description":"Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy."},"upn":{"Type":4,"Flags":2,"Description":"Returns the User Principal Name of the user who updated the ImmutabilityPolicy."}}}},{"6":{"Value":"put"}},{"6":{"Value":"lock"}},{"6":{"Value":"extend"}},{"5":{"Elements":[292,293,294,4]}},{"3":{"ItemType":291}},{"2":{"Name":"LegalHoldProperties","Properties":{"hasLegalHold":{"Type":2,"Flags":2,"Description":"The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account."},"tags":{"Type":299,"Flags":0,"Description":"The list of LegalHold tags of a blob container."}}}},{"2":{"Name":"TagProperty","Properties":{"tag":{"Type":4,"Flags":2,"Description":"The tag value."},"timestamp":{"Type":4,"Flags":2,"Description":"Returns the date and time the tag was added."},"objectIdentifier":{"Type":4,"Flags":2,"Description":"Returns the Object ID of the user who added the tag."},"tenantId":{"Type":4,"Flags":2,"Description":"Returns the Tenant ID that issued the token for the user who added the tag."},"upn":{"Type":4,"Flags":2,"Description":"Returns the User Principal Name of the user who added the tag."}}}},{"3":{"ItemType":298}},{"2":{"Name":"ImmutableStorageWithVersioning","Properties":{"enabled":{"Type":2,"Flags":0,"Description":"This is an immutable property, when set to true it enables object level immutability at the container level."},"timeStamp":{"Type":4,"Flags":2,"Description":"Returns the date and time the object level immutability was enabled."},"migrationState":{"Type":303,"Flags":2,"Description":"This property denotes the container level immutability to object level immutability migration state."}}}},{"6":{"Value":"InProgress"}},{"6":{"Value":"Completed"}},{"5":{"Elements":[301,302,4]}},{"4":{"Name":"Microsoft.Storage/storageAccounts/blobServices/containers@2021-04-01","ScopeType":8,"Body":267,"Flags":0}},{"6":{"Value":"default"}},{"5":{"Elements":[305,4]}},{"6":{"Value":"Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies"}},{"6":{"Value":"2021-04-01"}},{"2":{"Name":"Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":306,"Flags":9,"Description":"The resource name"},"type":{"Type":307,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":308,"Flags":10,"Description":"The resource api version"},"properties":{"Type":287,"Flags":1,"Description":"The properties of an ImmutabilityPolicy of a blob container."},"etag":{"Type":4,"Flags":2,"Description":"Resource Etag."}}}},{"4":{"Name":"Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies@2021-04-01","ScopeType":8,"Body":309,"Flags":0}},{"6":{"Value":"default"}},{"5":{"Elements":[311,4]}},{"6":{"Value":"Microsoft.Storage/storageAccounts/fileServices"}},{"6":{"Value":"2021-04-01"}},{"2":{"Name":"Microsoft.Storage/storageAccounts/fileServices","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":312,"Flags":9,"Description":"The resource name"},"type":{"Type":313,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":314,"Flags":10,"Description":"The resource api version"},"properties":{"Type":316,"Flags":0,"Description":"The properties of File services in storage account."},"sku":{"Type":11,"Flags":2,"Description":"Sku name and tier."}}}},{"2":{"Name":"FileServicePropertiesProperties","Properties":{"cors":{"Type":242,"Flags":0,"Description":"Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service."},"shareDeleteRetentionPolicy":{"Type":257,"Flags":0,"Description":"The file service properties for share soft delete."},"protocolSettings":{"Type":317,"Flags":0,"Description":"Protocol settings for file service"}}}},{"2":{"Name":"ProtocolSettings","Properties":{"smb":{"Type":318,"Flags":0,"Description":"Setting for SMB protocol"}}}},{"2":{"Name":"SmbSetting","Properties":{"multichannel":{"Type":319,"Flags":0,"Description":"Multichannel setting. Applies to Premium FileStorage only."},"versions":{"Type":4,"Flags":0,"Description":"SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'."},"authenticationMethods":{"Type":4,"Flags":0,"Description":"SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'."},"kerberosTicketEncryption":{"Type":4,"Flags":0,"Description":"Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'"},"channelEncryption":{"Type":4,"Flags":0,"Description":"SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'."}}}},{"2":{"Name":"Multichannel","Properties":{"enabled":{"Type":2,"Flags":0,"Description":"Indicates whether multichannel is enabled"}}}},{"4":{"Name":"Microsoft.Storage/storageAccounts/fileServices@2021-04-01","ScopeType":8,"Body":315,"Flags":0}},{"6":{"Value":"Microsoft.Storage/storageAccounts/fileServices/shares"}},{"6":{"Value":"2021-04-01"}},{"2":{"Name":"Microsoft.Storage/storageAccounts/fileServices/shares","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":321,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":322,"Flags":10,"Description":"The resource api version"},"properties":{"Type":324,"Flags":0,"Description":"Properties of the file share."},"etag":{"Type":4,"Flags":2,"Description":"Resource Etag."}}}},{"2":{"Name":"FileShareProperties","Properties":{"lastModifiedTime":{"Type":4,"Flags":2,"Description":"Returns the date and time the share was last modified."},"metadata":{"Type":325,"Flags":0,"Description":"A name-value pair to associate with the share as metadata."},"shareQuota":{"Type":3,"Flags":0,"Description":"The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400."},"enabledProtocols":{"Type":328,"Flags":0,"Description":"The authentication protocol that is used for the file share. Can only be specified when creating a share."},"rootSquash":{"Type":332,"Flags":0,"Description":"The property is for NFS share only. The default is NoRootSquash."},"version":{"Type":4,"Flags":2,"Description":"The version of the share."},"deleted":{"Type":2,"Flags":2,"Description":"Indicates whether the share was deleted."},"deletedTime":{"Type":4,"Flags":2,"Description":"The deleted time if the share was deleted."},"remainingRetentionDays":{"Type":3,"Flags":2,"Description":"Remaining retention days for share that was soft deleted."},"accessTier":{"Type":337,"Flags":0,"Description":"Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium."},"accessTierChangeTime":{"Type":4,"Flags":2,"Description":"Indicates the last modification time for share access tier."},"accessTierStatus":{"Type":4,"Flags":2,"Description":"Indicates if there is a pending transition for access tier."},"shareUsageBytes":{"Type":3,"Flags":2,"Description":"The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files."},"leaseStatus":{"Type":340,"Flags":2,"Description":"The lease status of the share."},"leaseState":{"Type":346,"Flags":2,"Description":"Lease state of the share."},"leaseDuration":{"Type":349,"Flags":2,"Description":"Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased."},"signedIdentifiers":{"Type":352,"Flags":0,"Description":"List of stored access policies specified on the share."},"snapshotTime":{"Type":4,"Flags":2,"Description":"Creation time of share snapshot returned in the response of list shares with expand param \"snapshots\"."}}}},{"2":{"Name":"FileSharePropertiesMetadata","Properties":{},"AdditionalProperties":4}},{"6":{"Value":"SMB"}},{"6":{"Value":"NFS"}},{"5":{"Elements":[326,327,4]}},{"6":{"Value":"NoRootSquash"}},{"6":{"Value":"RootSquash"}},{"6":{"Value":"AllSquash"}},{"5":{"Elements":[329,330,331,4]}},{"6":{"Value":"TransactionOptimized"}},{"6":{"Value":"Hot"}},{"6":{"Value":"Cool"}},{"6":{"Value":"Premium"}},{"5":{"Elements":[333,334,335,336,4]}},{"6":{"Value":"Locked"}},{"6":{"Value":"Unlocked"}},{"5":{"Elements":[338,339,4]}},{"6":{"Value":"Available"}},{"6":{"Value":"Leased"}},{"6":{"Value":"Expired"}},{"6":{"Value":"Breaking"}},{"6":{"Value":"Broken"}},{"5":{"Elements":[341,342,343,344,345,4]}},{"6":{"Value":"Infinite"}},{"6":{"Value":"Fixed"}},{"5":{"Elements":[347,348,4]}},{"2":{"Name":"SignedIdentifier","Properties":{"id":{"Type":4,"Flags":0,"Description":"An unique identifier of the stored access policy."},"accessPolicy":{"Type":351,"Flags":0,"Description":"Access policy"}}}},{"2":{"Name":"AccessPolicy","Properties":{"startTime":{"Type":4,"Flags":0,"Description":"Start time of the access policy"},"expiryTime":{"Type":4,"Flags":0,"Description":"Expiry time of the access policy"},"permission":{"Type":4,"Flags":0,"Description":"List of abbreviated permissions."}}}},{"3":{"ItemType":350}},{"4":{"Name":"Microsoft.Storage/storageAccounts/fileServices/shares@2021-04-01","ScopeType":8,"Body":323,"Flags":0}},{"6":{"Value":"default"}},{"5":{"Elements":[354,4]}},{"6":{"Value":"Microsoft.Storage/storageAccounts/queueServices"}},{"6":{"Value":"2021-04-01"}},{"2":{"Name":"Microsoft.Storage/storageAccounts/queueServices","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":355,"Flags":9,"Description":"The resource name"},"type":{"Type":356,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":357,"Flags":10,"Description":"The resource api version"},"properties":{"Type":359,"Flags":0,"Description":"The properties of a storage account’s Queue service."}}}},{"2":{"Name":"QueueServicePropertiesProperties","Properties":{"cors":{"Type":242,"Flags":0,"Description":"Specifies CORS rules for the Queue service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Queue service."}}}},{"4":{"Name":"Microsoft.Storage/storageAccounts/queueServices@2021-04-01","ScopeType":8,"Body":358,"Flags":0}},{"6":{"Value":"Microsoft.Storage/storageAccounts/queueServices/queues"}},{"6":{"Value":"2021-04-01"}},{"2":{"Name":"Microsoft.Storage/storageAccounts/queueServices/queues","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":361,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":362,"Flags":10,"Description":"The resource api version"},"properties":{"Type":364,"Flags":0,"Description":"Queue resource properties."}}}},{"2":{"Name":"QueueProperties","Properties":{"metadata":{"Type":365,"Flags":0,"Description":"A name-value pair that represents queue metadata."},"approximateMessageCount":{"Type":3,"Flags":2,"Description":"Integer indicating an approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher."}}}},{"2":{"Name":"QueuePropertiesMetadata","Properties":{},"AdditionalProperties":4}},{"4":{"Name":"Microsoft.Storage/storageAccounts/queueServices/queues@2021-04-01","ScopeType":8,"Body":363,"Flags":0}},{"6":{"Value":"default"}},{"5":{"Elements":[367,4]}},{"6":{"Value":"Microsoft.Storage/storageAccounts/tableServices"}},{"6":{"Value":"2021-04-01"}},{"2":{"Name":"Microsoft.Storage/storageAccounts/tableServices","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":368,"Flags":9,"Description":"The resource name"},"type":{"Type":369,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":370,"Flags":10,"Description":"The resource api version"},"properties":{"Type":372,"Flags":0,"Description":"The properties of a storage account’s Table service."}}}},{"2":{"Name":"TableServicePropertiesProperties","Properties":{"cors":{"Type":242,"Flags":0,"Description":"Specifies CORS rules for the Table service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Table service."}}}},{"4":{"Name":"Microsoft.Storage/storageAccounts/tableServices@2021-04-01","ScopeType":8,"Body":371,"Flags":0}},{"6":{"Value":"Microsoft.Storage/storageAccounts/tableServices/tables"}},{"6":{"Value":"2021-04-01"}},{"2":{"Name":"Microsoft.Storage/storageAccounts/tableServices/tables","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":374,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":375,"Flags":10,"Description":"The resource api version"},"properties":{"Type":377,"Flags":2,"Description":"Table resource properties."}}}},{"2":{"Name":"TableProperties","Properties":{"tableName":{"Type":4,"Flags":2,"Description":"Table name under the specified account"}}}},{"4":{"Name":"Microsoft.Storage/storageAccounts/tableServices/tables@2021-04-01","ScopeType":8,"Body":376,"Flags":0}},{"6":{"Value":"Microsoft.Storage/locations/deletedAccounts"}},{"6":{"Value":"2021-04-01"}},{"2":{"Name":"Microsoft.Storage/locations/deletedAccounts","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":379,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":380,"Flags":10,"Description":"The resource api version"},"properties":{"Type":382,"Flags":2,"Description":"Properties of the deleted account."}}}},{"2":{"Name":"DeletedAccountProperties","Properties":{"storageAccountResourceId":{"Type":4,"Flags":2,"Description":"Full resource id of the original storage account."},"location":{"Type":4,"Flags":2,"Description":"Location of the deleted account."},"restoreReference":{"Type":4,"Flags":2,"Description":"Can be used to attempt recovering this deleted account via PutStorageAccount API."},"creationTime":{"Type":4,"Flags":2,"Description":"Creation time of the deleted account."},"deletionTime":{"Type":4,"Flags":2,"Description":"Deletion time of the deleted account."}}}},{"4":{"Name":"Microsoft.Storage/locations/deletedAccounts@2021-04-01","ScopeType":4,"Body":381,"Flags":1}},{"2":{"Name":"StorageAccountListKeysResult","Properties":{"keys":{"Type":389,"Flags":2,"Description":"Gets the list of storage account keys and their properties for the specified storage account."}}}},{"2":{"Name":"StorageAccountKey","Properties":{"keyName":{"Type":4,"Flags":2,"Description":"Name of the key."},"value":{"Type":4,"Flags":2,"Description":"Base 64-encoded value of the key."},"permissions":{"Type":388,"Flags":2,"Description":"Permissions for the key -- read-only or full permissions."},"creationTime":{"Type":4,"Flags":2,"Description":"Creation time of the key, in round trip date format."}}}},{"6":{"Value":"Read"}},{"6":{"Value":"Full"}},{"5":{"Elements":[386,387]}},{"3":{"ItemType":385}},{"8":{"Name":"listKeys","ResourceType":"Microsoft.Storage/storageAccounts","ApiVersion":"2021-04-01","Output":384}},{"2":{"Name":"StorageAccountRegenerateKeyParameters","Properties":{"keyName":{"Type":4,"Flags":1,"Description":"The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1, kerb2."}}}},{"8":{"Name":"regenerateKey","ResourceType":"Microsoft.Storage/storageAccounts","ApiVersion":"2021-04-01","Output":384,"Input":391}},{"2":{"Name":"AccountSasParameters","Properties":{"signedServices":{"Type":398,"Flags":1,"Description":"The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f)."},"signedResourceTypes":{"Type":402,"Flags":1,"Description":"The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files."},"signedPermission":{"Type":411,"Flags":1,"Description":"The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p)."},"signedIp":{"Type":4,"Flags":0,"Description":"An IP address or a range of IP addresses from which to accept requests."},"signedProtocol":{"Type":414,"Flags":0,"Description":"The protocol permitted for a request made with the account SAS."},"signedStart":{"Type":4,"Flags":0,"Description":"The time at which the SAS becomes valid."},"signedExpiry":{"Type":4,"Flags":1,"Description":"The time at which the shared access signature becomes invalid."},"keyToSign":{"Type":4,"Flags":0,"Description":"The key to sign the account SAS token with."}}}},{"6":{"Value":"b"}},{"6":{"Value":"q"}},{"6":{"Value":"t"}},{"6":{"Value":"f"}},{"5":{"Elements":[394,395,396,397,4]}},{"6":{"Value":"s"}},{"6":{"Value":"c"}},{"6":{"Value":"o"}},{"5":{"Elements":[399,400,401,4]}},{"6":{"Value":"r"}},{"6":{"Value":"d"}},{"6":{"Value":"w"}},{"6":{"Value":"l"}},{"6":{"Value":"a"}},{"6":{"Value":"c"}},{"6":{"Value":"u"}},{"6":{"Value":"p"}},{"5":{"Elements":[403,404,405,406,407,408,409,410,4]}},{"6":{"Value":"https,http"}},{"6":{"Value":"https"}},{"5":{"Elements":[412,413]}},{"2":{"Name":"ListAccountSasResponse","Properties":{"accountSasToken":{"Type":4,"Flags":2,"Description":"List SAS credentials of storage account."}}}},{"8":{"Name":"listAccountSas","ResourceType":"Microsoft.Storage/storageAccounts","ApiVersion":"2021-04-01","Output":415,"Input":393}},{"2":{"Name":"ServiceSasParameters","Properties":{"canonicalizedResource":{"Type":4,"Flags":1,"Description":"The canonical path to the signed resource."},"signedResource":{"Type":422,"Flags":0,"Description":"The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s)."},"signedPermission":{"Type":431,"Flags":0,"Description":"The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p)."},"signedIp":{"Type":4,"Flags":0,"Description":"An IP address or a range of IP addresses from which to accept requests."},"signedProtocol":{"Type":434,"Flags":0,"Description":"The protocol permitted for a request made with the account SAS."},"signedStart":{"Type":4,"Flags":0,"Description":"The time at which the SAS becomes valid."},"signedExpiry":{"Type":4,"Flags":0,"Description":"The time at which the shared access signature becomes invalid."},"signedIdentifier":{"Type":4,"Flags":0,"Description":"A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table."},"startPk":{"Type":4,"Flags":0,"Description":"The start of partition key."},"endPk":{"Type":4,"Flags":0,"Description":"The end of partition key."},"startRk":{"Type":4,"Flags":0,"Description":"The start of row key."},"endRk":{"Type":4,"Flags":0,"Description":"The end of row key."},"keyToSign":{"Type":4,"Flags":0,"Description":"The key to sign the account SAS token with."},"rscc":{"Type":4,"Flags":0,"Description":"The response header override for cache control."},"rscd":{"Type":4,"Flags":0,"Description":"The response header override for content disposition."},"rsce":{"Type":4,"Flags":0,"Description":"The response header override for content encoding."},"rscl":{"Type":4,"Flags":0,"Description":"The response header override for content language."},"rsct":{"Type":4,"Flags":0,"Description":"The response header override for content type."}}}},{"6":{"Value":"b"}},{"6":{"Value":"c"}},{"6":{"Value":"f"}},{"6":{"Value":"s"}},{"5":{"Elements":[418,419,420,421,4]}},{"6":{"Value":"r"}},{"6":{"Value":"d"}},{"6":{"Value":"w"}},{"6":{"Value":"l"}},{"6":{"Value":"a"}},{"6":{"Value":"c"}},{"6":{"Value":"u"}},{"6":{"Value":"p"}},{"5":{"Elements":[423,424,425,426,427,428,429,430,4]}},{"6":{"Value":"https,http"}},{"6":{"Value":"https"}},{"5":{"Elements":[432,433]}},{"2":{"Name":"ListServiceSasResponse","Properties":{"serviceSasToken":{"Type":4,"Flags":2,"Description":"List service SAS credentials of specific resource."}}}},{"8":{"Name":"listServiceSas","ResourceType":"Microsoft.Storage/storageAccounts","ApiVersion":"2021-04-01","Output":435,"Input":417}},{"8":{"Name":"failover","ResourceType":"Microsoft.Storage/storageAccounts","ApiVersion":"2021-04-01"}},{"8":{"Name":"restoreBlobRanges","ResourceType":"Microsoft.Storage/storageAccounts","ApiVersion":"2021-04-01","Output":141,"Input":146}},{"8":{"Name":"revokeUserDelegationKeys","ResourceType":"Microsoft.Storage/storageAccounts","ApiVersion":"2021-04-01"}},{"2":{"Name":"LegalHold","Properties":{"hasLegalHold":{"Type":2,"Flags":2,"Description":"The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account."},"tags":{"Type":441,"Flags":1,"Description":"Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP."}}}},{"3":{"ItemType":4}},{"8":{"Name":"setLegalHold","ResourceType":"Microsoft.Storage/storageAccounts/blobServices/containers","ApiVersion":"2021-04-01","Output":440,"Input":440}},{"8":{"Name":"clearLegalHold","ResourceType":"Microsoft.Storage/storageAccounts/blobServices/containers","ApiVersion":"2021-04-01","Output":440,"Input":440}},{"2":{"Name":"LeaseContainerRequest","Properties":{"action":{"Type":450,"Flags":1,"Description":"Specifies the lease action. Can be one of the available actions."},"leaseId":{"Type":4,"Flags":0,"Description":"Identifies the lease. Can be specified in any valid GUID string format."},"breakPeriod":{"Type":3,"Flags":0,"Description":"Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60."},"leaseDuration":{"Type":3,"Flags":0,"Description":"Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires."},"proposedLeaseId":{"Type":4,"Flags":0,"Description":"Optional for acquire, required for change. Proposed lease ID, in a GUID string format."}}}},{"6":{"Value":"Acquire"}},{"6":{"Value":"Renew"}},{"6":{"Value":"Change"}},{"6":{"Value":"Release"}},{"6":{"Value":"Break"}},{"5":{"Elements":[445,446,447,448,449,4]}},{"2":{"Name":"LeaseContainerResponse","Properties":{"leaseId":{"Type":4,"Flags":0,"Description":"Returned unique lease ID that must be included with any request to delete the container, or to renew, change, or release the lease."},"leaseTimeSeconds":{"Type":4,"Flags":0,"Description":"Approximate time remaining in the lease period, in seconds."}}}},{"8":{"Name":"lease","ResourceType":"Microsoft.Storage/storageAccounts/blobServices/containers","ApiVersion":"2021-04-01","Output":451,"Input":444}},{"8":{"Name":"migrate","ResourceType":"Microsoft.Storage/storageAccounts/blobServices/containers","ApiVersion":"2021-04-01"}},{"2":{"Name":"ImmutabilityPolicy","Properties":{"properties":{"Type":287,"Flags":1,"Description":"The properties of an ImmutabilityPolicy of a blob container."},"etag":{"Type":4,"Flags":2,"Description":"Resource Etag."},"id":{"Type":4,"Flags":2,"Description":"Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"},"name":{"Type":4,"Flags":2,"Description":"The name of the resource"},"type":{"Type":4,"Flags":2,"Description":"The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""}}}},{"8":{"Name":"lock","ResourceType":"Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies","ApiVersion":"2021-04-01","Output":454}},{"8":{"Name":"extend","ResourceType":"Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies","ApiVersion":"2021-04-01","Output":454,"Input":454}},{"2":{"Name":"DeletedShare","Properties":{"deletedShareName":{"Type":4,"Flags":1,"Description":"Required. Identify the name of the deleted share that will be restored."},"deletedShareVersion":{"Type":4,"Flags":1,"Description":"Required. Identify the version of the deleted share that will be restored."}}}},{"8":{"Name":"restore","ResourceType":"Microsoft.Storage/storageAccounts/fileServices/shares","ApiVersion":"2021-04-01","Input":457}},{"2":{"Name":"LeaseShareRequest","Properties":{"action":{"Type":465,"Flags":1,"Description":"Specifies the lease action. Can be one of the available actions."},"leaseId":{"Type":4,"Flags":0,"Description":"Identifies the lease. Can be specified in any valid GUID string format."},"breakPeriod":{"Type":3,"Flags":0,"Description":"Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60."},"leaseDuration":{"Type":3,"Flags":0,"Description":"Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires."},"proposedLeaseId":{"Type":4,"Flags":0,"Description":"Optional for acquire, required for change. Proposed lease ID, in a GUID string format."}}}},{"6":{"Value":"Acquire"}},{"6":{"Value":"Renew"}},{"6":{"Value":"Change"}},{"6":{"Value":"Release"}},{"6":{"Value":"Break"}},{"5":{"Elements":[460,461,462,463,464,4]}},{"2":{"Name":"LeaseShareResponse","Properties":{"leaseId":{"Type":4,"Flags":0,"Description":"Returned unique lease ID that must be included with any request to delete the share, or to renew, change, or release the lease."},"leaseTimeSeconds":{"Type":4,"Flags":0,"Description":"Approximate time remaining in the lease period, in seconds."}}}},{"8":{"Name":"lease","ResourceType":"Microsoft.Storage/storageAccounts/fileServices/shares","ApiVersion":"2021-04-01","Output":466,"Input":459}}]