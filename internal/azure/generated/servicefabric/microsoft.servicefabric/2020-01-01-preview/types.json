[
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ServiceFabric/managedClusters"
  },
  {
    "$type": "StringLiteralType",
    "value": "2020-01-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ServiceFabric/managedClusters",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The managed cluster resource properties"
      },
      "sku": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 0,
        "description": "The sku of the managed cluster"
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Azure resource location."
      },
      "tags": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 0,
        "description": "Azure resource tags."
      },
      "etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Azure resource etag."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedClusterProperties",
    "properties": {
      "dnsName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The cluster dns name."
      },
      "fqdn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "the cluster Fully qualified domain name."
      },
      "clusterId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A service generated unique identifier for the cluster resource."
      },
      "clusterState": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 2,
        "description": "The current state of the cluster."
      },
      "clusterCertificateThumbprint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The cluster certificate thumbprint used node to node communication."
      },
      "clientConnectionPort": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 0,
        "description": "The port used for client connections to the cluster."
      },
      "httpGatewayConnectionPort": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 0,
        "description": "The port used for http connections to the cluster."
      },
      "adminUserName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "vm admin user name."
      },
      "adminPassword": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "vm admin user password."
      },
      "loadBalancingRules": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "Describes load balancing rules."
      },
      "clients": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 0,
        "description": "client certificates for the cluster."
      },
      "azureActiveDirectory": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 0,
        "description": "Azure active directory."
      },
      "fabricSettings": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 0,
        "description": "The list of custom fabric settings to configure the cluster."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 2,
        "description": "The provisioning state of the managed cluster resource."
      },
      "clusterCodeVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**."
      },
      "addonFeatures": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 0,
        "description": "client certificates for the cluster."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "WaitingForNodes"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deploying"
  },
  {
    "$type": "StringLiteralType",
    "value": "BaselineUpgrade"
  },
  {
    "$type": "StringLiteralType",
    "value": "UpdatingUserConfiguration"
  },
  {
    "$type": "StringLiteralType",
    "value": "UpdatingUserCertificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "UpdatingInfrastructure"
  },
  {
    "$type": "StringLiteralType",
    "value": "EnforcingClusterVersion"
  },
  {
    "$type": "StringLiteralType",
    "value": "UpgradeServiceUnreachable"
  },
  {
    "$type": "StringLiteralType",
    "value": "AutoScale"
  },
  {
    "$type": "StringLiteralType",
    "value": "Ready"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/5"
      },
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/12"
      },
      {
        "$ref": "#/13"
      },
      {
        "$ref": "#/14"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "StringType",
    "sensitive": true
  },
  {
    "$type": "ObjectType",
    "name": "LoadBalancingRule",
    "properties": {
      "frontendPort": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 1,
        "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534."
      },
      "backendPort": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 1,
        "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535."
      },
      "protocol": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 1,
        "description": "The reference to the transport protocol used by the load balancing rule."
      },
      "probeProtocol": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 1,
        "description": "the reference to the load balancer probe used by the load balancing rule."
      },
      "probeRequestPath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The probe request path. Only supported for HTTP/HTTPS probes."
      }
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 65534
  },
  {
    "$type": "StringLiteralType",
    "value": "tcp"
  },
  {
    "$type": "StringLiteralType",
    "value": "udp"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/20"
      },
      {
        "$ref": "#/21"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "tcp"
  },
  {
    "$type": "StringLiteralType",
    "value": "http"
  },
  {
    "$type": "StringLiteralType",
    "value": "https"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/23"
      },
      {
        "$ref": "#/24"
      },
      {
        "$ref": "#/25"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/18"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClientCertificate",
    "properties": {
      "isAdmin": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 1,
        "description": "Whether the certificate is admin or not."
      },
      "thumbprint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Certificate Thumbprint."
      },
      "commonName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Certificate Common name."
      },
      "issuerThumbprint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Issuer thumbprint for the certificate. Only used together with CommonName."
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/28"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureActiveDirectory",
    "properties": {
      "tenantId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure active directory tenant id."
      },
      "clusterApplication": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure active directory cluster application id."
      },
      "clientApplication": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure active directory client application id."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SettingsSectionDescription",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The section name of the fabric settings."
      },
      "parameters": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 1,
        "description": "The collection of parameters in the section."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SettingsParameterDescription",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The parameter name of fabric setting."
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The parameter value of fabric setting."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/33"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/32"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Created"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Other"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/36"
      },
      {
        "$ref": "#/37"
      },
      {
        "$ref": "#/38"
      },
      {
        "$ref": "#/39"
      },
      {
        "$ref": "#/40"
      },
      {
        "$ref": "#/41"
      },
      {
        "$ref": "#/42"
      },
      {
        "$ref": "#/43"
      },
      {
        "$ref": "#/44"
      },
      {
        "$ref": "#/45"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "DnsService"
  },
  {
    "$type": "StringLiteralType",
    "value": "BackupRestoreService"
  },
  {
    "$type": "StringLiteralType",
    "value": "ResourceMonitorService"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/47"
      },
      {
        "$ref": "#/48"
      },
      {
        "$ref": "#/49"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/50"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Sku",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 1,
        "description": "Sku Name."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Basic"
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/53"
      },
      {
        "$ref": "#/54"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ServiceFabric/managedClusters@2020-01-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/3"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
  },
  {
    "$type": "StringLiteralType",
    "value": "2020-01-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ServiceFabric/managedClusters/nodeTypes",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/59"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 0,
        "description": "The node type properties"
      },
      "tags": {
        "type": {
          "$ref": "#/87"
        },
        "flags": 0,
        "description": "Azure resource tags."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NodeTypeProperties",
    "properties": {
      "isPrimary": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 1,
        "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
      },
      "vmInstanceCount": {
        "type": {
          "$ref": "#/62"
        },
        "flags": 1,
        "description": "The number of nodes in the node type."
      },
      "dataDiskSizeGB": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 1,
        "description": "Disk size for each vm in the node type in GBs."
      },
      "placementProperties": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run."
      },
      "capacities": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has."
      },
      "applicationPorts": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 0,
        "description": "The range of ports from which cluster assigned port to Service Fabric applications."
      },
      "ephemeralPorts": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 0,
        "description": "The range of ephemeral ports that nodes in this node type should be configured with."
      },
      "vmSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3."
      },
      "vmImagePublisher": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer."
      },
      "vmImageOffer": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer."
      },
      "vmImageSku": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter."
      },
      "vmImageVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'."
      },
      "vmSecrets": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 0,
        "description": "The secrets to install in the virtual machines."
      },
      "vmExtensions": {
        "type": {
          "$ref": "#/75"
        },
        "flags": 0,
        "description": "Set of extensions that should be installed onto the virtual machines."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 2,
        "description": "The provisioning state of the managed cluster resource."
      }
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 2147483647
  },
  {
    "$type": "ObjectType",
    "name": "NodeTypePropertiesPlacementProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NodeTypePropertiesCapacities",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "EndpointRangeDescription",
    "properties": {
      "startPort": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 1,
        "description": "Starting port of a range of ports"
      },
      "endPort": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 1,
        "description": "End port of a range of ports"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VaultSecretGroup",
    "properties": {
      "sourceVault": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 1,
        "description": "The relative URL of the Key Vault containing all of the certificates in VaultCertificates."
      },
      "vaultCertificates": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 1,
        "description": "The list of key vault references in SourceVault which contain certificates."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SubResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure resource identifier."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VaultCertificate",
    "properties": {
      "certificateUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>}"
      },
      "certificateStore": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/68"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/66"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VmssExtension",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the extension."
      },
      "properties": {
        "type": {
          "$ref": "#/72"
        },
        "flags": 1,
        "description": "Describes the properties of a Virtual Machine Scale Set Extension."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VmssExtensionProperties",
    "properties": {
      "publisher": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the extension handler publisher."
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
      },
      "typeHandlerVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Specifies the version of the script handler."
      },
      "autoUpgradeMinorVersion": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 0,
        "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
      },
      "settings": {
        "type": {
          "$ref": "#/73"
        },
        "flags": 0,
        "description": "Json formatted public settings for the extension."
      },
      "protectedSettings": {
        "type": {
          "$ref": "#/73"
        },
        "flags": 0,
        "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
      },
      "forceUpdateTag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."
      },
      "provisionAfterExtensions": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 0,
        "description": "Collection of extension names after which this extension needs to be provisioned."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The provisioning state, which only appears in the response."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/71"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Created"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Other"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/76"
      },
      {
        "$ref": "#/77"
      },
      {
        "$ref": "#/78"
      },
      {
        "$ref": "#/79"
      },
      {
        "$ref": "#/80"
      },
      {
        "$ref": "#/81"
      },
      {
        "$ref": "#/82"
      },
      {
        "$ref": "#/83"
      },
      {
        "$ref": "#/84"
      },
      {
        "$ref": "#/85"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ManagedProxyResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ServiceFabric/managedClusters/nodeTypes@2020-01-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/60"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "NodeTypeActionParameters",
    "properties": {
      "nodes": {
        "type": {
          "$ref": "#/90"
        },
        "flags": 1,
        "description": "List of node names from the node type."
      },
      "force": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 0,
        "description": "Force the action to go through."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "restart",
    "resourceType": "Microsoft.ServiceFabric/managedClusters/nodeTypes",
    "apiVersion": "2020-01-01-preview",
    "input": {
      "$ref": "#/89"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "reimage",
    "resourceType": "Microsoft.ServiceFabric/managedClusters/nodeTypes",
    "apiVersion": "2020-01-01-preview",
    "input": {
      "$ref": "#/89"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "deleteNode",
    "resourceType": "Microsoft.ServiceFabric/managedClusters/nodeTypes",
    "apiVersion": "2020-01-01-preview",
    "input": {
      "$ref": "#/89"
    }
  }
]