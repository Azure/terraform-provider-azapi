[
  {
    "$type": "StringType",
    "minLength": 3,
    "maxLength": 100,
    "pattern": "^[a-z0-9]([a-z0-9]|(-(?!-))){1,61}[a-z0-9]$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DesktopVirtualization/appAttachPackages"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DesktopVirtualization/appAttachPackages",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 1,
        "description": "Detailed properties for App Attach Package"
      },
      "tags": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AppAttachPackageProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/10"
        },
        "flags": 2,
        "description": "The provisioning state of the App Attach Package."
      },
      "image": {
        "type": {
          "$ref": "#/11"
        },
        "flags": 0,
        "description": "Detailed properties for App Attach Package"
      },
      "hostPoolReferences": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "List of Hostpool resource Ids."
      },
      "keyVaultURL": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "URL path to certificate name located in keyVault"
      },
      "failHealthCheckOnStagingFailure": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 0,
        "description": "Parameter indicating how the health check should behave if this package fails staging"
      },
      "packageOwnerName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specific name of package owner, is \"AppAttach\" for native app attach packages"
      },
      "packageLookbackUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Lookback url to third party control plane, is null for native app attach packages"
      },
      "customData": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Field that can be populated with custom data and filtered on in list GET calls"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AppAttachPackageInfoProperties",
    "properties": {
      "packageAlias": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Alias of App Attach Package. Assigned at import time"
      },
      "imagePath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "VHD/CIM image path on Network Share."
      },
      "packageName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Package Name from appxmanifest.xml."
      },
      "packageFamilyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name."
      },
      "packageFullName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Package Full Name from appxmanifest.xml."
      },
      "displayName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "User friendly Name to be displayed in the portal."
      },
      "packageRelativePath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Relative Path to the package inside the image."
      },
      "isRegularRegistration": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Specifies how to register Package in feed."
      },
      "isActive": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Make this version of the package the active one across the hostpool."
      },
      "packageDependencies": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "List of package dependencies."
      },
      "version": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Package version found in the appxmanifest.xml."
      },
      "lastUpdated": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Date Package was last updated, found in the appxmanifest.xml."
      },
      "packageApplications": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "List of package applications."
      },
      "certificateName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Certificate name found in the appxmanifest.xml."
      },
      "certificateExpiry": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Date certificate expires, found in the appxmanifest.xml."
      },
      "isPackageTimestamped": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Is package timestamped so it can ignore the certificate expiry date"
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ObjectType",
    "name": "MsixPackageDependencies",
    "properties": {
      "dependencyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of package dependency."
      },
      "publisher": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of dependency publisher."
      },
      "minVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Dependency version required."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/13"
    }
  },
  {
    "$type": "ObjectType",
    "name": "MsixPackageApplications",
    "properties": {
      "appId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Package Application Id, found in appxmanifest.xml."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of Package Application."
      },
      "appUserModelID": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Used to activate Package Application. Consists of Package Name and ApplicationID. Found in appxmanifest.xml."
      },
      "friendlyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "User friendly name."
      },
      "iconImageName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "User friendly name."
      },
      "rawIcon": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 0,
        "description": "the icon a 64 bit string as a byte array."
      },
      "rawPng": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 0,
        "description": "the icon a 64 bit string as a byte array."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/15"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Timestamped"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotTimestamped"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/18"
      },
      {
        "$ref": "#/19"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unhealthy"
  },
  {
    "$type": "StringLiteralType",
    "value": "NeedsAssistance"
  },
  {
    "$type": "StringLiteralType",
    "value": "DoNotFail"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/22"
      },
      {
        "$ref": "#/23"
      },
      {
        "$ref": "#/24"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/37"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/28"
      },
      {
        "$ref": "#/29"
      },
      {
        "$ref": "#/30"
      },
      {
        "$ref": "#/31"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/33"
      },
      {
        "$ref": "#/34"
      },
      {
        "$ref": "#/35"
      },
      {
        "$ref": "#/36"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DesktopVirtualization/appAttachPackages@2025-04-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/4"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 3,
    "maxLength": 64,
    "pattern": "^[A-Za-z0-9@.\\-_ ]*$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DesktopVirtualization/applicationGroups"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DesktopVirtualization/applicationGroups",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 1,
        "description": "Detailed properties for ApplicationGroup"
      },
      "identity": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 0,
        "description": "The managed service identities assigned to this resource."
      },
      "etag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields."
      },
      "kind": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
      },
      "managedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
      },
      "plan": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0,
        "description": "Details of the resource plan."
      },
      "sku": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 0,
        "description": "The SKU (Stock Keeping Unit) assigned to this resource."
      },
      "tags": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ApplicationGroupProperties",
    "properties": {
      "objectId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "ObjectId of ApplicationGroup. (internal use)"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of ApplicationGroup."
      },
      "friendlyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Friendly name of ApplicationGroup."
      },
      "hostPoolArmPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "HostPool arm path of ApplicationGroup."
      },
      "workspaceArmPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Workspace arm path of ApplicationGroup."
      },
      "applicationGroupType": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 1,
        "description": "Resource Type of ApplicationGroup."
      },
      "cloudPcResource": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 2,
        "description": "Is cloud pc resource."
      },
      "showInFeed": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Boolean representing whether the applicationGroup is show in the feed."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "RemoteApp"
  },
  {
    "$type": "StringLiteralType",
    "value": "Desktop"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/44"
      },
      {
        "$ref": "#/45"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ManagedServiceIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 2,
        "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "tenantId": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 2,
        "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "type": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 1,
        "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."
      },
      "userAssignedIdentities": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 36,
    "maxLength": 36,
    "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned,UserAssigned"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/49"
      },
      {
        "$ref": "#/50"
      },
      {
        "$ref": "#/51"
      },
      {
        "$ref": "#/52"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 2,
        "description": "The principal ID of the assigned identity."
      },
      "clientId": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 2,
        "description": "The client ID of the assigned identity."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedServiceIdentityUserAssignedIdentities",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/54"
    }
  },
  {
    "$type": "StringType",
    "pattern": "^[-\\w\\._,\\(\\)]+$"
  },
  {
    "$type": "ObjectType",
    "name": "Plan",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "A user defined name of the 3rd Party Artifact that is being procured."
      },
      "publisher": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
      },
      "product": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding."
      },
      "promotionCode": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
      },
      "version": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The version of the desired product/artifact."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Sku",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
      },
      "tier": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
      },
      "size": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code."
      },
      "family": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
      },
      "capacity": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Free"
  },
  {
    "$type": "StringLiteralType",
    "value": "Basic"
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard"
  },
  {
    "$type": "StringLiteralType",
    "value": "Premium"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/59"
      },
      {
        "$ref": "#/60"
      },
      {
        "$ref": "#/61"
      },
      {
        "$ref": "#/62"
      }
    ]
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DesktopVirtualization/applicationGroups@2025-04-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/42"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DesktopVirtualization/hostPools"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DesktopVirtualization/hostPools",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 1,
        "description": "Detailed properties for HostPool"
      },
      "identity": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 0,
        "description": "The managed service identities assigned to this resource."
      },
      "etag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields."
      },
      "kind": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
      },
      "managedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
      },
      "plan": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0,
        "description": "Details of the resource plan."
      },
      "sku": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 0,
        "description": "The SKU (Stock Keeping Unit) assigned to this resource."
      },
      "tags": {
        "type": {
          "$ref": "#/152"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HostPoolProperties",
    "properties": {
      "objectId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "ObjectId of HostPool. (internal use)"
      },
      "friendlyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Friendly name of HostPool."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of HostPool."
      },
      "hostPoolType": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 1,
        "description": "HostPool type for desktop."
      },
      "personalDesktopAssignmentType": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 0,
        "description": "PersonalDesktopAssignment type for HostPool."
      },
      "customRdpProperty": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Custom rdp property of HostPool."
      },
      "maxSessionLimit": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "The max session limit of HostPool."
      },
      "loadBalancerType": {
        "type": {
          "$ref": "#/82"
        },
        "flags": 1,
        "description": "The type of the load balancer."
      },
      "ring": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "The ring number of HostPool."
      },
      "validationEnvironment": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Is validation environment."
      },
      "registrationInfo": {
        "type": {
          "$ref": "#/83"
        },
        "flags": 0,
        "description": "The registration info of HostPool."
      },
      "vmTemplate": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "VM template for sessionhosts configuration within hostpool."
      },
      "applicationGroupReferences": {
        "type": {
          "$ref": "#/88"
        },
        "flags": 2,
        "description": "List of applicationGroup links."
      },
      "appAttachPackageReferences": {
        "type": {
          "$ref": "#/89"
        },
        "flags": 2,
        "description": "List of App Attach Package links."
      },
      "ssoadfsAuthority": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "URL to customer ADFS server for signing WVD SSO certificates."
      },
      "ssoClientId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ClientId for the registered Relying Party used to issue WVD SSO certificates."
      },
      "ssoClientSecretKeyVaultPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Path to Azure KeyVault storing the secret used for communication to ADFS."
      },
      "ssoSecretType": {
        "type": {
          "$ref": "#/94"
        },
        "flags": 0,
        "description": "The type of single sign on Secret Type."
      },
      "preferredAppGroupType": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 1,
        "description": "The type of preferred application group type, default to Desktop Application Group"
      },
      "startVMOnConnect": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "The flag to turn on/off StartVMOnConnect feature."
      },
      "cloudPcResource": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 2,
        "description": "Is cloud pc resource."
      },
      "publicNetworkAccess": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 0,
        "description": "Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints"
      },
      "agentUpdate": {
        "type": {
          "$ref": "#/104"
        },
        "flags": 0,
        "description": "The session host configuration for updating agent, monitoring agent, and stack component."
      },
      "privateEndpointConnections": {
        "type": {
          "$ref": "#/132"
        },
        "flags": 2,
        "description": "List of private endpoint connection associated with the specified resource"
      },
      "managedPrivateUDP": {
        "type": {
          "$ref": "#/136"
        },
        "flags": 0,
        "description": "Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections"
      },
      "directUDP": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 0,
        "description": "Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections"
      },
      "publicUDP": {
        "type": {
          "$ref": "#/144"
        },
        "flags": 0,
        "description": "Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections"
      },
      "relayUDP": {
        "type": {
          "$ref": "#/148"
        },
        "flags": 0,
        "description": "Default: AVD-wide settings are used to determine connection availability, Enabled: UDP will attempt this connection type when making connections. This means that this connection is possible, but is not guaranteed, as there are other factors that may prevent this connection type, Disabled: UDP will not attempt this connection type when making connections"
      },
      "managementType": {
        "type": {
          "$ref": "#/151"
        },
        "flags": 0,
        "description": "The type of management for this hostpool, Automated or Standard. The default value is Automated."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Personal"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pooled"
  },
  {
    "$type": "StringLiteralType",
    "value": "BYODesktop"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/71"
      },
      {
        "$ref": "#/72"
      },
      {
        "$ref": "#/73"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Automatic"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/75"
      },
      {
        "$ref": "#/76"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "BreadthFirst"
  },
  {
    "$type": "StringLiteralType",
    "value": "DepthFirst"
  },
  {
    "$type": "StringLiteralType",
    "value": "Persistent"
  },
  {
    "$type": "StringLiteralType",
    "value": "MultiplePersistent"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/78"
      },
      {
        "$ref": "#/79"
      },
      {
        "$ref": "#/80"
      },
      {
        "$ref": "#/81"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "RegistrationInfo",
    "properties": {
      "expirationTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Expiration time of registration token."
      },
      "token": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The registration token base64 encoded string."
      },
      "registrationTokenOperation": {
        "type": {
          "$ref": "#/87"
        },
        "flags": 0,
        "description": "The type of resetting the token."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Delete"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Update"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/84"
      },
      {
        "$ref": "#/85"
      },
      {
        "$ref": "#/86"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SharedKey"
  },
  {
    "$type": "StringLiteralType",
    "value": "Certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "SharedKeyInKeyVault"
  },
  {
    "$type": "StringLiteralType",
    "value": "CertificateInKeyVault"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/90"
      },
      {
        "$ref": "#/91"
      },
      {
        "$ref": "#/92"
      },
      {
        "$ref": "#/93"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Desktop"
  },
  {
    "$type": "StringLiteralType",
    "value": "RailApplications"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/95"
      },
      {
        "$ref": "#/96"
      },
      {
        "$ref": "#/97"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "EnabledForSessionHostsOnly"
  },
  {
    "$type": "StringLiteralType",
    "value": "EnabledForClientsOnly"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/99"
      },
      {
        "$ref": "#/100"
      },
      {
        "$ref": "#/101"
      },
      {
        "$ref": "#/102"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AgentUpdateProperties",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 0,
        "description": "The type of maintenance for session host components."
      },
      "useSessionHostLocalTime": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Whether to use localTime of the virtual machine."
      },
      "maintenanceWindowTimeZone": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Time zone for maintenance as defined in https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.findsystemtimezonebyid?view=net-5.0. Must be set if useLocalTime is true."
      },
      "maintenanceWindows": {
        "type": {
          "$ref": "#/117"
        },
        "flags": 0,
        "description": "List of maintenance windows. Maintenance windows are 2 hours long."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Scheduled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/105"
      },
      {
        "$ref": "#/106"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "MaintenanceWindowProperties",
    "properties": {
      "hour": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "The update start hour of the day. (0 - 23)"
      },
      "dayOfWeek": {
        "type": {
          "$ref": "#/116"
        },
        "flags": 0,
        "description": "Day of the week."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Monday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Tuesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Wednesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Thursday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Friday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Saturday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sunday"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/109"
      },
      {
        "$ref": "#/110"
      },
      {
        "$ref": "#/111"
      },
      {
        "$ref": "#/112"
      },
      {
        "$ref": "#/113"
      },
      {
        "$ref": "#/114"
      },
      {
        "$ref": "#/115"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/108"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnection",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/119"
        },
        "flags": 0,
        "description": "Resource properties."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\""
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnectionProperties",
    "properties": {
      "groupIds": {
        "type": {
          "$ref": "#/120"
        },
        "flags": 2,
        "description": "The group ids for the private endpoint resource."
      },
      "privateEndpoint": {
        "type": {
          "$ref": "#/121"
        },
        "flags": 0,
        "description": "The private endpoint resource."
      },
      "privateLinkServiceConnectionState": {
        "type": {
          "$ref": "#/122"
        },
        "flags": 1,
        "description": "A collection of information about the state of the connection between service consumer and provider."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/131"
        },
        "flags": 2,
        "description": "The provisioning state of the private endpoint connection resource."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpoint",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The ARM identifier for private endpoint."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateLinkServiceConnectionState",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/126"
        },
        "flags": 0,
        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The reason for approval/rejection of the connection."
      },
      "actionsRequired": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "A message indicating if changes on the service provider require any updates on the consumer."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Approved"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rejected"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/123"
      },
      {
        "$ref": "#/124"
      },
      {
        "$ref": "#/125"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/127"
      },
      {
        "$ref": "#/128"
      },
      {
        "$ref": "#/129"
      },
      {
        "$ref": "#/130"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/118"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/133"
      },
      {
        "$ref": "#/134"
      },
      {
        "$ref": "#/135"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/137"
      },
      {
        "$ref": "#/138"
      },
      {
        "$ref": "#/139"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/141"
      },
      {
        "$ref": "#/142"
      },
      {
        "$ref": "#/143"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/145"
      },
      {
        "$ref": "#/146"
      },
      {
        "$ref": "#/147"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Automated"
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/149"
      },
      {
        "$ref": "#/150"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DesktopVirtualization/hostPools@2025-04-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/69"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DesktopVirtualization/scalingPlans"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DesktopVirtualization/scalingPlans",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/154"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/155"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/157"
        },
        "flags": 1,
        "description": "Detailed properties for scaling plan."
      },
      "identity": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 0,
        "description": "The managed service identities assigned to this resource."
      },
      "etag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields."
      },
      "kind": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
      },
      "managedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
      },
      "plan": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0,
        "description": "Details of the resource plan."
      },
      "sku": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 0,
        "description": "The SKU (Stock Keeping Unit) assigned to this resource."
      },
      "tags": {
        "type": {
          "$ref": "#/199"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScalingPlanProperties",
    "properties": {
      "objectId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "ObjectId of scaling plan. (internal use)"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of scaling plan."
      },
      "friendlyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "User friendly name of scaling plan."
      },
      "timeZone": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Timezone of the scaling plan."
      },
      "hostPoolType": {
        "type": {
          "$ref": "#/160"
        },
        "flags": 0,
        "description": "HostPool type for desktop."
      },
      "exclusionTag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Exclusion tag for scaling plan."
      },
      "schedules": {
        "type": {
          "$ref": "#/196"
        },
        "flags": 0,
        "description": "List of ScalingPlanPooledSchedule definitions."
      },
      "hostPoolReferences": {
        "type": {
          "$ref": "#/198"
        },
        "flags": 0,
        "description": "List of ScalingHostPoolReference definitions."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Pooled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Personal"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/158"
      },
      {
        "$ref": "#/159"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ScalingSchedule",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the ScalingPlanPooledSchedule."
      },
      "daysOfWeek": {
        "type": {
          "$ref": "#/170"
        },
        "flags": 0,
        "description": "Set of days of the week on which this schedule is active."
      },
      "scalingMethod": {
        "type": {
          "$ref": "#/173"
        },
        "flags": 0,
        "description": "The desired scaling method to be used to scale the hosts in the assigned host pool."
      },
      "createDelete": {
        "type": {
          "$ref": "#/174"
        },
        "flags": 0,
        "description": "The properties that control how Scaling will manage the size of the hostpool by creating and deleting hosts."
      },
      "rampUpStartTime": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 0,
        "description": "Starting time for ramp up period."
      },
      "rampUpLoadBalancingAlgorithm": {
        "type": {
          "$ref": "#/181"
        },
        "flags": 0,
        "description": "Load balancing algorithm for ramp up period."
      },
      "rampUpMinimumHostsPct": {
        "type": {
          "$ref": "#/182"
        },
        "flags": 0,
        "description": "Minimum host percentage for ramp up period."
      },
      "rampUpCapacityThresholdPct": {
        "type": {
          "$ref": "#/183"
        },
        "flags": 0,
        "description": "Capacity threshold for ramp up period."
      },
      "peakStartTime": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 0,
        "description": "Starting time for peak period."
      },
      "peakLoadBalancingAlgorithm": {
        "type": {
          "$ref": "#/186"
        },
        "flags": 0,
        "description": "Load balancing algorithm for peak period."
      },
      "rampDownStartTime": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 0,
        "description": "Starting time for ramp down period."
      },
      "rampDownLoadBalancingAlgorithm": {
        "type": {
          "$ref": "#/189"
        },
        "flags": 0,
        "description": "Load balancing algorithm for ramp down period."
      },
      "rampDownMinimumHostsPct": {
        "type": {
          "$ref": "#/182"
        },
        "flags": 0,
        "description": "Minimum host percentage for ramp down period."
      },
      "rampDownCapacityThresholdPct": {
        "type": {
          "$ref": "#/183"
        },
        "flags": 0,
        "description": "Capacity threshold for ramp down period."
      },
      "rampDownForceLogoffUsers": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Should users be logged off forcefully from hosts."
      },
      "rampDownStopHostsWhen": {
        "type": {
          "$ref": "#/192"
        },
        "flags": 0,
        "description": "Specifies when to stop hosts during ramp down period."
      },
      "rampDownWaitTimeMinutes": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Number of minutes to wait to stop hosts during ramp down period."
      },
      "rampDownNotificationMessage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Notification message for users during ramp down period."
      },
      "offPeakStartTime": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 0,
        "description": "Starting time for off-peak period."
      },
      "offPeakLoadBalancingAlgorithm": {
        "type": {
          "$ref": "#/195"
        },
        "flags": 0,
        "description": "Load balancing algorithm for off-peak period."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Monday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Tuesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Wednesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Thursday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Friday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Saturday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sunday"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/162"
      },
      {
        "$ref": "#/163"
      },
      {
        "$ref": "#/164"
      },
      {
        "$ref": "#/165"
      },
      {
        "$ref": "#/166"
      },
      {
        "$ref": "#/167"
      },
      {
        "$ref": "#/168"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/169"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "PowerManage"
  },
  {
    "$type": "StringLiteralType",
    "value": "CreateDeletePowerManage"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/171"
      },
      {
        "$ref": "#/172"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CreateDeleteProperties",
    "properties": {
      "rampUpMaximumHostPoolSize": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 0,
        "description": "Maximum number of session hosts that may be created by the Scaling Service. This requires the assigned hostpool to have a session host config property."
      },
      "rampUpMinimumHostPoolSize": {
        "type": {
          "$ref": "#/176"
        },
        "flags": 0,
        "description": "Minimum number of session hosts that will be be created by the Scaling Service. Scaling will not delete any hosts when this limit is met. This requires the assigned hostpool to have a session host config property."
      },
      "rampDownMaximumHostPoolSize": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 0,
        "description": "Maximum number of session hosts that may be created by the Scaling Service. This requires the assigned hostpool to have a session host config property."
      },
      "rampDownMinimumHostPoolSize": {
        "type": {
          "$ref": "#/176"
        },
        "flags": 0,
        "description": "Minimum number of session hosts that will be be created by the Scaling Service. Scaling will not delete any hosts when this limit is met. This requires the assigned hostpool to have a session host config property."
      }
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 0
  },
  {
    "$type": "IntegerType",
    "minValue": 0,
    "maxValue": 59
  },
  {
    "$type": "ObjectType",
    "name": "Time",
    "properties": {
      "hour": {
        "type": {
          "$ref": "#/178"
        },
        "flags": 1,
        "description": "The hour."
      },
      "minute": {
        "type": {
          "$ref": "#/176"
        },
        "flags": 1,
        "description": "The minute."
      }
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 0,
    "maxValue": 23
  },
  {
    "$type": "StringLiteralType",
    "value": "BreadthFirst"
  },
  {
    "$type": "StringLiteralType",
    "value": "DepthFirst"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/179"
      },
      {
        "$ref": "#/180"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 0,
    "maxValue": 100
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 100
  },
  {
    "$type": "StringLiteralType",
    "value": "BreadthFirst"
  },
  {
    "$type": "StringLiteralType",
    "value": "DepthFirst"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/184"
      },
      {
        "$ref": "#/185"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "BreadthFirst"
  },
  {
    "$type": "StringLiteralType",
    "value": "DepthFirst"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/187"
      },
      {
        "$ref": "#/188"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "ZeroSessions"
  },
  {
    "$type": "StringLiteralType",
    "value": "ZeroActiveSessions"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/190"
      },
      {
        "$ref": "#/191"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "BreadthFirst"
  },
  {
    "$type": "StringLiteralType",
    "value": "DepthFirst"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/193"
      },
      {
        "$ref": "#/194"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/161"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScalingHostPoolReference",
    "properties": {
      "hostPoolArmPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Arm path of referenced hostpool."
      },
      "scalingPlanEnabled": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Is the scaling plan enabled for this hostpool."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/197"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DesktopVirtualization/scalingPlans@2025-04-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/156"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DesktopVirtualization/workspaces"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DesktopVirtualization/workspaces",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/201"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/202"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/204"
        },
        "flags": 0,
        "description": "Detailed properties for Workspace"
      },
      "identity": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 0,
        "description": "The managed service identities assigned to this resource."
      },
      "etag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields."
      },
      "kind": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
      },
      "managedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
      },
      "plan": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0,
        "description": "Details of the resource plan."
      },
      "sku": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 0,
        "description": "The SKU (Stock Keeping Unit) assigned to this resource."
      },
      "tags": {
        "type": {
          "$ref": "#/210"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceProperties",
    "properties": {
      "objectId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "ObjectId of Workspace. (internal use)"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of Workspace."
      },
      "friendlyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Friendly name of Workspace."
      },
      "applicationGroupReferences": {
        "type": {
          "$ref": "#/205"
        },
        "flags": 0,
        "description": "List of applicationGroup resource Ids."
      },
      "cloudPcResource": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 2,
        "description": "Is cloud pc resource."
      },
      "publicNetworkAccess": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Enabled allows this resource to be accessed from both public and private networks, Disabled allows this resource to only be accessed via private endpoints"
      },
      "privateEndpointConnections": {
        "type": {
          "$ref": "#/209"
        },
        "flags": 2,
        "description": "List of private endpoint connection associated with the specified resource"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/206"
      },
      {
        "$ref": "#/207"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/118"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DesktopVirtualization/workspaces@2025-04-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/203"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 3,
    "maxLength": 24,
    "pattern": "^[A-Za-z0-9@.\\-_ ]*$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DesktopVirtualization/applicationGroups/applications"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DesktopVirtualization/applicationGroups/applications",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/212"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/213"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/214"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/216"
        },
        "flags": 1,
        "description": "Detailed properties for Application"
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ApplicationProperties",
    "properties": {
      "objectId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "ObjectId of Application. (internal use)"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of Application."
      },
      "friendlyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Friendly name of Application."
      },
      "filePath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies a path for the executable file for the application."
      },
      "msixPackageFamilyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies the package family name for MSIX applications"
      },
      "msixPackageApplicationId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies the package application Id for MSIX applications"
      },
      "applicationType": {
        "type": {
          "$ref": "#/219"
        },
        "flags": 0,
        "description": "Resource Type of Application."
      },
      "commandLineSetting": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 1,
        "description": "Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all."
      },
      "commandLineArguments": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Command Line Arguments for Application."
      },
      "showInPortal": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Specifies whether to show the RemoteApp program in the RD Web Access server."
      },
      "iconPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Path to icon."
      },
      "iconIndex": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Index of the icon."
      },
      "iconHash": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Hash of the icon."
      },
      "iconContent": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 2,
        "description": "the icon a 64 bit string as a byte array."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "InBuilt"
  },
  {
    "$type": "StringLiteralType",
    "value": "MsixApplication"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/217"
      },
      {
        "$ref": "#/218"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "DoNotAllow"
  },
  {
    "$type": "StringLiteralType",
    "value": "Allow"
  },
  {
    "$type": "StringLiteralType",
    "value": "Require"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/220"
      },
      {
        "$ref": "#/221"
      },
      {
        "$ref": "#/222"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DesktopVirtualization/applicationGroups/applications@2025-04-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/215"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 3,
    "maxLength": 100,
    "pattern": "^[A-Za-z0-9@.\\-_ ]*$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DesktopVirtualization/hostPools/msixPackages"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DesktopVirtualization/hostPools/msixPackages",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/225"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/226"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/227"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/229"
        },
        "flags": 1,
        "description": "Detailed properties for MSIX Package"
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MsixPackageProperties",
    "properties": {
      "imagePath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "VHD/CIM image path on Network Share."
      },
      "packageName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Package Name from appxmanifest.xml."
      },
      "packageFamilyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name."
      },
      "displayName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "User friendly Name to be displayed in the portal."
      },
      "packageRelativePath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Relative Path to the package inside the image."
      },
      "isRegularRegistration": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Specifies how to register Package in feed."
      },
      "isActive": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Make this version of the package the active one across the hostpool."
      },
      "packageDependencies": {
        "type": {
          "$ref": "#/230"
        },
        "flags": 0,
        "description": "List of package dependencies."
      },
      "version": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Package version found in the appxmanifest.xml."
      },
      "lastUpdated": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Date Package was last updated, found in the appxmanifest.xml."
      },
      "packageApplications": {
        "type": {
          "$ref": "#/231"
        },
        "flags": 0,
        "description": "List of package applications."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/13"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/15"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DesktopVirtualization/hostPools/msixPackages@2025-04-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/228"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DesktopVirtualization/hostPools/privateEndpointConnections"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DesktopVirtualization/hostPools/privateEndpointConnections",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/233"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/234"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/119"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DesktopVirtualization/hostPools/privateEndpointConnections@2025-04-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/235"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DesktopVirtualization/workspaces/privateEndpointConnections"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DesktopVirtualization/workspaces/privateEndpointConnections",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/237"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/238"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/119"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DesktopVirtualization/workspaces/privateEndpointConnections@2025-04-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/239"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DesktopVirtualization/hostPools/sessionHostConfigurations"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DesktopVirtualization/hostPools/sessionHostConfigurations",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/241"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/242"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/243"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/245"
        },
        "flags": 1,
        "description": "Detailed properties for SessionHostConfiguration"
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SessionHostConfigurationProperties",
    "properties": {
      "version": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The timestamp of the last update."
      },
      "friendlyName": {
        "type": {
          "$ref": "#/246"
        },
        "flags": 0,
        "description": "Friendly name to describe this version of the SessionHostConfiguration."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/251"
        },
        "flags": 2,
        "description": "Provisioning state of the Session Host Configuration."
      },
      "vmTags": {
        "type": {
          "$ref": "#/252"
        },
        "flags": 0,
        "description": "Hashtable that lists key/value pair tags to apply to the VMs"
      },
      "vmLocation": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The Location for the session host to be created in. It will default to the location of the hostpool if not provided"
      },
      "vmResourceGroup": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ResourceGroup for the session hosts to be created in. It will default to the ResourceGroup of the hostpool if not provided."
      },
      "vmNamePrefix": {
        "type": {
          "$ref": "#/253"
        },
        "flags": 1,
        "description": "The prefix that should be associated with session host names"
      },
      "availabilityZones": {
        "type": {
          "$ref": "#/254"
        },
        "flags": 0,
        "description": "Value for availability zones to be used by the session host. Should be from [1,2,3]."
      },
      "networkInfo": {
        "type": {
          "$ref": "#/255"
        },
        "flags": 1,
        "description": "Network information."
      },
      "vmSizeId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The id of the size of a virtual machine connected to a hostpool. Example: Standard_D2as_v6"
      },
      "diskInfo": {
        "type": {
          "$ref": "#/256"
        },
        "flags": 1,
        "description": "Disk Information"
      },
      "customConfigurationScriptUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The uri to the storage blob containing the arm template to be run on the virtual machine after provisioning."
      },
      "imageInfo": {
        "type": {
          "$ref": "#/268"
        },
        "flags": 1,
        "description": "Image configurations of HostPool."
      },
      "domainInfo": {
        "type": {
          "$ref": "#/274"
        },
        "flags": 1,
        "description": "Domain configurations of session hosts."
      },
      "securityInfo": {
        "type": {
          "$ref": "#/281"
        },
        "flags": 0,
        "description": "Security Information"
      },
      "vmAdminCredentials": {
        "type": {
          "$ref": "#/279"
        },
        "flags": 1,
        "description": "Local Admin credentials for session hosts.\""
      },
      "bootDiagnosticsInfo": {
        "type": {
          "$ref": "#/286"
        },
        "flags": 0,
        "description": "Boot Diagnostics Information"
      }
    }
  },
  {
    "$type": "StringType",
    "maxLength": 260
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/247"
      },
      {
        "$ref": "#/248"
      },
      {
        "$ref": "#/249"
      },
      {
        "$ref": "#/250"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SessionHostConfigurationPropertiesVmTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringType",
    "maxLength": 11
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/64"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NetworkInfoProperties",
    "properties": {
      "subnetId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The resource ID of the subnet."
      },
      "securityGroupId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The resource ID of the security group. Any allowable/open ports should be specified in the Network Security Group(NSG)."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiskInfoProperties",
    "properties": {
      "managedDisk": {
        "type": {
          "$ref": "#/257"
        },
        "flags": 0,
        "description": "The managed disk parameters."
      },
      "diffDiskSettings": {
        "type": {
          "$ref": "#/262"
        },
        "flags": 0,
        "description": "Specifies the ephemeral disk settings for the operating system disk used by the virtual machine."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedDiskProperties",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/261"
        },
        "flags": 0,
        "description": "Managed Disk information."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard_LRS"
  },
  {
    "$type": "StringLiteralType",
    "value": "Premium_LRS"
  },
  {
    "$type": "StringLiteralType",
    "value": "StandardSSD_LRS"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/258"
      },
      {
        "$ref": "#/259"
      },
      {
        "$ref": "#/260"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DiffDiskProperties",
    "properties": {
      "option": {
        "type": {
          "$ref": "#/264"
        },
        "flags": 0,
        "description": "Specifies the ephemeral disk settings for operating system disk."
      },
      "placement": {
        "type": {
          "$ref": "#/267"
        },
        "flags": 0,
        "description": "Gets or sets specifies the ephemeral disk placement for operating system disk. The defaulting behavior is: CacheDisk if one is configured for the VM size otherwise ResourceDisk is used. Refer to the VM size documentation for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk. Possible values include: 'CacheDisk', 'ResourceDisk'."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Local"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/263"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "CacheDisk"
  },
  {
    "$type": "StringLiteralType",
    "value": "ResourceDisk"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/265"
      },
      {
        "$ref": "#/266"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ImageInfoProperties",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/271"
        },
        "flags": 1,
        "description": "The type of image session hosts use in the hostpool."
      },
      "marketplaceInfo": {
        "type": {
          "$ref": "#/272"
        },
        "flags": 0,
        "description": "The values to uniquely identify a marketplace image. Only one should be populated based on the image type."
      },
      "customInfo": {
        "type": {
          "$ref": "#/273"
        },
        "flags": 0,
        "description": "The values to uniquely identify a custom image. Only one should be populated based on the image type."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Marketplace"
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/269"
      },
      {
        "$ref": "#/270"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "MarketplaceInfoProperties",
    "properties": {
      "offer": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The offer of the image."
      },
      "publisher": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The publisher of the image."
      },
      "sku": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The SKU of the image."
      },
      "exactVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The version of the image."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomInfoProperties",
    "properties": {
      "resourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The resource ID of the image."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DomainInfoProperties",
    "properties": {
      "joinType": {
        "type": {
          "$ref": "#/277"
        },
        "flags": 1,
        "description": "The type of domain join done by the virtual machine."
      },
      "activeDirectoryInfo": {
        "type": {
          "$ref": "#/278"
        },
        "flags": 0,
        "description": "Active directory info. Only one should be populated based on the join type."
      },
      "azureActiveDirectoryInfo": {
        "type": {
          "$ref": "#/280"
        },
        "flags": 0,
        "description": "Azure active directory info. Only one should be populated based on the join type."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ActiveDirectory"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureActiveDirectory"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/275"
      },
      {
        "$ref": "#/276"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ActiveDirectoryInfoProperties",
    "properties": {
      "domainCredentials": {
        "type": {
          "$ref": "#/279"
        },
        "flags": 1,
        "description": "Credentials needed to create the virtual machine."
      },
      "ouPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The organizational unit(OU) path."
      },
      "domainName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The domain a virtual machine connected to a hostpool will join."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KeyVaultCredentialsProperties",
    "properties": {
      "usernameKeyVaultSecretUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The uri to access the secret that the username is stored in."
      },
      "passwordKeyVaultSecretUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The uri to access the secret that the password is stored in."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureActiveDirectoryInfoProperties",
    "properties": {
      "mdmProviderGuid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The Mobile Device Management(MDM) guid."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecurityInfoProperties",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/285"
        },
        "flags": 0,
        "description": "The security type used by virtual machine in hostpool session host. Default is Standard."
      },
      "secureBootEnabled": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Whether to use secureBoot on the virtual machine."
      },
      "vTpmEnabled": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Whether to use vTpm on the virtual machine."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard"
  },
  {
    "$type": "StringLiteralType",
    "value": "TrustedLaunch"
  },
  {
    "$type": "StringLiteralType",
    "value": "ConfidentialVM"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/282"
      },
      {
        "$ref": "#/283"
      },
      {
        "$ref": "#/284"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "BootDiagnosticsInfoProperties",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Whether boot diagnostics should be enabled on the Virtual Machine."
      },
      "storageUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Uri of the storage account to use for placing the console output and screenshot. <br><br>If storageUri is not specified while enabling boot diagnostics, managed storage will be used."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DesktopVirtualization/hostPools/sessionHostConfigurations@2025-04-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/244"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DesktopVirtualization/hostPools/sessionHostManagements"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DesktopVirtualization/hostPools/sessionHostManagements",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/288"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/289"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/290"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 1,
        "description": "Detailed properties for SessionHostManagement"
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SessionHostManagementProperties",
    "properties": {
      "scheduledDateTimeZone": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Time zone for sessionHostManagement operations as defined in https://docs.microsoft.com/dotnet/api/system.timezoneinfo.findsystemtimezonebyid. Must be set if useLocalTime is true."
      },
      "update": {
        "type": {
          "$ref": "#/293"
        },
        "flags": 1,
        "description": "Parameters for a hostpool update."
      },
      "provisioning": {
        "type": {
          "$ref": "#/295"
        },
        "flags": 0,
        "description": "Parameters that apply when session hosts are provisioned."
      },
      "failedSessionHostCleanupPolicy": {
        "type": {
          "$ref": "#/303"
        },
        "flags": 0,
        "description": "The policy that should be applied when the Session Host provisioning operation fails."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HostPoolUpdateConfigurationProperties",
    "properties": {
      "deleteOriginalVm": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Whether not to save original disk. False by default."
      },
      "maxVmsRemoved": {
        "type": {
          "$ref": "#/294"
        },
        "flags": 1,
        "description": "The maximum number of virtual machines to be removed during hostpool update."
      },
      "logOffDelayMinutes": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 1,
        "description": "Grace period before logging off users in minutes."
      },
      "logOffMessage": {
        "type": {
          "$ref": "#/246"
        },
        "flags": 0,
        "description": "Log off message sent to user for logoff. Default value is an empty string."
      }
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 1
  },
  {
    "$type": "ObjectType",
    "name": "SessionHostProvisioningConfigurationProperties",
    "properties": {
      "setDrainMode": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Whether the session host should be set in drain mode following provisioning."
      },
      "instanceCount": {
        "type": {
          "$ref": "#/294"
        },
        "flags": 0,
        "description": "The number of session hosts to exist in the Host Pool."
      },
      "canaryPolicy": {
        "type": {
          "$ref": "#/299"
        },
        "flags": 0,
        "description": "Policy on whether a Canary VM(a single VM to validate the configuration) should be provisioned during a session host provisioning operation."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "StringLiteralType",
    "value": "Never"
  },
  {
    "$type": "StringLiteralType",
    "value": "Always"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/296"
      },
      {
        "$ref": "#/297"
      },
      {
        "$ref": "#/298"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "KeepAll"
  },
  {
    "$type": "StringLiteralType",
    "value": "KeepOne"
  },
  {
    "$type": "StringLiteralType",
    "value": "KeepNone"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/300"
      },
      {
        "$ref": "#/301"
      },
      {
        "$ref": "#/302"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DesktopVirtualization/hostPools/sessionHostManagements@2025-04-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/291"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 64,
    "pattern": "^[A-Za-z0-9@.\\-_ ]*$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DesktopVirtualization/scalingPlans/personalSchedules"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DesktopVirtualization/scalingPlans/personalSchedules",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/305"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/306"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/307"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 1,
        "description": "Detailed properties for ScalingPlanPersonalSchedule"
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScalingPlanPersonalScheduleProperties",
    "properties": {
      "daysOfWeek": {
        "type": {
          "$ref": "#/318"
        },
        "flags": 0,
        "description": "Set of days of the week on which this schedule is active."
      },
      "rampUpStartTime": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 0,
        "description": "Starting time for ramp up period."
      },
      "rampUpAutoStartHosts": {
        "type": {
          "$ref": "#/322"
        },
        "flags": 0,
        "description": "The desired startup behavior during the ramp up period for personal vms in the hostpool."
      },
      "rampUpStartVMOnConnect": {
        "type": {
          "$ref": "#/325"
        },
        "flags": 0,
        "description": "The desired configuration of Start VM On Connect for the hostpool during the ramp up phase. If this is disabled, session hosts must be turned on using rampUpAutoStartHosts or by turning them on manually."
      },
      "rampUpActionOnDisconnect": {
        "type": {
          "$ref": "#/329"
        },
        "flags": 0,
        "description": "Action to be taken after a user disconnect during the ramp up period."
      },
      "rampUpMinutesToWaitOnDisconnect": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 0,
        "description": "The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp up period."
      },
      "rampUpActionOnLogoff": {
        "type": {
          "$ref": "#/333"
        },
        "flags": 0,
        "description": "Action to be taken after a logoff during the ramp up period."
      },
      "rampUpMinutesToWaitOnLogoff": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 0,
        "description": "The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp up period."
      },
      "peakStartTime": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 0,
        "description": "Starting time for peak period."
      },
      "peakStartVMOnConnect": {
        "type": {
          "$ref": "#/336"
        },
        "flags": 0,
        "description": "The desired configuration of Start VM On Connect for the hostpool during the peak phase."
      },
      "peakActionOnDisconnect": {
        "type": {
          "$ref": "#/340"
        },
        "flags": 0,
        "description": "Action to be taken after a user disconnect during the peak period."
      },
      "peakMinutesToWaitOnDisconnect": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 0,
        "description": "The time in minutes to wait before performing the desired session handling action when a user disconnects during the peak period."
      },
      "peakActionOnLogoff": {
        "type": {
          "$ref": "#/344"
        },
        "flags": 0,
        "description": "Action to be taken after a logoff during the peak period."
      },
      "peakMinutesToWaitOnLogoff": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 0,
        "description": "The time in minutes to wait before performing the desired session handling action when a user logs off during the peak period."
      },
      "rampDownStartTime": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 0,
        "description": "Starting time for ramp down period."
      },
      "rampDownStartVMOnConnect": {
        "type": {
          "$ref": "#/347"
        },
        "flags": 0,
        "description": "The desired configuration of Start VM On Connect for the hostpool during the ramp down phase."
      },
      "rampDownActionOnDisconnect": {
        "type": {
          "$ref": "#/351"
        },
        "flags": 0,
        "description": "Action to be taken after a user disconnect during the ramp down period."
      },
      "rampDownMinutesToWaitOnDisconnect": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 0,
        "description": "The time in minutes to wait before performing the desired session handling action when a user disconnects during the ramp down period."
      },
      "rampDownActionOnLogoff": {
        "type": {
          "$ref": "#/355"
        },
        "flags": 0,
        "description": "Action to be taken after a logoff during the ramp down period."
      },
      "rampDownMinutesToWaitOnLogoff": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 0,
        "description": "The time in minutes to wait before performing the desired session handling action when a user logs off during the ramp down period."
      },
      "offPeakStartTime": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 0,
        "description": "Starting time for off-peak period."
      },
      "offPeakStartVMOnConnect": {
        "type": {
          "$ref": "#/358"
        },
        "flags": 0,
        "description": "The desired configuration of Start VM On Connect for the hostpool during the off-peak phase."
      },
      "offPeakActionOnDisconnect": {
        "type": {
          "$ref": "#/362"
        },
        "flags": 0,
        "description": "Action to be taken after a user disconnect during the off-peak period."
      },
      "offPeakMinutesToWaitOnDisconnect": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 0,
        "description": "The time in minutes to wait before performing the desired session handling action when a user disconnects during the off-peak period."
      },
      "offPeakActionOnLogoff": {
        "type": {
          "$ref": "#/366"
        },
        "flags": 0,
        "description": "Action to be taken after a logoff during the off-peak period."
      },
      "offPeakMinutesToWaitOnLogoff": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 0,
        "description": "The time in minutes to wait before performing the desired session handling action when a user logs off during the off-peak period."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Monday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Tuesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Wednesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Thursday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Friday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Saturday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sunday"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/310"
      },
      {
        "$ref": "#/311"
      },
      {
        "$ref": "#/312"
      },
      {
        "$ref": "#/313"
      },
      {
        "$ref": "#/314"
      },
      {
        "$ref": "#/315"
      },
      {
        "$ref": "#/316"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/317"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "WithAssignedUser"
  },
  {
    "$type": "StringLiteralType",
    "value": "All"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/319"
      },
      {
        "$ref": "#/320"
      },
      {
        "$ref": "#/321"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enable"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disable"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/323"
      },
      {
        "$ref": "#/324"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deallocate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hibernate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/326"
      },
      {
        "$ref": "#/327"
      },
      {
        "$ref": "#/328"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deallocate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hibernate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/330"
      },
      {
        "$ref": "#/331"
      },
      {
        "$ref": "#/332"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enable"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disable"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/334"
      },
      {
        "$ref": "#/335"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deallocate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hibernate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/337"
      },
      {
        "$ref": "#/338"
      },
      {
        "$ref": "#/339"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deallocate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hibernate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/341"
      },
      {
        "$ref": "#/342"
      },
      {
        "$ref": "#/343"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enable"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disable"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/345"
      },
      {
        "$ref": "#/346"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deallocate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hibernate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/348"
      },
      {
        "$ref": "#/349"
      },
      {
        "$ref": "#/350"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deallocate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hibernate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/352"
      },
      {
        "$ref": "#/353"
      },
      {
        "$ref": "#/354"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enable"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disable"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/356"
      },
      {
        "$ref": "#/357"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deallocate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hibernate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/359"
      },
      {
        "$ref": "#/360"
      },
      {
        "$ref": "#/361"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deallocate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hibernate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/363"
      },
      {
        "$ref": "#/364"
      },
      {
        "$ref": "#/365"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DesktopVirtualization/scalingPlans/personalSchedules@2025-04-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/308"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DesktopVirtualization/scalingPlans/pooledSchedules"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DesktopVirtualization/scalingPlans/pooledSchedules",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/305"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/368"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/369"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/371"
        },
        "flags": 1,
        "description": "Detailed properties for ScalingPlanPooledSchedule"
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScalingPlanPooledScheduleProperties",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Name of the ScalingPlanPooledSchedule"
      },
      "daysOfWeek": {
        "type": {
          "$ref": "#/380"
        },
        "flags": 0,
        "description": "Set of days of the week on which this schedule is active."
      },
      "scalingMethod": {
        "type": {
          "$ref": "#/383"
        },
        "flags": 0,
        "description": "The desired scaling method to be used to scale the hosts in the assigned host pool."
      },
      "createDelete": {
        "type": {
          "$ref": "#/174"
        },
        "flags": 0,
        "description": "The properties that control how Scaling will manage the size of the hostpool by creating and deleting hosts."
      },
      "rampUpStartTime": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 0,
        "description": "Starting time for ramp up period."
      },
      "rampUpLoadBalancingAlgorithm": {
        "type": {
          "$ref": "#/386"
        },
        "flags": 0,
        "description": "Load balancing algorithm for ramp up period."
      },
      "rampUpMinimumHostsPct": {
        "type": {
          "$ref": "#/182"
        },
        "flags": 0,
        "description": "Minimum host percentage for ramp up period."
      },
      "rampUpCapacityThresholdPct": {
        "type": {
          "$ref": "#/183"
        },
        "flags": 0,
        "description": "Capacity threshold for ramp up period."
      },
      "peakStartTime": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 0,
        "description": "Starting time for peak period."
      },
      "peakLoadBalancingAlgorithm": {
        "type": {
          "$ref": "#/389"
        },
        "flags": 0,
        "description": "Load balancing algorithm for peak period."
      },
      "rampDownStartTime": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 0,
        "description": "Starting time for ramp down period."
      },
      "rampDownLoadBalancingAlgorithm": {
        "type": {
          "$ref": "#/392"
        },
        "flags": 0,
        "description": "Load balancing algorithm for ramp down period."
      },
      "rampDownMinimumHostsPct": {
        "type": {
          "$ref": "#/182"
        },
        "flags": 0,
        "description": "Minimum host percentage for ramp down period."
      },
      "rampDownCapacityThresholdPct": {
        "type": {
          "$ref": "#/183"
        },
        "flags": 0,
        "description": "Capacity threshold for ramp down period."
      },
      "rampDownForceLogoffUsers": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Should users be logged off forcefully from hosts."
      },
      "rampDownStopHostsWhen": {
        "type": {
          "$ref": "#/395"
        },
        "flags": 0,
        "description": "Specifies when to stop hosts during ramp down period."
      },
      "rampDownWaitTimeMinutes": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Number of minutes to wait to stop hosts during ramp down period."
      },
      "rampDownNotificationMessage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Notification message for users during ramp down period."
      },
      "offPeakStartTime": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 0,
        "description": "Starting time for off-peak period."
      },
      "offPeakLoadBalancingAlgorithm": {
        "type": {
          "$ref": "#/398"
        },
        "flags": 0,
        "description": "Load balancing algorithm for off-peak period."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Monday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Tuesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Wednesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Thursday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Friday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Saturday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sunday"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/372"
      },
      {
        "$ref": "#/373"
      },
      {
        "$ref": "#/374"
      },
      {
        "$ref": "#/375"
      },
      {
        "$ref": "#/376"
      },
      {
        "$ref": "#/377"
      },
      {
        "$ref": "#/378"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/379"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "PowerManage"
  },
  {
    "$type": "StringLiteralType",
    "value": "CreateDeletePowerManage"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/381"
      },
      {
        "$ref": "#/382"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "BreadthFirst"
  },
  {
    "$type": "StringLiteralType",
    "value": "DepthFirst"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/384"
      },
      {
        "$ref": "#/385"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "BreadthFirst"
  },
  {
    "$type": "StringLiteralType",
    "value": "DepthFirst"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/387"
      },
      {
        "$ref": "#/388"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "BreadthFirst"
  },
  {
    "$type": "StringLiteralType",
    "value": "DepthFirst"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/390"
      },
      {
        "$ref": "#/391"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "ZeroSessions"
  },
  {
    "$type": "StringLiteralType",
    "value": "ZeroActiveSessions"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/393"
      },
      {
        "$ref": "#/394"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "BreadthFirst"
  },
  {
    "$type": "StringLiteralType",
    "value": "DepthFirst"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/396"
      },
      {
        "$ref": "#/397"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DesktopVirtualization/scalingPlans/pooledSchedules@2025-04-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/370"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DesktopVirtualization/applicationGroups/desktops"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DesktopVirtualization/applicationGroups/desktops",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/212"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/400"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/401"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/403"
        },
        "flags": 2,
        "description": "Detailed properties for Desktop"
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DesktopProperties",
    "properties": {
      "objectId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "ObjectId of Desktop. (internal use)"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of Desktop."
      },
      "friendlyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Friendly name of Desktop."
      },
      "iconHash": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Hash of the icon."
      },
      "iconContent": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 2,
        "description": "The icon a 64 bit string as a byte array."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DesktopVirtualization/applicationGroups/desktops@2025-04-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/402"
    },
    "flags": 1
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DesktopVirtualization/hostPools/activeSessionHostConfigurations"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DesktopVirtualization/hostPools/activeSessionHostConfigurations",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/405"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/406"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/407"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/409"
        },
        "flags": 2,
        "description": "Detailed properties for ActiveSessionHostConfiguration"
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ActiveSessionHostConfigurationProperties",
    "properties": {
      "version": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The timestamp of the last update."
      },
      "friendlyName": {
        "type": {
          "$ref": "#/246"
        },
        "flags": 0,
        "description": "Friendly name to describe this version of the SessionHostConfiguration"
      },
      "vmTags": {
        "type": {
          "$ref": "#/410"
        },
        "flags": 0,
        "description": "Hashtable that lists key/value pair tags to apply to the VMs"
      },
      "vmLocation": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The Location for the session host to be created in. It will default to the location of the hostpool if not provided."
      },
      "vmResourceGroup": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ResourceGroup for the session hosts to be created in. It will default to the ResourceGroup of the hostpool if not provided."
      },
      "vmNamePrefix": {
        "type": {
          "$ref": "#/253"
        },
        "flags": 1,
        "description": "The prefix that should be associated with session host names"
      },
      "availabilityZones": {
        "type": {
          "$ref": "#/411"
        },
        "flags": 0,
        "description": "Value for availability zones to be used by the session host. Should be from [1,2,3]."
      },
      "networkInfo": {
        "type": {
          "$ref": "#/255"
        },
        "flags": 1,
        "description": "Network information."
      },
      "vmSizeId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The id of the size of a virtual machine connected to a hostpool. Example: Standard_D2as_v6"
      },
      "diskInfo": {
        "type": {
          "$ref": "#/256"
        },
        "flags": 1,
        "description": "Disk information."
      },
      "customConfigurationScriptUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The uri to the storage blob containing the arm template to be run on the virtual machine after provisioning."
      },
      "imageInfo": {
        "type": {
          "$ref": "#/268"
        },
        "flags": 1,
        "description": "Image configurations of the HostPool."
      },
      "domainInfo": {
        "type": {
          "$ref": "#/274"
        },
        "flags": 1,
        "description": "Domain configurations of session hosts."
      },
      "securityInfo": {
        "type": {
          "$ref": "#/281"
        },
        "flags": 0,
        "description": "Security information."
      },
      "vmAdminCredentials": {
        "type": {
          "$ref": "#/279"
        },
        "flags": 1,
        "description": "Local Admin credentials for session hosts."
      },
      "bootDiagnosticsInfo": {
        "type": {
          "$ref": "#/286"
        },
        "flags": 0,
        "description": "Boot Diagnostics information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ActiveSessionHostConfigurationPropertiesVmTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/64"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DesktopVirtualization/hostPools/activeSessionHostConfigurations@2025-04-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/408"
    },
    "flags": 1
  },
  {
    "$type": "StringType",
    "minLength": 3,
    "maxLength": 48,
    "pattern": "^[A-Za-z0-9@.\\-_ ]*$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DesktopVirtualization/hostPools/sessionHosts"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DesktopVirtualization/hostPools/sessionHosts",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/413"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/414"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/415"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/417"
        },
        "flags": 2,
        "description": "Detailed properties for SessionHost"
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SessionHostProperties",
    "properties": {
      "activeSessions": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Number of active sessions on SessionHost."
      },
      "disconnectedSessions": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Number of disconnected sessions on SessionHost."
      },
      "pendingSessions": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Number of pending sessions on SessionHost."
      },
      "objectId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "ObjectId of SessionHost. (internal use)"
      },
      "lastHeartBeat": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Last heart beat from SessionHost."
      },
      "sessions": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Number of sessions on SessionHost."
      },
      "agentVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Version of agent on SessionHost."
      },
      "allowNewSession": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Allow a new session."
      },
      "virtualMachineId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Virtual Machine Id of SessionHost's underlying virtual machine."
      },
      "resourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Resource Id of SessionHost's underlying virtual machine."
      },
      "assignedUser": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "User assigned to SessionHost."
      },
      "friendlyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Friendly name of SessionHost"
      },
      "status": {
        "type": {
          "$ref": "#/430"
        },
        "flags": 0,
        "description": "Status for a SessionHost."
      },
      "statusTimestamp": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The timestamp of the status."
      },
      "osVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The version of the OS on the session host."
      },
      "sxSStackVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The version of the side by side stack on the session host."
      },
      "updateState": {
        "type": {
          "$ref": "#/436"
        },
        "flags": 2,
        "description": "Update state of a SessionHost."
      },
      "lastUpdateTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The timestamp of the last update."
      },
      "updateErrorMessage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The error message."
      },
      "lastSessionHostUpdateTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The last time update was completed."
      },
      "sessionHostConfiguration": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "SessionHostConfiguration version reference at the time the update is initiated, in the format of date time. Example: 2024-04-26T04:56:45Z"
      },
      "sessionHostHealthCheckResults": {
        "type": {
          "$ref": "#/456"
        },
        "flags": 2,
        "description": "List of SessionHostHealthCheckReports"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Available"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unavailable"
  },
  {
    "$type": "StringLiteralType",
    "value": "Shutdown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disconnected"
  },
  {
    "$type": "StringLiteralType",
    "value": "Upgrading"
  },
  {
    "$type": "StringLiteralType",
    "value": "UpgradeFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "NoHeartbeat"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotJoinedToDomain"
  },
  {
    "$type": "StringLiteralType",
    "value": "DomainTrustRelationshipLost"
  },
  {
    "$type": "StringLiteralType",
    "value": "SxSStackListenerNotReady"
  },
  {
    "$type": "StringLiteralType",
    "value": "FSLogixNotHealthy"
  },
  {
    "$type": "StringLiteralType",
    "value": "NeedsAssistance"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/418"
      },
      {
        "$ref": "#/419"
      },
      {
        "$ref": "#/420"
      },
      {
        "$ref": "#/421"
      },
      {
        "$ref": "#/422"
      },
      {
        "$ref": "#/423"
      },
      {
        "$ref": "#/424"
      },
      {
        "$ref": "#/425"
      },
      {
        "$ref": "#/426"
      },
      {
        "$ref": "#/427"
      },
      {
        "$ref": "#/428"
      },
      {
        "$ref": "#/429"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Initial"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Started"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/431"
      },
      {
        "$ref": "#/432"
      },
      {
        "$ref": "#/433"
      },
      {
        "$ref": "#/434"
      },
      {
        "$ref": "#/435"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SessionHostHealthCheckReport",
    "properties": {
      "healthCheckName": {
        "type": {
          "$ref": "#/449"
        },
        "flags": 2,
        "description": "Represents the name of the health check operation performed."
      },
      "healthCheckResult": {
        "type": {
          "$ref": "#/454"
        },
        "flags": 2,
        "description": "Represents the Health state of the health check we performed."
      },
      "additionalFailureDetails": {
        "type": {
          "$ref": "#/455"
        },
        "flags": 2,
        "description": "Additional detailed information on the failure."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DomainJoinedCheck"
  },
  {
    "$type": "StringLiteralType",
    "value": "DomainTrustCheck"
  },
  {
    "$type": "StringLiteralType",
    "value": "FSLogixHealthCheck"
  },
  {
    "$type": "StringLiteralType",
    "value": "SxSStackListenerCheck"
  },
  {
    "$type": "StringLiteralType",
    "value": "UrlsAccessibleCheck"
  },
  {
    "$type": "StringLiteralType",
    "value": "MonitoringAgentCheck"
  },
  {
    "$type": "StringLiteralType",
    "value": "DomainReachable"
  },
  {
    "$type": "StringLiteralType",
    "value": "WebRTCRedirectorCheck"
  },
  {
    "$type": "StringLiteralType",
    "value": "SupportedEncryptionCheck"
  },
  {
    "$type": "StringLiteralType",
    "value": "MetaDataServiceCheck"
  },
  {
    "$type": "StringLiteralType",
    "value": "AppAttachHealthCheck"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/438"
      },
      {
        "$ref": "#/439"
      },
      {
        "$ref": "#/440"
      },
      {
        "$ref": "#/441"
      },
      {
        "$ref": "#/442"
      },
      {
        "$ref": "#/443"
      },
      {
        "$ref": "#/444"
      },
      {
        "$ref": "#/445"
      },
      {
        "$ref": "#/446"
      },
      {
        "$ref": "#/447"
      },
      {
        "$ref": "#/448"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "HealthCheckSucceeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "HealthCheckFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "SessionHostShutdown"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/450"
      },
      {
        "$ref": "#/451"
      },
      {
        "$ref": "#/452"
      },
      {
        "$ref": "#/453"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SessionHostHealthCheckFailureDetails",
    "properties": {
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Failure message: hints on what is wrong and how to recover."
      },
      "errorCode": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 2,
        "description": "Error code corresponding for the failure."
      },
      "lastHealthCheckDateTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The timestamp of the last update."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/437"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DesktopVirtualization/hostPools/sessionHosts@2025-04-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/416"
    },
    "flags": 1
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 24
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DesktopVirtualization/hostPools/sessionHosts/userSessions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DesktopVirtualization/hostPools/sessionHosts/userSessions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/458"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/459"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/460"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/462"
        },
        "flags": 2,
        "description": "Detailed properties for UserSession"
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UserSessionProperties",
    "properties": {
      "objectId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "ObjectId of user session. (internal use)"
      },
      "userPrincipalName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The user principal name."
      },
      "applicationType": {
        "type": {
          "$ref": "#/465"
        },
        "flags": 0,
        "description": "Application type of application."
      },
      "sessionState": {
        "type": {
          "$ref": "#/472"
        },
        "flags": 0,
        "description": "State of user session."
      },
      "activeDirectoryUserName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The active directory user name."
      },
      "createTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of the user session create."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "RemoteApp"
  },
  {
    "$type": "StringLiteralType",
    "value": "Desktop"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/463"
      },
      {
        "$ref": "#/464"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Active"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disconnected"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "LogOff"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserProfileDiskMounted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/466"
      },
      {
        "$ref": "#/467"
      },
      {
        "$ref": "#/468"
      },
      {
        "$ref": "#/469"
      },
      {
        "$ref": "#/470"
      },
      {
        "$ref": "#/471"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DesktopVirtualization/hostPools/sessionHosts/userSessions@2025-04-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/461"
    },
    "flags": 1
  },
  {
    "$type": "ObjectType",
    "name": "RegistrationTokenList",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/476"
        },
        "flags": 0,
        "description": "List of RegistrationToken definitions."
      },
      "nextLink": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Link to the next page of results."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistrationTokenMinimal",
    "properties": {
      "expirationTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Expiration time of registration token."
      },
      "token": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The registration token base64 encoded string."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/475"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listRegistrationTokens",
    "resourceType": "Microsoft.DesktopVirtualization/hostPools",
    "apiVersion": "2025-04-01-preview",
    "output": {
      "$ref": "#/474"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "retrieveRegistrationToken",
    "resourceType": "Microsoft.DesktopVirtualization/hostPools",
    "apiVersion": "2025-04-01-preview",
    "output": {
      "$ref": "#/83"
    }
  },
  {
    "$type": "ObjectType",
    "name": "MsixImageURI",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "URI to Image"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ExpandMsixImageList",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/485"
        },
        "flags": 1,
        "description": "The ExpandMsixImage items on this page"
      },
      "nextLink": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The link to the next page of items"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ExpandMsixImage",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/482"
        },
        "flags": 0,
        "description": "Detailed properties for ExpandMsixImage"
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\""
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ExpandMsixImageProperties",
    "properties": {
      "packageAlias": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Alias of MSIX Package."
      },
      "imagePath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "VHD/CIM image path on Network Share."
      },
      "packageName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Package Name from appxmanifest.xml."
      },
      "packageFamilyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name."
      },
      "packageFullName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Package Full Name from appxmanifest.xml."
      },
      "displayName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "User friendly Name to be displayed in the portal."
      },
      "packageRelativePath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Relative Path to the package inside the image."
      },
      "isRegularRegistration": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Specifies how to register Package in feed."
      },
      "isActive": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Make this version of the package the active one across the hostpool."
      },
      "packageDependencies": {
        "type": {
          "$ref": "#/483"
        },
        "flags": 0,
        "description": "List of package dependencies."
      },
      "version": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Package version found in the appxmanifest.xml."
      },
      "lastUpdated": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Date Package was last updated, found in the appxmanifest.xml."
      },
      "packageApplications": {
        "type": {
          "$ref": "#/484"
        },
        "flags": 0,
        "description": "List of package applications."
      },
      "certificateName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Certificate name found in the appxmanifest.xml."
      },
      "certificateExpiry": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Date certificate expires, found in the appxmanifest.xml."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/13"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/15"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/481"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "expandMsixImage",
    "resourceType": "Microsoft.DesktopVirtualization/hostPools",
    "apiVersion": "2025-04-01-preview",
    "output": {
      "$ref": "#/480"
    },
    "input": {
      "$ref": "#/479"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ImportPackageInfoRequest",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "URI to Image"
      },
      "packageArchitecture": {
        "type": {
          "$ref": "#/495"
        },
        "flags": 0,
        "description": "Possible device architectures that an app attach package can be configured for"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ARM"
  },
  {
    "$type": "StringLiteralType",
    "value": "ARM64"
  },
  {
    "$type": "StringLiteralType",
    "value": "x86"
  },
  {
    "$type": "StringLiteralType",
    "value": "x64"
  },
  {
    "$type": "StringLiteralType",
    "value": "Neutral"
  },
  {
    "$type": "StringLiteralType",
    "value": "x86a64"
  },
  {
    "$type": "StringLiteralType",
    "value": "ALL"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/488"
      },
      {
        "$ref": "#/489"
      },
      {
        "$ref": "#/490"
      },
      {
        "$ref": "#/491"
      },
      {
        "$ref": "#/492"
      },
      {
        "$ref": "#/493"
      },
      {
        "$ref": "#/494"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AppAttachPackageList",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/499"
        },
        "flags": 1,
        "description": "The AppAttachPackage items on this page"
      },
      "nextLink": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The link to the next page of items"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AppAttachPackage",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 1,
        "description": "Detailed properties for App Attach Package"
      },
      "tags": {
        "type": {
          "$ref": "#/498"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\""
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/497"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "importAppAttachPackageInfo",
    "resourceType": "Microsoft.DesktopVirtualization/hostPools",
    "apiVersion": "2025-04-01-preview",
    "output": {
      "$ref": "#/496"
    },
    "input": {
      "$ref": "#/487"
    }
  },
  {
    "$type": "ObjectType",
    "name": "HostPoolProvisioningControlParameter",
    "properties": {
      "action": {
        "type": {
          "$ref": "#/503"
        },
        "flags": 1,
        "description": "Action types for controlling hostpool update."
      },
      "cancelMessage": {
        "type": {
          "$ref": "#/246"
        },
        "flags": 0,
        "description": "The cancel message sent to the user on the session host."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Cancel"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/502"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceFunctionType",
    "name": "controlSessionHostProvisioning",
    "resourceType": "Microsoft.DesktopVirtualization/hostPools/sessionHostManagements",
    "apiVersion": "2025-04-01-preview",
    "input": {
      "$ref": "#/501"
    }
  },
  {
    "$type": "ObjectType",
    "name": "HostPoolUpdateControlParameter",
    "properties": {
      "action": {
        "type": {
          "$ref": "#/511"
        },
        "flags": 1,
        "description": "Action types for controlling hostpool update."
      },
      "cancelMessage": {
        "type": {
          "$ref": "#/246"
        },
        "flags": 0,
        "description": "The cancel message sent to the user on the session host. This is can only be specified if the action is 'Cancel'."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Start"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pause"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cancel"
  },
  {
    "$type": "StringLiteralType",
    "value": "Retry"
  },
  {
    "$type": "StringLiteralType",
    "value": "Resume"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/506"
      },
      {
        "$ref": "#/507"
      },
      {
        "$ref": "#/508"
      },
      {
        "$ref": "#/509"
      },
      {
        "$ref": "#/510"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceFunctionType",
    "name": "controlSessionHostUpdate",
    "resourceType": "Microsoft.DesktopVirtualization/hostPools/sessionHostManagements",
    "apiVersion": "2025-04-01-preview",
    "input": {
      "$ref": "#/505"
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateSessionHostsRequestBody",
    "properties": {
      "scheduledDateTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp that the update validation is scheduled for. If none is provided, the update will be executed immediately"
      },
      "scheduledDateTimeZone": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timeZone as defined in https://docs.microsoft.com/dotnet/api/system.timezoneinfo.findsystemtimezonebyid."
      },
      "update": {
        "type": {
          "$ref": "#/514"
        },
        "flags": 0,
        "description": "settings for management information for the hostpool update operation. If none is provided the update will use the settings saved in the sessionHostManagement object."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HostPoolUpdateConfigurationPatchProperties",
    "properties": {
      "deleteOriginalVm": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "Whether not to save original disk. False by default."
      },
      "maxVmsRemoved": {
        "type": {
          "$ref": "#/294"
        },
        "flags": 0,
        "description": "The maximum number of virtual machines to be removed during hostpool update."
      },
      "logOffDelayMinutes": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Grace period before logging off users in minutes."
      },
      "logOffMessage": {
        "type": {
          "$ref": "#/246"
        },
        "flags": 0,
        "description": "Log off message sent to user for logoff. Default value is an empty string."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "initiateSessionHostUpdate",
    "resourceType": "Microsoft.DesktopVirtualization/hostPools/sessionHostManagements",
    "apiVersion": "2025-04-01-preview",
    "input": {
      "$ref": "#/513"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "retryProvisioning",
    "resourceType": "Microsoft.DesktopVirtualization/hostPools/sessionHosts",
    "apiVersion": "2025-04-01-preview"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "disconnect",
    "resourceType": "Microsoft.DesktopVirtualization/hostPools/sessionHosts/userSessions",
    "apiVersion": "2025-04-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "SendMessage",
    "properties": {
      "messageTitle": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Title of message."
      },
      "messageBody": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Body of message."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "sendMessage",
    "resourceType": "Microsoft.DesktopVirtualization/hostPools/sessionHosts/userSessions",
    "apiVersion": "2025-04-01-preview",
    "input": {
      "$ref": "#/518"
    }
  }
]