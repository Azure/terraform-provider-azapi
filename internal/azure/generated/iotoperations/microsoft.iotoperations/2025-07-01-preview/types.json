[
  {
    "$type": "StringType",
    "minLength": 3,
    "maxLength": 63,
    "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.IoTOperations/instances"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-07-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.IoTOperations/instances",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 1,
        "description": "Edge location of the resource."
      },
      "identity": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 0,
        "description": "The managed service identities assigned to this resource."
      },
      "tags": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "InstanceProperties",
    "properties": {
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Detailed description of the Instance."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 2,
        "description": "The status of the last operation."
      },
      "version": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The Azure IoT Operations version."
      },
      "schemaRegistryRef": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 1,
        "description": "The reference to the Schema Registry for this AIO Instance."
      },
      "defaultSecretProviderClassRef": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "The reference to the AIO Secret provider class."
      },
      "features": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 0,
        "description": "The features of the AIO Instance."
      },
      "adrNamespaceRef": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 0,
        "description": "The Azure Device Registry Namespace used by Assets, Discovered Assets and devices"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/12"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SchemaRegistryRef",
    "properties": {
      "resourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The resource ID of the Schema Registry."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretProviderClassRef",
    "properties": {
      "resourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The resource ID of the AIO Secret provider class."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "InstanceFeature",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The state of the feature."
      },
      "settings": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 0,
        "description": "The settings of the feature."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Stable"
  },
  {
    "$type": "StringLiteralType",
    "value": "Preview"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/17"
      },
      {
        "$ref": "#/18"
      },
      {
        "$ref": "#/19"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/21"
      },
      {
        "$ref": "#/22"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "InstanceFeatureSettings",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/23"
    }
  },
  {
    "$type": "ObjectType",
    "name": "InstancePropertiesFeatures",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/16"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureDeviceRegistryNamespaceRef",
    "properties": {
      "resourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The resource ID of the Azure Device Registry Namespace."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ExtendedLocation",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the extended location."
      },
      "type": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 1,
        "description": "Type of ExtendedLocation."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CustomLocation"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/28"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ManagedServiceIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 2,
        "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "tenantId": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 2,
        "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "type": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 1,
        "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."
      },
      "userAssignedIdentities": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 0,
        "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 36,
    "maxLength": 36,
    "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned,UserAssigned"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/32"
      },
      {
        "$ref": "#/33"
      },
      {
        "$ref": "#/34"
      },
      {
        "$ref": "#/35"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 2,
        "description": "The principal ID of the assigned identity."
      },
      "clientId": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 2,
        "description": "The client ID of the assigned identity."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentities",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/37"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/50"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/41"
      },
      {
        "$ref": "#/42"
      },
      {
        "$ref": "#/43"
      },
      {
        "$ref": "#/44"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/46"
      },
      {
        "$ref": "#/47"
      },
      {
        "$ref": "#/48"
      },
      {
        "$ref": "#/49"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.IoTOperations/instances@2025-07-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/4"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.IoTOperations/instances/akriConnectorTemplates"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-07-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.IoTOperations/instances/akriConnectorTemplates",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "Edge location of the resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 2,
        "description": "The status of the last operation."
      },
      "aioMetadata": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Metadata about AIO."
      },
      "runtimeConfiguration": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 1,
        "description": "The runtime configuration for the Connector template."
      },
      "diagnostics": {
        "type": {
          "$ref": "#/122"
        },
        "flags": 0,
        "description": "Diagnostics settings for the Connector template."
      },
      "deviceInboundEndpointTypes": {
        "type": {
          "$ref": "#/127"
        },
        "flags": 1,
        "description": "Device inbound endpoint types."
      },
      "mqttConnectionConfiguration": {
        "type": {
          "$ref": "#/128"
        },
        "flags": 0,
        "description": "Mqtt connection configuration settings."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/56"
      },
      {
        "$ref": "#/57"
      },
      {
        "$ref": "#/58"
      },
      {
        "$ref": "#/59"
      },
      {
        "$ref": "#/60"
      },
      {
        "$ref": "#/61"
      },
      {
        "$ref": "#/62"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateAioMetadata",
    "properties": {
      "aioMinVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The minimum version of AIO required for the connector."
      },
      "aioMaxVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The maximum version of AIO required for the connector."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "AkriConnectorTemplateRuntimeConfiguration",
    "discriminator": "runtimeConfigurationType",
    "baseProperties": {},
    "elements": {
      "HelmConfiguration": {
        "$ref": "#/66"
      },
      "ManagedConfiguration": {
        "$ref": "#/83"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateHelmConfiguration",
    "properties": {
      "helmConfigurationSettings": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 1,
        "description": "The Helm configuration settings."
      },
      "runtimeConfigurationType": {
        "type": {
          "$ref": "#/82"
        },
        "flags": 1,
        "description": "Runtime configuration type for the Connector template."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateHelmConfigurationSettings",
    "properties": {
      "registrySettings": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 0,
        "description": "The registry settings for the helm chart to be used."
      },
      "releaseName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The release name of the Helm chart."
      },
      "repositoryName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the repository"
      },
      "version": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The version of the Helm chart."
      },
      "advancedConfiguration": {
        "type": {
          "$ref": "#/75"
        },
        "flags": 0,
        "description": "Advanced configuration for the Helm chart.\nInstall, upgrade, and uninstall options for the helm chart such as atomic, wait, timeout, `wait_for_jobs`, and `disable_hooks`."
      },
      "values": {
        "type": {
          "$ref": "#/81"
        },
        "flags": 0,
        "description": "A map of values to pass to the helm chart."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "AkriConnectorTemplateHelmRegistrySettings",
    "discriminator": "registrySettingsType",
    "baseProperties": {},
    "elements": {
      "ContainerRegistry": {
        "$ref": "#/69"
      },
      "RegistryEndpointRef": {
        "$ref": "#/73"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateHelmContainerRegistry",
    "properties": {
      "containerRegistrySettings": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 1,
        "description": "The registry settings for the container registry."
      },
      "registrySettingsType": {
        "type": {
          "$ref": "#/72"
        },
        "flags": 1,
        "description": "AkriConnectorTemplateHelmRegistrySettingsType values."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateHelmContainerRegistrySettings",
    "properties": {
      "registry": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The registry to use for the Helm chart."
      },
      "authSecretRef": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 0,
        "description": "Optional reference to a secret in the same namespace to use for pulling the Helm chart."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateHelmAuthSecretRef",
    "properties": {
      "secretRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the secret."
      },
      "passwordKey": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The key of the password in the secret."
      },
      "usernameKey": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The key of the username in the secret."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ContainerRegistry"
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateHelmRegistryEndpointRef",
    "properties": {
      "registryEndpointRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the registry endpoint."
      },
      "registrySettingsType": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 1,
        "description": "AkriConnectorTemplateHelmRegistrySettingsType values."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "RegistryEndpointRef"
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateHelmAdvancedConfiguration",
    "properties": {
      "delete": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 0,
        "description": "Delete operation configuration for the Helm chart."
      },
      "install": {
        "type": {
          "$ref": "#/79"
        },
        "flags": 0,
        "description": "Install operation configuration for the Helm chart."
      },
      "upgrade": {
        "type": {
          "$ref": "#/80"
        },
        "flags": 0,
        "description": "Upgrade operation configuration for the Helm chart."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateHelmDeleteConfiguration",
    "properties": {
      "timeout": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 0,
        "description": "Time to wait for any individual Kubernetes operation (like `Jobs` for hooks)."
      },
      "waitForJobs": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0,
        "description": "If set, the operation will wait for jobs to complete before marking the release as successful."
      },
      "atomic": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0,
        "description": "If set, the operation will be atomic. If the operation fails, all changes will be rolled back."
      },
      "disableHooks": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0,
        "description": "Disable pre/post upgrade hooks for the operation."
      },
      "wait": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0,
        "description": "If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful."
      }
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateHelmInstallConfiguration",
    "properties": {
      "timeout": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 0,
        "description": "Time to wait for any individual Kubernetes operation (like `Jobs` for hooks)."
      },
      "waitForJobs": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0,
        "description": "If set, the operation will wait for jobs to complete before marking the release as successful."
      },
      "atomic": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0,
        "description": "If set, the operation will be atomic. If the operation fails, all changes will be rolled back."
      },
      "disableHooks": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0,
        "description": "Disable pre/post upgrade hooks for the operation."
      },
      "wait": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0,
        "description": "If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateHelmUpgradeConfiguration",
    "properties": {
      "timeout": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 0,
        "description": "Time to wait for any individual Kubernetes operation (like `Jobs` for hooks)."
      },
      "waitForJobs": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0,
        "description": "If set, the operation will wait for jobs to complete before marking the release as successful."
      },
      "atomic": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0,
        "description": "If set, the operation will be atomic. If the operation fails, all changes will be rolled back."
      },
      "disableHooks": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0,
        "description": "Disable pre/post upgrade hooks for the operation."
      },
      "wait": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0,
        "description": "If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateHelmConfigurationSettingsValues",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "HelmConfiguration"
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateManagedConfiguration",
    "properties": {
      "managedConfigurationSettings": {
        "type": {
          "$ref": "#/84"
        },
        "flags": 1,
        "description": "The managed configuration settings."
      },
      "runtimeConfigurationType": {
        "type": {
          "$ref": "#/121"
        },
        "flags": 1,
        "description": "Runtime configuration type for the Connector template."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "AkriConnectorTemplateManagedConfigurationSettings",
    "discriminator": "managedConfigurationType",
    "baseProperties": {
      "allocation": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 0,
        "description": "Allocation settings for the managed configuration."
      },
      "persistentVolumeClaims": {
        "type": {
          "$ref": "#/90"
        },
        "flags": 0,
        "description": "The persistent volume claims for the managed configuration."
      },
      "additionalConfiguration": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 0,
        "description": "Additional configuration for the image of the managed configuration."
      },
      "persistentVolumeClaimTemplates": {
        "type": {
          "$ref": "#/94"
        },
        "flags": 0,
        "description": "The persistent volume claim templates for the managed configuration.\nSee https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json."
      },
      "secrets": {
        "type": {
          "$ref": "#/96"
        },
        "flags": 0,
        "description": "Connector secrets that will be mounted onto all connector instances."
      },
      "trustSettings": {
        "type": {
          "$ref": "#/97"
        },
        "flags": 0,
        "description": "Trust list for the connector. This is used to specify the certificates that all connector instances should trust."
      }
    },
    "elements": {
      "ImageConfiguration": {
        "$ref": "#/98"
      },
      "StatefulSetConfiguration": {
        "$ref": "#/118"
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "AkriConnectorTemplateAllocation",
    "discriminator": "policy",
    "baseProperties": {},
    "elements": {
      "Bucketized": {
        "$ref": "#/86"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateBucketizedAllocation",
    "properties": {
      "bucketSize": {
        "type": {
          "$ref": "#/87"
        },
        "flags": 1,
        "description": "The bucketized allocation of AEPs for connectors."
      },
      "policy": {
        "type": {
          "$ref": "#/88"
        },
        "flags": 1,
        "description": "The allocation policy type."
      }
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 100
  },
  {
    "$type": "StringLiteralType",
    "value": "Bucketized"
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplatePersistentVolumeClaim",
    "properties": {
      "claimName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the persistent volume claim."
      },
      "mountPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The mount path for the persistent volume claim."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/89"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateManagedConfigurationSettingsAdditionalConfiguration",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateManagedConfigurationSettingsPersistentVolumeClaimTemplatesItem",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/92"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/93"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorsSecret",
    "properties": {
      "secretKey": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The key in the secret to be mounted."
      },
      "secretAlias": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The application-defined alias for the secret."
      },
      "secretRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the secret to be mounted."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/95"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateTrustList",
    "properties": {
      "trustListSecretRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The secret reference for certificates to trust."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateRuntimeImageConfiguration",
    "properties": {
      "imageConfigurationSettings": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 1,
        "description": "The image configuration settings."
      },
      "managedConfigurationType": {
        "type": {
          "$ref": "#/117"
        },
        "flags": 1,
        "description": "The type of the managed configuration."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateRuntimeImageConfigurationSettings",
    "properties": {
      "imageName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The image name without any registry reference, tag or digest."
      },
      "imagePullPolicy": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 0,
        "description": "The pull policy of the image."
      },
      "replicas": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 0,
        "description": "The number of replicas to be set up."
      },
      "registrySettings": {
        "type": {
          "$ref": "#/104"
        },
        "flags": 0,
        "description": "The registry settings for the image. You can omit this field if using the default docker hub repository or using a local image."
      },
      "tagDigestSettings": {
        "type": {
          "$ref": "#/112"
        },
        "flags": 0,
        "description": "Optional image tag or digest. If not specified, the default tag is `latest`."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Always"
  },
  {
    "$type": "StringLiteralType",
    "value": "IfNotPresent"
  },
  {
    "$type": "StringLiteralType",
    "value": "Never"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/100"
      },
      {
        "$ref": "#/101"
      },
      {
        "$ref": "#/102"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "AkriConnectorsRegistrySettings",
    "discriminator": "registrySettingsType",
    "baseProperties": {},
    "elements": {
      "ContainerRegistry": {
        "$ref": "#/105"
      },
      "RegistryEndpointRef": {
        "$ref": "#/110"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorsContainerRegistry",
    "properties": {
      "containerRegistrySettings": {
        "type": {
          "$ref": "#/106"
        },
        "flags": 1,
        "description": "The registry settings for the container registry."
      },
      "registrySettingsType": {
        "type": {
          "$ref": "#/109"
        },
        "flags": 1,
        "description": "AkriConnectorsRegistrySettings properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorsContainerRegistrySettings",
    "properties": {
      "registry": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The container registry to use for the artifact."
      },
      "imagePullSecrets": {
        "type": {
          "$ref": "#/108"
        },
        "flags": 0,
        "description": "Optional list of references to secrets in the same namespace to use for pulling the connector image."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorsImagePullSecret",
    "properties": {
      "secretRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the image pull secret."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/107"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ContainerRegistry"
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorsRegistryEndpointRef",
    "properties": {
      "registryEndpointRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the registry endpoint."
      },
      "registrySettingsType": {
        "type": {
          "$ref": "#/111"
        },
        "flags": 1,
        "description": "AkriConnectorsRegistrySettings properties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "RegistryEndpointRef"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "AkriConnectorsTagDigestSettings",
    "discriminator": "tagDigestType",
    "baseProperties": {},
    "elements": {
      "Digest": {
        "$ref": "#/113"
      },
      "Tag": {
        "$ref": "#/115"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorsDigest",
    "properties": {
      "digest": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The digest of the image."
      },
      "tagDigestType": {
        "type": {
          "$ref": "#/114"
        },
        "flags": 1,
        "description": "The tag or digest type."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Digest"
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorsTag",
    "properties": {
      "tag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The tag of the image."
      },
      "tagDigestType": {
        "type": {
          "$ref": "#/116"
        },
        "flags": 1,
        "description": "The tag or digest type."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Tag"
  },
  {
    "$type": "StringLiteralType",
    "value": "ImageConfiguration"
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateRuntimeStatefulSetConfiguration",
    "properties": {
      "statefulSetConfigurationSettings": {
        "type": {
          "$ref": "#/119"
        },
        "flags": 1,
        "description": "The stateful set configuration settings. This corresponds to the Kubernetes StatefulSet resource.\nSee https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json#/components/schemas/io.k8s.api.apps.v1.StatefulSetSpec"
      },
      "managedConfigurationType": {
        "type": {
          "$ref": "#/120"
        },
        "flags": 1,
        "description": "The type of the managed configuration."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateRuntimeStatefulSetConfigurationStatefulSetConfigurationSettings",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/92"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "StatefulSetConfiguration"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedConfiguration"
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateDiagnostics",
    "properties": {
      "logs": {
        "type": {
          "$ref": "#/123"
        },
        "flags": 1,
        "description": "The log settings for the Connector template."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorsDiagnosticsLogs",
    "properties": {
      "level": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateDeviceInboundEndpointType",
    "properties": {
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "A description of the device inbound endpoint."
      },
      "endpointType": {
        "type": {
          "$ref": "#/125"
        },
        "flags": 1,
        "description": "The type of the device inbound endpoint."
      },
      "version": {
        "type": {
          "$ref": "#/125"
        },
        "flags": 0,
        "description": "The version of the device inbound endpoint."
      },
      "configurationSchemaRefs": {
        "type": {
          "$ref": "#/126"
        },
        "flags": 0,
        "description": "The configuration schema references for the device inbound endpoint."
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 1
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs",
    "properties": {
      "defaultDatasetConfigSchemaRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The default configuration schema reference for datasets."
      },
      "defaultEventsConfigSchemaRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The default configuration schema reference for events."
      },
      "defaultProcessControlConfigSchemaRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The default configuration schema reference for process control."
      },
      "defaultStreamsConfigSchemaRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The default configuration schema reference for streams."
      },
      "additionalConfigSchemaRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The additional configuration schema reference."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/124"
    },
    "minLength": 1
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorsMqttConnectionConfiguration",
    "properties": {
      "authentication": {
        "type": {
          "$ref": "#/129"
        },
        "flags": 0,
        "description": "Authentication properties."
      },
      "host": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Host of the Broker in the form of <hostname>:<port>."
      },
      "protocol": {
        "type": {
          "$ref": "#/134"
        },
        "flags": 0,
        "description": "The protocol to use for the connection. Currently only `mqtt` is supported."
      },
      "keepAliveSeconds": {
        "type": {
          "$ref": "#/135"
        },
        "flags": 0,
        "description": "KeepAlive for connection in seconds."
      },
      "maxInflightMessages": {
        "type": {
          "$ref": "#/135"
        },
        "flags": 0,
        "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack."
      },
      "sessionExpirySeconds": {
        "type": {
          "$ref": "#/135"
        },
        "flags": 0,
        "description": "Session expiry in seconds."
      },
      "tls": {
        "type": {
          "$ref": "#/136"
        },
        "flags": 0,
        "description": "TLS configuration."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "AkriConnectorsMqttAuthentication",
    "discriminator": "method",
    "baseProperties": {},
    "elements": {
      "ServiceAccountToken": {
        "$ref": "#/130"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorsServiceAccountAuthentication",
    "properties": {
      "serviceAccountTokenSettings": {
        "type": {
          "$ref": "#/131"
        },
        "flags": 1,
        "description": "The service account token for the MQTT connection."
      },
      "method": {
        "type": {
          "$ref": "#/132"
        },
        "flags": 1,
        "description": "The authentication method for the MQTT connection."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorsServiceAccountTokenSettings",
    "properties": {
      "audience": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The audience for the service account token."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ServiceAccountToken"
  },
  {
    "$type": "StringLiteralType",
    "value": "Mqtt"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/133"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 0
  },
  {
    "$type": "ObjectType",
    "name": "TlsProperties",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/139"
        },
        "flags": 0,
        "description": "Mode for TLS."
      },
      "trustedCaCertificateConfigMapRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Trusted CA certificate config map."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/137"
      },
      {
        "$ref": "#/138"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.IoTOperations/instances/akriConnectorTemplates@2025-07-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/54"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.IoTOperations/instances/akriConnectorTemplates/connectors"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-07-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.IoTOperations/instances/akriConnectorTemplates/connectors",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/141"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/142"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/144"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "Edge location of the resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkriConnectorProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/152"
        },
        "flags": 2,
        "description": "The status of the last operation."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/145"
      },
      {
        "$ref": "#/146"
      },
      {
        "$ref": "#/147"
      },
      {
        "$ref": "#/148"
      },
      {
        "$ref": "#/149"
      },
      {
        "$ref": "#/150"
      },
      {
        "$ref": "#/151"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.IoTOperations/instances/akriConnectorTemplates/connectors@2025-07-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/143"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.IoTOperations/instances/brokers"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-07-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.IoTOperations/instances/brokers",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/154"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/155"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/157"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "Edge location of the resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerProperties",
    "properties": {
      "advanced": {
        "type": {
          "$ref": "#/158"
        },
        "flags": 0,
        "description": "Advanced settings of Broker."
      },
      "cardinality": {
        "type": {
          "$ref": "#/185"
        },
        "flags": 0,
        "description": "The cardinality details of the broker."
      },
      "diagnostics": {
        "type": {
          "$ref": "#/190"
        },
        "flags": 0,
        "description": "Spec defines the desired identities of Broker diagnostics settings."
      },
      "diskBackedMessageBuffer": {
        "type": {
          "$ref": "#/210"
        },
        "flags": 0,
        "description": "Settings of Disk Backed Message Buffer."
      },
      "generateResourceLimits": {
        "type": {
          "$ref": "#/231"
        },
        "flags": 0,
        "description": "This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted."
      },
      "memoryProfile": {
        "type": {
          "$ref": "#/239"
        },
        "flags": 0,
        "description": "Memory profile of Broker."
      },
      "persistence": {
        "type": {
          "$ref": "#/240"
        },
        "flags": 0,
        "description": "The persistence settings of the Broker."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/287"
        },
        "flags": 2,
        "description": "The status of the last operation."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AdvancedSettings",
    "properties": {
      "clients": {
        "type": {
          "$ref": "#/159"
        },
        "flags": 0,
        "description": "Configurations related to All Clients."
      },
      "encryptInternalTraffic": {
        "type": {
          "$ref": "#/171"
        },
        "flags": 0,
        "description": "The setting to enable or disable encryption of internal Traffic."
      },
      "internalCerts": {
        "type": {
          "$ref": "#/172"
        },
        "flags": 0,
        "description": "Certificate rotation and private key configuration."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClientConfig",
    "properties": {
      "maxSessionExpirySeconds": {
        "type": {
          "$ref": "#/160"
        },
        "flags": 0,
        "description": "Upper bound of Session Expiry Interval, in seconds."
      },
      "maxMessageExpirySeconds": {
        "type": {
          "$ref": "#/160"
        },
        "flags": 0,
        "description": "Upper bound of Message Expiry Interval, in seconds."
      },
      "maxPacketSizeBytes": {
        "type": {
          "$ref": "#/161"
        },
        "flags": 0,
        "description": "Max message size for a packet in Bytes."
      },
      "subscriberQueueLimit": {
        "type": {
          "$ref": "#/162"
        },
        "flags": 0,
        "description": "The limit on the number of queued messages for a subscriber."
      },
      "maxReceiveMaximum": {
        "type": {
          "$ref": "#/167"
        },
        "flags": 0,
        "description": "Upper bound of Receive Maximum that a client can request in the CONNECT packet."
      },
      "maxKeepAliveSeconds": {
        "type": {
          "$ref": "#/168"
        },
        "flags": 0,
        "description": "Upper bound of a client's Keep Alive, in seconds."
      }
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 4294967295
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 268435456
  },
  {
    "$type": "ObjectType",
    "name": "SubscriberQueueLimit",
    "properties": {
      "length": {
        "type": {
          "$ref": "#/163"
        },
        "flags": 0,
        "description": "The maximum length of the queue before messages start getting dropped."
      },
      "strategy": {
        "type": {
          "$ref": "#/166"
        },
        "flags": 0,
        "description": "The strategy to use for dropping messages from the queue."
      }
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 1
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "DropOldest"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/164"
      },
      {
        "$ref": "#/165"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 65535
  },
  {
    "$type": "IntegerType",
    "minValue": 0,
    "maxValue": 65535
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/169"
      },
      {
        "$ref": "#/170"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CertManagerCertOptions",
    "properties": {
      "duration": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
      },
      "renewBefore": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
      },
      "privateKey": {
        "type": {
          "$ref": "#/173"
        },
        "flags": 1,
        "description": "Configuration of certificate private key."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CertManagerPrivateKey",
    "properties": {
      "algorithm": {
        "type": {
          "$ref": "#/181"
        },
        "flags": 1,
        "description": "algorithm for private key."
      },
      "rotationPolicy": {
        "type": {
          "$ref": "#/184"
        },
        "flags": 1,
        "description": "cert-manager private key rotationPolicy."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Ec256"
  },
  {
    "$type": "StringLiteralType",
    "value": "Ec384"
  },
  {
    "$type": "StringLiteralType",
    "value": "Ec521"
  },
  {
    "$type": "StringLiteralType",
    "value": "Ed25519"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rsa2048"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rsa4096"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rsa8192"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/174"
      },
      {
        "$ref": "#/175"
      },
      {
        "$ref": "#/176"
      },
      {
        "$ref": "#/177"
      },
      {
        "$ref": "#/178"
      },
      {
        "$ref": "#/179"
      },
      {
        "$ref": "#/180"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Always"
  },
  {
    "$type": "StringLiteralType",
    "value": "Never"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/182"
      },
      {
        "$ref": "#/183"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Cardinality",
    "properties": {
      "backendChain": {
        "type": {
          "$ref": "#/186"
        },
        "flags": 1,
        "description": "The backend broker desired properties"
      },
      "frontend": {
        "type": {
          "$ref": "#/189"
        },
        "flags": 1,
        "description": "The frontend desired properties"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BackendChain",
    "properties": {
      "partitions": {
        "type": {
          "$ref": "#/187"
        },
        "flags": 1,
        "description": "The desired number of physical backend partitions."
      },
      "redundancyFactor": {
        "type": {
          "$ref": "#/188"
        },
        "flags": 1,
        "description": "The desired numbers of backend replicas (pods) in a physical partition."
      },
      "workers": {
        "type": {
          "$ref": "#/187"
        },
        "flags": 0,
        "description": "Number of logical backend workers per replica (pod)."
      }
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 16
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 5
  },
  {
    "$type": "ObjectType",
    "name": "Frontend",
    "properties": {
      "replicas": {
        "type": {
          "$ref": "#/187"
        },
        "flags": 1,
        "description": "The desired number of frontend instances (pods)."
      },
      "workers": {
        "type": {
          "$ref": "#/187"
        },
        "flags": 0,
        "description": "Number of logical frontend workers per instance (pod)."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerDiagnostics",
    "properties": {
      "logs": {
        "type": {
          "$ref": "#/191"
        },
        "flags": 0,
        "description": "Diagnostic log settings for the resource."
      },
      "metrics": {
        "type": {
          "$ref": "#/192"
        },
        "flags": 0,
        "description": "The metrics settings for the resource."
      },
      "selfCheck": {
        "type": {
          "$ref": "#/193"
        },
        "flags": 0,
        "description": "The self check properties."
      },
      "traces": {
        "type": {
          "$ref": "#/199"
        },
        "flags": 0,
        "description": "The trace properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnosticsLogs",
    "properties": {
      "level": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Metrics",
    "properties": {
      "prometheusPort": {
        "type": {
          "$ref": "#/168"
        },
        "flags": 0,
        "description": "The prometheus port to expose the metrics."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SelfCheck",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/196"
        },
        "flags": 0,
        "description": "The toggle to enable/disable self check."
      },
      "intervalSeconds": {
        "type": {
          "$ref": "#/197"
        },
        "flags": 0,
        "description": "The self check interval."
      },
      "timeoutSeconds": {
        "type": {
          "$ref": "#/198"
        },
        "flags": 0,
        "description": "The timeout for self check."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/194"
      },
      {
        "$ref": "#/195"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 30,
    "maxValue": 300
  },
  {
    "$type": "IntegerType",
    "minValue": 5,
    "maxValue": 120
  },
  {
    "$type": "ObjectType",
    "name": "Traces",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/202"
        },
        "flags": 0,
        "description": "The toggle to enable/disable traces."
      },
      "cacheSizeMegabytes": {
        "type": {
          "$ref": "#/203"
        },
        "flags": 0,
        "description": "The cache size in megabytes."
      },
      "selfTracing": {
        "type": {
          "$ref": "#/204"
        },
        "flags": 0,
        "description": "The self tracing properties."
      },
      "spanChannelCapacity": {
        "type": {
          "$ref": "#/209"
        },
        "flags": 0,
        "description": "The span channel capacity."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/200"
      },
      {
        "$ref": "#/201"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 128
  },
  {
    "$type": "ObjectType",
    "name": "SelfTracing",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/207"
        },
        "flags": 0,
        "description": "The toggle to enable/disable self tracing."
      },
      "intervalSeconds": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "The self tracing interval."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/205"
      },
      {
        "$ref": "#/206"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 300
  },
  {
    "$type": "IntegerType",
    "minValue": 1000,
    "maxValue": 100000
  },
  {
    "$type": "ObjectType",
    "name": "DiskBackedMessageBuffer",
    "properties": {
      "maxSize": {
        "type": {
          "$ref": "#/211"
        },
        "flags": 1,
        "description": "The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details."
      },
      "ephemeralVolumeClaimSpec": {
        "type": {
          "$ref": "#/212"
        },
        "flags": 0,
        "description": "Use the specified persistent volume claim template to mount a \"generic ephemeral volume\" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details."
      },
      "persistentVolumeClaimSpec": {
        "type": {
          "$ref": "#/212"
        },
        "flags": 0,
        "description": "Use the specified persistent volume claim template to mount a persistent volume for the message buffer."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "^[0-9]+[KMGTPE]$"
  },
  {
    "$type": "ObjectType",
    "name": "VolumeClaimSpec",
    "properties": {
      "volumeName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
      },
      "volumeMode": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
      },
      "storageClassName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
      },
      "accessModes": {
        "type": {
          "$ref": "#/213"
        },
        "flags": 0,
        "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
      },
      "dataSource": {
        "type": {
          "$ref": "#/214"
        },
        "flags": 0,
        "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field."
      },
      "dataSourceRef": {
        "type": {
          "$ref": "#/215"
        },
        "flags": 0,
        "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled."
      },
      "resources": {
        "type": {
          "$ref": "#/216"
        },
        "flags": 0,
        "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
      },
      "selector": {
        "type": {
          "$ref": "#/221"
        },
        "flags": 0,
        "description": "A label query over volumes to consider for binding."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "LocalKubernetesReference",
    "properties": {
      "apiGroup": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
      },
      "kind": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Kind is the type of resource being referenced"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Name is the name of resource being referenced"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesReference",
    "properties": {
      "apiGroup": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
      },
      "kind": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Kind is the type of resource being referenced"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Name is the name of resource being referenced"
      },
      "namespace": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VolumeClaimResourceRequirements",
    "properties": {
      "limits": {
        "type": {
          "$ref": "#/217"
        },
        "flags": 0,
        "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
      },
      "requests": {
        "type": {
          "$ref": "#/218"
        },
        "flags": 0,
        "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
      },
      "claims": {
        "type": {
          "$ref": "#/220"
        },
        "flags": 0,
        "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VolumeClaimResourceRequirementsLimits",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VolumeClaimResourceRequirementsRequests",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VolumeClaimResourceRequirementsClaims",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/219"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VolumeClaimSpecSelector",
    "properties": {
      "matchExpressions": {
        "type": {
          "$ref": "#/229"
        },
        "flags": 0,
        "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed."
      },
      "matchLabels": {
        "type": {
          "$ref": "#/230"
        },
        "flags": 0,
        "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VolumeClaimSpecSelectorMatchExpressions",
    "properties": {
      "key": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "key is the label key that the selector applies to."
      },
      "operator": {
        "type": {
          "$ref": "#/227"
        },
        "flags": 1,
        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
      },
      "values": {
        "type": {
          "$ref": "#/228"
        },
        "flags": 0,
        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "In"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotIn"
  },
  {
    "$type": "StringLiteralType",
    "value": "Exists"
  },
  {
    "$type": "StringLiteralType",
    "value": "DoesNotExist"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/223"
      },
      {
        "$ref": "#/224"
      },
      {
        "$ref": "#/225"
      },
      {
        "$ref": "#/226"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/222"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VolumeClaimSpecSelectorMatchLabels",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "GenerateResourceLimits",
    "properties": {
      "cpu": {
        "type": {
          "$ref": "#/234"
        },
        "flags": 0,
        "description": "The toggle to enable/disable cpu resource limits."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/232"
      },
      {
        "$ref": "#/233"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Tiny"
  },
  {
    "$type": "StringLiteralType",
    "value": "Low"
  },
  {
    "$type": "StringLiteralType",
    "value": "Medium"
  },
  {
    "$type": "StringLiteralType",
    "value": "High"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/235"
      },
      {
        "$ref": "#/236"
      },
      {
        "$ref": "#/237"
      },
      {
        "$ref": "#/238"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "BrokerPersistence",
    "properties": {
      "dynamicSettings": {
        "type": {
          "$ref": "#/241"
        },
        "flags": 0,
        "description": "Client sets the specified user property key/value in the CONNECT/SUBSCRIBE/PUBLISH. \nOptionally, if the customer specifies a configurable user property, it will work to enable persistence dynamically. The default user property key is 'aio-persistence' and value 'true'."
      },
      "maxSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The max size of the message buffer on disk. If a PVC template is specified using persistentVolumeClaimSpec Then this size is used as the request and limit sizes of that template. If a PVC template isn't specified Then local-path provisioner is requested with this size limit. Required."
      },
      "persistentVolumeClaimSpec": {
        "type": {
          "$ref": "#/212"
        },
        "flags": 0,
        "description": "Use the specified persistent volume claim template to mount a persistent volume. Same object as in diskBackedMessageBuffer, but with a limitation that access modes field must be set to `ReadWriteOncePod`.\n\nIf unset, a default PVC with default properties will be used. Among other things this PVC will use the cluster default storage class, which may or may not be using a local path provisioner. User is opting in to sub-optimal behavior if they leave this unset or set it without the storage class field, and their cluster default is not a local path class."
      },
      "retain": {
        "type": {
          "$ref": "#/242"
        },
        "flags": 0,
        "description": "Controls which topic's retained messages should be persisted to disk."
      },
      "stateStore": {
        "type": {
          "$ref": "#/251"
        },
        "flags": 0,
        "description": "Controls which keys should be persisted to disk for the state store."
      },
      "subscriberQueue": {
        "type": {
          "$ref": "#/266"
        },
        "flags": 0,
        "description": "Controls which subscriber message queues should be persisted to disk. Important: to facilitate reconnection, session state metadata are ALWAYS written to disk if any persistence setting is specified, even if this section isn't set."
      },
      "encryption": {
        "type": {
          "$ref": "#/276"
        },
        "flags": 0,
        "description": "Controls settings related to encryption of the persistence database. Optional, defaults to enabling encryption."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerPersistenceDynamicSettings",
    "properties": {
      "userPropertyKey": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The user property key to enable persistence."
      },
      "userPropertyValue": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The user property value to enable persistence."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "BrokerRetainMessagesPolicy",
    "discriminator": "mode",
    "baseProperties": {},
    "elements": {
      "Custom": {
        "$ref": "#/243"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerRetainMessagesCustomPolicy",
    "properties": {
      "retainSettings": {
        "type": {
          "$ref": "#/244"
        },
        "flags": 1,
        "description": "Settings for the policy."
      },
      "mode": {
        "type": {
          "$ref": "#/250"
        },
        "flags": 1,
        "description": "'All' to persist all retain messages, 'None' to not persist any, 'Custom' to persist only the specified topics."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerRetainMessagesSettings",
    "properties": {
      "topics": {
        "type": {
          "$ref": "#/245"
        },
        "flags": 0,
        "description": "List of topics under which retained messages would be persisted to disk. Wildcards # and + supported."
      },
      "dynamic": {
        "type": {
          "$ref": "#/246"
        },
        "flags": 0,
        "description": "Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR)."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerRetainMessagesDynamic",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/249"
        },
        "flags": 1,
        "description": "Mode of the BrokerRetainMessagesCustomPolicy."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/247"
      },
      {
        "$ref": "#/248"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "BrokerStateStorePolicy",
    "discriminator": "mode",
    "baseProperties": {},
    "elements": {
      "Custom": {
        "$ref": "#/252"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerStateStoreCustomPolicy",
    "properties": {
      "stateStoreSettings": {
        "type": {
          "$ref": "#/253"
        },
        "flags": 1,
        "description": "Settings for the policy."
      },
      "mode": {
        "type": {
          "$ref": "#/265"
        },
        "flags": 1,
        "description": "'All' to persist all keys, 'None' to not persist any, 'Custom' to persist only the specified keys."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerStateStorePolicySettings",
    "properties": {
      "stateStoreResources": {
        "type": {
          "$ref": "#/260"
        },
        "flags": 0,
        "description": "List of key and key type to persist to disk."
      },
      "dynamic": {
        "type": {
          "$ref": "#/261"
        },
        "flags": 0,
        "description": "Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR)."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerStateStorePolicyResources",
    "properties": {
      "keyType": {
        "type": {
          "$ref": "#/258"
        },
        "flags": 1,
        "description": "The key to persist to disk."
      },
      "keys": {
        "type": {
          "$ref": "#/259"
        },
        "flags": 1,
        "description": "List of keys to persist to disk, required."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Pattern"
  },
  {
    "$type": "StringLiteralType",
    "value": "String"
  },
  {
    "$type": "StringLiteralType",
    "value": "Binary"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/255"
      },
      {
        "$ref": "#/256"
      },
      {
        "$ref": "#/257"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/254"
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerStateStoreDynamic",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/264"
        },
        "flags": 1,
        "description": "Mode of the BrokerStateStoreCustomPolicy."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/262"
      },
      {
        "$ref": "#/263"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "BrokerSubscriberQueuePolicy",
    "discriminator": "mode",
    "baseProperties": {},
    "elements": {
      "Custom": {
        "$ref": "#/267"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerSubscriberQueueCustomPolicy",
    "properties": {
      "subscriberQueueSettings": {
        "type": {
          "$ref": "#/268"
        },
        "flags": 1,
        "description": "Custom policy, required if mode is Custom. Subscriber queues from all groups are persisted to disk (logical OR)."
      },
      "mode": {
        "type": {
          "$ref": "#/275"
        },
        "flags": 1,
        "description": "'All' to persist all subscriber queues, 'None' to not persist any, 'Custom' to persist only the specified queues."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerSubscriberQueueCustomPolicySettings",
    "properties": {
      "subscriberClientIds": {
        "type": {
          "$ref": "#/269"
        },
        "flags": 0,
        "description": "List of client IDs of the subscribers, wildcard * supported."
      },
      "dynamic": {
        "type": {
          "$ref": "#/270"
        },
        "flags": 0,
        "description": "Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR)."
      },
      "topics": {
        "type": {
          "$ref": "#/274"
        },
        "flags": 0,
        "description": "List of topics under which messages would be persisted to disk for each subscriber. Wildcards # and + supported."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerSubscriberQueueDynamic",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/273"
        },
        "flags": 1,
        "description": "Mode of the BrokerSubscriberQueueCustomPolicy."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/271"
      },
      {
        "$ref": "#/272"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "ObjectType",
    "name": "BrokerPersistenceEncryption",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/279"
        },
        "flags": 1,
        "description": "Determines if encryption is enabled."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/277"
      },
      {
        "$ref": "#/278"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/280"
      },
      {
        "$ref": "#/281"
      },
      {
        "$ref": "#/282"
      },
      {
        "$ref": "#/283"
      },
      {
        "$ref": "#/284"
      },
      {
        "$ref": "#/285"
      },
      {
        "$ref": "#/286"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.IoTOperations/instances/brokers@2025-07-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/156"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.IoTOperations/instances/brokers/authentications"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-07-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.IoTOperations/instances/brokers/authentications",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/289"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/290"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "Edge location of the resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerAuthenticationProperties",
    "properties": {
      "authenticationMethods": {
        "type": {
          "$ref": "#/312"
        },
        "flags": 1,
        "description": "Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/320"
        },
        "flags": 2,
        "description": "The status of the last operation."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerAuthenticatorMethods",
    "properties": {
      "method": {
        "type": {
          "$ref": "#/297"
        },
        "flags": 1,
        "description": "Custom authentication configuration."
      },
      "customSettings": {
        "type": {
          "$ref": "#/298"
        },
        "flags": 0,
        "description": "Custom authentication configuration."
      },
      "serviceAccountTokenSettings": {
        "type": {
          "$ref": "#/303"
        },
        "flags": 0,
        "description": "ServiceAccountToken authentication configuration."
      },
      "x509Settings": {
        "type": {
          "$ref": "#/305"
        },
        "flags": 0,
        "description": "X.509 authentication configuration."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServiceAccountToken"
  },
  {
    "$type": "StringLiteralType",
    "value": "X509"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/294"
      },
      {
        "$ref": "#/295"
      },
      {
        "$ref": "#/296"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "BrokerAuthenticatorMethodCustom",
    "properties": {
      "auth": {
        "type": {
          "$ref": "#/299"
        },
        "flags": 0,
        "description": "Optional authentication needed for authenticating with the custom authentication server."
      },
      "caCertConfigMap": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Optional CA certificate for validating the custom authentication server's certificate."
      },
      "endpoint": {
        "type": {
          "$ref": "#/301"
        },
        "flags": 1,
        "description": "Endpoint of the custom authentication server. Must be an HTTPS endpoint."
      },
      "headers": {
        "type": {
          "$ref": "#/302"
        },
        "flags": 0,
        "description": "Additional HTTP headers to pass to the custom authentication server."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerAuthenticatorCustomAuth",
    "properties": {
      "x509": {
        "type": {
          "$ref": "#/300"
        },
        "flags": 1,
        "description": "X509 Custom Auth type details."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "X509ManualCertificate",
    "properties": {
      "secretRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "^https://.*$"
  },
  {
    "$type": "ObjectType",
    "name": "BrokerAuthenticatorMethodCustomHeaders",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerAuthenticatorMethodSat",
    "properties": {
      "audiences": {
        "type": {
          "$ref": "#/304"
        },
        "flags": 1,
        "description": "List of allowed audience."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerAuthenticatorMethodX509",
    "properties": {
      "authorizationAttributes": {
        "type": {
          "$ref": "#/308"
        },
        "flags": 0,
        "description": "X509 authorization attributes properties."
      },
      "trustedClientCaCert": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the trusted client ca cert resource."
      },
      "additionalValidation": {
        "type": {
          "$ref": "#/311"
        },
        "flags": 0,
        "description": "X509 authentication attributes properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerAuthenticatorMethodX509Attributes",
    "properties": {
      "attributes": {
        "type": {
          "$ref": "#/307"
        },
        "flags": 1,
        "description": "Attributes object."
      },
      "subject": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Subject of the X509 attribute."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerAuthenticatorMethodX509Attributes",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerAuthenticatorMethodX509AuthorizationAttributes",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/306"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureDeviceRegistry"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/309"
      },
      {
        "$ref": "#/310"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/293"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/313"
      },
      {
        "$ref": "#/314"
      },
      {
        "$ref": "#/315"
      },
      {
        "$ref": "#/316"
      },
      {
        "$ref": "#/317"
      },
      {
        "$ref": "#/318"
      },
      {
        "$ref": "#/319"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.IoTOperations/instances/brokers/authentications@2025-07-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/291"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.IoTOperations/instances/brokers/authorizations"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-07-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.IoTOperations/instances/brokers/authorizations",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/322"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/323"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/325"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "Edge location of the resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerAuthorizationProperties",
    "properties": {
      "authorizationPolicies": {
        "type": {
          "$ref": "#/326"
        },
        "flags": 1,
        "description": "The list of authorization policies supported by the Authorization Resource."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/363"
        },
        "flags": 2,
        "description": "The status of the last operation."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AuthorizationConfig",
    "properties": {
      "cache": {
        "type": {
          "$ref": "#/329"
        },
        "flags": 0,
        "description": "Enable caching of the authorization rules."
      },
      "rules": {
        "type": {
          "$ref": "#/355"
        },
        "flags": 0,
        "description": "The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/327"
      },
      {
        "$ref": "#/328"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AuthorizationRule",
    "properties": {
      "brokerResources": {
        "type": {
          "$ref": "#/338"
        },
        "flags": 1,
        "description": "Give access to Broker methods and topics."
      },
      "principals": {
        "type": {
          "$ref": "#/339"
        },
        "flags": 1,
        "description": "Give access to clients based on the following properties."
      },
      "stateStoreResources": {
        "type": {
          "$ref": "#/354"
        },
        "flags": 0,
        "description": "Give access to state store resources."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerResourceRule",
    "properties": {
      "method": {
        "type": {
          "$ref": "#/335"
        },
        "flags": 1,
        "description": "Give access for a Broker method (i.e., Connect, Subscribe, or Publish)."
      },
      "clientIds": {
        "type": {
          "$ref": "#/336"
        },
        "flags": 0,
        "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect."
      },
      "topics": {
        "type": {
          "$ref": "#/337"
        },
        "flags": 0,
        "description": "A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Connect"
  },
  {
    "$type": "StringLiteralType",
    "value": "Publish"
  },
  {
    "$type": "StringLiteralType",
    "value": "Subscribe"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/332"
      },
      {
        "$ref": "#/333"
      },
      {
        "$ref": "#/334"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/331"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrincipalDefinition",
    "properties": {
      "attributes": {
        "type": {
          "$ref": "#/341"
        },
        "flags": 0,
        "description": "A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication."
      },
      "clientIds": {
        "type": {
          "$ref": "#/342"
        },
        "flags": 0,
        "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection."
      },
      "usernames": {
        "type": {
          "$ref": "#/343"
        },
        "flags": 0,
        "description": "A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrincipalDefinitionAttributesItem",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/340"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "StateStoreResourceRule",
    "properties": {
      "keyType": {
        "type": {
          "$ref": "#/348"
        },
        "flags": 1,
        "description": "Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys."
      },
      "keys": {
        "type": {
          "$ref": "#/349"
        },
        "flags": 1,
        "description": "Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*')."
      },
      "method": {
        "type": {
          "$ref": "#/353"
        },
        "flags": 1,
        "description": "Give access for `Read`, `Write` and `ReadWrite` access level."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Pattern"
  },
  {
    "$type": "StringLiteralType",
    "value": "String"
  },
  {
    "$type": "StringLiteralType",
    "value": "Binary"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/345"
      },
      {
        "$ref": "#/346"
      },
      {
        "$ref": "#/347"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Read"
  },
  {
    "$type": "StringLiteralType",
    "value": "Write"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWrite"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/350"
      },
      {
        "$ref": "#/351"
      },
      {
        "$ref": "#/352"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/344"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/330"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/356"
      },
      {
        "$ref": "#/357"
      },
      {
        "$ref": "#/358"
      },
      {
        "$ref": "#/359"
      },
      {
        "$ref": "#/360"
      },
      {
        "$ref": "#/361"
      },
      {
        "$ref": "#/362"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.IoTOperations/instances/brokers/authorizations@2025-07-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/324"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.IoTOperations/instances/brokers/listeners"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-07-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.IoTOperations/instances/brokers/listeners",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/365"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/366"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/368"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "Edge location of the resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BrokerListenerProperties",
    "properties": {
      "serviceName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Kubernetes Service name of this listener."
      },
      "ports": {
        "type": {
          "$ref": "#/385"
        },
        "flags": 1,
        "description": "Ports on which this listener accepts client connections."
      },
      "serviceType": {
        "type": {
          "$ref": "#/389"
        },
        "flags": 0,
        "description": "Kubernetes Service type of this listener."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/397"
        },
        "flags": 2,
        "description": "The status of the last operation."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ListenerPort",
    "properties": {
      "authenticationRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Reference to client authentication settings. Omit to disable authentication."
      },
      "authorizationRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Reference to client authorization settings. Omit to disable authorization."
      },
      "nodePort": {
        "type": {
          "$ref": "#/168"
        },
        "flags": 0,
        "description": "Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener."
      },
      "port": {
        "type": {
          "$ref": "#/168"
        },
        "flags": 1,
        "description": "TCP port for accepting client connections."
      },
      "protocol": {
        "type": {
          "$ref": "#/372"
        },
        "flags": 0,
        "description": "Protocol to use for client connections."
      },
      "tls": {
        "type": {
          "$ref": "#/373"
        },
        "flags": 0,
        "description": "TLS server certificate settings for this port. Omit to disable TLS."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Mqtt"
  },
  {
    "$type": "StringLiteralType",
    "value": "WebSockets"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/370"
      },
      {
        "$ref": "#/371"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TlsCertMethod",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/376"
        },
        "flags": 1,
        "description": "Mode of TLS server certificate management."
      },
      "certManagerCertificateSpec": {
        "type": {
          "$ref": "#/377"
        },
        "flags": 0,
        "description": "Option 1 - Automatic TLS server certificate management with cert-manager."
      },
      "manual": {
        "type": {
          "$ref": "#/300"
        },
        "flags": 0,
        "description": "Option 2 - Manual TLS server certificate management through a defined secret."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Automatic"
  },
  {
    "$type": "StringLiteralType",
    "value": "Manual"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/374"
      },
      {
        "$ref": "#/375"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CertManagerCertificateSpec",
    "properties": {
      "duration": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
      },
      "secretName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself."
      },
      "renewBefore": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
      },
      "issuerRef": {
        "type": {
          "$ref": "#/378"
        },
        "flags": 1,
        "description": "cert-manager issuerRef."
      },
      "privateKey": {
        "type": {
          "$ref": "#/173"
        },
        "flags": 0,
        "description": "Type of certificate private key."
      },
      "san": {
        "type": {
          "$ref": "#/382"
        },
        "flags": 0,
        "description": "Additional Subject Alternative Names (SANs) to include in the certificate."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CertManagerIssuerRef",
    "properties": {
      "group": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "group of issuer."
      },
      "kind": {
        "type": {
          "$ref": "#/381"
        },
        "flags": 1,
        "description": "kind of issuer (Issuer or ClusterIssuer)."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "name of issuer."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Issuer"
  },
  {
    "$type": "StringLiteralType",
    "value": "ClusterIssuer"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/379"
      },
      {
        "$ref": "#/380"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SanForCert",
    "properties": {
      "dns": {
        "type": {
          "$ref": "#/383"
        },
        "flags": 1,
        "description": "DNS SANs."
      },
      "ip": {
        "type": {
          "$ref": "#/384"
        },
        "flags": 1,
        "description": "IP address SANs."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/369"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ClusterIp"
  },
  {
    "$type": "StringLiteralType",
    "value": "LoadBalancer"
  },
  {
    "$type": "StringLiteralType",
    "value": "NodePort"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/386"
      },
      {
        "$ref": "#/387"
      },
      {
        "$ref": "#/388"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/390"
      },
      {
        "$ref": "#/391"
      },
      {
        "$ref": "#/392"
      },
      {
        "$ref": "#/393"
      },
      {
        "$ref": "#/394"
      },
      {
        "$ref": "#/395"
      },
      {
        "$ref": "#/396"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.IoTOperations/instances/brokers/listeners@2025-07-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/367"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.IoTOperations/instances/dataflowEndpoints"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-07-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.IoTOperations/instances/dataflowEndpoints",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/399"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/400"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/402"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "Edge location of the resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointProperties",
    "properties": {
      "endpointType": {
        "type": {
          "$ref": "#/410"
        },
        "flags": 1,
        "description": "Endpoint Type."
      },
      "hostType": {
        "type": {
          "$ref": "#/417"
        },
        "flags": 0,
        "description": "The type of the Kafka host. E.g FabricRT, EventGrid."
      },
      "dataExplorerSettings": {
        "type": {
          "$ref": "#/418"
        },
        "flags": 0,
        "description": "Azure Data Explorer endpoint."
      },
      "dataLakeStorageSettings": {
        "type": {
          "$ref": "#/428"
        },
        "flags": 0,
        "description": "Azure Data Lake endpoint."
      },
      "fabricOneLakeSettings": {
        "type": {
          "$ref": "#/436"
        },
        "flags": 0,
        "description": "Microsoft Fabric endpoint."
      },
      "kafkaSettings": {
        "type": {
          "$ref": "#/446"
        },
        "flags": 0,
        "description": "Kafka endpoint."
      },
      "localStorageSettings": {
        "type": {
          "$ref": "#/484"
        },
        "flags": 0,
        "description": "Local persistent volume endpoint."
      },
      "mqttSettings": {
        "type": {
          "$ref": "#/485"
        },
        "flags": 0,
        "description": "Broker endpoint."
      },
      "openTelemetrySettings": {
        "type": {
          "$ref": "#/504"
        },
        "flags": 0,
        "description": "OpenTelemetry endpoint."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/519"
        },
        "flags": 2,
        "description": "The status of the last operation."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DataExplorer"
  },
  {
    "$type": "StringLiteralType",
    "value": "DataLakeStorage"
  },
  {
    "$type": "StringLiteralType",
    "value": "FabricOneLake"
  },
  {
    "$type": "StringLiteralType",
    "value": "Kafka"
  },
  {
    "$type": "StringLiteralType",
    "value": "LocalStorage"
  },
  {
    "$type": "StringLiteralType",
    "value": "Mqtt"
  },
  {
    "$type": "StringLiteralType",
    "value": "OpenTelemetry"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/403"
      },
      {
        "$ref": "#/404"
      },
      {
        "$ref": "#/405"
      },
      {
        "$ref": "#/406"
      },
      {
        "$ref": "#/407"
      },
      {
        "$ref": "#/408"
      },
      {
        "$ref": "#/409"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "FabricRT"
  },
  {
    "$type": "StringLiteralType",
    "value": "EventGrid"
  },
  {
    "$type": "StringLiteralType",
    "value": "LocalBroker"
  },
  {
    "$type": "StringLiteralType",
    "value": "Eventhub"
  },
  {
    "$type": "StringLiteralType",
    "value": "CustomMqtt"
  },
  {
    "$type": "StringLiteralType",
    "value": "CustomKafka"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/411"
      },
      {
        "$ref": "#/412"
      },
      {
        "$ref": "#/413"
      },
      {
        "$ref": "#/414"
      },
      {
        "$ref": "#/415"
      },
      {
        "$ref": "#/416"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointDataExplorer",
    "properties": {
      "authentication": {
        "type": {
          "$ref": "#/419"
        },
        "flags": 1,
        "description": "Authentication configuration. NOTE - only authentication property is allowed per entry."
      },
      "database": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Database name."
      },
      "host": {
        "type": {
          "$ref": "#/425"
        },
        "flags": 1,
        "description": "Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net ."
      },
      "batching": {
        "type": {
          "$ref": "#/426"
        },
        "flags": 0,
        "description": "Azure Data Explorer endpoint batching configuration."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointDataExplorerAuthentication",
    "properties": {
      "method": {
        "type": {
          "$ref": "#/422"
        },
        "flags": 1,
        "description": "Mode of Authentication."
      },
      "systemAssignedManagedIdentitySettings": {
        "type": {
          "$ref": "#/423"
        },
        "flags": 0,
        "description": "System-assigned managed identity authentication."
      },
      "userAssignedManagedIdentitySettings": {
        "type": {
          "$ref": "#/424"
        },
        "flags": 0,
        "description": "User-assigned managed identity authentication."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssignedManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssignedManagedIdentity"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/420"
      },
      {
        "$ref": "#/421"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointAuthenticationSystemAssignedManagedIdentity",
    "properties": {
      "audience": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointAuthenticationUserAssignedManagedIdentity",
    "properties": {
      "clientId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Client ID for the user-assigned managed identity."
      },
      "scope": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
      },
      "tenantId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Tenant ID."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": ".+\\..+\\.kusto\\.windows\\.net"
  },
  {
    "$type": "ObjectType",
    "name": "BatchingConfiguration",
    "properties": {
      "latencySeconds": {
        "type": {
          "$ref": "#/168"
        },
        "flags": 0,
        "description": "Batching latency in seconds."
      },
      "maxMessages": {
        "type": {
          "$ref": "#/427"
        },
        "flags": 0,
        "description": "Maximum number of messages in a batch."
      }
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 0,
    "maxValue": 4294967295
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointDataLakeStorage",
    "properties": {
      "authentication": {
        "type": {
          "$ref": "#/429"
        },
        "flags": 1,
        "description": "Authentication configuration. NOTE - only authentication property is allowed per entry."
      },
      "host": {
        "type": {
          "$ref": "#/435"
        },
        "flags": 1,
        "description": "Host of the Azure Data Lake in the form of <account>.blob.core.windows.net ."
      },
      "batching": {
        "type": {
          "$ref": "#/426"
        },
        "flags": 0,
        "description": "Azure Data Lake endpoint batching configuration."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointDataLakeStorageAuthentication",
    "properties": {
      "method": {
        "type": {
          "$ref": "#/433"
        },
        "flags": 1,
        "description": "Mode of Authentication."
      },
      "accessTokenSettings": {
        "type": {
          "$ref": "#/434"
        },
        "flags": 0,
        "description": "SAS token authentication."
      },
      "systemAssignedManagedIdentitySettings": {
        "type": {
          "$ref": "#/423"
        },
        "flags": 0,
        "description": "System-assigned managed identity authentication."
      },
      "userAssignedManagedIdentitySettings": {
        "type": {
          "$ref": "#/424"
        },
        "flags": 0,
        "description": "User-assigned managed identity authentication."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssignedManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssignedManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "AccessToken"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/430"
      },
      {
        "$ref": "#/431"
      },
      {
        "$ref": "#/432"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointAuthenticationAccessToken",
    "properties": {
      "secretRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Token secret name."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": ".+\\.blob\\.core\\.windows\\.net"
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointFabricOneLake",
    "properties": {
      "authentication": {
        "type": {
          "$ref": "#/437"
        },
        "flags": 1,
        "description": "Authentication configuration. NOTE - only one authentication property is allowed per entry."
      },
      "names": {
        "type": {
          "$ref": "#/441"
        },
        "flags": 1,
        "description": "Names of the workspace and lakehouse."
      },
      "oneLakePathType": {
        "type": {
          "$ref": "#/444"
        },
        "flags": 1,
        "description": "Type of location of the data in the workspace. Can be either tables or files."
      },
      "host": {
        "type": {
          "$ref": "#/445"
        },
        "flags": 1,
        "description": "Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com."
      },
      "batching": {
        "type": {
          "$ref": "#/426"
        },
        "flags": 0,
        "description": "Batching configuration."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointFabricOneLakeAuthentication",
    "properties": {
      "method": {
        "type": {
          "$ref": "#/440"
        },
        "flags": 1,
        "description": "Mode of Authentication."
      },
      "systemAssignedManagedIdentitySettings": {
        "type": {
          "$ref": "#/423"
        },
        "flags": 0,
        "description": "System-assigned managed identity authentication."
      },
      "userAssignedManagedIdentitySettings": {
        "type": {
          "$ref": "#/424"
        },
        "flags": 0,
        "description": "User-assigned managed identity authentication."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssignedManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssignedManagedIdentity"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/438"
      },
      {
        "$ref": "#/439"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointFabricOneLakeNames",
    "properties": {
      "lakehouseName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Lakehouse name."
      },
      "workspaceName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Workspace name."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Files"
  },
  {
    "$type": "StringLiteralType",
    "value": "Tables"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/442"
      },
      {
        "$ref": "#/443"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringType",
    "pattern": ".+\\.fabric\\.microsoft\\.com"
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointKafka",
    "properties": {
      "authentication": {
        "type": {
          "$ref": "#/447"
        },
        "flags": 1,
        "description": "Authentication configuration. NOTE - only authentication property is allowed per entry."
      },
      "consumerGroupId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Consumer group ID."
      },
      "host": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Kafka endpoint host."
      },
      "batching": {
        "type": {
          "$ref": "#/460"
        },
        "flags": 0,
        "description": "Batching configuration."
      },
      "copyMqttProperties": {
        "type": {
          "$ref": "#/466"
        },
        "flags": 0,
        "description": "Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source."
      },
      "compression": {
        "type": {
          "$ref": "#/471"
        },
        "flags": 0,
        "description": "Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source."
      },
      "kafkaAcks": {
        "type": {
          "$ref": "#/475"
        },
        "flags": 0,
        "description": "Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source."
      },
      "partitionStrategy": {
        "type": {
          "$ref": "#/480"
        },
        "flags": 0,
        "description": "Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source."
      },
      "tls": {
        "type": {
          "$ref": "#/136"
        },
        "flags": 0,
        "description": "TLS configuration."
      },
      "cloudEventAttributes": {
        "type": {
          "$ref": "#/483"
        },
        "flags": 0,
        "description": "Cloud event mapping config."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointKafkaAuthentication",
    "properties": {
      "method": {
        "type": {
          "$ref": "#/453"
        },
        "flags": 1,
        "description": "Mode of Authentication."
      },
      "systemAssignedManagedIdentitySettings": {
        "type": {
          "$ref": "#/423"
        },
        "flags": 0,
        "description": "System-assigned managed identity authentication."
      },
      "userAssignedManagedIdentitySettings": {
        "type": {
          "$ref": "#/424"
        },
        "flags": 0,
        "description": "User-assigned managed identity authentication."
      },
      "saslSettings": {
        "type": {
          "$ref": "#/454"
        },
        "flags": 0,
        "description": "SASL authentication."
      },
      "x509CertificateSettings": {
        "type": {
          "$ref": "#/459"
        },
        "flags": 0,
        "description": "X.509 certificate authentication."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssignedManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssignedManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sasl"
  },
  {
    "$type": "StringLiteralType",
    "value": "X509Certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Anonymous"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/448"
      },
      {
        "$ref": "#/449"
      },
      {
        "$ref": "#/450"
      },
      {
        "$ref": "#/451"
      },
      {
        "$ref": "#/452"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointAuthenticationSasl",
    "properties": {
      "saslType": {
        "type": {
          "$ref": "#/458"
        },
        "flags": 1,
        "description": "Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512."
      },
      "secretRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Token secret name."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Plain"
  },
  {
    "$type": "StringLiteralType",
    "value": "ScramSha256"
  },
  {
    "$type": "StringLiteralType",
    "value": "ScramSha512"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/455"
      },
      {
        "$ref": "#/456"
      },
      {
        "$ref": "#/457"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointAuthenticationX509",
    "properties": {
      "secretRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Secret reference of the X.509 certificate."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointKafkaBatching",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/463"
        },
        "flags": 0,
        "description": "Mode for batching."
      },
      "latencyMs": {
        "type": {
          "$ref": "#/168"
        },
        "flags": 0,
        "description": "Batching latency in milliseconds."
      },
      "maxBytes": {
        "type": {
          "$ref": "#/427"
        },
        "flags": 0,
        "description": "Maximum number of bytes in a batch."
      },
      "maxMessages": {
        "type": {
          "$ref": "#/427"
        },
        "flags": 0,
        "description": "Maximum number of messages in a batch."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/461"
      },
      {
        "$ref": "#/462"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/464"
      },
      {
        "$ref": "#/465"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Gzip"
  },
  {
    "$type": "StringLiteralType",
    "value": "Snappy"
  },
  {
    "$type": "StringLiteralType",
    "value": "Lz4"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/467"
      },
      {
        "$ref": "#/468"
      },
      {
        "$ref": "#/469"
      },
      {
        "$ref": "#/470"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Zero"
  },
  {
    "$type": "StringLiteralType",
    "value": "One"
  },
  {
    "$type": "StringLiteralType",
    "value": "All"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/472"
      },
      {
        "$ref": "#/473"
      },
      {
        "$ref": "#/474"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Static"
  },
  {
    "$type": "StringLiteralType",
    "value": "Topic"
  },
  {
    "$type": "StringLiteralType",
    "value": "Property"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/476"
      },
      {
        "$ref": "#/477"
      },
      {
        "$ref": "#/478"
      },
      {
        "$ref": "#/479"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Propagate"
  },
  {
    "$type": "StringLiteralType",
    "value": "CreateOrRemap"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/481"
      },
      {
        "$ref": "#/482"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointLocalStorage",
    "properties": {
      "persistentVolumeClaimRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Persistent volume claim name."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointMqtt",
    "properties": {
      "authentication": {
        "type": {
          "$ref": "#/486"
        },
        "flags": 1,
        "description": "authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed"
      },
      "clientIdPrefix": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted."
      },
      "host": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted."
      },
      "protocol": {
        "type": {
          "$ref": "#/496"
        },
        "flags": 0,
        "description": "Enable or disable websockets."
      },
      "keepAliveSeconds": {
        "type": {
          "$ref": "#/135"
        },
        "flags": 0,
        "description": "Broker KeepAlive for connection in seconds."
      },
      "retain": {
        "type": {
          "$ref": "#/499"
        },
        "flags": 0,
        "description": "Whether or not to keep the retain setting."
      },
      "maxInflightMessages": {
        "type": {
          "$ref": "#/135"
        },
        "flags": 0,
        "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack."
      },
      "qos": {
        "type": {
          "$ref": "#/500"
        },
        "flags": 0,
        "description": "Qos for Broker connection."
      },
      "sessionExpirySeconds": {
        "type": {
          "$ref": "#/135"
        },
        "flags": 0,
        "description": "Session expiry in seconds."
      },
      "tls": {
        "type": {
          "$ref": "#/136"
        },
        "flags": 0,
        "description": "TLS configuration."
      },
      "cloudEventAttributes": {
        "type": {
          "$ref": "#/503"
        },
        "flags": 0,
        "description": "Cloud event mapping config."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointMqttAuthentication",
    "properties": {
      "method": {
        "type": {
          "$ref": "#/492"
        },
        "flags": 1,
        "description": "Mode of Authentication."
      },
      "systemAssignedManagedIdentitySettings": {
        "type": {
          "$ref": "#/423"
        },
        "flags": 0,
        "description": "System-assigned managed identity authentication."
      },
      "userAssignedManagedIdentitySettings": {
        "type": {
          "$ref": "#/424"
        },
        "flags": 0,
        "description": "User-assigned managed identity authentication."
      },
      "serviceAccountTokenSettings": {
        "type": {
          "$ref": "#/493"
        },
        "flags": 0,
        "description": "Kubernetes service account token authentication. Default audience if not set is aio-internal"
      },
      "x509CertificateSettings": {
        "type": {
          "$ref": "#/459"
        },
        "flags": 0,
        "description": "X.509 certificate authentication."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssignedManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssignedManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServiceAccountToken"
  },
  {
    "$type": "StringLiteralType",
    "value": "X509Certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Anonymous"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/487"
      },
      {
        "$ref": "#/488"
      },
      {
        "$ref": "#/489"
      },
      {
        "$ref": "#/490"
      },
      {
        "$ref": "#/491"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointAuthenticationServiceAccountToken",
    "properties": {
      "audience": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Audience of the service account. Optional, defaults to the broker internal service account audience."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Mqtt"
  },
  {
    "$type": "StringLiteralType",
    "value": "WebSockets"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/494"
      },
      {
        "$ref": "#/495"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Keep"
  },
  {
    "$type": "StringLiteralType",
    "value": "Never"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/497"
      },
      {
        "$ref": "#/498"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 0,
    "maxValue": 1
  },
  {
    "$type": "StringLiteralType",
    "value": "Propagate"
  },
  {
    "$type": "StringLiteralType",
    "value": "CreateOrRemap"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/501"
      },
      {
        "$ref": "#/502"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataflowEndpointOpenTelemetry",
    "properties": {
      "host": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Host of the OpenTelemetry in the form of <host>:<port>."
      },
      "batching": {
        "type": {
          "$ref": "#/426"
        },
        "flags": 0,
        "description": "Batching configuration."
      },
      "tls": {
        "type": {
          "$ref": "#/136"
        },
        "flags": 0,
        "description": "TLS configuration."
      },
      "authentication": {
        "type": {
          "$ref": "#/505"
        },
        "flags": 1,
        "description": "Authentication properties for OpenTelemetry endpoints"
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DataflowOpenTelemetryAuthentication",
    "discriminator": "method",
    "baseProperties": {},
    "elements": {
      "Anonymous": {
        "$ref": "#/506"
      },
      "ServiceAccountToken": {
        "$ref": "#/508"
      },
      "X509Certificate": {
        "$ref": "#/510"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowOpenTelemetryAnonymousAuthentication",
    "properties": {
      "anonymousSettings": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 1,
        "description": "Settings for the anonymous connection"
      },
      "method": {
        "type": {
          "$ref": "#/507"
        },
        "flags": 1,
        "description": "The authentication method."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Anonymous"
  },
  {
    "$type": "ObjectType",
    "name": "DataflowOpenTelemetryServiceAccountAuthentication",
    "properties": {
      "serviceAccountTokenSettings": {
        "type": {
          "$ref": "#/493"
        },
        "flags": 1,
        "description": "Kubernetes service account token authentication."
      },
      "method": {
        "type": {
          "$ref": "#/509"
        },
        "flags": 1,
        "description": "The authentication method."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ServiceAccountToken"
  },
  {
    "$type": "ObjectType",
    "name": "DataflowOpenTelemetryX509CertificateAuthentication",
    "properties": {
      "x509CertificateSettings": {
        "type": {
          "$ref": "#/459"
        },
        "flags": 1,
        "description": "X.509 certificate authentication settings."
      },
      "method": {
        "type": {
          "$ref": "#/511"
        },
        "flags": 1,
        "description": "The authentication method."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "X509Certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/512"
      },
      {
        "$ref": "#/513"
      },
      {
        "$ref": "#/514"
      },
      {
        "$ref": "#/515"
      },
      {
        "$ref": "#/516"
      },
      {
        "$ref": "#/517"
      },
      {
        "$ref": "#/518"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.IoTOperations/instances/dataflowEndpoints@2025-07-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/401"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.IoTOperations/instances/dataflowProfiles"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-07-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.IoTOperations/instances/dataflowProfiles",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/521"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/522"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/524"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "Edge location of the resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowProfileProperties",
    "properties": {
      "diagnostics": {
        "type": {
          "$ref": "#/525"
        },
        "flags": 0,
        "description": "Spec defines the desired identities of NBC diagnostics settings."
      },
      "instanceCount": {
        "type": {
          "$ref": "#/526"
        },
        "flags": 0,
        "description": "To manually scale the dataflow profile, specify the maximum number of instances you want to run."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/534"
        },
        "flags": 2,
        "description": "The status of the last operation."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProfileDiagnostics",
    "properties": {
      "logs": {
        "type": {
          "$ref": "#/191"
        },
        "flags": 0,
        "description": "Diagnostic log settings for the resource."
      },
      "metrics": {
        "type": {
          "$ref": "#/192"
        },
        "flags": 0,
        "description": "The metrics settings for the resource."
      }
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 20
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/527"
      },
      {
        "$ref": "#/528"
      },
      {
        "$ref": "#/529"
      },
      {
        "$ref": "#/530"
      },
      {
        "$ref": "#/531"
      },
      {
        "$ref": "#/532"
      },
      {
        "$ref": "#/533"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.IoTOperations/instances/dataflowProfiles@2025-07-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/523"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.IoTOperations/instances/dataflowProfiles/dataflowGraphs"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-07-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.IoTOperations/instances/dataflowProfiles/dataflowGraphs",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/536"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/537"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/539"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "Edge location of the resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowGraphProperties",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/542"
        },
        "flags": 0,
        "description": "The mode of the dataflow graph."
      },
      "requestDiskPersistence": {
        "type": {
          "$ref": "#/545"
        },
        "flags": 0,
        "description": "Disk persistence mode."
      },
      "nodes": {
        "type": {
          "$ref": "#/563"
        },
        "flags": 1,
        "description": "List of nodes in the dataflow graph."
      },
      "nodeConnections": {
        "type": {
          "$ref": "#/573"
        },
        "flags": 1,
        "description": "List of connections between nodes in the dataflow graph."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/581"
        },
        "flags": 2,
        "description": "The provisioning state of the dataflow graph."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/540"
      },
      {
        "$ref": "#/541"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/543"
      },
      {
        "$ref": "#/544"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DataflowGraphNode",
    "discriminator": "nodeType",
    "baseProperties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Name of the node."
      }
    },
    "elements": {
      "Destination": {
        "$ref": "#/547"
      },
      "Graph": {
        "$ref": "#/554"
      },
      "Source": {
        "$ref": "#/559"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowGraphDestinationNode",
    "properties": {
      "destinationSettings": {
        "type": {
          "$ref": "#/548"
        },
        "flags": 1,
        "description": "Destination configuration."
      },
      "nodeType": {
        "type": {
          "$ref": "#/553"
        },
        "flags": 1,
        "description": "Type of the node."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowGraphDestinationNodeSettings",
    "properties": {
      "endpointRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the DataflowEndpoint resource ."
      },
      "dataDestination": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Data destination at the endpoint."
      },
      "outputSchemaSettings": {
        "type": {
          "$ref": "#/549"
        },
        "flags": 0,
        "description": "Output schema settings."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowGraphDestinationSchemaSettings",
    "properties": {
      "serializationFormat": {
        "type": {
          "$ref": "#/552"
        },
        "flags": 1,
        "description": "The format of the output data."
      },
      "schemaRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Reference to the schema that describes the output of the transformation."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Parquet"
  },
  {
    "$type": "StringLiteralType",
    "value": "Delta"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/550"
      },
      {
        "$ref": "#/551"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Destination"
  },
  {
    "$type": "ObjectType",
    "name": "DataflowGraphGraphNode",
    "properties": {
      "graphSettings": {
        "type": {
          "$ref": "#/555"
        },
        "flags": 1,
        "description": "Graph configuration."
      },
      "nodeType": {
        "type": {
          "$ref": "#/558"
        },
        "flags": 1,
        "description": "Type of the node."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowGraphNodeGraphSettings",
    "properties": {
      "registryEndpointRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Reference to the registry endpoint for pulling the artifact."
      },
      "artifact": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The artifact name and version to pull. This should be in the format `<artifact-name>:<version>`."
      },
      "configuration": {
        "type": {
          "$ref": "#/557"
        },
        "flags": 0,
        "description": "Configuration key-value pairs."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowGraphNodeConfiguration",
    "properties": {
      "key": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Key of the configuration."
      },
      "value": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Value of the configuration."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/556"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Graph"
  },
  {
    "$type": "ObjectType",
    "name": "DataflowGraphSourceNode",
    "properties": {
      "sourceSettings": {
        "type": {
          "$ref": "#/560"
        },
        "flags": 1,
        "description": "Source configuration."
      },
      "nodeType": {
        "type": {
          "$ref": "#/562"
        },
        "flags": 1,
        "description": "Type of the node."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowGraphSourceSettings",
    "properties": {
      "endpointRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The endpoint reference for the source."
      },
      "dataSources": {
        "type": {
          "$ref": "#/561"
        },
        "flags": 1,
        "description": "List of data sources."
      },
      "assetRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Source"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/546"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowGraphNodeConnection",
    "properties": {
      "from": {
        "type": {
          "$ref": "#/565"
        },
        "flags": 1,
        "description": "Information about the source node."
      },
      "to": {
        "type": {
          "$ref": "#/572"
        },
        "flags": 1,
        "description": "Information about the destination node."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowGraphConnectionInput",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Name of the input node."
      },
      "schema": {
        "type": {
          "$ref": "#/566"
        },
        "flags": 0,
        "description": "Schema settings for the input node."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowGraphConnectionSchemaSettings",
    "properties": {
      "serializationFormat": {
        "type": {
          "$ref": "#/571"
        },
        "flags": 0,
        "description": "Output serialization format."
      },
      "schemaRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Reference to the schema that describes the output of the transformation."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Delta"
  },
  {
    "$type": "StringLiteralType",
    "value": "Json"
  },
  {
    "$type": "StringLiteralType",
    "value": "Parquet"
  },
  {
    "$type": "StringLiteralType",
    "value": "Avro"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/567"
      },
      {
        "$ref": "#/568"
      },
      {
        "$ref": "#/569"
      },
      {
        "$ref": "#/570"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataflowGraphConnectionOutput",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Name of the destination node."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/564"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/574"
      },
      {
        "$ref": "#/575"
      },
      {
        "$ref": "#/576"
      },
      {
        "$ref": "#/577"
      },
      {
        "$ref": "#/578"
      },
      {
        "$ref": "#/579"
      },
      {
        "$ref": "#/580"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.IoTOperations/instances/dataflowProfiles/dataflowGraphs@2025-07-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/538"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.IoTOperations/instances/dataflowProfiles/dataflows"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-07-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.IoTOperations/instances/dataflowProfiles/dataflows",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/583"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/584"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/586"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "Edge location of the resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowProperties",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/589"
        },
        "flags": 0,
        "description": "Mode for Dataflow. Optional; defaults to Enabled."
      },
      "requestDiskPersistence": {
        "type": {
          "$ref": "#/592"
        },
        "flags": 0,
        "description": "Disk persistence mode."
      },
      "operations": {
        "type": {
          "$ref": "#/627"
        },
        "flags": 1,
        "description": "List of operations including source and destination references as well as transformation."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/635"
        },
        "flags": 2,
        "description": "The status of the last operation."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/587"
      },
      {
        "$ref": "#/588"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/590"
      },
      {
        "$ref": "#/591"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataflowOperation",
    "properties": {
      "operationType": {
        "type": {
          "$ref": "#/597"
        },
        "flags": 1,
        "description": "Type of operation."
      },
      "name": {
        "type": {
          "$ref": "#/598"
        },
        "flags": 0,
        "description": "Optional user provided name of the transformation."
      },
      "sourceSettings": {
        "type": {
          "$ref": "#/599"
        },
        "flags": 0,
        "description": "Source configuration."
      },
      "builtInTransformationSettings": {
        "type": {
          "$ref": "#/603"
        },
        "flags": 0,
        "description": "Built In Transformation configuration."
      },
      "destinationSettings": {
        "type": {
          "$ref": "#/626"
        },
        "flags": 0,
        "description": "Destination configuration."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Source"
  },
  {
    "$type": "StringLiteralType",
    "value": "Destination"
  },
  {
    "$type": "StringLiteralType",
    "value": "BuiltInTransformation"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/594"
      },
      {
        "$ref": "#/595"
      },
      {
        "$ref": "#/596"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringType",
    "maxLength": 64
  },
  {
    "$type": "ObjectType",
    "name": "DataflowSourceOperationSettings",
    "properties": {
      "endpointRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type."
      },
      "assetRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from."
      },
      "serializationFormat": {
        "type": {
          "$ref": "#/601"
        },
        "flags": 0,
        "description": "Content is a JSON Schema. Allowed: JSON Schema/draft-7."
      },
      "schemaRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match."
      },
      "dataSources": {
        "type": {
          "$ref": "#/602"
        },
        "flags": 1,
        "description": "List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Json"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/600"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/125"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowBuiltInTransformationSettings",
    "properties": {
      "serializationFormat": {
        "type": {
          "$ref": "#/607"
        },
        "flags": 0,
        "description": "Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json"
      },
      "schemaRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Reference to the schema that describes the output of the transformation."
      },
      "datasets": {
        "type": {
          "$ref": "#/611"
        },
        "flags": 0,
        "description": "Enrich data from Broker State Store. Dataset references a key in Broker State Store."
      },
      "filter": {
        "type": {
          "$ref": "#/616"
        },
        "flags": 0,
        "description": "Filters input record or datapoints based on condition."
      },
      "map": {
        "type": {
          "$ref": "#/625"
        },
        "flags": 0,
        "description": "Maps input to output message."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Delta"
  },
  {
    "$type": "StringLiteralType",
    "value": "Json"
  },
  {
    "$type": "StringLiteralType",
    "value": "Parquet"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/604"
      },
      {
        "$ref": "#/605"
      },
      {
        "$ref": "#/606"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataflowBuiltInTransformationDataset",
    "properties": {
      "key": {
        "type": {
          "$ref": "#/598"
        },
        "flags": 1,
        "description": "The key of the dataset."
      },
      "description": {
        "type": {
          "$ref": "#/609"
        },
        "flags": 0,
        "description": "A user provided optional description of the dataset."
      },
      "schemaRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7."
      },
      "inputs": {
        "type": {
          "$ref": "#/610"
        },
        "flags": 1,
        "description": "List of fields for enriching from the Broker State Store."
      },
      "expression": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
      }
    }
  },
  {
    "$type": "StringType",
    "maxLength": 256
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/608"
    },
    "maxLength": 1
  },
  {
    "$type": "ObjectType",
    "name": "DataflowBuiltInTransformationFilter",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/614"
        },
        "flags": 0,
        "description": "The type of dataflow operation."
      },
      "description": {
        "type": {
          "$ref": "#/609"
        },
        "flags": 0,
        "description": "A user provided optional description of the filter."
      },
      "inputs": {
        "type": {
          "$ref": "#/615"
        },
        "flags": 1,
        "description": "List of fields for filtering in JSON path expression."
      },
      "expression": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Filter"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/613"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/612"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowBuiltInTransformationMap",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/623"
        },
        "flags": 0,
        "description": "Type of transformation."
      },
      "description": {
        "type": {
          "$ref": "#/609"
        },
        "flags": 0,
        "description": "A user provided optional description of the mapping function."
      },
      "inputs": {
        "type": {
          "$ref": "#/624"
        },
        "flags": 1,
        "description": "List of fields for mapping in JSON path expression."
      },
      "expression": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)"
      },
      "output": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Where and how the input fields to be organized in the output record."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NewProperties"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rename"
  },
  {
    "$type": "StringLiteralType",
    "value": "Compute"
  },
  {
    "$type": "StringLiteralType",
    "value": "PassThrough"
  },
  {
    "$type": "StringLiteralType",
    "value": "BuiltInFunction"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/618"
      },
      {
        "$ref": "#/619"
      },
      {
        "$ref": "#/620"
      },
      {
        "$ref": "#/621"
      },
      {
        "$ref": "#/622"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/617"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataflowDestinationOperationSettings",
    "properties": {
      "endpointRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type."
      },
      "dataDestination": {
        "type": {
          "$ref": "#/125"
        },
        "flags": 1,
        "description": "Destination location, can be a topic or table name. Supports dynamic values with $topic, $systemProperties, $userProperties, $payload, $context, and $subscription."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/593"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/628"
      },
      {
        "$ref": "#/629"
      },
      {
        "$ref": "#/630"
      },
      {
        "$ref": "#/631"
      },
      {
        "$ref": "#/632"
      },
      {
        "$ref": "#/633"
      },
      {
        "$ref": "#/634"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.IoTOperations/instances/dataflowProfiles/dataflows@2025-07-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/585"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.IoTOperations/instances/registryEndpoints"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-07-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.IoTOperations/instances/registryEndpoints",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/637"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/638"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/640"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "Edge location of the resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryEndpointProperties",
    "properties": {
      "host": {
        "type": {
          "$ref": "#/641"
        },
        "flags": 1,
        "description": "The Container Registry endpoint hostname."
      },
      "authentication": {
        "type": {
          "$ref": "#/642"
        },
        "flags": 1,
        "description": "The authentication settings for the Azure Container Registry."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/661"
        },
        "flags": 2,
        "description": "The status of the last operation."
      },
      "trustSettings": {
        "type": {
          "$ref": "#/662"
        },
        "flags": 0,
        "description": "Trust settings for the registry endpoint"
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 3,
    "maxLength": 63
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "RegistryEndpointAuthentication",
    "discriminator": "method",
    "baseProperties": {},
    "elements": {
      "Anonymous": {
        "$ref": "#/643"
      },
      "ArtifactPullSecret": {
        "$ref": "#/645"
      },
      "SystemAssignedManagedIdentity": {
        "$ref": "#/648"
      },
      "UserAssignedManagedIdentity": {
        "$ref": "#/651"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryEndpointAnonymousAuthentication",
    "properties": {
      "anonymousSettings": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 1,
        "description": "Anonymous authentication properties"
      },
      "method": {
        "type": {
          "$ref": "#/644"
        },
        "flags": 1,
        "description": "The authentication method."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Anonymous"
  },
  {
    "$type": "ObjectType",
    "name": "RegistryEndpointArtifactPullSecretAuthentication",
    "properties": {
      "artifactPullSecretSettings": {
        "type": {
          "$ref": "#/646"
        },
        "flags": 1,
        "description": "Artifact Pull Secret authentication properties"
      },
      "method": {
        "type": {
          "$ref": "#/647"
        },
        "flags": 1,
        "description": "The authentication method."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryEndpointArtifactPullSecretSettings",
    "properties": {
      "secretRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the kubernetes secret that contains the artifact pull secret."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ArtifactPullSecret"
  },
  {
    "$type": "ObjectType",
    "name": "RegistryEndpointSystemAssignedIdentityAuthentication",
    "properties": {
      "systemAssignedManagedIdentitySettings": {
        "type": {
          "$ref": "#/649"
        },
        "flags": 1,
        "description": "System assigned managed identity properties"
      },
      "method": {
        "type": {
          "$ref": "#/650"
        },
        "flags": 1,
        "description": "The authentication method."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryEndpointSystemAssignedManagedIdentitySettings",
    "properties": {
      "audience": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssignedManagedIdentity"
  },
  {
    "$type": "ObjectType",
    "name": "RegistryEndpointUserAssignedIdentityAuthentication",
    "properties": {
      "userAssignedManagedIdentitySettings": {
        "type": {
          "$ref": "#/652"
        },
        "flags": 1,
        "description": "User assigned managed identity properties"
      },
      "method": {
        "type": {
          "$ref": "#/653"
        },
        "flags": 1,
        "description": "The authentication method."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryEndpointUserAssignedManagedIdentitySettings",
    "properties": {
      "clientId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Client ID for the user-assigned managed identity."
      },
      "scope": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
      },
      "tenantId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Tenant ID."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssignedManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/654"
      },
      {
        "$ref": "#/655"
      },
      {
        "$ref": "#/656"
      },
      {
        "$ref": "#/657"
      },
      {
        "$ref": "#/658"
      },
      {
        "$ref": "#/659"
      },
      {
        "$ref": "#/660"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "RegistryEndpointTrustedSettings",
    "properties": {
      "trustedSigningKeys": {
        "type": {
          "$ref": "#/663"
        },
        "flags": 1,
        "description": "The trust properties for the registry endpoint."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "RegistryEndpointTrustedSigningKey",
    "discriminator": "type",
    "baseProperties": {},
    "elements": {
      "ConfigMap": {
        "$ref": "#/664"
      },
      "Secret": {
        "$ref": "#/666"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryEndpointTrustedSigningKeyConfigMap",
    "properties": {
      "configMapRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the configmap."
      },
      "type": {
        "type": {
          "$ref": "#/665"
        },
        "flags": 1,
        "description": "The trust type for the registry endpoint."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ConfigMap"
  },
  {
    "$type": "ObjectType",
    "name": "RegistryEndpointTrustedSigningKeySecret",
    "properties": {
      "secretRef": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the secret."
      },
      "type": {
        "type": {
          "$ref": "#/667"
        },
        "flags": 1,
        "description": "The trust type for the registry endpoint."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Secret"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.IoTOperations/instances/registryEndpoints@2025-07-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/639"
    },
    "flags": 0
  }
]