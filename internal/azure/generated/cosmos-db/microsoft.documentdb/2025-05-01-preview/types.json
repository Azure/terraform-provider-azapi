[
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/chaosFaults"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/chaosFaults",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "A request object to enable/disable the chaos fault."
      },
      "systemData": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ChaosFaultProperties",
    "properties": {
      "action": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "Indicates whether what action to take for the Chaos Fault."
      },
      "region": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Region of the account where the Chaos Fault is to be enabled/disabled."
      },
      "databaseName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Database name."
      },
      "containerName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Container name."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A provisioning state of the Chaos Fault."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enable"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disable"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/5"
      },
      {
        "$ref": "#/6"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/12"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/14"
      },
      {
        "$ref": "#/15"
      },
      {
        "$ref": "#/16"
      },
      {
        "$ref": "#/17"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/chaosFaults@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/3"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/copyJobs"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/copyJobs",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 1,
        "description": "The properties of a Copy Job"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CopyJobProperties",
    "properties": {
      "jobProperties": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 1,
        "description": "Job Properties"
      },
      "status": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 2,
        "description": "Job Status"
      },
      "processedCount": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Processed Count"
      },
      "totalCount": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Total Count"
      },
      "lastUpdatedUtcTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Last Updated Time (ISO-8601 format)"
      },
      "workerCount": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 0,
        "description": "Worker count"
      },
      "error": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 2,
        "description": "Error response for Faulted job"
      },
      "duration": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Total Duration of Job"
      },
      "mode": {
        "type": {
          "$ref": "#/72"
        },
        "flags": 0,
        "description": "Mode of job execution"
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "BaseCopyJobProperties",
    "discriminator": "jobType",
    "baseProperties": {},
    "elements": {
      "AzureBlobStorageToCassandraRU": {
        "$ref": "#/26"
      },
      "CassandraRUToAzureBlobStorage": {
        "$ref": "#/36"
      },
      "CassandraRUToCassandraRU": {
        "$ref": "#/40"
      },
      "MongoRUToMongoRU": {
        "$ref": "#/44"
      },
      "MongoRUToMongoVCore": {
        "$ref": "#/49"
      },
      "NoSqlRUToNoSqlRU": {
        "$ref": "#/55"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BlobToCassandraRUCopyJobProperties",
    "properties": {
      "sourceDetails": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 1,
        "description": "Azure Storage container DataStore details"
      },
      "destinationDetails": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 0,
        "description": "Destination Cassandra DataStore details"
      },
      "tasks": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 1,
        "description": "Copy Job tasks."
      },
      "jobType": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 1,
        "description": "Copy Job Type"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureBlobSourceSinkDetails",
    "properties": {
      "endpointUrl": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 1,
        "description": "Azure Blob container endpoint."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "^https?://[^/$.?# ]+.[^ ]*$"
  },
  {
    "$type": "ObjectType",
    "name": "CosmosDBSourceSinkDetails",
    "properties": {
      "remoteAccountName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of remote account in case of cross-account data transfer."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BlobToCassandraRUCopyJobTask",
    "properties": {
      "source": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 1,
        "description": "Source Azure Blob container"
      },
      "destination": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 1,
        "description": "Destination Cassandra table"
      },
      "totalCount": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Task level Total Count."
      },
      "processedCount": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Task level Processed Count."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureBlobContainer",
    "properties": {
      "containerName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Azure Blob container."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CosmosDBCassandraTable",
    "properties": {
      "keyspaceName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Azure Cosmos DB for Apache Cassandra keyspace."
      },
      "tableName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Azure Cosmos DB for Apache Cassandra table."
      }
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/30"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureBlobStorageToCassandraRU"
  },
  {
    "$type": "ObjectType",
    "name": "CassandraRUToBlobCopyJobProperties",
    "properties": {
      "sourceDetails": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 0,
        "description": "Source Cassandra DataStore details"
      },
      "destinationDetails": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 1,
        "description": "Destination Cassandra DataStore details"
      },
      "tasks": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 1,
        "description": "Copy Job tasks."
      },
      "jobType": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 1,
        "description": "Copy Job Type"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CassandraRUToBlobCopyJobTask",
    "properties": {
      "source": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 1,
        "description": "Source Cassandra table"
      },
      "destination": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 1,
        "description": "Destination Azure Blob container"
      },
      "totalCount": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Task level Total Count."
      },
      "processedCount": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Task level Processed Count."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/37"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CassandraRUToAzureBlobStorage"
  },
  {
    "$type": "ObjectType",
    "name": "CassandraRUToCassandraRUCopyJobProperties",
    "properties": {
      "sourceDetails": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 0,
        "description": "Source Cassandra DataStore details"
      },
      "destinationDetails": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 0,
        "description": "Destination Cassandra DataStore details"
      },
      "tasks": {
        "type": {
          "$ref": "#/42"
        },
        "flags": 1,
        "description": "Copy Job tasks."
      },
      "jobType": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 1,
        "description": "Copy Job Type"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CassandraRUToCassandraRUCopyJobTask",
    "properties": {
      "source": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 1,
        "description": "Source Cassandra table"
      },
      "destination": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 1,
        "description": "Destination Cassandra table"
      },
      "totalCount": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Task level Total Count."
      },
      "processedCount": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Task level Processed Count."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/41"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CassandraRUToCassandraRU"
  },
  {
    "$type": "ObjectType",
    "name": "MongoRUToMongoRUCopyJobProperties",
    "properties": {
      "sourceDetails": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 0,
        "description": "Source Mongo DataStore details"
      },
      "destinationDetails": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 0,
        "description": "Destination Mongo DataStore details"
      },
      "tasks": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 1,
        "description": "Copy Job tasks."
      },
      "jobType": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 1,
        "description": "Copy Job Type"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MongoRUToMongoRUCopyJobTask",
    "properties": {
      "source": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 1,
        "description": "Source Mongo (RU) collection"
      },
      "destination": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 1,
        "description": "Destination Mongo (RU) collection"
      },
      "totalCount": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Task level Total Count."
      },
      "processedCount": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Task level Processed Count."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CosmosDBMongoCollection",
    "properties": {
      "databaseName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Azure Cosmos DB for MongoDB (RU) database."
      },
      "collectionName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Azure Cosmos DB for MongoDB (RU) collection."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "MongoRUToMongoRU"
  },
  {
    "$type": "ObjectType",
    "name": "MongoRUToMongoVCoreCopyJobProperties",
    "properties": {
      "sourceDetails": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 0,
        "description": "Source Mongo (RU) DataStore details"
      },
      "destinationDetails": {
        "type": {
          "$ref": "#/50"
        },
        "flags": 1,
        "description": "Destination Mongo (vCore) DataStore details"
      },
      "tasks": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 1,
        "description": "Copy Job tasks."
      },
      "jobType": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 1,
        "description": "Copy Job Type"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MongoVCoreSourceSinkDetails",
    "properties": {
      "hostName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "connectionStringKeyVaultUri": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 0,
        "description": "URI of Azure KeyVault secret containing connection string."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MongoRUToMongoVCoreCopyJobTask",
    "properties": {
      "source": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 1,
        "description": "Source Mongo (RU) collection"
      },
      "destination": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 1,
        "description": "Destination Mongo (vCore) collection"
      },
      "totalCount": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Task level Total Count."
      },
      "processedCount": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Task level Processed Count."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CosmosDBMongoVCoreCollection",
    "properties": {
      "databaseName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Azure Cosmos DB for MongoDB (vCore) database."
      },
      "collectionName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Azure Cosmos DB for MongoDB (vCore) collection."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/51"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "MongoRUToMongoVCore"
  },
  {
    "$type": "ObjectType",
    "name": "NoSqlRUToNoSqlRUCopyJobProperties",
    "properties": {
      "sourceDetails": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 0,
        "description": "Source SQL DataStore details"
      },
      "destinationDetails": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 0,
        "description": "Destination SQL DataStore details"
      },
      "tasks": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 1,
        "description": "Copy Job tasks."
      },
      "jobType": {
        "type": {
          "$ref": "#/59"
        },
        "flags": 1,
        "description": "Copy Job Type"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NoSqlRUToNoSqlRUCopyJobTask",
    "properties": {
      "source": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 1,
        "description": "Source SQL container"
      },
      "destination": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 1,
        "description": "Destination SQL container"
      },
      "totalCount": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Task level Total Count."
      },
      "processedCount": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Task level Processed Count."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CosmosDBNoSqlContainer",
    "properties": {
      "databaseName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Azure Cosmos DB for NoSQL database."
      },
      "containerName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Azure Cosmos DB for NoSQL container."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/56"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NoSqlRUToNoSqlRU"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Partitioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Paused"
  },
  {
    "$type": "StringLiteralType",
    "value": "Completed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Faulted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cancelled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/60"
      },
      {
        "$ref": "#/61"
      },
      {
        "$ref": "#/62"
      },
      {
        "$ref": "#/63"
      },
      {
        "$ref": "#/64"
      },
      {
        "$ref": "#/65"
      },
      {
        "$ref": "#/66"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 0
  },
  {
    "$type": "ObjectType",
    "name": "ErrorResponseAutoGenerated",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Error code."
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Error message indicating why the operation failed."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Offline"
  },
  {
    "$type": "StringLiteralType",
    "value": "Online"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/70"
      },
      {
        "$ref": "#/71"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/copyJobs@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/23"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 3,
    "maxLength": 50,
    "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/75"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "kind": {
        "type": {
          "$ref": "#/81"
        },
        "flags": 0,
        "description": "Indicates the type of database account. This can only be set at database account creation."
      },
      "properties": {
        "type": {
          "$ref": "#/82"
        },
        "flags": 1,
        "description": "Properties to create and update Azure Cosmos DB database accounts."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/207"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "The system meta data relating to this resource."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "GlobalDocumentDB"
  },
  {
    "$type": "StringLiteralType",
    "value": "MongoDB"
  },
  {
    "$type": "StringLiteralType",
    "value": "Parse"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/78"
      },
      {
        "$ref": "#/79"
      },
      {
        "$ref": "#/80"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DatabaseAccountCreateUpdatePropertiesOrDatabaseAccountGetProperties",
    "properties": {
      "consistencyPolicy": {
        "type": {
          "$ref": "#/83"
        },
        "flags": 0,
        "description": "The consistency policy for the Cosmos DB account."
      },
      "locations": {
        "type": {
          "$ref": "#/94"
        },
        "flags": 1,
        "description": "An array that contains the georeplication locations enabled for the Cosmos DB account."
      },
      "databaseAccountOfferType": {
        "type": {
          "$ref": "#/95"
        },
        "flags": 1,
        "description": "The offer type for the database"
      },
      "ipRules": {
        "type": {
          "$ref": "#/97"
        },
        "flags": 0,
        "description": "List of IpRules."
      },
      "isVirtualNetworkFilterEnabled": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules."
      },
      "enableAutomaticFailover": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account."
      },
      "capabilities": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 0,
        "description": "List of Cosmos DB capabilities for the account"
      },
      "virtualNetworkRules": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 0,
        "description": "List of Virtual Network ACL rules configured for the Cosmos DB account."
      },
      "enableMultipleWriteLocations": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Enables the account to write in multiple locations"
      },
      "enableCassandraConnector": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Enables the cassandra connector on the Cosmos DB C* account"
      },
      "connectorOffer": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 0,
        "description": "The cassandra connector offer type for the Cosmos DB database C* account."
      },
      "disableKeyBasedMetadataWriteAccess": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys"
      },
      "keyVaultKeyUri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The URI of the key vault"
      },
      "defaultIdentity": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more."
      },
      "publicNetworkAccess": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 0,
        "description": "Whether requests from Public Network are allowed"
      },
      "enableFreeTier": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Flag to indicate whether Free Tier is enabled."
      },
      "apiProperties": {
        "type": {
          "$ref": "#/108"
        },
        "flags": 0,
        "description": "API specific properties. Currently, supported only for MongoDB API."
      },
      "enableAnalyticalStorage": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Flag to indicate whether to enable storage analytics."
      },
      "analyticalStorageConfiguration": {
        "type": {
          "$ref": "#/117"
        },
        "flags": 0,
        "description": "Analytical storage specific properties."
      },
      "createMode": {
        "type": {
          "$ref": "#/123"
        },
        "flags": 0,
        "description": "Enum to indicate the mode of account creation."
      },
      "backupPolicy": {
        "type": {
          "$ref": "#/124"
        },
        "flags": 0,
        "description": "The object representing the policy for taking backups on an account."
      },
      "cors": {
        "type": {
          "$ref": "#/148"
        },
        "flags": 0,
        "description": "The CORS policy for the Cosmos DB database account."
      },
      "networkAclBypass": {
        "type": {
          "$ref": "#/151"
        },
        "flags": 0,
        "description": "Indicates what services are allowed to bypass firewall checks."
      },
      "networkAclBypassResourceIds": {
        "type": {
          "$ref": "#/152"
        },
        "flags": 0,
        "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account."
      },
      "diagnosticLogSettings": {
        "type": {
          "$ref": "#/153"
        },
        "flags": 0,
        "description": "The Object representing the different Diagnostic log settings for the Cosmos DB Account."
      },
      "disableLocalAuth": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
      },
      "restoreParameters": {
        "type": {
          "$ref": "#/158"
        },
        "flags": 0,
        "description": "Parameters to indicate the information about the restore."
      },
      "capacity": {
        "type": {
          "$ref": "#/168"
        },
        "flags": 0,
        "description": "The object that represents all properties related to capacity enforcement on an account."
      },
      "capacityMode": {
        "type": {
          "$ref": "#/173"
        },
        "flags": 0,
        "description": "Indicates the capacityMode of the Cosmos DB account."
      },
      "enableMaterializedViews": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Flag to indicate whether to enable MaterializedViews on the Cosmos DB account"
      },
      "keysMetadata": {
        "type": {
          "$ref": "#/174"
        },
        "flags": 2,
        "description": "This property is ignored during the update/create operation, as the metadata is read-only. The object represents the metadata for the Account Keys of the Cosmos DB account."
      },
      "enablePartitionMerge": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account"
      },
      "enableBurstCapacity": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Flag to indicate enabling/disabling of Burst Capacity Preview feature on the account"
      },
      "minimalTlsVersion": {
        "type": {
          "$ref": "#/179"
        },
        "flags": 0,
        "description": "Indicates the minimum allowed Tls version. The default is Tls 1.0, except for Cassandra and Mongo API's, which only work with Tls 1.2."
      },
      "customerManagedKeyStatus": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance."
      },
      "enablePriorityBasedExecution": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Flag to indicate enabling/disabling of Priority Based Execution Preview feature on the account"
      },
      "defaultPriorityLevel": {
        "type": {
          "$ref": "#/182"
        },
        "flags": 0,
        "description": "Enum to indicate default Priority Level of request for Priority Based Execution."
      },
      "enablePerRegionPerPartitionAutoscale": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Flag to indicate enabling/disabling of Per-Region Per-partition autoscale Preview feature on the account"
      },
      "enableAllVersionsAndDeletesChangeFeed": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Flag to indicate if All Versions and Deletes Change feed feature is enabled on the account"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The provisioning state of the resource."
      },
      "documentEndpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The connection endpoint for the Cosmos DB database account."
      },
      "writeLocations": {
        "type": {
          "$ref": "#/183"
        },
        "flags": 2,
        "description": "An array that contains the write location for the Cosmos DB account."
      },
      "readLocations": {
        "type": {
          "$ref": "#/184"
        },
        "flags": 2,
        "description": "An array that contains of the read locations enabled for the Cosmos DB account."
      },
      "failoverPolicies": {
        "type": {
          "$ref": "#/186"
        },
        "flags": 2,
        "description": "An array that contains the regions ordered by their failover priorities."
      },
      "privateEndpointConnections": {
        "type": {
          "$ref": "#/191"
        },
        "flags": 2,
        "description": "List of Private Endpoint Connections configured for the Cosmos DB account."
      },
      "instanceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A unique identifier assigned to the database account"
      },
      "capacityModeChangeTransitionState": {
        "type": {
          "$ref": "#/192"
        },
        "flags": 2,
        "description": "The object that represents the migration state for the CapacityMode of the Cosmos DB account."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ConsistencyPolicy",
    "properties": {
      "defaultConsistencyLevel": {
        "type": {
          "$ref": "#/89"
        },
        "flags": 1,
        "description": "The default consistency level and configuration settings of the Cosmos DB account."
      },
      "maxStalenessPrefix": {
        "type": {
          "$ref": "#/90"
        },
        "flags": 0,
        "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'."
      },
      "maxIntervalInSeconds": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 0,
        "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Eventual"
  },
  {
    "$type": "StringLiteralType",
    "value": "Session"
  },
  {
    "$type": "StringLiteralType",
    "value": "BoundedStaleness"
  },
  {
    "$type": "StringLiteralType",
    "value": "Strong"
  },
  {
    "$type": "StringLiteralType",
    "value": "ConsistentPrefix"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/84"
      },
      {
        "$ref": "#/85"
      },
      {
        "$ref": "#/86"
      },
      {
        "$ref": "#/87"
      },
      {
        "$ref": "#/88"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 2147483647
  },
  {
    "$type": "IntegerType",
    "minValue": 5,
    "maxValue": 86400
  },
  {
    "$type": "ObjectType",
    "name": "Location",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
      },
      "locationName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the region."
      },
      "documentEndpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The provisioning state of the resource."
      },
      "failoverPriority": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 0,
        "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists."
      },
      "isZoneRedundant": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/92"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard"
  },
  {
    "$type": "ObjectType",
    "name": "IpAddressOrRange",
    "properties": {
      "ipAddressOrRange": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/96"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Capability",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\"."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/98"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualNetworkRule",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}."
      },
      "ignoreMissingVNetServiceEndpoint": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Create firewall rule before the virtual network has vnet service endpoint enabled."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/100"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Small"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/102"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "SecuredByPerimeter"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/104"
      },
      {
        "$ref": "#/105"
      },
      {
        "$ref": "#/106"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ApiProperties",
    "properties": {
      "serverVersion": {
        "type": {
          "$ref": "#/116"
        },
        "flags": 0,
        "description": "Describes the version of the MongoDB account."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "3.2"
  },
  {
    "$type": "StringLiteralType",
    "value": "3.6"
  },
  {
    "$type": "StringLiteralType",
    "value": "4.0"
  },
  {
    "$type": "StringLiteralType",
    "value": "4.2"
  },
  {
    "$type": "StringLiteralType",
    "value": "5.0"
  },
  {
    "$type": "StringLiteralType",
    "value": "6.0"
  },
  {
    "$type": "StringLiteralType",
    "value": "7.0"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/109"
      },
      {
        "$ref": "#/110"
      },
      {
        "$ref": "#/111"
      },
      {
        "$ref": "#/112"
      },
      {
        "$ref": "#/113"
      },
      {
        "$ref": "#/114"
      },
      {
        "$ref": "#/115"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AnalyticalStorageConfiguration",
    "properties": {
      "schemaType": {
        "type": {
          "$ref": "#/120"
        },
        "flags": 0,
        "description": "Describes the types of schema for analytical storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "WellDefined"
  },
  {
    "$type": "StringLiteralType",
    "value": "FullFidelity"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/118"
      },
      {
        "$ref": "#/119"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Restore"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/121"
      },
      {
        "$ref": "#/122"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "BackupPolicy",
    "discriminator": "type",
    "baseProperties": {
      "migrationState": {
        "type": {
          "$ref": "#/125"
        },
        "flags": 0,
        "description": "The object representing the state of the migration between the backup policies."
      }
    },
    "elements": {
      "Continuous": {
        "$ref": "#/134"
      },
      "Periodic": {
        "$ref": "#/140"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BackupPolicyMigrationState",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/130"
        },
        "flags": 0,
        "description": "Describes the status of migration between backup policy types."
      },
      "targetType": {
        "type": {
          "$ref": "#/133"
        },
        "flags": 0,
        "description": "Describes the target backup policy type of the backup policy migration."
      },
      "startTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Time at which the backup policy migration started (ISO-8601 format)."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Invalid"
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Completed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/126"
      },
      {
        "$ref": "#/127"
      },
      {
        "$ref": "#/128"
      },
      {
        "$ref": "#/129"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Periodic"
  },
  {
    "$type": "StringLiteralType",
    "value": "Continuous"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/131"
      },
      {
        "$ref": "#/132"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ContinuousModeBackupPolicy",
    "properties": {
      "continuousModeProperties": {
        "type": {
          "$ref": "#/135"
        },
        "flags": 0,
        "description": "Configuration values for continuous mode backup"
      },
      "type": {
        "type": {
          "$ref": "#/139"
        },
        "flags": 1,
        "description": "Describes the mode of backups."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContinuousModeProperties",
    "properties": {
      "tier": {
        "type": {
          "$ref": "#/138"
        },
        "flags": 0,
        "description": "Enum to indicate type of Continuos backup mode"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Continuous7Days"
  },
  {
    "$type": "StringLiteralType",
    "value": "Continuous30Days"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/136"
      },
      {
        "$ref": "#/137"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Continuous"
  },
  {
    "$type": "ObjectType",
    "name": "PeriodicModeBackupPolicy",
    "properties": {
      "periodicModeProperties": {
        "type": {
          "$ref": "#/141"
        },
        "flags": 0,
        "description": "Configuration values for periodic mode backup"
      },
      "type": {
        "type": {
          "$ref": "#/146"
        },
        "flags": 1,
        "description": "Describes the mode of backups."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PeriodicModeProperties",
    "properties": {
      "backupIntervalInMinutes": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 0,
        "description": "An integer representing the interval in minutes between two backups"
      },
      "backupRetentionIntervalInHours": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 0,
        "description": "An integer representing the time (in hours) that each backup is retained"
      },
      "backupStorageRedundancy": {
        "type": {
          "$ref": "#/145"
        },
        "flags": 0,
        "description": "Enum to indicate type of backup residency"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Geo"
  },
  {
    "$type": "StringLiteralType",
    "value": "Local"
  },
  {
    "$type": "StringLiteralType",
    "value": "Zone"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/142"
      },
      {
        "$ref": "#/143"
      },
      {
        "$ref": "#/144"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Periodic"
  },
  {
    "$type": "ObjectType",
    "name": "CorsPolicy",
    "properties": {
      "allowedOrigins": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The origin domains that are permitted to make a request against the service via CORS."
      },
      "allowedMethods": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request."
      },
      "allowedHeaders": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The request headers that the origin domain may specify on the CORS request."
      },
      "exposedHeaders": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer."
      },
      "maxAgeInSeconds": {
        "type": {
          "$ref": "#/90"
        },
        "flags": 0,
        "description": "The maximum amount time that a browser should cache the preflight OPTIONS request."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/147"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureServices"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/149"
      },
      {
        "$ref": "#/150"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnosticLogSettings",
    "properties": {
      "enableFullTextQuery": {
        "type": {
          "$ref": "#/157"
        },
        "flags": 0,
        "description": "Describe the level of detail with which queries are to be logged."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "True"
  },
  {
    "$type": "StringLiteralType",
    "value": "False"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/154"
      },
      {
        "$ref": "#/155"
      },
      {
        "$ref": "#/156"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "RestoreParameters",
    "properties": {
      "restoreMode": {
        "type": {
          "$ref": "#/160"
        },
        "flags": 0,
        "description": "Describes the mode of the restore."
      },
      "databasesToRestore": {
        "type": {
          "$ref": "#/163"
        },
        "flags": 0,
        "description": "List of specific databases available for restore."
      },
      "gremlinDatabasesToRestore": {
        "type": {
          "$ref": "#/166"
        },
        "flags": 0,
        "description": "List of specific gremlin databases available for restore."
      },
      "tablesToRestore": {
        "type": {
          "$ref": "#/167"
        },
        "flags": 0,
        "description": "List of specific tables available for restore."
      },
      "sourceBackupLocation": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The source backup location for restore."
      },
      "restoreSource": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
      },
      "restoreTimestampInUtc": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Time to which the account has to be restored (ISO-8601 format)."
      },
      "restoreWithTtlDisabled": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "PointInTime"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/159"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DatabaseRestoreResource",
    "properties": {
      "databaseName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the database available for restore."
      },
      "collectionNames": {
        "type": {
          "$ref": "#/162"
        },
        "flags": 0,
        "description": "The names of the collections available for restore."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/161"
    }
  },
  {
    "$type": "ObjectType",
    "name": "GremlinDatabaseRestoreResource",
    "properties": {
      "databaseName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the gremlin database available for restore."
      },
      "graphNames": {
        "type": {
          "$ref": "#/165"
        },
        "flags": 0,
        "description": "The names of the graphs available for restore."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/164"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Capacity",
    "properties": {
      "totalThroughputLimit": {
        "type": {
          "$ref": "#/169"
        },
        "flags": 0,
        "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput."
      }
    }
  },
  {
    "$type": "IntegerType",
    "minValue": -1
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioned"
  },
  {
    "$type": "StringLiteralType",
    "value": "Serverless"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/170"
      },
      {
        "$ref": "#/171"
      },
      {
        "$ref": "#/172"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DatabaseAccountKeysMetadata",
    "properties": {
      "primaryMasterKey": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 2,
        "description": "The metadata related to the Primary Read-Write Key for the given Cosmos DB database account."
      },
      "secondaryMasterKey": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 2,
        "description": "The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account."
      },
      "primaryReadonlyMasterKey": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 2,
        "description": "The metadata related to the Primary Read-Only Key for the given Cosmos DB database account."
      },
      "secondaryReadonlyMasterKey": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 2,
        "description": "The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AccountKeyMetadata",
    "properties": {
      "generationTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Tls"
  },
  {
    "$type": "StringLiteralType",
    "value": "Tls11"
  },
  {
    "$type": "StringLiteralType",
    "value": "Tls12"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/176"
      },
      {
        "$ref": "#/177"
      },
      {
        "$ref": "#/178"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "High"
  },
  {
    "$type": "StringLiteralType",
    "value": "Low"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/180"
      },
      {
        "$ref": "#/181"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/92"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/92"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FailoverPolicy",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;."
      },
      "locationName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the region in which the database account exists."
      },
      "failoverPriority": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 0,
        "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/185"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnection",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/188"
        },
        "flags": 0,
        "description": "Resource properties."
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnectionProperties",
    "properties": {
      "privateEndpoint": {
        "type": {
          "$ref": "#/189"
        },
        "flags": 0,
        "description": "Private endpoint which the connection belongs to."
      },
      "privateLinkServiceConnectionState": {
        "type": {
          "$ref": "#/190"
        },
        "flags": 0,
        "description": "Connection State of the Private Endpoint Connection."
      },
      "groupId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Group id of the private endpoint."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Provisioning state of the private endpoint."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointProperty",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Resource id of the private endpoint."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateLinkServiceConnectionStateProperty",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The private link service connection status."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The private link service connection description."
      },
      "actionsRequired": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/187"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CapacityModeChangeTransitionState",
    "properties": {
      "capacityModeTransitionStatus": {
        "type": {
          "$ref": "#/198"
        },
        "flags": 0,
        "description": "The transition status of capacity mode."
      },
      "currentCapacityMode": {
        "type": {
          "$ref": "#/202"
        },
        "flags": 0,
        "description": "Indicates the current capacity mode of the account."
      },
      "previousCapacityMode": {
        "type": {
          "$ref": "#/206"
        },
        "flags": 0,
        "description": "Indicates the previous capacity mode of the account before successful transition."
      },
      "capacityModeTransitionBeginTimestamp": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Begin time in UTC of the capacity mode change."
      },
      "capacityModeTransitionEndTimestamp": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "End time in UTC of the capacity mode change."
      },
      "capacityModeLastSuccessfulTransitionEndTimestamp": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "End time in UTC of the last successful capacity mode change."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Invalid"
  },
  {
    "$type": "StringLiteralType",
    "value": "Initialized"
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Completed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/193"
      },
      {
        "$ref": "#/194"
      },
      {
        "$ref": "#/195"
      },
      {
        "$ref": "#/196"
      },
      {
        "$ref": "#/197"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioned"
  },
  {
    "$type": "StringLiteralType",
    "value": "Serverless"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/199"
      },
      {
        "$ref": "#/200"
      },
      {
        "$ref": "#/201"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioned"
  },
  {
    "$type": "StringLiteralType",
    "value": "Serverless"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/203"
      },
      {
        "$ref": "#/204"
      },
      {
        "$ref": "#/205"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedServiceIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "tenantId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "type": {
        "type": {
          "$ref": "#/213"
        },
        "flags": 0,
        "description": "The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service."
      },
      "userAssignedIdentities": {
        "type": {
          "$ref": "#/215"
        },
        "flags": 0,
        "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned,UserAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/209"
      },
      {
        "$ref": "#/210"
      },
      {
        "$ref": "#/211"
      },
      {
        "$ref": "#/212"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The principal id of user assigned identity."
      },
      "clientId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The client id of user assigned identity."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedServiceIdentityUserAssignedIdentities",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/214"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/77"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/graphs"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/graphs",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/217"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/218"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/220"
        },
        "flags": 1,
        "description": "Properties to create and update Azure Cosmos DB Graph resource."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/224"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GraphResourceCreateUpdatePropertiesOrGraphResourceGetProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/221"
        },
        "flags": 1,
        "description": "The standard JSON format of a Graph resource"
      },
      "options": {
        "type": {
          "$ref": "#/222"
        },
        "flags": 0,
        "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GraphResourceOrGraphResourceGetPropertiesResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the Cosmos DB Graph"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CreateUpdateOptionsOrGraphResourceGetPropertiesOptions",
    "properties": {
      "throughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Request Units per second. For example, \"throughput\": 10000."
      },
      "autoscaleSettings": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 0,
        "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoscaleSettings",
    "properties": {
      "maxThroughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Represents maximum throughput, the resource can scale up to."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/graphs@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/219"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/226"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/227"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/229"
        },
        "flags": 1,
        "description": "Properties to create and update Azure Cosmos DB SQL database."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/236"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SqlDatabaseCreateUpdatePropertiesOrSqlDatabaseGetProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/230"
        },
        "flags": 1,
        "description": "The standard JSON format of a SQL database"
      },
      "options": {
        "type": {
          "$ref": "#/235"
        },
        "flags": 0,
        "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SqlDatabaseResourceOrSqlDatabaseGetPropertiesResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the Cosmos DB SQL database"
      },
      "restoreParameters": {
        "type": {
          "$ref": "#/231"
        },
        "flags": 0,
        "description": "Parameters to indicate the information about the restore"
      },
      "createMode": {
        "type": {
          "$ref": "#/234"
        },
        "flags": 0,
        "description": "Enum to indicate the mode of resource creation."
      },
      "_colls": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property that specified the addressable path of the collections resource."
      },
      "_users": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property that specifies the addressable path of the users resource."
      },
      "_rid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property. A unique identifier."
      },
      "_ts": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "A system generated property that denotes the last updated timestamp of the resource."
      },
      "_etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property representing the resource etag required for optimistic concurrency control."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceRestoreParameters",
    "properties": {
      "restoreSource": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
      },
      "restoreTimestampInUtc": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Time to which the account has to be restored (ISO-8601 format)."
      },
      "restoreWithTtlDisabled": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Restore"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/232"
      },
      {
        "$ref": "#/233"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CreateUpdateOptionsOrSqlDatabaseGetPropertiesOptions",
    "properties": {
      "throughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Request Units per second. For example, \"throughput\": 10000."
      },
      "autoscaleSettings": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 0,
        "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/228"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/238"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/239"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/240"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/242"
        },
        "flags": 1,
        "description": "Properties to update Azure Cosmos DB resource throughput."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/249"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ThroughputSettingsUpdatePropertiesOrThroughputSettingsGetProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/243"
        },
        "flags": 1,
        "description": "The standard JSON format of a resource throughput"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ThroughputSettingsResourceOrThroughputSettingsGetPropertiesResource",
    "properties": {
      "throughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
      },
      "autoscaleSettings": {
        "type": {
          "$ref": "#/244"
        },
        "flags": 0,
        "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both."
      },
      "minimumThroughput": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The minimum throughput of the resource"
      },
      "offerReplacePending": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The throughput replace is pending"
      },
      "instantMaximumThroughput": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The offer throughput value to instantly scale up without triggering splits"
      },
      "softAllowedMaximumThroughput": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified"
      },
      "throughputBuckets": {
        "type": {
          "$ref": "#/248"
        },
        "flags": 0,
        "description": "Array of Throughput Bucket limits to be applied to the Cosmos DB container"
      },
      "_rid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property. A unique identifier."
      },
      "_ts": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "A system generated property that denotes the last updated timestamp of the resource."
      },
      "_etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property representing the resource etag required for optimistic concurrency control."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoscaleSettingsResource",
    "properties": {
      "maxThroughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 1,
        "description": "Represents maximum throughput container can scale up to."
      },
      "autoUpgradePolicy": {
        "type": {
          "$ref": "#/245"
        },
        "flags": 0,
        "description": "Cosmos DB resource auto-upgrade policy"
      },
      "targetMaxThroughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoUpgradePolicyResource",
    "properties": {
      "throughputPolicy": {
        "type": {
          "$ref": "#/246"
        },
        "flags": 0,
        "description": "Represents throughput policy which service must adhere to for auto-upgrade"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ThroughputPolicyResource",
    "properties": {
      "isEnabled": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Determines whether the ThroughputPolicy is active or not"
      },
      "incrementPercent": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ThroughputBucketResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 1,
        "description": "Represents the throughput bucket id"
      },
      "maxThroughputPercentage": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 1,
        "description": "Represents maximum percentage throughput that can be used by the bucket"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/247"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/241"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/clientEncryptionKeys"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/clientEncryptionKeys",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/251"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/252"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/254"
        },
        "flags": 1,
        "description": "Properties to create and update ClientEncryptionKey."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClientEncryptionKeyCreateUpdatePropertiesOrClientEncryptionKeyGetProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/255"
        },
        "flags": 1,
        "description": "The standard JSON format of a ClientEncryptionKey"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClientEncryptionKeyResourceOrClientEncryptionKeyGetPropertiesResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the ClientEncryptionKey"
      },
      "encryptionAlgorithm": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
      },
      "wrappedDataEncryptionKey": {
        "type": {
          "$ref": "#/256"
        },
        "flags": 0,
        "description": "Wrapped (encrypted) form of the key represented as a byte array."
      },
      "keyWrapMetadata": {
        "type": {
          "$ref": "#/257"
        },
        "flags": 0,
        "description": "Metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key."
      },
      "_rid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property. A unique identifier."
      },
      "_ts": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "A system generated property that denotes the last updated timestamp of the resource."
      },
      "_etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property representing the resource etag required for optimistic concurrency control."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ObjectType",
    "name": "KeyWrapMetadata",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of associated KeyEncryptionKey (aka CustomerManagedKey)."
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ProviderName of KeyStoreProvider."
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Reference / link to the KeyEncryptionKey."
      },
      "algorithm": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Algorithm used in wrapping and unwrapping of the data encryption key."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/clientEncryptionKeys@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/253"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/259"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/260"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/262"
        },
        "flags": 1,
        "description": "Properties to create and update Azure Cosmos DB container."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/347"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SqlContainerCreateUpdatePropertiesOrSqlContainerGetProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/263"
        },
        "flags": 1,
        "description": "The standard JSON format of a container"
      },
      "options": {
        "type": {
          "$ref": "#/346"
        },
        "flags": 0,
        "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SqlContainerResourceOrSqlContainerGetPropertiesResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the Cosmos DB SQL container"
      },
      "indexingPolicy": {
        "type": {
          "$ref": "#/264"
        },
        "flags": 0,
        "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container"
      },
      "partitionKey": {
        "type": {
          "$ref": "#/306"
        },
        "flags": 0,
        "description": "The configuration of the partition key to be used for partitioning data into multiple partitions"
      },
      "defaultTtl": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Default time to live"
      },
      "uniqueKeyPolicy": {
        "type": {
          "$ref": "#/313"
        },
        "flags": 0,
        "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service."
      },
      "conflictResolutionPolicy": {
        "type": {
          "$ref": "#/317"
        },
        "flags": 0,
        "description": "The conflict resolution policy for the container."
      },
      "clientEncryptionPolicy": {
        "type": {
          "$ref": "#/321"
        },
        "flags": 0,
        "description": "The client encryption policy for the container."
      },
      "analyticalStorageTtl": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Analytical TTL."
      },
      "restoreParameters": {
        "type": {
          "$ref": "#/231"
        },
        "flags": 0,
        "description": "Parameters to indicate the information about the restore"
      },
      "createMode": {
        "type": {
          "$ref": "#/326"
        },
        "flags": 0,
        "description": "Enum to indicate the mode of resource creation."
      },
      "materializedViewDefinition": {
        "type": {
          "$ref": "#/327"
        },
        "flags": 0,
        "description": "The configuration for defining Materialized Views. This must be specified only for creating a Materialized View container."
      },
      "materializedViews": {
        "type": {
          "$ref": "#/329"
        },
        "flags": 0,
        "description": "Materialized Views defined on the container."
      },
      "computedProperties": {
        "type": {
          "$ref": "#/331"
        },
        "flags": 0,
        "description": "List of computed properties"
      },
      "vectorEmbeddingPolicy": {
        "type": {
          "$ref": "#/332"
        },
        "flags": 0,
        "description": "The vector embedding policy for the container."
      },
      "fullTextPolicy": {
        "type": {
          "$ref": "#/343"
        },
        "flags": 0,
        "description": "The FullText policy for the container."
      },
      "_rid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property. A unique identifier."
      },
      "_ts": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "A system generated property that denotes the last updated timestamp of the resource."
      },
      "_etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property representing the resource etag required for optimistic concurrency control."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IndexingPolicy",
    "properties": {
      "automatic": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Indicates if the indexing policy is automatic"
      },
      "indexingMode": {
        "type": {
          "$ref": "#/268"
        },
        "flags": 0,
        "description": "Indicates the indexing mode."
      },
      "includedPaths": {
        "type": {
          "$ref": "#/283"
        },
        "flags": 0,
        "description": "List of paths to include in the indexing"
      },
      "excludedPaths": {
        "type": {
          "$ref": "#/285"
        },
        "flags": 0,
        "description": "List of paths to exclude from indexing"
      },
      "compositeIndexes": {
        "type": {
          "$ref": "#/291"
        },
        "flags": 0,
        "description": "List of composite path list"
      },
      "spatialIndexes": {
        "type": {
          "$ref": "#/299"
        },
        "flags": 0,
        "description": "List of spatial specifics"
      },
      "vectorIndexes": {
        "type": {
          "$ref": "#/305"
        },
        "flags": 0,
        "description": "List of paths to include in the vector indexing"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "consistent"
  },
  {
    "$type": "StringLiteralType",
    "value": "lazy"
  },
  {
    "$type": "StringLiteralType",
    "value": "none"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/265"
      },
      {
        "$ref": "#/266"
      },
      {
        "$ref": "#/267"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "IncludedPath",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
      },
      "indexes": {
        "type": {
          "$ref": "#/282"
        },
        "flags": 0,
        "description": "List of indexes for this path"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Indexes",
    "properties": {
      "dataType": {
        "type": {
          "$ref": "#/277"
        },
        "flags": 0,
        "description": "The datatype for which the indexing behavior is applied to."
      },
      "precision": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "The precision of the index. -1 is maximum precision."
      },
      "kind": {
        "type": {
          "$ref": "#/281"
        },
        "flags": 0,
        "description": "Indicates the type of index."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "String"
  },
  {
    "$type": "StringLiteralType",
    "value": "Number"
  },
  {
    "$type": "StringLiteralType",
    "value": "Point"
  },
  {
    "$type": "StringLiteralType",
    "value": "Polygon"
  },
  {
    "$type": "StringLiteralType",
    "value": "LineString"
  },
  {
    "$type": "StringLiteralType",
    "value": "MultiPolygon"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/271"
      },
      {
        "$ref": "#/272"
      },
      {
        "$ref": "#/273"
      },
      {
        "$ref": "#/274"
      },
      {
        "$ref": "#/275"
      },
      {
        "$ref": "#/276"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Hash"
  },
  {
    "$type": "StringLiteralType",
    "value": "Range"
  },
  {
    "$type": "StringLiteralType",
    "value": "Spatial"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/278"
      },
      {
        "$ref": "#/279"
      },
      {
        "$ref": "#/280"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/270"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/269"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ExcludedPath",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/284"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CompositePath",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
      },
      "order": {
        "type": {
          "$ref": "#/289"
        },
        "flags": 0,
        "description": "Sort order for composite paths."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ascending"
  },
  {
    "$type": "StringLiteralType",
    "value": "descending"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/287"
      },
      {
        "$ref": "#/288"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/286"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/290"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SpatialSpec",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
      },
      "types": {
        "type": {
          "$ref": "#/298"
        },
        "flags": 0,
        "description": "List of path's spatial type"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Point"
  },
  {
    "$type": "StringLiteralType",
    "value": "LineString"
  },
  {
    "$type": "StringLiteralType",
    "value": "Polygon"
  },
  {
    "$type": "StringLiteralType",
    "value": "MultiPolygon"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/293"
      },
      {
        "$ref": "#/294"
      },
      {
        "$ref": "#/295"
      },
      {
        "$ref": "#/296"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/297"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/292"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VectorIndex",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The path to the vector field in the document."
      },
      "type": {
        "type": {
          "$ref": "#/304"
        },
        "flags": 1,
        "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "flat"
  },
  {
    "$type": "StringLiteralType",
    "value": "diskANN"
  },
  {
    "$type": "StringLiteralType",
    "value": "quantizedFlat"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/301"
      },
      {
        "$ref": "#/302"
      },
      {
        "$ref": "#/303"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/300"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerPartitionKey",
    "properties": {
      "paths": {
        "type": {
          "$ref": "#/307"
        },
        "flags": 0,
        "description": "List of paths using which data within the container can be partitioned"
      },
      "kind": {
        "type": {
          "$ref": "#/311"
        },
        "flags": 0,
        "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create"
      },
      "version": {
        "type": {
          "$ref": "#/312"
        },
        "flags": 0,
        "description": "Indicates the version of the partition key definition"
      },
      "systemKey": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 2,
        "description": "Indicates if the container is using a system generated partition key"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Hash"
  },
  {
    "$type": "StringLiteralType",
    "value": "Range"
  },
  {
    "$type": "StringLiteralType",
    "value": "MultiHash"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/308"
      },
      {
        "$ref": "#/309"
      },
      {
        "$ref": "#/310"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 2
  },
  {
    "$type": "ObjectType",
    "name": "UniqueKeyPolicy",
    "properties": {
      "uniqueKeys": {
        "type": {
          "$ref": "#/316"
        },
        "flags": 0,
        "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UniqueKey",
    "properties": {
      "paths": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 0,
        "description": "List of paths must be unique for each document in the Azure Cosmos DB service"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/314"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ConflictResolutionPolicy",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/320"
        },
        "flags": 0,
        "description": "Indicates the conflict resolution mode."
      },
      "conflictResolutionPath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The conflict resolution path in the case of LastWriterWins mode."
      },
      "conflictResolutionProcedure": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The procedure to resolve conflicts in the case of custom mode."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "LastWriterWins"
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/318"
      },
      {
        "$ref": "#/319"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ClientEncryptionPolicy",
    "properties": {
      "includedPaths": {
        "type": {
          "$ref": "#/323"
        },
        "flags": 1,
        "description": "Paths of the item that need encryption along with path-specific settings."
      },
      "policyFormatVersion": {
        "type": {
          "$ref": "#/312"
        },
        "flags": 1,
        "description": "Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClientEncryptionIncludedPath",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Path that needs to be encrypted."
      },
      "clientEncryptionKeyId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The identifier of the Client Encryption Key to be used to encrypt the path."
      },
      "encryptionType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The type of encryption to be performed. Eg - Deterministic, Randomized."
      },
      "encryptionAlgorithm": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/322"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Restore"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/324"
      },
      {
        "$ref": "#/325"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "MaterializedViewDefinition",
    "properties": {
      "sourceCollectionRid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "An unique identifier for the source collection. This is a system generated property."
      },
      "sourceCollectionId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the source container on which the Materialized View will be created."
      },
      "definition": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The definition should be an SQL query which would be used to fetch data from the source container to populate into the Materialized View container."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MaterializedViewDetails",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Id field of Materialized container."
      },
      "_rid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "_rid field of Materialized container."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/328"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputedProperty",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of a computed property, for example - \"cp_lowerName\""
      },
      "query": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The query that evaluates the value for computed property, for example - \"SELECT VALUE LOWER(c.name) FROM c\""
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/330"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VectorEmbeddingPolicy",
    "properties": {
      "vectorEmbeddings": {
        "type": {
          "$ref": "#/342"
        },
        "flags": 0,
        "description": "List of vector embeddings"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VectorEmbedding",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The path to the vector field in the document."
      },
      "dataType": {
        "type": {
          "$ref": "#/337"
        },
        "flags": 1,
        "description": "Indicates the data type of vector."
      },
      "distanceFunction": {
        "type": {
          "$ref": "#/341"
        },
        "flags": 1,
        "description": "The distance function to use for distance calculation in between vectors."
      },
      "dimensions": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 1,
        "description": "The number of dimensions in the vector."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "float32"
  },
  {
    "$type": "StringLiteralType",
    "value": "uint8"
  },
  {
    "$type": "StringLiteralType",
    "value": "int8"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/334"
      },
      {
        "$ref": "#/335"
      },
      {
        "$ref": "#/336"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "euclidean"
  },
  {
    "$type": "StringLiteralType",
    "value": "cosine"
  },
  {
    "$type": "StringLiteralType",
    "value": "dotproduct"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/338"
      },
      {
        "$ref": "#/339"
      },
      {
        "$ref": "#/340"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/333"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FullTextPolicy",
    "properties": {
      "defaultLanguage": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The default language for a full text paths."
      },
      "fullTextPaths": {
        "type": {
          "$ref": "#/345"
        },
        "flags": 0,
        "description": "List of FullText Paths"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FullTextPath",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The path to the full text field in the document."
      },
      "language": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The language of the full text field in the document."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/344"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CreateUpdateOptionsOrSqlContainerGetPropertiesOptions",
    "properties": {
      "throughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Request Units per second. For example, \"throughput\": 10000."
      },
      "autoscaleSettings": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 0,
        "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/261"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/349"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/350"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/351"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/242"
        },
        "flags": 1,
        "description": "Properties to update Azure Cosmos DB resource throughput."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/353"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/352"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/storedProcedures"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/storedProcedures",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/355"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/356"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/358"
        },
        "flags": 1,
        "description": "Properties to create and update Azure Cosmos DB storedProcedure."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/361"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SqlStoredProcedureCreateUpdatePropertiesOrSqlStoredProcedureGetProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/359"
        },
        "flags": 1,
        "description": "The standard JSON format of a storedProcedure"
      },
      "options": {
        "type": {
          "$ref": "#/360"
        },
        "flags": 4,
        "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SqlStoredProcedureResourceOrSqlStoredProcedureGetPropertiesResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the Cosmos DB SQL storedProcedure"
      },
      "body": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Body of the Stored Procedure"
      },
      "_rid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property. A unique identifier."
      },
      "_ts": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "A system generated property that denotes the last updated timestamp of the resource."
      },
      "_etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property representing the resource etag required for optimistic concurrency control."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CreateUpdateOptions",
    "properties": {
      "throughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Request Units per second. For example, \"throughput\": 10000."
      },
      "autoscaleSettings": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 0,
        "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/storedProcedures@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/357"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/userDefinedFunctions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/userDefinedFunctions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/363"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/366"
        },
        "flags": 1,
        "description": "Properties to create and update Azure Cosmos DB userDefinedFunction."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/368"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SqlUserDefinedFunctionCreateUpdatePropertiesOrSqlUserDefinedFunctionGetProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/367"
        },
        "flags": 1,
        "description": "The standard JSON format of a userDefinedFunction"
      },
      "options": {
        "type": {
          "$ref": "#/360"
        },
        "flags": 4,
        "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SqlUserDefinedFunctionResourceOrSqlUserDefinedFunctionGetPropertiesResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the Cosmos DB SQL userDefinedFunction"
      },
      "body": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Body of the User Defined Function"
      },
      "_rid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property. A unique identifier."
      },
      "_ts": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "A system generated property that denotes the last updated timestamp of the resource."
      },
      "_etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property representing the resource etag required for optimistic concurrency control."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/userDefinedFunctions@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/365"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/triggers"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/triggers",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/370"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/371"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/373"
        },
        "flags": 1,
        "description": "Properties to create and update Azure Cosmos DB trigger."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/384"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SqlTriggerCreateUpdatePropertiesOrSqlTriggerGetProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/374"
        },
        "flags": 1,
        "description": "The standard JSON format of a trigger"
      },
      "options": {
        "type": {
          "$ref": "#/360"
        },
        "flags": 4,
        "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SqlTriggerResourceOrSqlTriggerGetPropertiesResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the Cosmos DB SQL trigger"
      },
      "body": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Body of the Trigger"
      },
      "triggerType": {
        "type": {
          "$ref": "#/377"
        },
        "flags": 0,
        "description": "Type of the Trigger"
      },
      "triggerOperation": {
        "type": {
          "$ref": "#/383"
        },
        "flags": 0,
        "description": "The operation the trigger is associated with"
      },
      "_rid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property. A unique identifier."
      },
      "_ts": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "A system generated property that denotes the last updated timestamp of the resource."
      },
      "_etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property representing the resource etag required for optimistic concurrency control."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Pre"
  },
  {
    "$type": "StringLiteralType",
    "value": "Post"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/375"
      },
      {
        "$ref": "#/376"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "All"
  },
  {
    "$type": "StringLiteralType",
    "value": "Create"
  },
  {
    "$type": "StringLiteralType",
    "value": "Update"
  },
  {
    "$type": "StringLiteralType",
    "value": "Delete"
  },
  {
    "$type": "StringLiteralType",
    "value": "Replace"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/378"
      },
      {
        "$ref": "#/379"
      },
      {
        "$ref": "#/380"
      },
      {
        "$ref": "#/381"
      },
      {
        "$ref": "#/382"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/triggers@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/372"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/386"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/387"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/389"
        },
        "flags": 0,
        "description": "Properties to create and update an Azure Cosmos DB SQL Role Definition."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SqlRoleDefinitionResource",
    "properties": {
      "roleName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
      },
      "type": {
        "type": {
          "$ref": "#/392"
        },
        "flags": 0,
        "description": "Indicates whether the Role Definition was built-in or user created."
      },
      "assignableScopes": {
        "type": {
          "$ref": "#/393"
        },
        "flags": 0,
        "description": "A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist."
      },
      "permissions": {
        "type": {
          "$ref": "#/397"
        },
        "flags": 0,
        "description": "The set of operations allowed through this Role Definition."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "BuiltInRole"
  },
  {
    "$type": "StringLiteralType",
    "value": "CustomRole"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/390"
      },
      {
        "$ref": "#/391"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Permission",
    "properties": {
      "dataActions": {
        "type": {
          "$ref": "#/395"
        },
        "flags": 0,
        "description": "An array of data actions that are allowed."
      },
      "notDataActions": {
        "type": {
          "$ref": "#/396"
        },
        "flags": 0,
        "description": "An array of data actions that are denied."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/394"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/388"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/399"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/400"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/402"
        },
        "flags": 0,
        "description": "Properties to create and update an Azure Cosmos DB SQL Role Assignment."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SqlRoleAssignmentResource",
    "properties": {
      "roleDefinitionId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The unique identifier for the associated Role Definition."
      },
      "scope": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The data plane resource path for which access is being granted through this Role Assignment."
      },
      "principalId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/401"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/404"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/405"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/407"
        },
        "flags": 1,
        "description": "Properties to create and update Azure Cosmos DB MongoDB database."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/413"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MongoDBDatabaseCreateUpdatePropertiesOrMongoDBDatabaseGetProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/408"
        },
        "flags": 1,
        "description": "The standard JSON format of a MongoDB database"
      },
      "options": {
        "type": {
          "$ref": "#/412"
        },
        "flags": 0,
        "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MongoDBDatabaseResourceOrMongoDBDatabaseGetPropertiesResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the Cosmos DB MongoDB database"
      },
      "restoreParameters": {
        "type": {
          "$ref": "#/231"
        },
        "flags": 0,
        "description": "Parameters to indicate the information about the restore"
      },
      "createMode": {
        "type": {
          "$ref": "#/411"
        },
        "flags": 0,
        "description": "Enum to indicate the mode of resource creation."
      },
      "_rid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property. A unique identifier."
      },
      "_ts": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "A system generated property that denotes the last updated timestamp of the resource."
      },
      "_etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property representing the resource etag required for optimistic concurrency control."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Restore"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/409"
      },
      {
        "$ref": "#/410"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CreateUpdateOptionsOrMongoDBDatabaseGetPropertiesOptions",
    "properties": {
      "throughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Request Units per second. For example, \"throughput\": 10000."
      },
      "autoscaleSettings": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 0,
        "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/406"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/415"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/416"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/417"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/242"
        },
        "flags": 1,
        "description": "Properties to update Azure Cosmos DB resource throughput."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/419"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/418"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/421"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/422"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/424"
        },
        "flags": 1,
        "description": "Properties to create and update Azure Cosmos DB MongoDB collection."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/436"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MongoDBCollectionCreateUpdatePropertiesOrMongoDBCollectionGetProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/425"
        },
        "flags": 1,
        "description": "The standard JSON format of a MongoDB collection"
      },
      "options": {
        "type": {
          "$ref": "#/435"
        },
        "flags": 0,
        "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MongoDBCollectionResourceOrMongoDBCollectionGetPropertiesResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the Cosmos DB MongoDB collection"
      },
      "shardKey": {
        "type": {
          "$ref": "#/426"
        },
        "flags": 0,
        "description": "A key-value pair of shard keys to be applied for the request."
      },
      "indexes": {
        "type": {
          "$ref": "#/431"
        },
        "flags": 0,
        "description": "List of index keys"
      },
      "analyticalStorageTtl": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Analytical TTL."
      },
      "restoreParameters": {
        "type": {
          "$ref": "#/231"
        },
        "flags": 0,
        "description": "Parameters to indicate the information about the restore"
      },
      "createMode": {
        "type": {
          "$ref": "#/434"
        },
        "flags": 0,
        "description": "Enum to indicate the mode of resource creation."
      },
      "_rid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property. A unique identifier."
      },
      "_ts": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "A system generated property that denotes the last updated timestamp of the resource."
      },
      "_etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property representing the resource etag required for optimistic concurrency control."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ShardKeys",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "MongoIndex",
    "properties": {
      "key": {
        "type": {
          "$ref": "#/428"
        },
        "flags": 0,
        "description": "Cosmos DB MongoDB collection index keys"
      },
      "options": {
        "type": {
          "$ref": "#/430"
        },
        "flags": 0,
        "description": "Cosmos DB MongoDB collection index key options"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MongoIndexKeys",
    "properties": {
      "keys": {
        "type": {
          "$ref": "#/429"
        },
        "flags": 0,
        "description": "List of keys for each MongoDB collection in the Azure Cosmos DB service"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "MongoIndexOptions",
    "properties": {
      "expireAfterSeconds": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Expire after seconds"
      },
      "unique": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Is unique or not"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/427"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Restore"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/432"
      },
      {
        "$ref": "#/433"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CreateUpdateOptionsOrMongoDBCollectionGetPropertiesOptions",
    "properties": {
      "throughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Request Units per second. For example, \"throughput\": 10000."
      },
      "autoscaleSettings": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 0,
        "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/423"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/438"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/439"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/440"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/242"
        },
        "flags": 1,
        "description": "Properties to update Azure Cosmos DB resource throughput."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/442"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/441"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/mongodbRoleDefinitions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/mongodbRoleDefinitions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/444"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/445"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/447"
        },
        "flags": 0,
        "description": "Properties to create and update an Azure Cosmos DB Mongo Role Definition."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MongoRoleDefinitionResource",
    "properties": {
      "roleName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
      },
      "type": {
        "type": {
          "$ref": "#/450"
        },
        "flags": 0,
        "description": "Indicates whether the Role Definition was built-in or user created."
      },
      "databaseName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The database name for which access is being granted for this Role Definition."
      },
      "privileges": {
        "type": {
          "$ref": "#/454"
        },
        "flags": 0,
        "description": "A set of privileges contained by the Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Scopes higher than Database are not enforceable as privilege."
      },
      "roles": {
        "type": {
          "$ref": "#/456"
        },
        "flags": 0,
        "description": "The set of roles inherited by this Role Definition."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "BuiltInRole"
  },
  {
    "$type": "StringLiteralType",
    "value": "CustomRole"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/448"
      },
      {
        "$ref": "#/449"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Privilege",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/452"
        },
        "flags": 0,
        "description": "An Azure Cosmos DB Mongo DB Resource."
      },
      "actions": {
        "type": {
          "$ref": "#/453"
        },
        "flags": 0,
        "description": "An array of actions that are allowed."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivilegeResource",
    "properties": {
      "db": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The database name the role is applied."
      },
      "collection": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The collection name the role is applied."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/451"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Role",
    "properties": {
      "db": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The database name the role is applied."
      },
      "role": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The role name."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/455"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/mongodbRoleDefinitions@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/446"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/mongodbUserDefinitions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/mongodbUserDefinitions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/458"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/459"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/461"
        },
        "flags": 0,
        "description": "Properties to create and update an Azure Cosmos DB Mongo User Definition."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MongoUserDefinitionResource",
    "properties": {
      "userName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The user name for User Definition."
      },
      "password": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The password for User Definition. Response does not contain user password."
      },
      "databaseName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The database name for which access is being granted for this User Definition."
      },
      "customData": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A custom definition for the USer Definition."
      },
      "roles": {
        "type": {
          "$ref": "#/462"
        },
        "flags": 0,
        "description": "The set of roles inherited by the User Definition."
      },
      "mechanisms": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Mongo Auth mechanism. For now, we only support auth mechanism SCRAM-SHA-256."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/455"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/mongodbUserDefinitions@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/460"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/tables"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/tables",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/464"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/465"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/467"
        },
        "flags": 1,
        "description": "Properties to create and update Azure Cosmos DB Table."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/473"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TableCreateUpdatePropertiesOrTableGetProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/468"
        },
        "flags": 1,
        "description": "The standard JSON format of a Table"
      },
      "options": {
        "type": {
          "$ref": "#/472"
        },
        "flags": 0,
        "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TableResourceOrTableGetPropertiesResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the Cosmos DB table"
      },
      "restoreParameters": {
        "type": {
          "$ref": "#/231"
        },
        "flags": 0,
        "description": "Parameters to indicate the information about the restore"
      },
      "createMode": {
        "type": {
          "$ref": "#/471"
        },
        "flags": 0,
        "description": "Enum to indicate the mode of resource creation."
      },
      "_rid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property. A unique identifier."
      },
      "_ts": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "A system generated property that denotes the last updated timestamp of the resource."
      },
      "_etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property representing the resource etag required for optimistic concurrency control."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Restore"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/469"
      },
      {
        "$ref": "#/470"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CreateUpdateOptionsOrTableGetPropertiesOptions",
    "properties": {
      "throughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Request Units per second. For example, \"throughput\": 10000."
      },
      "autoscaleSettings": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 0,
        "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/tables@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/466"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/tables/throughputSettings"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/tables/throughputSettings",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/475"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/476"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/477"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/242"
        },
        "flags": 1,
        "description": "Properties to update Azure Cosmos DB resource throughput."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/479"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/tables/throughputSettings@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/478"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/tableRoleDefinitions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/tableRoleDefinitions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/481"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/482"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/484"
        },
        "flags": 0,
        "description": "Properties to create and update an Azure Cosmos DB Table Role Definition."
      },
      "systemData": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TableRoleDefinitionResourceProperties",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The path id for the Role Definition."
      },
      "roleName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
      },
      "type": {
        "type": {
          "$ref": "#/487"
        },
        "flags": 0,
        "description": "Indicates whether the Role Definition was built-in or user created."
      },
      "assignableScopes": {
        "type": {
          "$ref": "#/488"
        },
        "flags": 0,
        "description": "A set of fully qualified Scopes at or below which Table Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist."
      },
      "permissions": {
        "type": {
          "$ref": "#/492"
        },
        "flags": 0,
        "description": "The set of operations allowed through this Role Definition."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "BuiltInRole"
  },
  {
    "$type": "StringLiteralType",
    "value": "CustomRole"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/485"
      },
      {
        "$ref": "#/486"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PermissionAutoGenerated",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The id for the permission."
      },
      "dataActions": {
        "type": {
          "$ref": "#/490"
        },
        "flags": 0,
        "description": "An array of data actions that are allowed."
      },
      "notDataActions": {
        "type": {
          "$ref": "#/491"
        },
        "flags": 0,
        "description": "An array of data actions that are denied."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/489"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/tableRoleDefinitions@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/483"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/tableRoleAssignments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/tableRoleAssignments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/494"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/495"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/497"
        },
        "flags": 0,
        "description": "Properties to create and update an Azure Cosmos DB Table Role Assignment."
      },
      "systemData": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TableRoleAssignmentResourceProperties",
    "properties": {
      "roleDefinitionId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The unique identifier for the associated Role Definition."
      },
      "scope": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The data plane resource path for which access is being granted through this Table Role Assignment."
      },
      "principalId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Table Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Provisioning state of the resource."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/tableRoleAssignments@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/496"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/499"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/500"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/502"
        },
        "flags": 1,
        "description": "Properties to create and update Azure Cosmos DB Cassandra keyspace."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/505"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CassandraKeyspaceCreateUpdatePropertiesOrCassandraKeyspaceGetProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/503"
        },
        "flags": 1,
        "description": "The standard JSON format of a Cassandra keyspace"
      },
      "options": {
        "type": {
          "$ref": "#/504"
        },
        "flags": 0,
        "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CassandraKeyspaceResourceOrCassandraKeyspaceGetPropertiesResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the Cosmos DB Cassandra keyspace"
      },
      "_rid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property. A unique identifier."
      },
      "_ts": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "A system generated property that denotes the last updated timestamp of the resource."
      },
      "_etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property representing the resource etag required for optimistic concurrency control."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CreateUpdateOptionsOrCassandraKeyspaceGetPropertiesOptions",
    "properties": {
      "throughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Request Units per second. For example, \"throughput\": 10000."
      },
      "autoscaleSettings": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 0,
        "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/501"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/throughputSettings"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/throughputSettings",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/507"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/508"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/509"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/242"
        },
        "flags": 1,
        "description": "Properties to update Azure Cosmos DB resource throughput."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/511"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/throughputSettings@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/510"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/513"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/514"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/516"
        },
        "flags": 1,
        "description": "Properties to create and update Azure Cosmos DB Cassandra table."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/526"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CassandraTableCreateUpdatePropertiesOrCassandraTableGetProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/517"
        },
        "flags": 1,
        "description": "The standard JSON format of a Cassandra table"
      },
      "options": {
        "type": {
          "$ref": "#/525"
        },
        "flags": 0,
        "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CassandraTableResourceOrCassandraTableGetPropertiesResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the Cosmos DB Cassandra table"
      },
      "defaultTtl": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Time to live of the Cosmos DB Cassandra table"
      },
      "schema": {
        "type": {
          "$ref": "#/518"
        },
        "flags": 0,
        "description": "Schema of the Cosmos DB Cassandra table"
      },
      "analyticalStorageTtl": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Analytical TTL."
      },
      "_rid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property. A unique identifier."
      },
      "_ts": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "A system generated property that denotes the last updated timestamp of the resource."
      },
      "_etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property representing the resource etag required for optimistic concurrency control."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CassandraSchema",
    "properties": {
      "columns": {
        "type": {
          "$ref": "#/520"
        },
        "flags": 0,
        "description": "List of Cassandra table columns."
      },
      "partitionKeys": {
        "type": {
          "$ref": "#/522"
        },
        "flags": 0,
        "description": "List of partition key."
      },
      "clusterKeys": {
        "type": {
          "$ref": "#/524"
        },
        "flags": 0,
        "description": "List of cluster key."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Column",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the Cosmos DB Cassandra table column"
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Type of the Cosmos DB Cassandra table column"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/519"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CassandraPartitionKey",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the Cosmos DB Cassandra table partition key"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/521"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterKey",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the Cosmos DB Cassandra table cluster key"
      },
      "orderBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Order of the Cosmos DB Cassandra table cluster key, only support \"Asc\" and \"Desc\""
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/523"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CreateUpdateOptionsOrCassandraTableGetPropertiesOptions",
    "properties": {
      "throughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Request Units per second. For example, \"throughput\": 10000."
      },
      "autoscaleSettings": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 0,
        "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/515"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/throughputSettings"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/throughputSettings",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/528"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/529"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/530"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/242"
        },
        "flags": 1,
        "description": "Properties to update Azure Cosmos DB resource throughput."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/532"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/throughputSettings@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/531"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/534"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/535"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/537"
        },
        "flags": 1,
        "description": "Properties to create and update Azure Cosmos DB Cassandra view."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/540"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CassandraViewCreateUpdatePropertiesOrCassandraViewGetProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/538"
        },
        "flags": 1,
        "description": "The standard JSON format of a Cassandra view"
      },
      "options": {
        "type": {
          "$ref": "#/539"
        },
        "flags": 0,
        "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CassandraViewResourceOrCassandraViewGetPropertiesResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the Cosmos DB Cassandra view"
      },
      "viewDefinition": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "View Definition of the Cosmos DB Cassandra view"
      },
      "_rid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property. A unique identifier."
      },
      "_ts": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "A system generated property that denotes the last updated timestamp of the resource."
      },
      "_etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property representing the resource etag required for optimistic concurrency control."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CreateUpdateOptionsOrCassandraViewGetPropertiesOptions",
    "properties": {
      "throughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Request Units per second. For example, \"throughput\": 10000."
      },
      "autoscaleSettings": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 0,
        "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/536"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views/throughputSettings"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views/throughputSettings",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/542"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/543"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/544"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/242"
        },
        "flags": 1,
        "description": "Properties to update Azure Cosmos DB resource throughput."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/546"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views/throughputSettings@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/545"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/cassandraRoleDefinitions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/cassandraRoleDefinitions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/548"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/549"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/551"
        },
        "flags": 0,
        "description": "Properties to create and update an Azure Cosmos DB Cassandra Role Definition."
      },
      "systemData": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CassandraRoleDefinitionResourceProperties",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The path id for the Role Definition."
      },
      "roleName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
      },
      "type": {
        "type": {
          "$ref": "#/554"
        },
        "flags": 0,
        "description": "Indicates whether the Role Definition was built-in or user created."
      },
      "assignableScopes": {
        "type": {
          "$ref": "#/555"
        },
        "flags": 0,
        "description": "A set of fully qualified Scopes at or below which Cassandra Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist."
      },
      "permissions": {
        "type": {
          "$ref": "#/559"
        },
        "flags": 0,
        "description": "The set of operations allowed through this Role Definition."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "BuiltInRole"
  },
  {
    "$type": "StringLiteralType",
    "value": "CustomRole"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/552"
      },
      {
        "$ref": "#/553"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PermissionAutoGenerated2",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The id for the permission."
      },
      "dataActions": {
        "type": {
          "$ref": "#/557"
        },
        "flags": 0,
        "description": "An array of data actions that are allowed."
      },
      "notDataActions": {
        "type": {
          "$ref": "#/558"
        },
        "flags": 0,
        "description": "An array of data actions that are denied."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/556"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/cassandraRoleDefinitions@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/550"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/cassandraRoleAssignments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/cassandraRoleAssignments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/561"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/562"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/564"
        },
        "flags": 0,
        "description": "Properties to create and update an Azure Cosmos DB Cassandra Role Assignment."
      },
      "systemData": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CassandraRoleAssignmentResourceProperties",
    "properties": {
      "roleDefinitionId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The unique identifier for the associated Role Definition."
      },
      "scope": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The data plane resource path for which access is being granted through this Cassandra Role Assignment."
      },
      "principalId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Cassandra Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Provisioning state of the resource."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/cassandraRoleAssignments@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/563"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/566"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/567"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/569"
        },
        "flags": 1,
        "description": "Properties to create and update Azure Cosmos DB Gremlin database."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/575"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GremlinDatabaseCreateUpdatePropertiesOrGremlinDatabaseGetProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/570"
        },
        "flags": 1,
        "description": "The standard JSON format of a Gremlin database"
      },
      "options": {
        "type": {
          "$ref": "#/574"
        },
        "flags": 0,
        "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GremlinDatabaseResourceOrGremlinDatabaseGetPropertiesResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the Cosmos DB Gremlin database"
      },
      "restoreParameters": {
        "type": {
          "$ref": "#/231"
        },
        "flags": 0,
        "description": "Parameters to indicate the information about the restore"
      },
      "createMode": {
        "type": {
          "$ref": "#/573"
        },
        "flags": 0,
        "description": "Enum to indicate the mode of resource creation."
      },
      "_rid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property. A unique identifier."
      },
      "_ts": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "A system generated property that denotes the last updated timestamp of the resource."
      },
      "_etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property representing the resource etag required for optimistic concurrency control."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Restore"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/571"
      },
      {
        "$ref": "#/572"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CreateUpdateOptionsOrGremlinDatabaseGetPropertiesOptions",
    "properties": {
      "throughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Request Units per second. For example, \"throughput\": 10000."
      },
      "autoscaleSettings": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 0,
        "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/568"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/throughputSettings"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/throughputSettings",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/577"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/578"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/579"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/242"
        },
        "flags": 1,
        "description": "Properties to update Azure Cosmos DB resource throughput."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/581"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/throughputSettings@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/580"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/583"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/584"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/586"
        },
        "flags": 1,
        "description": "Properties to create and update Azure Cosmos DB Gremlin graph."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/592"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GremlinGraphCreateUpdatePropertiesOrGremlinGraphGetProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/587"
        },
        "flags": 1,
        "description": "The standard JSON format of a Gremlin graph"
      },
      "options": {
        "type": {
          "$ref": "#/591"
        },
        "flags": 0,
        "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GremlinGraphResourceOrGremlinGraphGetPropertiesResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the Cosmos DB Gremlin graph"
      },
      "indexingPolicy": {
        "type": {
          "$ref": "#/264"
        },
        "flags": 0,
        "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph"
      },
      "partitionKey": {
        "type": {
          "$ref": "#/306"
        },
        "flags": 0,
        "description": "The configuration of the partition key to be used for partitioning data into multiple partitions"
      },
      "defaultTtl": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Default time to live"
      },
      "uniqueKeyPolicy": {
        "type": {
          "$ref": "#/313"
        },
        "flags": 0,
        "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service."
      },
      "conflictResolutionPolicy": {
        "type": {
          "$ref": "#/317"
        },
        "flags": 0,
        "description": "The conflict resolution policy for the graph."
      },
      "analyticalStorageTtl": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Analytical TTL."
      },
      "restoreParameters": {
        "type": {
          "$ref": "#/231"
        },
        "flags": 0,
        "description": "Parameters to indicate the information about the restore"
      },
      "createMode": {
        "type": {
          "$ref": "#/590"
        },
        "flags": 0,
        "description": "Enum to indicate the mode of resource creation."
      },
      "_rid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property. A unique identifier."
      },
      "_ts": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "A system generated property that denotes the last updated timestamp of the resource."
      },
      "_etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property representing the resource etag required for optimistic concurrency control."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Restore"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/588"
      },
      {
        "$ref": "#/589"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CreateUpdateOptionsOrGremlinGraphGetPropertiesOptions",
    "properties": {
      "throughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Request Units per second. For example, \"throughput\": 10000."
      },
      "autoscaleSettings": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 0,
        "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/585"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/throughputSettings"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/throughputSettings",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/594"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/595"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/596"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/242"
        },
        "flags": 1,
        "description": "Properties to update Azure Cosmos DB resource throughput."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/598"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/throughputSettings@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/597"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/gremlinRoleDefinitions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/gremlinRoleDefinitions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/600"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/601"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/603"
        },
        "flags": 0,
        "description": "Properties to create and update an Azure Cosmos DB Gremlin Role Definition."
      },
      "systemData": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GremlinRoleDefinitionResourceProperties",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The path id for the Role Definition."
      },
      "roleName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
      },
      "type": {
        "type": {
          "$ref": "#/606"
        },
        "flags": 0,
        "description": "Indicates whether the Role Definition was built-in or user created."
      },
      "assignableScopes": {
        "type": {
          "$ref": "#/607"
        },
        "flags": 0,
        "description": "A set of fully qualified Scopes at or below which Gremlin Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist."
      },
      "permissions": {
        "type": {
          "$ref": "#/611"
        },
        "flags": 0,
        "description": "The set of operations allowed through this Role Definition."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "BuiltInRole"
  },
  {
    "$type": "StringLiteralType",
    "value": "CustomRole"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/604"
      },
      {
        "$ref": "#/605"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PermissionAutoGenerated4",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The id for the permission."
      },
      "dataActions": {
        "type": {
          "$ref": "#/609"
        },
        "flags": 0,
        "description": "An array of data actions that are allowed."
      },
      "notDataActions": {
        "type": {
          "$ref": "#/610"
        },
        "flags": 0,
        "description": "An array of data actions that are denied."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/608"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/gremlinRoleDefinitions@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/602"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/gremlinRoleAssignments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/gremlinRoleAssignments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/613"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/614"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/616"
        },
        "flags": 0,
        "description": "Properties to create and update an Azure Cosmos DB Gremlin Role Assignment."
      },
      "systemData": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GremlinRoleAssignmentResourceProperties",
    "properties": {
      "roleDefinitionId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The unique identifier for the associated Role Definition."
      },
      "scope": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The data plane resource path for which access is being granted through this Gremlin Role Assignment."
      },
      "principalId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Gremlin Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Provisioning state of the resource."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/gremlinRoleAssignments@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/615"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/dataTransferJobs"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/dataTransferJobs",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/618"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/619"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/621"
        },
        "flags": 1,
        "description": "Data Transfer Create Job Properties"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataTransferJobProperties",
    "properties": {
      "jobName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Job Name"
      },
      "source": {
        "type": {
          "$ref": "#/622"
        },
        "flags": 1,
        "description": "Source DataStore details"
      },
      "destination": {
        "type": {
          "$ref": "#/622"
        },
        "flags": 1,
        "description": "Destination DataStore details"
      },
      "status": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Job Status"
      },
      "processedCount": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Processed Count."
      },
      "totalCount": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Total Count."
      },
      "lastUpdatedUtcTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Last Updated Time (ISO-8601 format)."
      },
      "workerCount": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 0,
        "description": "Worker count"
      },
      "error": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 2,
        "description": "Error response for Faulted job"
      },
      "duration": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Total Duration of Job"
      },
      "mode": {
        "type": {
          "$ref": "#/635"
        },
        "flags": 0,
        "description": "Mode of job execution"
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DataTransferDataSourceSink",
    "discriminator": "component",
    "baseProperties": {},
    "elements": {
      "AzureBlobStorage": {
        "$ref": "#/623"
      },
      "CosmosDBCassandra": {
        "$ref": "#/625"
      },
      "CosmosDBMongo": {
        "$ref": "#/627"
      },
      "CosmosDBSql": {
        "$ref": "#/629"
      },
      "CosmosDBMongoVCore": {
        "$ref": "#/631"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureBlobDataTransferDataSourceSink",
    "properties": {
      "containerName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1
      },
      "endpointUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "component": {
        "type": {
          "$ref": "#/624"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureBlobStorage"
  },
  {
    "$type": "ObjectType",
    "name": "CosmosCassandraDataTransferDataSourceSink",
    "properties": {
      "keyspaceName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1
      },
      "tableName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1
      },
      "remoteAccountName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "component": {
        "type": {
          "$ref": "#/626"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CosmosDBCassandra"
  },
  {
    "$type": "ObjectType",
    "name": "CosmosMongoDataTransferDataSourceSink",
    "properties": {
      "databaseName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1
      },
      "collectionName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1
      },
      "remoteAccountName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "component": {
        "type": {
          "$ref": "#/628"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CosmosDBMongo"
  },
  {
    "$type": "ObjectType",
    "name": "CosmosSqlDataTransferDataSourceSink",
    "properties": {
      "databaseName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1
      },
      "containerName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1
      },
      "remoteAccountName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "component": {
        "type": {
          "$ref": "#/630"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CosmosDBSql"
  },
  {
    "$type": "ObjectType",
    "name": "CosmosMongoVCoreDataTransferDataSourceSink",
    "properties": {
      "databaseName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1
      },
      "collectionName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1
      },
      "hostName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "connectionStringKeyVaultUri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "component": {
        "type": {
          "$ref": "#/632"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CosmosDBMongoVCore"
  },
  {
    "$type": "StringLiteralType",
    "value": "Offline"
  },
  {
    "$type": "StringLiteralType",
    "value": "Online"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/633"
      },
      {
        "$ref": "#/634"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/dataTransferJobs@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/620"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 100,
    "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/cassandraClusters"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/cassandraClusters",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/637"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/638"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/639"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/641"
        },
        "flags": 0,
        "description": "Properties of a managed Cassandra cluster."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/680"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/681"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterResourceProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/648"
        },
        "flags": 0,
        "description": "The status of the resource at the time the operation was called."
      },
      "restoreFromBackupId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 4,
        "description": "To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup."
      },
      "delegatedManagementSubnetId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'"
      },
      "cassandraVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version."
      },
      "clusterNameOverride": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property."
      },
      "authenticationMethod": {
        "type": {
          "$ref": "#/652"
        },
        "flags": 0,
        "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'."
      },
      "initialCassandraAdminPassword": {
        "type": {
          "$ref": "#/653"
        },
        "flags": 4,
        "description": "Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'."
      },
      "prometheusEndpoint": {
        "type": {
          "$ref": "#/654"
        },
        "flags": 0,
        "description": "Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached."
      },
      "repairEnabled": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs."
      },
      "autoReplicate": {
        "type": {
          "$ref": "#/658"
        },
        "flags": 0,
        "description": "The form of AutoReplicate that is being used by this cluster."
      },
      "clientCertificates": {
        "type": {
          "$ref": "#/660"
        },
        "flags": 0,
        "description": "List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property."
      },
      "externalGossipCertificates": {
        "type": {
          "$ref": "#/661"
        },
        "flags": 0,
        "description": "List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property."
      },
      "gossipCertificates": {
        "type": {
          "$ref": "#/662"
        },
        "flags": 2,
        "description": "List of TLS certificates that unmanaged nodes must trust for gossip with managed nodes. All managed nodes will present TLS client certificates that are verifiable using one of the certificates provided in this property."
      },
      "externalSeedNodes": {
        "type": {
          "$ref": "#/663"
        },
        "flags": 0,
        "description": "List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes."
      },
      "seedNodes": {
        "type": {
          "$ref": "#/664"
        },
        "flags": 2,
        "description": "List of IP addresses of seed nodes in the managed data centers. These should be added to the seed node lists of all unmanaged nodes."
      },
      "externalDataCenters": {
        "type": {
          "$ref": "#/665"
        },
        "flags": 0,
        "description": "List of the data center names for unmanaged data centers in this cluster to be included in auto-replication."
      },
      "hoursBetweenBackups": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "(Deprecated) Number of hours to wait between taking a backup of the cluster."
      },
      "deallocated": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Whether the cluster and associated data centers has been deallocated."
      },
      "cassandraAuditLoggingEnabled": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Whether Cassandra audit logging is enabled"
      },
      "clusterType": {
        "type": {
          "$ref": "#/668"
        },
        "flags": 0,
        "description": "Type of the cluster. If set to Production, some operations might not be permitted on cluster."
      },
      "provisionError": {
        "type": {
          "$ref": "#/669"
        },
        "flags": 0,
        "description": "Error related to resource provisioning."
      },
      "extensions": {
        "type": {
          "$ref": "#/670"
        },
        "flags": 0,
        "description": "Extensions to be added or updated on cluster."
      },
      "backupSchedules": {
        "type": {
          "$ref": "#/672"
        },
        "flags": 0,
        "description": "List of backup schedules that define when you want to back up your data."
      },
      "scheduledEventStrategy": {
        "type": {
          "$ref": "#/676"
        },
        "flags": 0,
        "description": "How the nodes in the cluster react to scheduled events"
      },
      "azureConnectionMethod": {
        "type": {
          "$ref": "#/679"
        },
        "flags": 0,
        "description": "How to connect to the azure services needed for running the cluster"
      },
      "privateLinkResourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "If the Connection Method is Vpn, this is the Id of the private link resource that the datacenters need to connect to."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/642"
      },
      {
        "$ref": "#/643"
      },
      {
        "$ref": "#/644"
      },
      {
        "$ref": "#/645"
      },
      {
        "$ref": "#/646"
      },
      {
        "$ref": "#/647"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cassandra"
  },
  {
    "$type": "StringLiteralType",
    "value": "Ldap"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/649"
      },
      {
        "$ref": "#/650"
      },
      {
        "$ref": "#/651"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringType",
    "sensitive": true
  },
  {
    "$type": "ObjectType",
    "name": "SeedNode",
    "properties": {
      "ipAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "IP address of this seed node."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemKeyspaces"
  },
  {
    "$type": "StringLiteralType",
    "value": "AllKeyspaces"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/655"
      },
      {
        "$ref": "#/656"
      },
      {
        "$ref": "#/657"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Certificate",
    "properties": {
      "pem": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "PEM formatted public key."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/659"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/659"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/659"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/654"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/654"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Production"
  },
  {
    "$type": "StringLiteralType",
    "value": "NonProduction"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/666"
      },
      {
        "$ref": "#/667"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CassandraError",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The code of error that occurred."
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The message of the error."
      },
      "target": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The target resource of the error."
      },
      "additionalErrorInfo": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Additional information about the error."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "BackupSchedule",
    "properties": {
      "scheduleName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The unique identifier of backup schedule."
      },
      "cronExpression": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cron expression that defines when you want to back up your data."
      },
      "retentionInHours": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "The retention period (hours) of the backups. If you want to retain data forever, set retention to 0."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/671"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Ignore"
  },
  {
    "$type": "StringLiteralType",
    "value": "StopAny"
  },
  {
    "$type": "StringLiteralType",
    "value": "StopByRack"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/673"
      },
      {
        "$ref": "#/674"
      },
      {
        "$ref": "#/675"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "VPN"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/677"
      },
      {
        "$ref": "#/678"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedCassandraManagedServiceIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The object id of the identity resource."
      },
      "tenantId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The tenant id of the resource."
      },
      "type": {
        "type": {
          "$ref": "#/684"
        },
        "flags": 0,
        "description": "The type of the resource."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/682"
      },
      {
        "$ref": "#/683"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/cassandraClusters@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/640"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/cassandraClusters/dataCenters"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/cassandraClusters/dataCenters",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/637"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/686"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/687"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/689"
        },
        "flags": 0,
        "description": "Properties of a managed Cassandra data center."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataCenterResourceProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/696"
        },
        "flags": 0,
        "description": "The status of the resource at the time the operation was called."
      },
      "dataCenterLocation": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The region this data center should be created in."
      },
      "delegatedSubnetId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'."
      },
      "nodeCount": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster."
      },
      "seedNodes": {
        "type": {
          "$ref": "#/697"
        },
        "flags": 2,
        "description": "IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property on the cluster, which aggregates the seed nodes from all data centers in the cluster."
      },
      "base64EncodedCassandraYamlFragment": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed."
      },
      "managedDiskCustomerKeyUri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key."
      },
      "backupStorageCustomerKeyUri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Indicates the Key Uri of the customer key to use for encryption of the backup storage account."
      },
      "sku": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2"
      },
      "diskSku": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Disk SKU used for data centers. Default value is P30."
      },
      "diskCapacity": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Number of disks attached to each node. Default is 4."
      },
      "availabilityZone": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "If the data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines."
      },
      "authenticationMethodLdapProperties": {
        "type": {
          "$ref": "#/698"
        },
        "flags": 0,
        "description": "Ldap authentication method properties. This feature is in preview."
      },
      "deallocated": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Whether the data center has been deallocated."
      },
      "provisionError": {
        "type": {
          "$ref": "#/669"
        },
        "flags": 0,
        "description": "Error related to resource provisioning."
      },
      "privateEndpointIpAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Ip of the VPN Endpoint for this data center."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/690"
      },
      {
        "$ref": "#/691"
      },
      {
        "$ref": "#/692"
      },
      {
        "$ref": "#/693"
      },
      {
        "$ref": "#/694"
      },
      {
        "$ref": "#/695"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/654"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AuthenticationMethodLdapProperties",
    "properties": {
      "serverHostname": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Hostname of the LDAP server."
      },
      "serverPort": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Port of the LDAP server."
      },
      "serviceUserDistinguishedName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Distinguished name of the look up user account, who can look up user details on authentication."
      },
      "serviceUserPassword": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Password of the look up user."
      },
      "searchBaseDistinguishedName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Distinguished name of the object to start the recursive search of users from."
      },
      "searchFilterTemplate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login."
      },
      "serverCertificates": {
        "type": {
          "$ref": "#/699"
        },
        "flags": 0
      },
      "connectionTimeoutInMs": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Timeout for connecting to the LDAP server in miliseconds. The default is 5000 ms."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/659"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/cassandraClusters/dataCenters@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/688"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/701"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/702"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/703"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/704"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/706"
        },
        "flags": 2,
        "description": "Resource properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NotebookWorkspaceProperties",
    "properties": {
      "notebookServerEndpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Specifies the endpoint of Notebook server."
      },
      "status": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Status of the notebook workspace. Possible values are: Creating, Online, Deleting, Failed, Updating."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/705"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/708"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/709"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/188"
        },
        "flags": 0,
        "description": "Resource properties."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/710"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 3,
    "maxLength": 50
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/services"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/services",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/712"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/713"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/714"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/716"
        },
        "flags": 0,
        "description": "Properties in ServiceResourceCreateUpdateParameters."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ServiceResourceCreateUpdatePropertiesOrServiceResourceProperties",
    "discriminator": "serviceType",
    "baseProperties": {
      "instanceSize": {
        "type": {
          "$ref": "#/720"
        },
        "flags": 0,
        "description": "Instance type for the service."
      },
      "instanceCount": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 0,
        "description": "Instance count for the service."
      },
      "creationTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Time of the last state change (ISO-8601 format)."
      },
      "status": {
        "type": {
          "$ref": "#/727"
        },
        "flags": 2,
        "description": "Describes the status of a service."
      }
    },
    "elements": {
      "DataTransfer": {
        "$ref": "#/728"
      },
      "GraphAPICompute": {
        "$ref": "#/739"
      },
      "MaterializedViewsBuilder": {
        "$ref": "#/750"
      },
      "SqlDedicatedGateway": {
        "$ref": "#/761"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Cosmos.D4s"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cosmos.D8s"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cosmos.D16s"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/717"
      },
      {
        "$ref": "#/718"
      },
      {
        "$ref": "#/719"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopped"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/721"
      },
      {
        "$ref": "#/722"
      },
      {
        "$ref": "#/723"
      },
      {
        "$ref": "#/724"
      },
      {
        "$ref": "#/725"
      },
      {
        "$ref": "#/726"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataTransferServiceResourceCreateUpdatePropertiesOrDataTransferServiceResourceProperties",
    "properties": {
      "locations": {
        "type": {
          "$ref": "#/737"
        },
        "flags": 2,
        "description": "An array that contains all of the locations for the service."
      },
      "serviceType": {
        "type": {
          "$ref": "#/738"
        },
        "flags": 1,
        "description": "ServiceType for the service."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataTransferRegionalServiceResource",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The regional service name."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The location name."
      },
      "status": {
        "type": {
          "$ref": "#/736"
        },
        "flags": 2,
        "description": "Describes the status of a service."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopped"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/730"
      },
      {
        "$ref": "#/731"
      },
      {
        "$ref": "#/732"
      },
      {
        "$ref": "#/733"
      },
      {
        "$ref": "#/734"
      },
      {
        "$ref": "#/735"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/729"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DataTransfer"
  },
  {
    "$type": "ObjectType",
    "name": "GraphAPIComputeServiceResourceCreateUpdatePropertiesOrGraphAPIComputeServiceResourceProperties",
    "properties": {
      "graphApiComputeEndpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "GraphAPICompute endpoint for the service."
      },
      "locations": {
        "type": {
          "$ref": "#/748"
        },
        "flags": 2,
        "description": "An array that contains all of the locations for the service."
      },
      "serviceType": {
        "type": {
          "$ref": "#/749"
        },
        "flags": 1,
        "description": "ServiceType for the service."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GraphAPIComputeRegionalServiceResource",
    "properties": {
      "graphApiComputeEndpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The regional endpoint for GraphAPICompute."
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The regional service name."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The location name."
      },
      "status": {
        "type": {
          "$ref": "#/747"
        },
        "flags": 2,
        "description": "Describes the status of a service."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopped"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/741"
      },
      {
        "$ref": "#/742"
      },
      {
        "$ref": "#/743"
      },
      {
        "$ref": "#/744"
      },
      {
        "$ref": "#/745"
      },
      {
        "$ref": "#/746"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/740"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "GraphAPICompute"
  },
  {
    "$type": "ObjectType",
    "name": "MaterializedViewsBuilderServiceResourceCreateUpdatePropertiesOrMaterializedViewsBuilderServiceResourceProperties",
    "properties": {
      "locations": {
        "type": {
          "$ref": "#/759"
        },
        "flags": 2,
        "description": "An array that contains all of the locations for the service."
      },
      "serviceType": {
        "type": {
          "$ref": "#/760"
        },
        "flags": 1,
        "description": "ServiceType for the service."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MaterializedViewsBuilderRegionalServiceResource",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The regional service name."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The location name."
      },
      "status": {
        "type": {
          "$ref": "#/758"
        },
        "flags": 2,
        "description": "Describes the status of a service."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopped"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/752"
      },
      {
        "$ref": "#/753"
      },
      {
        "$ref": "#/754"
      },
      {
        "$ref": "#/755"
      },
      {
        "$ref": "#/756"
      },
      {
        "$ref": "#/757"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/751"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "MaterializedViewsBuilder"
  },
  {
    "$type": "ObjectType",
    "name": "SqlDedicatedGatewayServiceResourceCreateUpdatePropertiesOrSqlDedicatedGatewayServiceResourceProperties",
    "properties": {
      "dedicatedGatewayType": {
        "type": {
          "$ref": "#/764"
        },
        "flags": 0,
        "description": "DedicatedGatewayType for the service."
      },
      "sqlDedicatedGatewayEndpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "SqlDedicatedGateway endpoint for the service."
      },
      "locations": {
        "type": {
          "$ref": "#/773"
        },
        "flags": 2,
        "description": "An array that contains all of the locations for the service."
      },
      "serviceType": {
        "type": {
          "$ref": "#/774"
        },
        "flags": 1,
        "description": "ServiceType for the service."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "IntegratedCache"
  },
  {
    "$type": "StringLiteralType",
    "value": "DistributedQuery"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/762"
      },
      {
        "$ref": "#/763"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SqlDedicatedGatewayRegionalServiceResource",
    "properties": {
      "sqlDedicatedGatewayEndpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The regional endpoint for SqlDedicatedGateway."
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The regional service name."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The location name."
      },
      "status": {
        "type": {
          "$ref": "#/772"
        },
        "flags": 2,
        "description": "Describes the status of a service."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopped"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/766"
      },
      {
        "$ref": "#/767"
      },
      {
        "$ref": "#/768"
      },
      {
        "$ref": "#/769"
      },
      {
        "$ref": "#/770"
      },
      {
        "$ref": "#/771"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/765"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SqlDedicatedGateway"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/services@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/715"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/throughputPools"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/throughputPools",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/776"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/777"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/779"
        },
        "flags": 0,
        "description": "Properties to update Azure Cosmos DB throughput pool."
      },
      "tags": {
        "type": {
          "$ref": "#/791"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ThroughputPoolProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/790"
        },
        "flags": 0,
        "description": "A provisioning state of the ThroughputPool."
      },
      "maxThroughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Value for throughput to be shared among CosmosDB resources in the pool."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Uninitialized"
  },
  {
    "$type": "StringLiteralType",
    "value": "Initializing"
  },
  {
    "$type": "StringLiteralType",
    "value": "InternallyReady"
  },
  {
    "$type": "StringLiteralType",
    "value": "Online"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/780"
      },
      {
        "$ref": "#/781"
      },
      {
        "$ref": "#/782"
      },
      {
        "$ref": "#/783"
      },
      {
        "$ref": "#/784"
      },
      {
        "$ref": "#/785"
      },
      {
        "$ref": "#/786"
      },
      {
        "$ref": "#/787"
      },
      {
        "$ref": "#/788"
      },
      {
        "$ref": "#/789"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/throughputPools@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/778"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/throughputPools/throughputPoolAccounts"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/throughputPools/throughputPoolAccounts",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/793"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/794"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/796"
        },
        "flags": 0,
        "description": "An Azure Cosmos DB Global Database Account which is part of a Throughputpool."
      },
      "systemData": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ThroughputPoolAccountProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/807"
        },
        "flags": 0,
        "description": "A provisioning state of the ThroughputPool Account."
      },
      "accountResourceIdentifier": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource identifier of global database account in the throughputPool."
      },
      "accountLocation": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of  global database account in the throughputPool."
      },
      "accountInstanceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The instance id of global database account in the throughputPool."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Uninitialized"
  },
  {
    "$type": "StringLiteralType",
    "value": "Initializing"
  },
  {
    "$type": "StringLiteralType",
    "value": "InternallyReady"
  },
  {
    "$type": "StringLiteralType",
    "value": "Online"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/797"
      },
      {
        "$ref": "#/798"
      },
      {
        "$ref": "#/799"
      },
      {
        "$ref": "#/800"
      },
      {
        "$ref": "#/801"
      },
      {
        "$ref": "#/802"
      },
      {
        "$ref": "#/803"
      },
      {
        "$ref": "#/804"
      },
      {
        "$ref": "#/805"
      },
      {
        "$ref": "#/806"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/throughputPools/throughputPoolAccounts@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/795"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/mongoMIRoleDefinitions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/mongoMIRoleDefinitions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/809"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/810"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/812"
        },
        "flags": 0,
        "description": "Properties to create and update an Azure Cosmos DB MongoMI Role Definition."
      },
      "systemData": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MongoMIRoleDefinitionResourceProperties",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The path id for the Role Definition."
      },
      "roleName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
      },
      "type": {
        "type": {
          "$ref": "#/815"
        },
        "flags": 0,
        "description": "Indicates whether the Role Definition was built-in or user created."
      },
      "assignableScopes": {
        "type": {
          "$ref": "#/816"
        },
        "flags": 0,
        "description": "A set of fully qualified Scopes at or below which MongoMI Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist."
      },
      "permissions": {
        "type": {
          "$ref": "#/820"
        },
        "flags": 0,
        "description": "The set of operations allowed through this Role Definition."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "BuiltInRole"
  },
  {
    "$type": "StringLiteralType",
    "value": "CustomRole"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/813"
      },
      {
        "$ref": "#/814"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PermissionAutoGenerated3",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The id for the permission."
      },
      "dataActions": {
        "type": {
          "$ref": "#/818"
        },
        "flags": 0,
        "description": "An array of data actions that are allowed."
      },
      "notDataActions": {
        "type": {
          "$ref": "#/819"
        },
        "flags": 0,
        "description": "An array of data actions that are denied."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/817"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/mongoMIRoleDefinitions@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/811"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/mongoMIRoleAssignments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/mongoMIRoleAssignments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/822"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/823"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/825"
        },
        "flags": 0,
        "description": "Properties to create and update an Azure Cosmos DB MongoMI Role Assignment."
      },
      "systemData": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MongoMIRoleAssignmentResourceProperties",
    "properties": {
      "roleDefinitionId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The unique identifier for the associated Role Definition."
      },
      "scope": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The data plane resource path for which access is being granted through this MongoMI Role Assignment."
      },
      "principalId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this MongoMI Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Provisioning state of the resource."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/mongoMIRoleAssignments@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/824"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/fleets"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/fleets",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/827"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/828"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/830"
        },
        "flags": 0,
        "description": "Properties to update Azure Cosmos DB fleet resource."
      },
      "tags": {
        "type": {
          "$ref": "#/842"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FleetResourceProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/841"
        },
        "flags": 0,
        "description": "A provisioning state of the Fleet."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Uninitialized"
  },
  {
    "$type": "StringLiteralType",
    "value": "Initializing"
  },
  {
    "$type": "StringLiteralType",
    "value": "InternallyReady"
  },
  {
    "$type": "StringLiteralType",
    "value": "Online"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/831"
      },
      {
        "$ref": "#/832"
      },
      {
        "$ref": "#/833"
      },
      {
        "$ref": "#/834"
      },
      {
        "$ref": "#/835"
      },
      {
        "$ref": "#/836"
      },
      {
        "$ref": "#/837"
      },
      {
        "$ref": "#/838"
      },
      {
        "$ref": "#/839"
      },
      {
        "$ref": "#/840"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/fleets@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/829"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/fleets/fleetAnalytics"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/fleets/fleetAnalytics",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/844"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/845"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/847"
        },
        "flags": 0
      },
      "systemData": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FleetAnalyticsProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/858"
        },
        "flags": 0,
        "description": "A provisioning state of the FleetAnalytics."
      },
      "storageLocationType": {
        "type": {
          "$ref": "#/861"
        },
        "flags": 0,
        "description": "The type of the fleet analytics resource."
      },
      "storageLocationUri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The unique identifier of the fleet analytics resource."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Uninitialized"
  },
  {
    "$type": "StringLiteralType",
    "value": "Initializing"
  },
  {
    "$type": "StringLiteralType",
    "value": "InternallyReady"
  },
  {
    "$type": "StringLiteralType",
    "value": "Online"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/848"
      },
      {
        "$ref": "#/849"
      },
      {
        "$ref": "#/850"
      },
      {
        "$ref": "#/851"
      },
      {
        "$ref": "#/852"
      },
      {
        "$ref": "#/853"
      },
      {
        "$ref": "#/854"
      },
      {
        "$ref": "#/855"
      },
      {
        "$ref": "#/856"
      },
      {
        "$ref": "#/857"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "StorageAccount"
  },
  {
    "$type": "StringLiteralType",
    "value": "FabricLakehouse"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/859"
      },
      {
        "$ref": "#/860"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/fleets/fleetAnalytics@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/846"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/fleets/fleetspaces"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/fleets/fleetspaces",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/863"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/864"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/866"
        },
        "flags": 0,
        "description": "Properties to update Azure Cosmos DB Fleetspace."
      },
      "systemData": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FleetspaceProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/877"
        },
        "flags": 0,
        "description": "A provisioning state of the Fleetspace."
      },
      "fleetspaceApiKind": {
        "type": {
          "$ref": "#/879"
        },
        "flags": 0,
        "description": "The kind of API this fleetspace belongs to. Acceptable values: 'NoSQL'"
      },
      "throughputPoolConfiguration": {
        "type": {
          "$ref": "#/880"
        },
        "flags": 0,
        "description": "Configuration for throughput pool in the fleetspace."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Uninitialized"
  },
  {
    "$type": "StringLiteralType",
    "value": "Initializing"
  },
  {
    "$type": "StringLiteralType",
    "value": "InternallyReady"
  },
  {
    "$type": "StringLiteralType",
    "value": "Online"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/867"
      },
      {
        "$ref": "#/868"
      },
      {
        "$ref": "#/869"
      },
      {
        "$ref": "#/870"
      },
      {
        "$ref": "#/871"
      },
      {
        "$ref": "#/872"
      },
      {
        "$ref": "#/873"
      },
      {
        "$ref": "#/874"
      },
      {
        "$ref": "#/875"
      },
      {
        "$ref": "#/876"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "NoSQL"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/878"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "FleetspacePropertiesThroughputPoolConfiguration",
    "properties": {
      "minThroughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Minimum throughput for the pool."
      },
      "maxThroughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Maximum throughput for the pool."
      },
      "serviceTier": {
        "type": {
          "$ref": "#/883"
        },
        "flags": 0,
        "description": "Service Tier for the fleetspace. GeneralPurpose types refers to single write region accounts that can be added to this fleetspace, whereas BusinessCritical refers to multi write region."
      },
      "dataRegions": {
        "type": {
          "$ref": "#/884"
        },
        "flags": 0,
        "description": "List of data regions assigned to the fleetspace. Eg [westus2]"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "GeneralPurpose"
  },
  {
    "$type": "StringLiteralType",
    "value": "BusinessCritical"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/881"
      },
      {
        "$ref": "#/882"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    },
    "minLength": 1
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/fleets/fleetspaces@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/865"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/fleets/fleetspaces/fleetspaceAccounts"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/fleets/fleetspaces/fleetspaceAccounts",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/886"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/887"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/889"
        },
        "flags": 0,
        "description": "An Azure Cosmos DB Global Database Account which is part of a Fleetspace Account."
      },
      "systemData": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FleetspaceAccountProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/900"
        },
        "flags": 0,
        "description": "A provisioning state of the Fleetspace Account."
      },
      "globalDatabaseAccountProperties": {
        "type": {
          "$ref": "#/901"
        },
        "flags": 0,
        "description": "Configuration for fleetspace Account in the fleetspace."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Uninitialized"
  },
  {
    "$type": "StringLiteralType",
    "value": "Initializing"
  },
  {
    "$type": "StringLiteralType",
    "value": "InternallyReady"
  },
  {
    "$type": "StringLiteralType",
    "value": "Online"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/890"
      },
      {
        "$ref": "#/891"
      },
      {
        "$ref": "#/892"
      },
      {
        "$ref": "#/893"
      },
      {
        "$ref": "#/894"
      },
      {
        "$ref": "#/895"
      },
      {
        "$ref": "#/896"
      },
      {
        "$ref": "#/897"
      },
      {
        "$ref": "#/898"
      },
      {
        "$ref": "#/899"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "FleetspaceAccountPropertiesGlobalDatabaseAccountProperties",
    "properties": {
      "resourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource identifier of global database account in the Fleetspace Account."
      },
      "armLocation": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of  global database account in the Fleetspace Account."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/fleets/fleetspaces/fleetspaceAccounts@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/888"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/locations"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/locations",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/903"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/904"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/906"
        },
        "flags": 2,
        "description": "Cosmos DB location metadata"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LocationProperties",
    "properties": {
      "supportsAvailabilityZone": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 2,
        "description": "Flag indicating whether the location supports availability zones or not."
      },
      "isResidencyRestricted": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 2,
        "description": "Flag indicating whether the location is residency sensitive."
      },
      "backupStorageRedundancies": {
        "type": {
          "$ref": "#/911"
        },
        "flags": 2,
        "description": "The properties of available backup storage redundancies."
      },
      "isSubscriptionRegionAccessAllowedForRegular": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 2,
        "description": "Flag indicating whether the subscription have access in region for Non-Availability Zones."
      },
      "isSubscriptionRegionAccessAllowedForAz": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 2,
        "description": "Flag indicating whether the subscription have access in region for Availability Zones(Az)."
      },
      "status": {
        "type": {
          "$ref": "#/922"
        },
        "flags": 2,
        "description": "Enum to indicate current buildout status of the region."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Geo"
  },
  {
    "$type": "StringLiteralType",
    "value": "Local"
  },
  {
    "$type": "StringLiteralType",
    "value": "Zone"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/907"
      },
      {
        "$ref": "#/908"
      },
      {
        "$ref": "#/909"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/910"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Uninitialized"
  },
  {
    "$type": "StringLiteralType",
    "value": "Initializing"
  },
  {
    "$type": "StringLiteralType",
    "value": "InternallyReady"
  },
  {
    "$type": "StringLiteralType",
    "value": "Online"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/912"
      },
      {
        "$ref": "#/913"
      },
      {
        "$ref": "#/914"
      },
      {
        "$ref": "#/915"
      },
      {
        "$ref": "#/916"
      },
      {
        "$ref": "#/917"
      },
      {
        "$ref": "#/918"
      },
      {
        "$ref": "#/919"
      },
      {
        "$ref": "#/920"
      },
      {
        "$ref": "#/921"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/locations@2025-05-01-preview",
    "scopeType": 4,
    "body": {
      "$ref": "#/905"
    },
    "flags": 1
  },
  {
    "$type": "StringType",
    "pattern": "^.*$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/networkSecurityPerimeterConfigurations"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/networkSecurityPerimeterConfigurations",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/924"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/925"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/926"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/928"
        },
        "flags": 2,
        "description": "Network security configuration properties."
      },
      "systemData": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NetworkSecurityPerimeterConfigurationProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/936"
        },
        "flags": 2,
        "description": "Provisioning state of a network security perimeter configuration that is being created or updated."
      },
      "provisioningIssues": {
        "type": {
          "$ref": "#/963"
        },
        "flags": 2,
        "description": "List of provisioning issues, if any"
      },
      "networkSecurityPerimeter": {
        "type": {
          "$ref": "#/956"
        },
        "flags": 0,
        "description": "Information about a network security perimeter (NSP)"
      },
      "resourceAssociation": {
        "type": {
          "$ref": "#/964"
        },
        "flags": 0,
        "description": "Information about resource association"
      },
      "profile": {
        "type": {
          "$ref": "#/969"
        },
        "flags": 0,
        "description": "Network security perimeter configuration profile"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/929"
      },
      {
        "$ref": "#/930"
      },
      {
        "$ref": "#/931"
      },
      {
        "$ref": "#/932"
      },
      {
        "$ref": "#/933"
      },
      {
        "$ref": "#/934"
      },
      {
        "$ref": "#/935"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ProvisioningIssue",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Name of the issue"
      },
      "properties": {
        "type": {
          "$ref": "#/938"
        },
        "flags": 2,
        "description": "Details of a provisioning issue for a network security perimeter (NSP) configuration. Resource providers should generate separate provisioning issue elements for each separate issue detected, and include a meaningful and distinctive description, as well as any appropriate suggestedResourceIds and suggestedAccessRules"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProvisioningIssueProperties",
    "properties": {
      "issueType": {
        "type": {
          "$ref": "#/943"
        },
        "flags": 2,
        "description": "Type of issue"
      },
      "severity": {
        "type": {
          "$ref": "#/946"
        },
        "flags": 2,
        "description": "Severity of the issue."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Description of the issue"
      },
      "suggestedResourceIds": {
        "type": {
          "$ref": "#/947"
        },
        "flags": 2,
        "description": "Fully qualified resource IDs of suggested resources that can be associated to the network security perimeter (NSP) to remediate the issue."
      },
      "suggestedAccessRules": {
        "type": {
          "$ref": "#/962"
        },
        "flags": 2,
        "description": "Access rules that can be added to the network security profile (NSP) to remediate the issue."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "ConfigurationPropagationFailure"
  },
  {
    "$type": "StringLiteralType",
    "value": "MissingPerimeterConfiguration"
  },
  {
    "$type": "StringLiteralType",
    "value": "MissingIdentityConfiguration"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/939"
      },
      {
        "$ref": "#/940"
      },
      {
        "$ref": "#/941"
      },
      {
        "$ref": "#/942"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Warning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/944"
      },
      {
        "$ref": "#/945"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AccessRule",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the access rule"
      },
      "properties": {
        "type": {
          "$ref": "#/949"
        },
        "flags": 0,
        "description": "Properties of Access Rule"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AccessRuleProperties",
    "properties": {
      "direction": {
        "type": {
          "$ref": "#/952"
        },
        "flags": 0,
        "description": "Direction of Access Rule"
      },
      "addressPrefixes": {
        "type": {
          "$ref": "#/953"
        },
        "flags": 0,
        "description": "Address prefixes in the CIDR format for inbound rules"
      },
      "subscriptions": {
        "type": {
          "$ref": "#/955"
        },
        "flags": 0,
        "description": "Subscriptions for inbound rules"
      },
      "networkSecurityPerimeters": {
        "type": {
          "$ref": "#/958"
        },
        "flags": 0,
        "description": "Network security perimeters for inbound rules"
      },
      "fullyQualifiedDomainNames": {
        "type": {
          "$ref": "#/959"
        },
        "flags": 0,
        "description": "Fully qualified domain names (FQDN) for outbound rules"
      },
      "emailAddresses": {
        "type": {
          "$ref": "#/960"
        },
        "flags": 0,
        "description": "Email addresses for outbound rules"
      },
      "phoneNumbers": {
        "type": {
          "$ref": "#/961"
        },
        "flags": 0,
        "description": "Phone numbers for outbound rules"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Inbound"
  },
  {
    "$type": "StringLiteralType",
    "value": "Outbound"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/950"
      },
      {
        "$ref": "#/951"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AccessRulePropertiesSubscriptionsItem",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The fully qualified Azure resource ID of the subscription e.g. ('/subscriptions/00000000-0000-0000-0000-000000000000')"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/954"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NetworkSecurityPerimeter",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Fully qualified Azure resource ID of the NSP resource"
      },
      "perimeterGuid": {
        "type": {
          "$ref": "#/957"
        },
        "flags": 0,
        "description": "Universal unique ID (UUID) of the network security perimeter"
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Location of the network security perimeter"
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 36,
    "maxLength": 36,
    "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/956"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/948"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/937"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceAssociation",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the resource association"
      },
      "accessMode": {
        "type": {
          "$ref": "#/968"
        },
        "flags": 0,
        "description": "Access mode of the resource association"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enforced"
  },
  {
    "$type": "StringLiteralType",
    "value": "Learning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Audit"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/965"
      },
      {
        "$ref": "#/966"
      },
      {
        "$ref": "#/967"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NetworkSecurityProfile",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the profile"
      },
      "accessRulesVersion": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Current access rules version"
      },
      "accessRules": {
        "type": {
          "$ref": "#/970"
        },
        "flags": 0,
        "description": "List of Access Rules"
      },
      "diagnosticSettingsVersion": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Current diagnostic settings version"
      },
      "enabledLogCategories": {
        "type": {
          "$ref": "#/971"
        },
        "flags": 0,
        "description": "List of log categories that are enabled"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/948"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/networkSecurityPerimeterConfigurations@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/927"
    },
    "flags": 1
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DocumentDB/databaseAccounts/privateLinkResources"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DocumentDB/databaseAccounts/privateLinkResources",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/973"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/974"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/976"
        },
        "flags": 2,
        "description": "Resource properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateLinkResourceProperties",
    "properties": {
      "groupId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The private link resource group id."
      },
      "requiredMembers": {
        "type": {
          "$ref": "#/977"
        },
        "flags": 2,
        "description": "The private link resource required member names."
      },
      "requiredZoneNames": {
        "type": {
          "$ref": "#/978"
        },
        "flags": 2,
        "description": "The private link resource required zone names."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DocumentDB/databaseAccounts/privateLinkResources@2025-05-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/975"
    },
    "flags": 1
  },
  {
    "$type": "ObjectType",
    "name": "CopyJobGetResults",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 1,
        "description": "The properties of a Copy Job"
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The unique resource identifier of the database account."
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the database account."
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of Azure resource."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "pause",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/copyJobs",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/980"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "resume",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/copyJobs",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/980"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "cancel",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/copyJobs",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/980"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "complete",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/copyJobs",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/980"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FailoverPolicies",
    "properties": {
      "failoverPolicies": {
        "type": {
          "$ref": "#/986"
        },
        "flags": 1,
        "description": "List of failover policies."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/185"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "failoverPriorityChange",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts",
    "apiVersion": "2025-05-01-preview",
    "input": {
      "$ref": "#/985"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DatabaseAccountListKeysResult",
    "properties": {
      "primaryMasterKey": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Base 64 encoded value of the primary read-write key."
      },
      "secondaryMasterKey": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Base 64 encoded value of the secondary read-write key."
      },
      "primaryReadonlyMasterKey": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Base 64 encoded value of the primary read-only key."
      },
      "secondaryReadonlyMasterKey": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Base 64 encoded value of the secondary read-only key."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listKeys",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/988"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DatabaseAccountListConnectionStringsResult",
    "properties": {
      "connectionStrings": {
        "type": {
          "$ref": "#/1007"
        },
        "flags": 0,
        "description": "An array that contains the connection strings for the Cosmos DB account."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DatabaseAccountConnectionString",
    "properties": {
      "connectionString": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Value of the connection string"
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Description of the connection string"
      },
      "keyKind": {
        "type": {
          "$ref": "#/996"
        },
        "flags": 2,
        "description": "Kind of the connection string key"
      },
      "type": {
        "type": {
          "$ref": "#/1006"
        },
        "flags": 2,
        "description": "Type of the connection string"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Primary"
  },
  {
    "$type": "StringLiteralType",
    "value": "Secondary"
  },
  {
    "$type": "StringLiteralType",
    "value": "PrimaryReadonly"
  },
  {
    "$type": "StringLiteralType",
    "value": "SecondaryReadonly"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/992"
      },
      {
        "$ref": "#/993"
      },
      {
        "$ref": "#/994"
      },
      {
        "$ref": "#/995"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Sql"
  },
  {
    "$type": "StringLiteralType",
    "value": "Table"
  },
  {
    "$type": "StringLiteralType",
    "value": "MongoDB"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cassandra"
  },
  {
    "$type": "StringLiteralType",
    "value": "CassandraConnectorMetadata"
  },
  {
    "$type": "StringLiteralType",
    "value": "Gremlin"
  },
  {
    "$type": "StringLiteralType",
    "value": "SqlDedicatedGateway"
  },
  {
    "$type": "StringLiteralType",
    "value": "GremlinV2"
  },
  {
    "$type": "StringLiteralType",
    "value": "Undefined"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/997"
      },
      {
        "$ref": "#/998"
      },
      {
        "$ref": "#/999"
      },
      {
        "$ref": "#/1000"
      },
      {
        "$ref": "#/1001"
      },
      {
        "$ref": "#/1002"
      },
      {
        "$ref": "#/1003"
      },
      {
        "$ref": "#/1004"
      },
      {
        "$ref": "#/1005"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/991"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listConnectionStrings",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/990"
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegionForOnlineOffline",
    "properties": {
      "region": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Cosmos DB region, with spaces between words and each word capitalized."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "offlineRegion",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts",
    "apiVersion": "2025-05-01-preview",
    "input": {
      "$ref": "#/1009"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "onlineRegion",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts",
    "apiVersion": "2025-05-01-preview",
    "input": {
      "$ref": "#/1009"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DatabaseAccountListReadOnlyKeysResult",
    "properties": {
      "primaryReadonlyMasterKey": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Base 64 encoded value of the primary read-only key."
      },
      "secondaryReadonlyMasterKey": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Base 64 encoded value of the secondary read-only key."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "readonlykeys",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1012"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DatabaseAccountRegenerateKeyParameters",
    "properties": {
      "keyKind": {
        "type": {
          "$ref": "#/1019"
        },
        "flags": 1,
        "description": "The access key to regenerate."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "primary"
  },
  {
    "$type": "StringLiteralType",
    "value": "secondary"
  },
  {
    "$type": "StringLiteralType",
    "value": "primaryReadonly"
  },
  {
    "$type": "StringLiteralType",
    "value": "secondaryReadonly"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1015"
      },
      {
        "$ref": "#/1016"
      },
      {
        "$ref": "#/1017"
      },
      {
        "$ref": "#/1018"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceFunctionType",
    "name": "regenerateKey",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts",
    "apiVersion": "2025-05-01-preview",
    "input": {
      "$ref": "#/1014"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ThroughputSettingsGetResults",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/1022"
        },
        "flags": 0,
        "description": "The properties of an Azure Cosmos DB resource throughput"
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The unique resource identifier of the ARM resource."
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the ARM resource."
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of Azure resource."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/1025"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ThroughputSettingsGetProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/1023"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ThroughputSettingsGetPropertiesResource",
    "properties": {
      "throughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
      },
      "autoscaleSettings": {
        "type": {
          "$ref": "#/244"
        },
        "flags": 0,
        "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both."
      },
      "minimumThroughput": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The minimum throughput of the resource"
      },
      "offerReplacePending": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The throughput replace is pending"
      },
      "instantMaximumThroughput": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The offer throughput value to instantly scale up without triggering splits"
      },
      "softAllowedMaximumThroughput": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified"
      },
      "throughputBuckets": {
        "type": {
          "$ref": "#/1024"
        },
        "flags": 0,
        "description": "Array of Throughput Bucket limits to be applied to the Cosmos DB container"
      },
      "_rid": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property. A unique identifier."
      },
      "_ts": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "A system generated property that denotes the last updated timestamp of the resource."
      },
      "_etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system generated property representing the resource etag required for optimistic concurrency control."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/247"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToAutoscale",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToManualThroughput",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ObjectType",
    "name": "RetrieveThroughputParameters",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/1029"
        },
        "flags": 1,
        "description": "Properties to retrieve throughput parameters object"
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The unique resource identifier of the ARM resource."
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the ARM resource."
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of Azure resource."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/1033"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RetrieveThroughputProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/1030"
        },
        "flags": 1,
        "description": "The standard JSON format of a resource throughput"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RetrieveThroughputPropertiesResource",
    "properties": {
      "physicalPartitionIds": {
        "type": {
          "$ref": "#/1032"
        },
        "flags": 1,
        "description": "Array of PhysicalPartitionId objects."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PhysicalPartitionId",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Id of a physical partition"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1031"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PhysicalPartitionThroughputInfoResult",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/1035"
        },
        "flags": 0,
        "description": "The properties of an Azure Cosmos DB PhysicalPartitionThroughputInfoResult object"
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The unique resource identifier of the ARM resource."
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the ARM resource."
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of Azure resource."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/1039"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PhysicalPartitionThroughputInfoResultProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/1036"
        },
        "flags": 0,
        "description": "properties of physical partition throughput info"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PhysicalPartitionThroughputInfoResultPropertiesResource",
    "properties": {
      "physicalPartitionThroughputInfo": {
        "type": {
          "$ref": "#/1038"
        },
        "flags": 0,
        "description": "Array of physical partition throughput info objects"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PhysicalPartitionThroughputInfoResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Id of a physical partition"
      },
      "throughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Throughput of a physical partition"
      },
      "targetThroughput": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Target throughput of a physical partition"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1037"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "retrieveThroughputDistribution",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1034"
    },
    "input": {
      "$ref": "#/1028"
    }
  },
  {
    "$type": "ObjectType",
    "name": "RedistributeThroughputParameters",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/1042"
        },
        "flags": 1,
        "description": "Properties to redistribute throughput parameters object"
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The unique resource identifier of the ARM resource."
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the ARM resource."
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of Azure resource."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of the resource group to which the resource belongs."
      },
      "tags": {
        "type": {
          "$ref": "#/1050"
        },
        "flags": 0,
        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
      },
      "identity": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Identity for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RedistributeThroughputProperties",
    "properties": {
      "resource": {
        "type": {
          "$ref": "#/1043"
        },
        "flags": 1,
        "description": "The standard JSON format of a resource throughput"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RedistributeThroughputPropertiesResource",
    "properties": {
      "throughputPolicy": {
        "type": {
          "$ref": "#/1047"
        },
        "flags": 1,
        "description": "ThroughputPolicy to apply for throughput redistribution"
      },
      "targetPhysicalPartitionThroughputInfo": {
        "type": {
          "$ref": "#/1048"
        },
        "flags": 1,
        "description": "Array of PhysicalPartitionThroughputInfoResource objects."
      },
      "sourcePhysicalPartitionThroughputInfo": {
        "type": {
          "$ref": "#/1049"
        },
        "flags": 1,
        "description": "Array of PhysicalPartitionThroughputInfoResource objects."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "none"
  },
  {
    "$type": "StringLiteralType",
    "value": "equal"
  },
  {
    "$type": "StringLiteralType",
    "value": "custom"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1044"
      },
      {
        "$ref": "#/1045"
      },
      {
        "$ref": "#/1046"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1037"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1037"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "redistributeThroughput",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1034"
    },
    "input": {
      "$ref": "#/1041"
    }
  },
  {
    "$type": "ObjectType",
    "name": "MergeParameters",
    "properties": {
      "isDryRun": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Specifies whether the operation is a real merge operation or a simulation."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PhysicalPartitionStorageInfoCollection",
    "properties": {
      "physicalPartitionStorageInfoCollection": {
        "type": {
          "$ref": "#/1055"
        },
        "flags": 2,
        "description": "List of physical partitions and their properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PhysicalPartitionStorageInfo",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The unique identifier of the partition."
      },
      "storageInKB": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "The storage in KB for the physical partition."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1054"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "partitionMerge",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1053"
    },
    "input": {
      "$ref": "#/1052"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "partitionMerge",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1053"
    },
    "input": {
      "$ref": "#/1052"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContinuousBackupRestoreLocation",
    "properties": {
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the continuous backup restore location."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BackupInformation",
    "properties": {
      "continuousBackupInformation": {
        "type": {
          "$ref": "#/1060"
        },
        "flags": 2,
        "description": "Information about the status of continuous backups."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContinuousBackupInformation",
    "properties": {
      "latestRestorableTimestamp": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The latest restorable timestamp for a resource."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "retrieveContinuousBackupInformation",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1059"
    },
    "input": {
      "$ref": "#/1058"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToAutoscale",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToManualThroughput",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "retrieveThroughputDistribution",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1034"
    },
    "input": {
      "$ref": "#/1028"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "redistributeThroughput",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1034"
    },
    "input": {
      "$ref": "#/1041"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToAutoscale",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToManualThroughput",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "retrieveThroughputDistribution",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1034"
    },
    "input": {
      "$ref": "#/1028"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "redistributeThroughput",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1034"
    },
    "input": {
      "$ref": "#/1041"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "retrieveThroughputDistribution",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1034"
    },
    "input": {
      "$ref": "#/1028"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "redistributeThroughput",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1034"
    },
    "input": {
      "$ref": "#/1041"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToAutoscale",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToManualThroughput",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "partitionMerge",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1053"
    },
    "input": {
      "$ref": "#/1052"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "partitionMerge",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1053"
    },
    "input": {
      "$ref": "#/1052"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "retrieveContinuousBackupInformation",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1059"
    },
    "input": {
      "$ref": "#/1058"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToAutoscale",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/tables/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToManualThroughput",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/tables/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "retrieveContinuousBackupInformation",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/tables",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1059"
    },
    "input": {
      "$ref": "#/1058"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToAutoscale",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToManualThroughput",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToAutoscale",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToManualThroughput",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToAutoscale",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToManualThroughput",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToAutoscale",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToManualThroughput",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToAutoscale",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "migrateToManualThroughput",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/throughputSettings",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1021"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "retrieveContinuousBackupInformation",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1059"
    },
    "input": {
      "$ref": "#/1058"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataTransferJobGetResults",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/621"
        },
        "flags": 0,
        "description": "The properties of a DataTransfer Job"
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The unique resource identifier of the database account."
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the database account."
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of Azure resource."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "pause",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/dataTransferJobs",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1091"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "resume",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/dataTransferJobs",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1091"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "cancel",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/dataTransferJobs",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1091"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "complete",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/dataTransferJobs",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1091"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CommandPostBody",
    "properties": {
      "command": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The command which should be run"
      },
      "arguments": {
        "type": {
          "$ref": "#/1097"
        },
        "flags": 0,
        "description": "The arguments for the command to be run"
      },
      "host": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "IP address of the cassandra host to run the command on"
      },
      "cassandra-stop-start": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "If true, stops cassandra before executing the command and then start it again"
      },
      "readwrite": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "If true, allows the command to *write* to the cassandra directory, otherwise read-only."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CommandPostBodyArguments",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "invokeCommand",
    "resourceType": "Microsoft.DocumentDB/cassandraClusters",
    "apiVersion": "2025-05-01-preview",
    "input": {
      "$ref": "#/1096"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CommandAsyncPostBody",
    "properties": {
      "command": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The command which should be run"
      },
      "arguments": {
        "type": {
          "$ref": "#/256"
        },
        "flags": 0,
        "description": "The arguments for the command to be run"
      },
      "host": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "IP address of the cassandra host to run the command on"
      },
      "cassandra-stop-start": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "If true, stops cassandra before executing the command and then start it again"
      },
      "readWrite": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "If true, allows the command to *write* to the cassandra directory, otherwise read-only."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CommandPublicResource",
    "properties": {
      "command": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The command which should be run"
      },
      "commandId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The unique id of command"
      },
      "arguments": {
        "type": {
          "$ref": "#/256"
        },
        "flags": 0,
        "description": "The arguments for the command to be run"
      },
      "host": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "IP address of the cassandra host to run the command on"
      },
      "isAdmin": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "Whether command has admin privileges"
      },
      "cassandraStopStart": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "If true, stops cassandra before executing the command and then start it again"
      },
      "readWrite": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "If true, allows the command to *write* to the cassandra directory, otherwise read-only."
      },
      "result": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Result output of the command."
      },
      "status": {
        "type": {
          "$ref": "#/1107"
        },
        "flags": 0,
        "description": "Status of the command."
      },
      "outputFile": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the file where the result is written."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Done"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enqueue"
  },
  {
    "$type": "StringLiteralType",
    "value": "Processing"
  },
  {
    "$type": "StringLiteralType",
    "value": "Finished"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1101"
      },
      {
        "$ref": "#/1102"
      },
      {
        "$ref": "#/1103"
      },
      {
        "$ref": "#/1104"
      },
      {
        "$ref": "#/1105"
      },
      {
        "$ref": "#/1106"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceFunctionType",
    "name": "invokeCommandAsync",
    "resourceType": "Microsoft.DocumentDB/cassandraClusters",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1100"
    },
    "input": {
      "$ref": "#/1099"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "deallocate",
    "resourceType": "Microsoft.DocumentDB/cassandraClusters",
    "apiVersion": "2025-05-01-preview"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "start",
    "resourceType": "Microsoft.DocumentDB/cassandraClusters",
    "apiVersion": "2025-05-01-preview"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "reconcile",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/networkSecurityPerimeterConfigurations",
    "apiVersion": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "NotebookWorkspaceConnectionInfoResult",
    "properties": {
      "authToken": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Specifies auth token used for connecting to Notebook server (uses token-based auth)."
      },
      "notebookServerEndpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Specifies the endpoint of Notebook server."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listConnectionInfo",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/1112"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "regenerateAuthToken",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces",
    "apiVersion": "2025-05-01-preview"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "start",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces",
    "apiVersion": "2025-05-01-preview"
  }
]