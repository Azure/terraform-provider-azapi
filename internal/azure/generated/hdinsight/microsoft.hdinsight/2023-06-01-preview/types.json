[
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.HDInsight/clusterpools"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-06-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.HDInsight/clusterpools",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Gets or sets the properties. Define cluster pool specific properties."
      },
      "tags": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterPoolResourceProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 2,
        "description": "Provisioning state of the resource."
      },
      "deploymentId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A unique id generated by the RP to identify the resource."
      },
      "managedResourceGroupName": {
        "type": {
          "$ref": "#/10"
        },
        "flags": 0,
        "description": "A resource group created by RP, to hold the resources created by RP on-behalf of customers. It will also be used to generate aksManagedResourceGroupName by pattern: MC_{managedResourceGroupName}_{clusterPoolName}_{region}. Please make sure it meets resource group name restriction."
      },
      "aksManagedResourceGroupName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A resource group created by AKS, to hold the infrastructure resources created by AKS on-behalf of customers. It is generated by cluster pool name and managed resource group name by pattern: MC_{managedResourceGroupName}_{clusterPoolName}_{region}"
      },
      "clusterPoolProfile": {
        "type": {
          "$ref": "#/11"
        },
        "flags": 0,
        "description": "CLuster pool profile."
      },
      "computeProfile": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 1,
        "description": "CLuster pool compute profile."
      },
      "aksClusterProfile": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 2,
        "description": "Properties of underlying AKS cluster."
      },
      "networkProfile": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 0,
        "description": "Cluster pool network profile."
      },
      "logAnalyticsProfile": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Cluster pool log analytics profile to enable OMS agent for AKS cluster."
      },
      "status": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Business status of the resource."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/5"
      },
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 40
  },
  {
    "$type": "ObjectType",
    "name": "ClusterPoolResourcePropertiesClusterPoolProfile",
    "properties": {
      "clusterPoolVersion": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 1,
        "description": "Cluster pool version is a 2-part version."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "^(0|[1-9][0-9]{0,18})\\.(0|[1-9][0-9]{0,18})$"
  },
  {
    "$type": "ObjectType",
    "name": "ClusterPoolResourcePropertiesComputeProfile",
    "properties": {
      "vmSize": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 1,
        "description": "The virtual machine SKU."
      },
      "count": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 2,
        "description": "The number of virtual machines."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z0-9_\\-]{0,256}$"
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ObjectType",
    "name": "ClusterPoolResourcePropertiesAksClusterProfile",
    "properties": {
      "aksClusterResourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ARM Resource ID of the AKS cluster"
      },
      "aksClusterAgentPoolIdentityProfile": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Identity properties of the AKS cluster agentpool MSI"
      },
      "aksVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "AKS control plane and default node pool version of this ClusterPool"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AksClusterProfileAksClusterAgentPoolIdentityProfile",
    "properties": {
      "msiResourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "ResourceId of the MSI."
      },
      "msiClientId": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 1,
        "description": "ClientId of the MSI."
      },
      "msiObjectId": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 1,
        "description": "ObjectId of the MSI."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "^[{(]?[0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}[)}]?$"
  },
  {
    "$type": "ObjectType",
    "name": "ClusterPoolResourcePropertiesNetworkProfile",
    "properties": {
      "subnetId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Cluster pool subnet resource id."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterPoolResourcePropertiesLogAnalyticsProfile",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "True if log analytics is enabled for cluster pool, otherwise false."
      },
      "workspaceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Log analytics workspace to associate with the OMS agent."
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/24"
      },
      {
        "$ref": "#/25"
      },
      {
        "$ref": "#/26"
      },
      {
        "$ref": "#/27"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/29"
      },
      {
        "$ref": "#/30"
      },
      {
        "$ref": "#/31"
      },
      {
        "$ref": "#/32"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.HDInsight/clusterpools@2023-06-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/3"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.HDInsight/clusterpools/clusters"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-06-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.HDInsight/clusterpools/clusters",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 0,
        "description": "Gets or sets the properties. Define cluster specific properties."
      },
      "tags": {
        "type": {
          "$ref": "#/149"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterResourceProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 2,
        "description": "Provisioning state of the resource."
      },
      "clusterType": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 1,
        "description": "The type of cluster."
      },
      "deploymentId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A unique id generated by the RP to identify the resource."
      },
      "computeProfile": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 1,
        "description": "The compute profile."
      },
      "clusterProfile": {
        "type": {
          "$ref": "#/50"
        },
        "flags": 1,
        "description": "Cluster profile."
      },
      "status": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Business status of the resource."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/39"
      },
      {
        "$ref": "#/40"
      },
      {
        "$ref": "#/41"
      },
      {
        "$ref": "#/42"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z][a-zA-Z0-9]{0,31}$"
  },
  {
    "$type": "ObjectType",
    "name": "ComputeProfile",
    "properties": {
      "nodes": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 1,
        "description": "The nodes definitions."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NodeProfile",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 1,
        "description": "The node type."
      },
      "vmSize": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 1,
        "description": "The virtual machine SKU."
      },
      "count": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 1,
        "description": "The number of virtual machines."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "^(head|Head|HEAD|worker|Worker|WORKER)$"
  },
  {
    "$type": "IntegerType",
    "minValue": 1
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterProfile",
    "properties": {
      "clusterVersion": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 1,
        "description": "Version with 3/4 part."
      },
      "ossVersion": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 1,
        "description": "Version with three part."
      },
      "components": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 2,
        "description": "Component list of this cluster type and version."
      },
      "identityProfile": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 1,
        "description": "Identity Profile with details of an MSI."
      },
      "authorizationProfile": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 1,
        "description": "Authorization profile with details of AAD user Ids and group Ids authorized for data plane access."
      },
      "secretsProfile": {
        "type": {
          "$ref": "#/59"
        },
        "flags": 0,
        "description": "The cluster secret profile."
      },
      "serviceConfigsProfiles": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 0,
        "description": "The service configs profiles."
      },
      "connectivityProfile": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 2,
        "description": "Cluster connectivity profile."
      },
      "logAnalyticsProfile": {
        "type": {
          "$ref": "#/81"
        },
        "flags": 0,
        "description": "Cluster log analytics profile to enable or disable OMS agent for cluster."
      },
      "prometheusProfile": {
        "type": {
          "$ref": "#/83"
        },
        "flags": 0,
        "description": "Cluster Prometheus profile."
      },
      "sshProfile": {
        "type": {
          "$ref": "#/84"
        },
        "flags": 0,
        "description": "Ssh profile for the cluster."
      },
      "autoscaleProfile": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 0,
        "description": "This is the Autoscale profile for the cluster. This will allow customer to create cluster enabled with Autoscale."
      },
      "kafkaProfile": {
        "type": {
          "$ref": "#/116"
        },
        "flags": 0,
        "description": "Kafka cluster profile."
      },
      "trinoProfile": {
        "type": {
          "$ref": "#/117"
        },
        "flags": 0,
        "description": "Trino Cluster profile."
      },
      "llapProfile": {
        "type": {
          "$ref": "#/131"
        },
        "flags": 0,
        "description": "LLAP cluster profile."
      },
      "flinkProfile": {
        "type": {
          "$ref": "#/132"
        },
        "flags": 0,
        "description": "The Flink cluster profile."
      },
      "sparkProfile": {
        "type": {
          "$ref": "#/139"
        },
        "flags": 0,
        "description": "The spark cluster profile."
      },
      "stubProfile": {
        "type": {
          "$ref": "#/144"
        },
        "flags": 0,
        "description": "Stub cluster profile."
      },
      "scriptActionProfiles": {
        "type": {
          "$ref": "#/148"
        },
        "flags": 0,
        "description": "The script action profile list."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "^(0|[1-9][0-9]{0,18})\\.(0|[1-9][0-9]{0,18})\\.(0|[1-9][0-9]{0,18})(?:\\.(0|[1-9][0-9]{0,18}))?$"
  },
  {
    "$type": "StringType",
    "pattern": "^(0|[1-9][0-9]{0,18})\\.(0|[1-9][0-9]{0,18})\\.(0|[1-9][0-9]{0,18})$"
  },
  {
    "$type": "ObjectType",
    "name": "ClusterComponentsItem",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "version": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/53"
    }
  },
  {
    "$type": "ObjectType",
    "name": "IdentityProfile",
    "properties": {
      "msiResourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "ResourceId of the MSI."
      },
      "msiClientId": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 1,
        "description": "ClientId of the MSI."
      },
      "msiObjectId": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 1,
        "description": "ObjectId of the MSI."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AuthorizationProfile",
    "properties": {
      "userIds": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0,
        "description": "AAD user Ids authorized for data plane access."
      },
      "groupIds": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 0,
        "description": "AAD group Ids authorized for data plane access."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretsProfile",
    "properties": {
      "keyVaultResourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the user Key Vault where all the cluster specific user secrets are stored."
      },
      "secrets": {
        "type": {
          "$ref": "#/66"
        },
        "flags": 0,
        "description": "Properties of Key Vault secret."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretReference",
    "properties": {
      "referenceName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Reference name of the secret to be used in service configs."
      },
      "type": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 1,
        "description": "Type of key vault object: secret, key or certificate."
      },
      "version": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Version of the secret in key vault."
      },
      "keyVaultObjectName": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 1,
        "description": "Object identifier name of the secret in key vault."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "StringLiteralType",
    "value": "Secret"
  },
  {
    "$type": "StringLiteralType",
    "value": "Certificate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/61"
      },
      {
        "$ref": "#/62"
      },
      {
        "$ref": "#/63"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,126}$"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/60"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterServiceConfigsProfile",
    "properties": {
      "serviceName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the service the configurations should apply to."
      },
      "configs": {
        "type": {
          "$ref": "#/75"
        },
        "flags": 1,
        "description": "List of service configs."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterServiceConfig",
    "properties": {
      "component": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the component the config files should apply to."
      },
      "files": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 1,
        "description": "List of Config Files."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterConfigFile",
    "properties": {
      "fileName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Configuration file name."
      },
      "content": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Free form content of the entire configuration file."
      },
      "encoding": {
        "type": {
          "$ref": "#/72"
        },
        "flags": 0,
        "description": "This property indicates if the content is encoded and is case-insensitive. Please set the value to base64 if the content is base64 encoded. Set it to none or skip it if the content is plain text."
      },
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Path of the config file if content is specified."
      },
      "values": {
        "type": {
          "$ref": "#/73"
        },
        "flags": 0,
        "description": "List of key value pairs\nwhere key represents a valid service configuration name and value represents the value of the config."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Base64"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/70"
      },
      {
        "$ref": "#/71"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ClusterConfigFileValues",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/69"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/68"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/67"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ConnectivityProfile",
    "properties": {
      "web": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 1,
        "description": "Web connectivity endpoint details."
      },
      "ssh": {
        "type": {
          "$ref": "#/80"
        },
        "flags": 0,
        "description": "List of SSH connectivity endpoints."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ConnectivityProfileWeb",
    "properties": {
      "fqdn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Web connectivity endpoint."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SshConnectivityEndpoint",
    "properties": {
      "endpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "SSH connectivity endpoint."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/79"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterLogAnalyticsProfile",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "True if log analytics is enabled for the cluster, otherwise false."
      },
      "applicationLogs": {
        "type": {
          "$ref": "#/82"
        },
        "flags": 0,
        "description": "Collection of logs to be enabled or disabled for log analytics."
      },
      "metricsEnabled": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "True if metrics are enabled, otherwise false."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterLogAnalyticsApplicationLogs",
    "properties": {
      "stdOutEnabled": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "True if stdout is enabled, otherwise false."
      },
      "stdErrorEnabled": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "True if stderror is enabled, otherwise false."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterPrometheusProfile",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "Enable Prometheus for cluster or not."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SshProfile",
    "properties": {
      "count": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 1,
        "description": "Number of ssh pods per cluster."
      },
      "podPrefix": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Prefix of the pod names. Pod number will be appended to the prefix. The ingress URLs for the pods will be available at <clusterFqdn>/<sshBasePath>/<prefix>-<number>"
      }
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 0,
    "maxValue": 5
  },
  {
    "$type": "ObjectType",
    "name": "AutoscaleProfile",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "This indicates whether auto scale is enabled on HDInsight on AKS cluster."
      },
      "gracefulDecommissionTimeout": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "This property is for graceful decommission timeout; It has a default setting of 3600 seconds before forced shutdown takes place. This is the maximal time to wait for running containers and applications to complete before transition a DECOMMISSIONING node into DECOMMISSIONED. The default value is 3600 seconds. Negative value (like -1) is handled as infinite timeout."
      },
      "autoscaleType": {
        "type": {
          "$ref": "#/89"
        },
        "flags": 0,
        "description": "User to specify which type of Autoscale to be implemented - Scheduled Based or Load Based."
      },
      "scheduleBasedConfig": {
        "type": {
          "$ref": "#/90"
        },
        "flags": 0,
        "description": "Profiles of schedule based Autoscale."
      },
      "loadBasedConfig": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 0,
        "description": "Profiles of load based Autoscale."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ScheduleBased"
  },
  {
    "$type": "StringLiteralType",
    "value": "LoadBased"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/87"
      },
      {
        "$ref": "#/88"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ScheduleBasedConfig",
    "properties": {
      "timeZone": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "User has to specify the timezone on which the schedule has to be set for schedule based autoscale configuration."
      },
      "defaultCount": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 1,
        "description": "Setting default node count of current schedule configuration. Default node count specifies the number of nodes which are default when an specified scaling operation is executed (scale up/scale down)"
      },
      "schedules": {
        "type": {
          "$ref": "#/102"
        },
        "flags": 1,
        "description": "This specifies the schedules where scheduled based Autoscale to be enabled, the user has a choice to set multiple rules within the schedule across days and times (start/end)."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Schedule",
    "properties": {
      "startTime": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 1,
        "description": "User has to set the start time of current schedule configuration, format like 10:30 (HH:MM)."
      },
      "endTime": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 1,
        "description": "User has to set the end time of current schedule configuration, format like 10:30 (HH:MM)."
      },
      "count": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 1,
        "description": "User has to set the node count anticipated at end of the scaling operation of the set current schedule configuration, format is integer."
      },
      "days": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 1,
        "description": "User has to set the days where schedule has to be set for autoscale operation."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sunday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Monday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Tuesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Wednesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Thursday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Friday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Saturday"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/93"
      },
      {
        "$ref": "#/94"
      },
      {
        "$ref": "#/95"
      },
      {
        "$ref": "#/96"
      },
      {
        "$ref": "#/97"
      },
      {
        "$ref": "#/98"
      },
      {
        "$ref": "#/99"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/100"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/91"
    }
  },
  {
    "$type": "ObjectType",
    "name": "LoadBasedConfig",
    "properties": {
      "minNodes": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 1,
        "description": "User needs to set the minimum number of nodes for load based scaling, the load based scaling will use this to scale up and scale down between minimum and maximum number of nodes."
      },
      "maxNodes": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 1,
        "description": "User needs to set the maximum number of nodes for load based scaling, the load based scaling will use this to scale up and scale down between minimum and maximum number of nodes."
      },
      "pollInterval": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "User can specify the poll interval, this is the time period (in seconds) after which scaling metrics are polled for triggering a scaling operation."
      },
      "cooldownPeriod": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "This is a cool down period, this is a time period in seconds, which determines the amount of time that must elapse between a scaling activity started by a rule and the start of the next scaling activity, regardless of the rule that triggers it. The default value is 300 seconds."
      },
      "scalingRules": {
        "type": {
          "$ref": "#/114"
        },
        "flags": 1,
        "description": "The scaling rules."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScalingRule",
    "properties": {
      "actionType": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 1,
        "description": "The action type."
      },
      "evaluationCount": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 1,
        "description": "This is an evaluation count for a scaling condition, the number of times a trigger condition should be successful, before scaling activity is triggered."
      },
      "scalingMetric": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Metrics name for individual workloads. For example: cpu"
      },
      "comparisonRule": {
        "type": {
          "$ref": "#/108"
        },
        "flags": 1,
        "description": "The comparison rule."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "scaleup"
  },
  {
    "$type": "StringLiteralType",
    "value": "scaledown"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/105"
      },
      {
        "$ref": "#/106"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ComparisonRule",
    "properties": {
      "operator": {
        "type": {
          "$ref": "#/113"
        },
        "flags": 1,
        "description": "The comparison operator."
      },
      "threshold": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 1,
        "description": "Threshold setting."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "greaterThan"
  },
  {
    "$type": "StringLiteralType",
    "value": "greaterThanOrEqual"
  },
  {
    "$type": "StringLiteralType",
    "value": "lessThan"
  },
  {
    "$type": "StringLiteralType",
    "value": "lessThanOrEqual"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/109"
      },
      {
        "$ref": "#/110"
      },
      {
        "$ref": "#/111"
      },
      {
        "$ref": "#/112"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/104"
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ObjectType",
    "name": "ClusterProfileKafkaProfile",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/115"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrinoProfile",
    "properties": {
      "catalogOptions": {
        "type": {
          "$ref": "#/118"
        },
        "flags": 0,
        "description": "Trino cluster catalog options."
      },
      "coordinator": {
        "type": {
          "$ref": "#/122"
        },
        "flags": 0,
        "description": "Trino Coordinator."
      },
      "userPluginsSpec": {
        "type": {
          "$ref": "#/124"
        },
        "flags": 0,
        "description": "Trino user plugins spec"
      },
      "userTelemetrySpec": {
        "type": {
          "$ref": "#/128"
        },
        "flags": 0,
        "description": "User telemetry"
      },
      "worker": {
        "type": {
          "$ref": "#/130"
        },
        "flags": 0,
        "description": "Trino worker."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CatalogOptions",
    "properties": {
      "hive": {
        "type": {
          "$ref": "#/121"
        },
        "flags": 0,
        "description": "hive catalog options."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HiveCatalogOption",
    "properties": {
      "catalogName": {
        "type": {
          "$ref": "#/120"
        },
        "flags": 1,
        "description": "Name of trino catalog which should use specified hive metastore."
      },
      "metastoreDbConnectionPasswordSecret": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Secret reference name from secretsProfile.secrets containing password for database connection."
      },
      "metastoreDbConnectionURL": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Connection string for hive metastore database."
      },
      "metastoreDbConnectionUserName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "User name for database connection."
      },
      "metastoreWarehouseDir": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Metastore root directory URI, format: abfs[s]://<container>@<account_name>.dfs.core.windows.net/<path>. More details: https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-introduction-abfs-uri"
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 1
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/119"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrinoCoordinator",
    "properties": {
      "debug": {
        "type": {
          "$ref": "#/123"
        },
        "flags": 0,
        "description": "Trino debug configuration."
      },
      "highAvailabilityEnabled": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The flag that if enable coordinator HA, uses multiple coordinator replicas with auto failover, one per each head node. Default: true."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrinoDebugConfig",
    "properties": {
      "enable": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The flag that if enable debug or not."
      },
      "port": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "The debug port."
      },
      "suspend": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The flag that if suspend debug or not."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrinoUserPlugins",
    "properties": {
      "plugins": {
        "type": {
          "$ref": "#/127"
        },
        "flags": 0,
        "description": "Trino user plugins."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrinoUserPlugin",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Denotes whether the plugin is active or not."
      },
      "name": {
        "type": {
          "$ref": "#/120"
        },
        "flags": 0,
        "description": "This field maps to the sub-directory in trino plugins location, that will contain all the plugins under path."
      },
      "path": {
        "type": {
          "$ref": "#/126"
        },
        "flags": 0,
        "description": "Fully qualified path to the folder containing the plugins."
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "pattern": "^(https)|(abfss)://.*$"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/125"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrinoUserTelemetry",
    "properties": {
      "storage": {
        "type": {
          "$ref": "#/129"
        },
        "flags": 0,
        "description": "Trino user telemetry definition."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrinoTelemetryConfig",
    "properties": {
      "hivecatalogName": {
        "type": {
          "$ref": "#/120"
        },
        "flags": 0,
        "description": "Hive Catalog name used to mount external tables on the logs written by trino, if not specified there tables are not created."
      },
      "hivecatalogSchema": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Schema of the above catalog to use, to mount query logs as external tables, if not specified tables will be mounted under schema trinologs."
      },
      "partitionRetentionInDays": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Retention period for query log table partitions, this doesn't have any affect on actual data."
      },
      "path": {
        "type": {
          "$ref": "#/120"
        },
        "flags": 0,
        "description": "Azure storage location of the blobs."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrinoWorker",
    "properties": {
      "debug": {
        "type": {
          "$ref": "#/123"
        },
        "flags": 0,
        "description": "Trino debug configuration."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterProfileLlapProfile",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/115"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FlinkProfile",
    "properties": {
      "storage": {
        "type": {
          "$ref": "#/133"
        },
        "flags": 1,
        "description": "The storage profile"
      },
      "numReplicas": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "The number of task managers."
      },
      "jobManager": {
        "type": {
          "$ref": "#/136"
        },
        "flags": 1,
        "description": "Job Manager container/ process CPU and memory requirements"
      },
      "historyServer": {
        "type": {
          "$ref": "#/136"
        },
        "flags": 0,
        "description": "History Server container/ process CPU and memory requirements"
      },
      "taskManager": {
        "type": {
          "$ref": "#/136"
        },
        "flags": 1,
        "description": "Task Manager container/ process CPU and memory requirements"
      },
      "catalogOptions": {
        "type": {
          "$ref": "#/137"
        },
        "flags": 0,
        "description": "Flink cluster catalog options."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FlinkStorageProfile",
    "properties": {
      "storageUri": {
        "type": {
          "$ref": "#/134"
        },
        "flags": 1,
        "description": "Storage account uri which is used for savepoint and checkpoint state."
      },
      "storagekey": {
        "type": {
          "$ref": "#/135"
        },
        "flags": 0,
        "description": "Storage key is only required for wasb(s) storage."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "^(\\w{4,5})://(.*)@(.*).\\b(blob|dfs)\\b\\.core\\.windows\\.net$"
  },
  {
    "$type": "StringType",
    "sensitive": true
  },
  {
    "$type": "ObjectType",
    "name": "ComputeResourceDefinition",
    "properties": {
      "cpu": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 1,
        "description": "The required CPU."
      },
      "memory": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 1,
        "description": "The required memory in MB, Container memory will be 110 percentile"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FlinkCatalogOptions",
    "properties": {
      "hive": {
        "type": {
          "$ref": "#/138"
        },
        "flags": 0,
        "description": "Hive Catalog Option for Flink cluster."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FlinkHiveCatalogOption",
    "properties": {
      "metastoreDbConnectionPasswordSecret": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Secret reference name from secretsProfile.secrets containing password for database connection."
      },
      "metastoreDbConnectionURL": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Connection string for hive metastore database."
      },
      "metastoreDbConnectionUserName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "User name for database connection."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SparkProfile",
    "properties": {
      "defaultStorageUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The default storage URL."
      },
      "metastoreSpec": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 0,
        "description": "The metastore specification for Spark cluster."
      },
      "userPluginsSpec": {
        "type": {
          "$ref": "#/141"
        },
        "flags": 0,
        "description": "Spark user plugins spec"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SparkMetastoreSpec",
    "properties": {
      "dbServerHost": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The database server host."
      },
      "dbName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The database name."
      },
      "dbUserName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The database user name."
      },
      "dbPasswordSecretName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The secret name which contains the database user password."
      },
      "keyVaultId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The key vault resource id."
      },
      "thriftUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The thrift url."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SparkUserPlugins",
    "properties": {
      "plugins": {
        "type": {
          "$ref": "#/143"
        },
        "flags": 0,
        "description": "Spark user plugins."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SparkUserPlugin",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/126"
        },
        "flags": 1,
        "description": "Fully qualified path to the folder containing the plugins."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/142"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterProfileStubProfile",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/115"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScriptActionProfile",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Type of the script action. Supported type is bash scripts."
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Script name."
      },
      "url": {
        "type": {
          "$ref": "#/146"
        },
        "flags": 1,
        "description": "Url of the script file."
      },
      "parameters": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Additional parameters for the script action. It should be space-separated list of arguments required for script execution."
      },
      "services": {
        "type": {
          "$ref": "#/147"
        },
        "flags": 1,
        "description": "List of services to apply the script action."
      },
      "timeoutInMinutes": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Timeout duration for the script action in minutes."
      },
      "shouldPersist": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Specify if the script should persist on the cluster."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "^(https)|(http)|(abfss)|(abfs)|(wasbs)|(wasb)://.*$"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/145"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.HDInsight/clusterpools/clusters@2023-06-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/37"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "ClusterResizeData",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/152"
        },
        "flags": 0,
        "description": "Sets the properties. Define cluster resize specific properties."
      },
      "tags": {
        "type": {
          "$ref": "#/153"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\""
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterResizeProperties",
    "properties": {
      "targetWorkerNodeCount": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 1,
        "description": "Target node count of worker node."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Cluster",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 0,
        "description": "Gets or sets the properties. Define cluster specific properties."
      },
      "tags": {
        "type": {
          "$ref": "#/155"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\""
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "resize",
    "resourceType": "Microsoft.HDInsight/clusterpools/clusters",
    "apiVersion": "2023-06-01-preview",
    "output": {
      "$ref": "#/154"
    },
    "input": {
      "$ref": "#/151"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterJob",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/158"
        },
        "flags": 1,
        "description": "Properties of cluster job."
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\""
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ClusterJobProperties",
    "discriminator": "jobType",
    "baseProperties": {},
    "elements": {
      "FlinkJob": {
        "$ref": "#/159"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FlinkJobProperties",
    "properties": {
      "jobName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of job"
      },
      "jobJarDirectory": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A string property that specifies the directory where the job JAR is located."
      },
      "jarName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A string property that represents the name of the job JAR."
      },
      "entryClass": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A string property that specifies the entry class for the Flink job."
      },
      "args": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A string property representing additional JVM arguments for the Flink job. It should be space separated value."
      },
      "savePointName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A string property that represents the name of the savepoint for the Flink job"
      },
      "action": {
        "type": {
          "$ref": "#/169"
        },
        "flags": 0,
        "description": "A string property that indicates the action to be performed on the Flink job. It can have one of the following enum values => NEW, UPDATE, STATELESS_UPDATE, STOP, START, CANCEL, SAVEPOINT, LIST_SAVEPOINT, or DELETE."
      },
      "flinkConfiguration": {
        "type": {
          "$ref": "#/170"
        },
        "flags": 0,
        "description": "Additional properties used to configure Flink jobs. It allows users to set properties such as parallelism and jobSavePointDirectory. It accepts additional key-value pairs as properties, where the keys are strings and the values are strings as well."
      },
      "jobId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Unique id for identifying a job"
      },
      "status": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Status of job."
      },
      "jobOutput": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Output of job."
      },
      "actionResult": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Action result of job."
      },
      "lastSavePoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The last savepoint."
      },
      "jobType": {
        "type": {
          "$ref": "#/171"
        },
        "flags": 1,
        "description": "Type of cluster job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NEW"
  },
  {
    "$type": "StringLiteralType",
    "value": "UPDATE"
  },
  {
    "$type": "StringLiteralType",
    "value": "STATELESS_UPDATE"
  },
  {
    "$type": "StringLiteralType",
    "value": "STOP"
  },
  {
    "$type": "StringLiteralType",
    "value": "START"
  },
  {
    "$type": "StringLiteralType",
    "value": "CANCEL"
  },
  {
    "$type": "StringLiteralType",
    "value": "SAVEPOINT"
  },
  {
    "$type": "StringLiteralType",
    "value": "LIST_SAVEPOINT"
  },
  {
    "$type": "StringLiteralType",
    "value": "DELETE"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/160"
      },
      {
        "$ref": "#/161"
      },
      {
        "$ref": "#/162"
      },
      {
        "$ref": "#/163"
      },
      {
        "$ref": "#/164"
      },
      {
        "$ref": "#/165"
      },
      {
        "$ref": "#/166"
      },
      {
        "$ref": "#/167"
      },
      {
        "$ref": "#/168"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "FlinkJobPropertiesFlinkConfiguration",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "FlinkJob"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "runJob",
    "resourceType": "Microsoft.HDInsight/clusterpools/clusters",
    "apiVersion": "2023-06-01-preview",
    "output": {
      "$ref": "#/157"
    },
    "input": {
      "$ref": "#/157"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NameAvailabilityParameters",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name for checking availability."
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource type in Microsoft.HDInsight."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NameAvailabilityResult",
    "properties": {
      "nameAvailable": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Indicator of availability of the Microsoft.HDInsight resource name."
      },
      "reason": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The reason of unavailability."
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The error message of unavailability."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "checkNameAvailability",
    "resourceType": "Microsoft.HDInsight/locations",
    "apiVersion": "2023-06-01-preview",
    "output": {
      "$ref": "#/174"
    },
    "input": {
      "$ref": "#/173"
    }
  }
]