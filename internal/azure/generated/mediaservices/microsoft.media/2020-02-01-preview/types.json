[
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaServices/mediaGraphs"
  },
  {
    "$type": "StringLiteralType",
    "value": "2020-02-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaServices/mediaGraphs",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Class for Media Graph properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MediaGraphProperties",
    "properties": {
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Media Graph description."
      },
      "state": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 2,
        "description": "Media Graph state which indicates the resource allocation status for running the media graph pipeline."
      },
      "created": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Date the Media Graph was created."
      },
      "lastModified": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Date the Media Graph was last modified."
      },
      "sources": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 1,
        "description": "Media Graph sources."
      },
      "sinks": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 1,
        "description": "Media Graph sinks."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Starting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopped"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopping"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/5"
      },
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "MediaGraphSource",
    "discriminator": "@odata.type",
    "baseProperties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Source name."
      }
    },
    "elements": {
      "#Microsoft.Media.MediaGraphRtspSource": {
        "$ref": "#/11"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MediaGraphRtspSource",
    "properties": {
      "transport": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 1,
        "description": "Underlying RTSP transport. This can be used to enable or disable HTTP tunneling."
      },
      "endpoint": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 1,
        "description": "RTSP endpoint of the stream being connected to."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Http"
  },
  {
    "$type": "StringLiteralType",
    "value": "Tcp"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/12"
      },
      {
        "$ref": "#/13"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "MediaGraphEndpoint",
    "discriminator": "@odata.type",
    "baseProperties": {
      "credentials": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 0,
        "description": "Polymorphic credentials to present to the endpoint."
      },
      "url": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Url for the endpoint."
      }
    },
    "elements": {
      "#Microsoft.Media.MediaGraphClearEndpoint": {
        "$ref": "#/19"
      },
      "#Microsoft.Media.MediaGraphTlsEndpoint": {
        "$ref": "#/21"
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "MediaGraphCredentials",
    "discriminator": "@odata.type",
    "baseProperties": {},
    "elements": {
      "#Microsoft.Media.MediaGraphUsernamePasswordCredentials": {
        "$ref": "#/17"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MediaGraphUsernamePasswordCredentials",
    "properties": {
      "username": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Username for a username/password pair."
      },
      "password": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Password for a username/password pair."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.MediaGraphUsernamePasswordCredentials"
  },
  {
    "$type": "ObjectType",
    "name": "MediaGraphClearEndpoint",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.MediaGraphClearEndpoint"
  },
  {
    "$type": "ObjectType",
    "name": "MediaGraphTlsEndpoint",
    "properties": {
      "trustedCertificates": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 0,
        "description": "What certificates should be trusted when authenticating a TLS connection. Null designates that Azure Media's source of trust should be used."
      },
      "validationOptions": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 0,
        "description": "Validation options to use when authenticating a TLS connection. By default, strict validation is used."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "MediaGraphCertificateSource",
    "discriminator": "@odata.type",
    "baseProperties": {},
    "elements": {
      "#Microsoft.Media.MediaGraphPemCertificateList": {
        "$ref": "#/23"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MediaGraphPemCertificateList",
    "properties": {
      "certificates": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 1,
        "description": "PEM formatted public certificates, one per entry."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.MediaGraphPemCertificateList"
  },
  {
    "$type": "ObjectType",
    "name": "MediaGraphTlsValidationOptions",
    "properties": {
      "ignoreHostname": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 1,
        "description": "Ignore the host name (common name) during validation."
      },
      "ignoreSignature": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 1,
        "description": "Ignore the integrity of the certificate chain at the current time."
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.MediaGraphTlsEndpoint"
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.MediaGraphRtspSource"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/10"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "MediaGraphSink",
    "discriminator": "@odata.type",
    "baseProperties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Sink name."
      },
      "inputs": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 1,
        "description": "Sink inputs."
      }
    },
    "elements": {
      "#Microsoft.Media.MediaGraphAssetSink": {
        "$ref": "#/33"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "MediaGraphAssetSink",
    "properties": {
      "assetName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Asset name."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.MediaGraphAssetSink"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/31"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaServices/mediaGraphs@2020-02-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/3"
    },
    "flags": 0
  },
  {
    "$type": "ResourceFunctionType",
    "name": "start",
    "resourceType": "Microsoft.Media/mediaServices/mediaGraphs",
    "apiVersion": "2020-02-01-preview"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "stop",
    "resourceType": "Microsoft.Media/mediaServices/mediaGraphs",
    "apiVersion": "2020-02-01-preview"
  }
]