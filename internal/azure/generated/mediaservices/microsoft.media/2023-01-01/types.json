[
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaServices/accountFilters"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaServices/accountFilters",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The Media Filter properties."
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system metadata relating to this resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MediaFilterProperties",
    "properties": {
      "presentationTimeRange": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "The presentation time range."
      },
      "firstQuality": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "The first quality."
      },
      "tracks": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 0,
        "description": "The tracks selection conditions."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PresentationTimeRange",
    "properties": {
      "startTimestamp": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "The absolute start time boundary."
      },
      "endTimestamp": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "The absolute end time boundary."
      },
      "presentationWindowDuration": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "The relative to end sliding window."
      },
      "liveBackoffDuration": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "The relative to end right edge."
      },
      "timescale": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "The time scale of time stamps."
      },
      "forceEndTimestamp": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "The indicator of forcing existing of end time stamp."
      }
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ObjectType",
    "name": "FirstQuality",
    "properties": {
      "bitrate": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 1,
        "description": "The first quality bitrate."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FilterTrackSelection",
    "properties": {
      "trackSelections": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "The track selections."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FilterTrackPropertyCondition",
    "properties": {
      "property": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 1,
        "description": "The track property type."
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The track property value."
      },
      "operation": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 1,
        "description": "The track property condition operation."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Type"
  },
  {
    "$type": "StringLiteralType",
    "value": "Name"
  },
  {
    "$type": "StringLiteralType",
    "value": "Language"
  },
  {
    "$type": "StringLiteralType",
    "value": "FourCC"
  },
  {
    "$type": "StringLiteralType",
    "value": "Bitrate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/12"
      },
      {
        "$ref": "#/13"
      },
      {
        "$ref": "#/14"
      },
      {
        "$ref": "#/15"
      },
      {
        "$ref": "#/16"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Equal"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotEqual"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/18"
      },
      {
        "$ref": "#/19"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/10"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/9"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/24"
      },
      {
        "$ref": "#/25"
      },
      {
        "$ref": "#/26"
      },
      {
        "$ref": "#/27"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/29"
      },
      {
        "$ref": "#/30"
      },
      {
        "$ref": "#/31"
      },
      {
        "$ref": "#/32"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaServices/accountFilters@2023-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/3"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaservices"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaservices",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 0,
        "description": "The resource properties."
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system metadata relating to this resource."
      },
      "identity": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 0,
        "description": "The Managed Identity for the Media Services account."
      },
      "tags": {
        "type": {
          "$ref": "#/89"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MediaServiceProperties",
    "properties": {
      "mediaServiceId": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 2,
        "description": "The Media Services account ID."
      },
      "storageAccounts": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "The storage accounts for this resource."
      },
      "storageAuthentication": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0
      },
      "encryption": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "The account encryption properties."
      },
      "keyDelivery": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 0,
        "description": "The Key Delivery properties for Media Services account."
      },
      "publicNetworkAccess": {
        "type": {
          "$ref": "#/62"
        },
        "flags": 0,
        "description": "Whether or not public network access is allowed for resources under the Media Services account."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/66"
        },
        "flags": 2,
        "description": "Provisioning state of the Media Services account."
      },
      "privateEndpointConnections": {
        "type": {
          "$ref": "#/80"
        },
        "flags": 2,
        "description": "The Private Endpoint Connections created for the Media Service account."
      },
      "minimumTlsVersion": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 0,
        "description": "The minimum TLS version allowed for this account's requests. This is an optional property. If unspecified, a secure default value will be used."
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 36,
    "maxLength": 36,
    "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
  },
  {
    "$type": "ObjectType",
    "name": "StorageAccount",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts."
      },
      "type": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 1,
        "description": "The type of the storage account."
      },
      "identity": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "The storage account identity."
      },
      "status": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The current status of the storage account mapping."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Primary"
  },
  {
    "$type": "StringLiteralType",
    "value": "Secondary"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/41"
      },
      {
        "$ref": "#/42"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceIdentity",
    "properties": {
      "userAssignedIdentity": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The user assigned managed identity's ARM ID to use when accessing a resource."
      },
      "useSystemAssignedIdentity": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 1,
        "description": "Indicates whether to use System Assigned Managed Identity. Mutual exclusive with User Assigned Managed Identity."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/40"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "System"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/46"
      },
      {
        "$ref": "#/47"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AccountEncryption",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 1,
        "description": "The type of key used to encrypt the Account Key."
      },
      "keyVaultProperties": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 0,
        "description": "The properties of the key used to encrypt the account."
      },
      "identity": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "The Key Vault identity."
      },
      "status": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The current status of the Key Vault mapping."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemKey"
  },
  {
    "$type": "StringLiteralType",
    "value": "CustomerKey"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/50"
      },
      {
        "$ref": "#/51"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "KeyVaultProperties",
    "properties": {
      "keyIdentifier": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
      },
      "currentKeyIdentifier": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The current key used to encrypt the Media Services account, including the key version."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KeyDelivery",
    "properties": {
      "accessControl": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "The access control properties for Key Delivery."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AccessControl",
    "properties": {
      "defaultAction": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 0,
        "description": "The behavior for IP access control in Key Delivery."
      },
      "ipAllowList": {
        "type": {
          "$ref": "#/59"
        },
        "flags": 0,
        "description": "The IP allow list for access control in Key Delivery. If the default action is set to 'Allow', the IP allow list must be empty."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Allow"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deny"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/56"
      },
      {
        "$ref": "#/57"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/60"
      },
      {
        "$ref": "#/61"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/63"
      },
      {
        "$ref": "#/64"
      },
      {
        "$ref": "#/65"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnection",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 0,
        "description": "Resource properties."
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnectionProperties",
    "properties": {
      "privateEndpoint": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 0,
        "description": "The resource of private end point."
      },
      "privateLinkServiceConnectionState": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 1,
        "description": "A collection of information about the state of the connection between service consumer and provider."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/79"
        },
        "flags": 2,
        "description": "The provisioning state of the private endpoint connection resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpoint",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The ARM identifier for Private Endpoint"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateLinkServiceConnectionState",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 0,
        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The reason for approval/rejection of the connection."
      },
      "actionsRequired": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A message indicating if changes on the service provider require any updates on the consumer."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Approved"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rejected"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/71"
      },
      {
        "$ref": "#/72"
      },
      {
        "$ref": "#/73"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/75"
      },
      {
        "$ref": "#/76"
      },
      {
        "$ref": "#/77"
      },
      {
        "$ref": "#/78"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/67"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Tls10"
  },
  {
    "$type": "StringLiteralType",
    "value": "Tls11"
  },
  {
    "$type": "StringLiteralType",
    "value": "Tls12"
  },
  {
    "$type": "StringLiteralType",
    "value": "Tls13"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/81"
      },
      {
        "$ref": "#/82"
      },
      {
        "$ref": "#/83"
      },
      {
        "$ref": "#/84"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "MediaServiceIdentity",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The identity type."
      },
      "principalId": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 2,
        "description": "The Principal ID of the identity."
      },
      "tenantId": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 2,
        "description": "The Tenant ID of the identity."
      },
      "userAssignedIdentities": {
        "type": {
          "$ref": "#/88"
        },
        "flags": 0,
        "description": "The user assigned managed identities."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedManagedIdentity",
    "properties": {
      "clientId": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 2,
        "description": "The client ID."
      },
      "principalId": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 2,
        "description": "The principal ID."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedManagedIdentities",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/87"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaservices@2023-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/37"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaservices/privateEndpointConnections"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaservices/privateEndpointConnections",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 0,
        "description": "Resource properties."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaservices/privateEndpointConnections@2023-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/93"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaServices/assets"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaServices/assets",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/95"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/96"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 0,
        "description": "The resource properties."
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system metadata relating to this resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssetProperties",
    "properties": {
      "assetId": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 2,
        "description": "The Asset ID."
      },
      "created": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The creation date of the Asset."
      },
      "lastModified": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The last modified date of the Asset."
      },
      "alternateId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The alternate ID of the Asset."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Asset description."
      },
      "container": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the asset blob container."
      },
      "storageAccountName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the storage account."
      },
      "storageEncryptionFormat": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 2,
        "description": "The Asset encryption format. One of None or MediaStorageEncryption."
      },
      "encryptionScope": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Asset container encryption scope in the storage account."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "MediaStorageClientEncryption"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/99"
      },
      {
        "$ref": "#/100"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaServices/assets@2023-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/97"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaServices/assets/assetFilters"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaServices/assets/assetFilters",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/104"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The Media Filter properties."
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system metadata relating to this resource."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaServices/assets/assetFilters@2023-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/105"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaServices/assets/tracks"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaServices/assets/tracks",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/108"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/110"
        },
        "flags": 0,
        "description": "The resource properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssetTrackProperties",
    "properties": {
      "track": {
        "type": {
          "$ref": "#/111"
        },
        "flags": 0,
        "description": "Detailed information about a track in the asset."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/126"
        },
        "flags": 2,
        "description": "Provisioning state of the asset track."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "TrackBase",
    "discriminator": "@odata.type",
    "baseProperties": {},
    "elements": {
      "#Microsoft.Media.AudioTrack": {
        "$ref": "#/112"
      },
      "#Microsoft.Media.TextTrack": {
        "$ref": "#/116"
      },
      "#Microsoft.Media.VideoTrack": {
        "$ref": "#/121"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AudioTrack",
    "properties": {
      "fileName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The file name to the source file. This file is located in the storage container of the asset."
      },
      "displayName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The display name of the audio track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA."
      },
      "languageCode": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The RFC5646 language code for the audio track."
      },
      "hlsSettings": {
        "type": {
          "$ref": "#/113"
        },
        "flags": 0,
        "description": "The HLS specific setting for the audio track."
      },
      "dashSettings": {
        "type": {
          "$ref": "#/114"
        },
        "flags": 0,
        "description": "The DASH specific setting for the audio track."
      },
      "mpeg4TrackId": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "The MPEG-4 audio track ID for the audio track."
      },
      "bitRate": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "The stream bit rate for the audio track."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/115"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HlsSettings",
    "properties": {
      "default": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "The default for the HLS setting."
      },
      "forced": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "The forced for the HLS setting."
      },
      "characteristics": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The characteristics for the HLS setting."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DashSettings",
    "properties": {
      "role": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The role for the DASH setting."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.AudioTrack"
  },
  {
    "$type": "ObjectType",
    "name": "TextTrack",
    "properties": {
      "fileName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The file name to the source file. This file is located in the storage container of the asset."
      },
      "displayName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The display name of the text track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA."
      },
      "languageCode": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The RFC5646 language code for the text track."
      },
      "playerVisibility": {
        "type": {
          "$ref": "#/119"
        },
        "flags": 0,
        "description": "When PlayerVisibility is set to \"Visible\", the text track will be present in the DASH manifest or HLS playlist when requested by a client. When the PlayerVisibility is set to \"Hidden\", the text will not be available to the client. The default value is \"Visible\"."
      },
      "hlsSettings": {
        "type": {
          "$ref": "#/113"
        },
        "flags": 0,
        "description": "The HLS specific setting for the text track."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/120"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Hidden"
  },
  {
    "$type": "StringLiteralType",
    "value": "Visible"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/117"
      },
      {
        "$ref": "#/118"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.TextTrack"
  },
  {
    "$type": "ObjectType",
    "name": "VideoTrack",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/122"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.VideoTrack"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/123"
      },
      {
        "$ref": "#/124"
      },
      {
        "$ref": "#/125"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaServices/assets/tracks@2023-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/109"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaServices/contentKeyPolicies"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaServices/contentKeyPolicies",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/128"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/129"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/131"
        },
        "flags": 0,
        "description": "The properties of the Content Key Policy."
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system metadata relating to this resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyProperties",
    "properties": {
      "policyId": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 2,
        "description": "The legacy Policy ID."
      },
      "created": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The creation date of the Policy"
      },
      "lastModified": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The last modified date of the Policy"
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A description for the Policy."
      },
      "options": {
        "type": {
          "$ref": "#/201"
        },
        "flags": 1,
        "description": "The Key Policy options."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyOption",
    "properties": {
      "policyOptionId": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 2,
        "description": "The legacy Policy Option ID."
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Policy Option description."
      },
      "configuration": {
        "type": {
          "$ref": "#/133"
        },
        "flags": 1,
        "description": "The key delivery configuration."
      },
      "restriction": {
        "type": {
          "$ref": "#/180"
        },
        "flags": 1,
        "description": "The requirements that must be met to deliver keys with this configuration"
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ContentKeyPolicyConfiguration",
    "discriminator": "@odata.type",
    "baseProperties": {},
    "elements": {
      "#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration": {
        "$ref": "#/134"
      },
      "#Microsoft.Media.ContentKeyPolicyFairPlayConfiguration": {
        "$ref": "#/136"
      },
      "#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration": {
        "$ref": "#/146"
      },
      "#Microsoft.Media.ContentKeyPolicyUnknownConfiguration": {
        "$ref": "#/176"
      },
      "#Microsoft.Media.ContentKeyPolicyWidevineConfiguration": {
        "$ref": "#/178"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyClearKeyConfiguration",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/135"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyFairPlayConfiguration",
    "properties": {
      "ask": {
        "type": {
          "$ref": "#/137"
        },
        "flags": 1,
        "description": "The key that must be used as FairPlay Application Secret key. This needs to be base64 encoded."
      },
      "fairPlayPfxPassword": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The password encrypting FairPlay certificate in PKCS 12 (pfx) format."
      },
      "fairPlayPfx": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key)."
      },
      "rentalAndLeaseKeyType": {
        "type": {
          "$ref": "#/143"
        },
        "flags": 1,
        "description": "The rental and lease key type."
      },
      "rentalDuration": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 1,
        "description": "The rental duration. Must be greater than or equal to 0."
      },
      "offlineRentalConfiguration": {
        "type": {
          "$ref": "#/144"
        },
        "flags": 0,
        "description": "Offline rental policy"
      },
      "@odata.type": {
        "type": {
          "$ref": "#/145"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Undefined"
  },
  {
    "$type": "StringLiteralType",
    "value": "DualExpiry"
  },
  {
    "$type": "StringLiteralType",
    "value": "PersistentUnlimited"
  },
  {
    "$type": "StringLiteralType",
    "value": "PersistentLimited"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/138"
      },
      {
        "$ref": "#/139"
      },
      {
        "$ref": "#/140"
      },
      {
        "$ref": "#/141"
      },
      {
        "$ref": "#/142"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyFairPlayOfflineRentalConfiguration",
    "properties": {
      "playbackDurationSeconds": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 1,
        "description": "Playback duration"
      },
      "storageDurationSeconds": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 1,
        "description": "Storage duration"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyFairPlayConfiguration"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyPlayReadyConfiguration",
    "properties": {
      "licenses": {
        "type": {
          "$ref": "#/174"
        },
        "flags": 1,
        "description": "The PlayReady licenses."
      },
      "responseCustomData": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The custom response data."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyPlayReadyLicense",
    "properties": {
      "allowTestDevices": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 1,
        "description": "A flag indicating whether test devices can use the license."
      },
      "securityLevel": {
        "type": {
          "$ref": "#/152"
        },
        "flags": 0,
        "description": "The security level."
      },
      "beginDate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The begin date of license"
      },
      "expirationDate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The expiration date of license."
      },
      "relativeBeginDate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The relative begin date of license."
      },
      "relativeExpirationDate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The relative expiration date of license."
      },
      "gracePeriod": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The grace period of license."
      },
      "playRight": {
        "type": {
          "$ref": "#/153"
        },
        "flags": 0,
        "description": "The license PlayRight"
      },
      "licenseType": {
        "type": {
          "$ref": "#/163"
        },
        "flags": 1,
        "description": "The license type."
      },
      "contentKeyLocation": {
        "type": {
          "$ref": "#/164"
        },
        "flags": 1,
        "description": "The content key location."
      },
      "contentType": {
        "type": {
          "$ref": "#/173"
        },
        "flags": 1,
        "description": "The PlayReady content type."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "SL150"
  },
  {
    "$type": "StringLiteralType",
    "value": "SL2000"
  },
  {
    "$type": "StringLiteralType",
    "value": "SL3000"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/148"
      },
      {
        "$ref": "#/149"
      },
      {
        "$ref": "#/150"
      },
      {
        "$ref": "#/151"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyPlayReadyPlayRight",
    "properties": {
      "firstPlayExpiration": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The amount of time that the license is valid after the license is first used to play content."
      },
      "scmsRestriction": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Configures the Serial Copy Management System (SCMS) in the license. Must be between 0 and 3 inclusive."
      },
      "agcAndColorStripeRestriction": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Configures Automatic Gain Control (AGC) and Color Stripe in the license. Must be between 0 and 3 inclusive."
      },
      "explicitAnalogTelevisionOutputRestriction": {
        "type": {
          "$ref": "#/154"
        },
        "flags": 0,
        "description": "Configures the Explicit Analog Television Output Restriction in the license. Configuration data must be between 0 and 3 inclusive."
      },
      "digitalVideoOnlyContentRestriction": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 1,
        "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
      },
      "imageConstraintForAnalogComponentVideoRestriction": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 1,
        "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
      },
      "imageConstraintForAnalogComputerMonitorRestriction": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 1,
        "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
      },
      "allowPassingVideoContentToUnknownOutput": {
        "type": {
          "$ref": "#/159"
        },
        "flags": 1,
        "description": "Configures Unknown output handling settings of the license."
      },
      "uncompressedDigitalVideoOpl": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Specifies the output protection level for uncompressed digital video."
      },
      "compressedDigitalVideoOpl": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Specifies the output protection level for compressed digital video."
      },
      "analogVideoOpl": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Specifies the output protection level for compressed digital audio."
      },
      "compressedDigitalAudioOpl": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Specifies the output protection level for compressed digital audio."
      },
      "uncompressedDigitalAudioOpl": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Specifies the output protection level for uncompressed digital audio."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction",
    "properties": {
      "bestEffort": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 1,
        "description": "Indicates whether this restriction is enforced on a Best Effort basis."
      },
      "configurationData": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 1,
        "description": "Configures the restriction control bits. Must be between 0 and 3 inclusive."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotAllowed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Allowed"
  },
  {
    "$type": "StringLiteralType",
    "value": "AllowedWithVideoConstriction"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/155"
      },
      {
        "$ref": "#/156"
      },
      {
        "$ref": "#/157"
      },
      {
        "$ref": "#/158"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "NonPersistent"
  },
  {
    "$type": "StringLiteralType",
    "value": "Persistent"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/160"
      },
      {
        "$ref": "#/161"
      },
      {
        "$ref": "#/162"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ContentKeyPolicyPlayReadyContentKeyLocation",
    "discriminator": "@odata.type",
    "baseProperties": {},
    "elements": {
      "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader": {
        "$ref": "#/165"
      },
      "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier": {
        "$ref": "#/167"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/166"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier",
    "properties": {
      "keyId": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 1,
        "description": "The content key ID."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/168"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unspecified"
  },
  {
    "$type": "StringLiteralType",
    "value": "UltraVioletDownload"
  },
  {
    "$type": "StringLiteralType",
    "value": "UltraVioletStreaming"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/169"
      },
      {
        "$ref": "#/170"
      },
      {
        "$ref": "#/171"
      },
      {
        "$ref": "#/172"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/147"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyUnknownConfiguration",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyUnknownConfiguration"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyWidevineConfiguration",
    "properties": {
      "widevineTemplate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The Widevine template."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/179"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyWidevineConfiguration"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ContentKeyPolicyRestriction",
    "discriminator": "@odata.type",
    "baseProperties": {},
    "elements": {
      "#Microsoft.Media.ContentKeyPolicyOpenRestriction": {
        "$ref": "#/181"
      },
      "#Microsoft.Media.ContentKeyPolicyTokenRestriction": {
        "$ref": "#/183"
      },
      "#Microsoft.Media.ContentKeyPolicyUnknownRestriction": {
        "$ref": "#/199"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyOpenRestriction",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/182"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyOpenRestriction"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyTokenRestriction",
    "properties": {
      "issuer": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The token issuer."
      },
      "audience": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The audience for the token."
      },
      "primaryVerificationKey": {
        "type": {
          "$ref": "#/184"
        },
        "flags": 1,
        "description": "The primary verification key."
      },
      "alternateVerificationKeys": {
        "type": {
          "$ref": "#/191"
        },
        "flags": 0,
        "description": "A list of alternative verification keys."
      },
      "requiredClaims": {
        "type": {
          "$ref": "#/193"
        },
        "flags": 0,
        "description": "A list of required token claims."
      },
      "restrictionTokenType": {
        "type": {
          "$ref": "#/197"
        },
        "flags": 1,
        "description": "The type of token."
      },
      "openIdConnectDiscoveryDocument": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The OpenID connect discovery document."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/198"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ContentKeyPolicyRestrictionTokenKey",
    "discriminator": "@odata.type",
    "baseProperties": {},
    "elements": {
      "#Microsoft.Media.ContentKeyPolicyRsaTokenKey": {
        "$ref": "#/185"
      },
      "#Microsoft.Media.ContentKeyPolicySymmetricTokenKey": {
        "$ref": "#/187"
      },
      "#Microsoft.Media.ContentKeyPolicyX509CertificateTokenKey": {
        "$ref": "#/189"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyRsaTokenKey",
    "properties": {
      "exponent": {
        "type": {
          "$ref": "#/137"
        },
        "flags": 1,
        "description": "The RSA Parameter exponent"
      },
      "modulus": {
        "type": {
          "$ref": "#/137"
        },
        "flags": 1,
        "description": "The RSA Parameter modulus"
      },
      "@odata.type": {
        "type": {
          "$ref": "#/186"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyRsaTokenKey"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicySymmetricTokenKey",
    "properties": {
      "keyValue": {
        "type": {
          "$ref": "#/137"
        },
        "flags": 1,
        "description": "The key value of the key"
      },
      "@odata.type": {
        "type": {
          "$ref": "#/188"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicySymmetricTokenKey"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyX509CertificateTokenKey",
    "properties": {
      "rawBody": {
        "type": {
          "$ref": "#/137"
        },
        "flags": 1,
        "description": "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)"
      },
      "@odata.type": {
        "type": {
          "$ref": "#/190"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyX509CertificateTokenKey"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/184"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyTokenClaim",
    "properties": {
      "claimType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Token claim type."
      },
      "claimValue": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Token claim value."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/192"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Swt"
  },
  {
    "$type": "StringLiteralType",
    "value": "Jwt"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/194"
      },
      {
        "$ref": "#/195"
      },
      {
        "$ref": "#/196"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyTokenRestriction"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyUnknownRestriction",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/200"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyUnknownRestriction"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/132"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaServices/contentKeyPolicies@2023-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/130"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaServices/streamingPolicies"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaServices/streamingPolicies",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/203"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/204"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/206"
        },
        "flags": 0,
        "description": "Class to specify properties of Streaming Policy"
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system metadata relating to this resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingPolicyProperties",
    "properties": {
      "created": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Creation time of Streaming Policy"
      },
      "defaultContentKeyPolicyName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Default ContentKey used by current Streaming Policy"
      },
      "envelopeEncryption": {
        "type": {
          "$ref": "#/207"
        },
        "flags": 0,
        "description": "Configuration of EnvelopeEncryption"
      },
      "commonEncryptionCenc": {
        "type": {
          "$ref": "#/224"
        },
        "flags": 0,
        "description": "Configuration of CommonEncryptionCenc"
      },
      "commonEncryptionCbcs": {
        "type": {
          "$ref": "#/230"
        },
        "flags": 0,
        "description": "Configuration of CommonEncryptionCbcs"
      },
      "noEncryption": {
        "type": {
          "$ref": "#/234"
        },
        "flags": 0,
        "description": "Configurations of NoEncryption"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvelopeEncryption",
    "properties": {
      "enabledProtocols": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Representing supported protocols"
      },
      "clearTracks": {
        "type": {
          "$ref": "#/218"
        },
        "flags": 0,
        "description": "Representing which tracks should not be encrypted"
      },
      "contentKeys": {
        "type": {
          "$ref": "#/219"
        },
        "flags": 0,
        "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks"
      },
      "customKeyAcquisitionUrlTemplate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Template for the URL of the custom service delivering keys to end user players.  Not required when using Azure Media Services for issuing keys.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnabledProtocols",
    "properties": {
      "download": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 1,
        "description": "Enable Download protocol or not"
      },
      "dash": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 1,
        "description": "Enable DASH protocol or not"
      },
      "hls": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 1,
        "description": "Enable HLS protocol or not"
      },
      "smoothStreaming": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 1,
        "description": "Enable SmoothStreaming protocol or not"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackSelection",
    "properties": {
      "trackSelections": {
        "type": {
          "$ref": "#/217"
        },
        "flags": 0,
        "description": "TrackSelections is a track property condition list which can specify track(s)"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackPropertyCondition",
    "properties": {
      "property": {
        "type": {
          "$ref": "#/213"
        },
        "flags": 1,
        "description": "Track property type"
      },
      "operation": {
        "type": {
          "$ref": "#/216"
        },
        "flags": 1,
        "description": "Track property condition operation"
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Track property value"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "FourCC"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/211"
      },
      {
        "$ref": "#/212"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Equal"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/214"
      },
      {
        "$ref": "#/215"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/210"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/209"
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingPolicyContentKeys",
    "properties": {
      "defaultKey": {
        "type": {
          "$ref": "#/220"
        },
        "flags": 0,
        "description": "Default content key for an encryption scheme"
      },
      "keyToTrackMappings": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 0,
        "description": "Representing tracks needs separate content key"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefaultKey",
    "properties": {
      "label": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Label can be used to specify Content Key when creating a Streaming Locator"
      },
      "policyName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Policy used by Default Key"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingPolicyContentKey",
    "properties": {
      "label": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Label can be used to specify Content Key when creating a Streaming Locator"
      },
      "policyName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Policy used by Content Key"
      },
      "tracks": {
        "type": {
          "$ref": "#/222"
        },
        "flags": 0,
        "description": "Tracks which use this content key"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/209"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/221"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CommonEncryptionCenc",
    "properties": {
      "enabledProtocols": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Representing supported protocols"
      },
      "clearTracks": {
        "type": {
          "$ref": "#/225"
        },
        "flags": 0,
        "description": "Representing which tracks should not be encrypted"
      },
      "contentKeys": {
        "type": {
          "$ref": "#/219"
        },
        "flags": 0,
        "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks"
      },
      "drm": {
        "type": {
          "$ref": "#/226"
        },
        "flags": 0,
        "description": "Configuration of DRMs for CommonEncryptionCenc encryption scheme"
      },
      "clearKeyEncryptionConfiguration": {
        "type": {
          "$ref": "#/229"
        },
        "flags": 0,
        "description": "Optional configuration supporting ClearKey in CommonEncryptionCenc encryption scheme."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/209"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CencDrmConfiguration",
    "properties": {
      "playReady": {
        "type": {
          "$ref": "#/227"
        },
        "flags": 0,
        "description": "PlayReady configurations"
      },
      "widevine": {
        "type": {
          "$ref": "#/228"
        },
        "flags": 0,
        "description": "Widevine configurations"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingPolicyPlayReadyConfiguration",
    "properties": {
      "customLicenseAcquisitionUrlTemplate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
      },
      "playReadyCustomAttributes": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Custom attributes for PlayReady"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingPolicyWidevineConfiguration",
    "properties": {
      "customLicenseAcquisitionUrlTemplate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClearKeyEncryptionConfiguration",
    "properties": {
      "customKeysAcquisitionUrlTemplate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Template for the URL of the custom service delivering content keys to end user players. Not required when using Azure Media Services for issuing licenses. The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token value is {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CommonEncryptionCbcs",
    "properties": {
      "enabledProtocols": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Representing supported protocols"
      },
      "clearTracks": {
        "type": {
          "$ref": "#/231"
        },
        "flags": 0,
        "description": "Representing which tracks should not be encrypted"
      },
      "contentKeys": {
        "type": {
          "$ref": "#/219"
        },
        "flags": 0,
        "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks"
      },
      "drm": {
        "type": {
          "$ref": "#/232"
        },
        "flags": 0,
        "description": "Configuration of DRMs for current encryption scheme"
      },
      "clearKeyEncryptionConfiguration": {
        "type": {
          "$ref": "#/229"
        },
        "flags": 0,
        "description": "Optional configuration supporting ClearKey in CommonEncryptionCbcs encryption scheme."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/209"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CbcsDrmConfiguration",
    "properties": {
      "fairPlay": {
        "type": {
          "$ref": "#/233"
        },
        "flags": 0,
        "description": "FairPlay configurations"
      },
      "playReady": {
        "type": {
          "$ref": "#/227"
        },
        "flags": 0,
        "description": "PlayReady configurations"
      },
      "widevine": {
        "type": {
          "$ref": "#/228"
        },
        "flags": 0,
        "description": "Widevine configurations"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingPolicyFairPlayConfiguration",
    "properties": {
      "customLicenseAcquisitionUrlTemplate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
      },
      "allowPersistentLicense": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 1,
        "description": "All license to be persistent or not"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NoEncryption",
    "properties": {
      "enabledProtocols": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "Representing supported protocols"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaServices/streamingPolicies@2023-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/205"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaServices/streamingLocators"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaServices/streamingLocators",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/236"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/237"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/239"
        },
        "flags": 0,
        "description": "Properties of the Streaming Locator."
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system metadata relating to this resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingLocatorProperties",
    "properties": {
      "assetName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Asset Name"
      },
      "created": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The creation time of the Streaming Locator."
      },
      "startTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The start time of the Streaming Locator."
      },
      "endTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The end time of the Streaming Locator."
      },
      "streamingLocatorId": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 0,
        "description": "The StreamingLocatorId of the Streaming Locator."
      },
      "streamingPolicyName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'"
      },
      "defaultContentKeyPolicyName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the default ContentKeyPolicy used by this Streaming Locator."
      },
      "contentKeys": {
        "type": {
          "$ref": "#/246"
        },
        "flags": 0,
        "description": "The ContentKeys used by this Streaming Locator."
      },
      "alternativeMediaId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Alternative Media ID of this Streaming Locator"
      },
      "filters": {
        "type": {
          "$ref": "#/247"
        },
        "flags": 0,
        "description": "A list of asset or account filters which apply to this streaming locator"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingLocatorContentKey",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 1,
        "description": "ID of Content Key"
      },
      "type": {
        "type": {
          "$ref": "#/244"
        },
        "flags": 2,
        "description": "Encryption type of Content Key"
      },
      "labelReferenceInStreamingPolicy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Label of Content Key as specified in the Streaming Policy"
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of Content Key"
      },
      "policyName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "ContentKeyPolicy used by Content Key"
      },
      "tracks": {
        "type": {
          "$ref": "#/245"
        },
        "flags": 2,
        "description": "Tracks which use this Content Key"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CommonEncryptionCenc"
  },
  {
    "$type": "StringLiteralType",
    "value": "CommonEncryptionCbcs"
  },
  {
    "$type": "StringLiteralType",
    "value": "EnvelopeEncryption"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/241"
      },
      {
        "$ref": "#/242"
      },
      {
        "$ref": "#/243"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/209"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/240"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaServices/streamingLocators@2023-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/238"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaservices/privateLinkResources"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaservices/privateLinkResources",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/249"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/250"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/252"
        },
        "flags": 2,
        "description": "Resource properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateLinkResourceProperties",
    "properties": {
      "groupId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The private link resource group id."
      },
      "requiredMembers": {
        "type": {
          "$ref": "#/253"
        },
        "flags": 2,
        "description": "The private link resource required member names."
      },
      "requiredZoneNames": {
        "type": {
          "$ref": "#/254"
        },
        "flags": 0,
        "description": "The private link resource Private link DNS zone name."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaservices/privateLinkResources@2023-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/251"
    },
    "flags": 1
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/locations/mediaServicesOperationResults"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/locations/mediaServicesOperationResults",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/256"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/257"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 2,
        "description": "The resource properties."
      },
      "systemData": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "The system metadata relating to this resource."
      },
      "identity": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 2,
        "description": "The Managed Identity for the Media Services account."
      },
      "tags": {
        "type": {
          "$ref": "#/259"
        },
        "flags": 2,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The geo-location where the resource lives"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/locations/mediaServicesOperationResults@2023-01-01",
    "scopeType": 4,
    "body": {
      "$ref": "#/258"
    },
    "flags": 1
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaServices/assets/tracks/operationResults"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-01-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaServices/assets/tracks/operationResults",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/261"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/262"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/110"
        },
        "flags": 2,
        "description": "The resource properties."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaServices/assets/tracks/operationResults@2023-01-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/263"
    },
    "flags": 1
  },
  {
    "$type": "ObjectType",
    "name": "SyncStorageKeysInput",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The ID of the storage account resource."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "syncStorageKeys",
    "resourceType": "Microsoft.Media/mediaservices",
    "apiVersion": "2023-01-01",
    "input": {
      "$ref": "#/265"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ListEdgePoliciesInput",
    "properties": {
      "deviceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Unique identifier of the edge device."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EdgePolicies",
    "properties": {
      "usageDataCollectionPolicy": {
        "type": {
          "$ref": "#/269"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EdgeUsageDataCollectionPolicy",
    "properties": {
      "dataCollectionFrequency": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Usage data collection frequency in ISO 8601 duration format e.g. PT10M , PT5H."
      },
      "dataReportingFrequency": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Usage data reporting frequency in ISO 8601 duration format e.g. PT10M , PT5H."
      },
      "maxAllowedUnreportedUsageDuration": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Maximum time for which the functionality of the device will not be hampered for not reporting the usage data."
      },
      "eventHubDetails": {
        "type": {
          "$ref": "#/270"
        },
        "flags": 0,
        "description": "Details of Event Hub where the usage will be reported."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EdgeUsageDataEventHub",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the Event Hub where usage will be reported."
      },
      "namespace": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Namespace of the Event Hub where usage will be reported."
      },
      "token": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "SAS token needed to interact with Event Hub."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listEdgePolicies",
    "resourceType": "Microsoft.Media/mediaservices",
    "apiVersion": "2023-01-01",
    "output": {
      "$ref": "#/268"
    },
    "input": {
      "$ref": "#/267"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CheckNameAvailabilityInput",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The account name."
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The account type. For a Media Services account, this should be 'MediaServices'."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EntityNameAvailabilityCheckOutput",
    "properties": {
      "nameAvailable": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 1,
        "description": "Specifies if the name is available."
      },
      "reason": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the reason if the name is not available."
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the detailed reason if the name is not available."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "checkNameAvailability",
    "resourceType": "Microsoft.Media/locations",
    "apiVersion": "2023-01-01",
    "output": {
      "$ref": "#/273"
    },
    "input": {
      "$ref": "#/272"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ListContainerSasInput",
    "properties": {
      "permissions": {
        "type": {
          "$ref": "#/279"
        },
        "flags": 0,
        "description": "The permissions to set on the SAS URL."
      },
      "expiryTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The SAS URL expiration time.  This must be less than 24 hours from the current time."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Read"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWrite"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteDelete"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/276"
      },
      {
        "$ref": "#/277"
      },
      {
        "$ref": "#/278"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AssetContainerSas",
    "properties": {
      "assetContainerSasUrls": {
        "type": {
          "$ref": "#/281"
        },
        "flags": 0,
        "description": "The list of Asset container SAS URLs."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listContainerSas",
    "resourceType": "Microsoft.Media/mediaServices/assets",
    "apiVersion": "2023-01-01",
    "output": {
      "$ref": "#/280"
    },
    "input": {
      "$ref": "#/275"
    }
  },
  {
    "$type": "ObjectType",
    "name": "StorageEncryptedAssetDecryptionData",
    "properties": {
      "key": {
        "type": {
          "$ref": "#/137"
        },
        "flags": 0,
        "description": "The Asset File storage encryption key."
      },
      "assetFileEncryptionMetadata": {
        "type": {
          "$ref": "#/285"
        },
        "flags": 0,
        "description": "Asset File encryption metadata."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssetFileEncryptionMetadata",
    "properties": {
      "initializationVector": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Asset File initialization vector."
      },
      "assetFileName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Asset File name."
      },
      "assetFileId": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 1,
        "description": "The Asset File Id."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/284"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "getEncryptionKey",
    "resourceType": "Microsoft.Media/mediaServices/assets",
    "apiVersion": "2023-01-01",
    "output": {
      "$ref": "#/283"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ListStreamingLocatorsResponse",
    "properties": {
      "streamingLocators": {
        "type": {
          "$ref": "#/289"
        },
        "flags": 2,
        "description": "The list of Streaming Locators."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssetStreamingLocator",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Streaming Locator name."
      },
      "assetName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Asset Name."
      },
      "created": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The creation time of the Streaming Locator."
      },
      "startTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The start time of the Streaming Locator."
      },
      "endTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The end time of the Streaming Locator."
      },
      "streamingLocatorId": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 2,
        "description": "StreamingLocatorId of the Streaming Locator."
      },
      "streamingPolicyName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Name of the Streaming Policy used by this Streaming Locator."
      },
      "defaultContentKeyPolicyName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Name of the default ContentKeyPolicy used by this Streaming Locator."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/288"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listStreamingLocators",
    "resourceType": "Microsoft.Media/mediaServices/assets",
    "apiVersion": "2023-01-01",
    "output": {
      "$ref": "#/287"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "updateTrackData",
    "resourceType": "Microsoft.Media/mediaServices/assets/tracks",
    "apiVersion": "2023-01-01"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "getPolicyPropertiesWithSecrets",
    "resourceType": "Microsoft.Media/mediaServices/contentKeyPolicies",
    "apiVersion": "2023-01-01",
    "output": {
      "$ref": "#/131"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ListContentKeysResponse",
    "properties": {
      "contentKeys": {
        "type": {
          "$ref": "#/294"
        },
        "flags": 0,
        "description": "ContentKeys used by current Streaming Locator"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/240"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listContentKeys",
    "resourceType": "Microsoft.Media/mediaServices/streamingLocators",
    "apiVersion": "2023-01-01",
    "output": {
      "$ref": "#/293"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ListPathsResponse",
    "properties": {
      "streamingPaths": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 0,
        "description": "Streaming Paths supported by current Streaming Locator"
      },
      "downloadPaths": {
        "type": {
          "$ref": "#/310"
        },
        "flags": 0,
        "description": "Download Paths supported by current Streaming Locator"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingPath",
    "properties": {
      "streamingProtocol": {
        "type": {
          "$ref": "#/302"
        },
        "flags": 1,
        "description": "Streaming protocol"
      },
      "encryptionScheme": {
        "type": {
          "$ref": "#/307"
        },
        "flags": 1,
        "description": "Encryption scheme"
      },
      "paths": {
        "type": {
          "$ref": "#/308"
        },
        "flags": 0,
        "description": "Streaming paths for each protocol and encryptionScheme pair"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Hls"
  },
  {
    "$type": "StringLiteralType",
    "value": "Dash"
  },
  {
    "$type": "StringLiteralType",
    "value": "SmoothStreaming"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/298"
      },
      {
        "$ref": "#/299"
      },
      {
        "$ref": "#/300"
      },
      {
        "$ref": "#/301"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "NoEncryption"
  },
  {
    "$type": "StringLiteralType",
    "value": "EnvelopeEncryption"
  },
  {
    "$type": "StringLiteralType",
    "value": "CommonEncryptionCenc"
  },
  {
    "$type": "StringLiteralType",
    "value": "CommonEncryptionCbcs"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/303"
      },
      {
        "$ref": "#/304"
      },
      {
        "$ref": "#/305"
      },
      {
        "$ref": "#/306"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/297"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listPaths",
    "resourceType": "Microsoft.Media/mediaServices/streamingLocators",
    "apiVersion": "2023-01-01",
    "output": {
      "$ref": "#/296"
    }
  }
]