[
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaservices"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-03-30-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaservices",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The resource properties."
      },
      "tags": {
        "type": {
          "$ref": "#/11"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Azure Region of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MediaServiceProperties",
    "properties": {
      "mediaServiceId": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 2,
        "description": "The Media Services account ID."
      },
      "storageAccounts": {
        "type": {
          "$ref": "#/10"
        },
        "flags": 0,
        "description": "The storage accounts for this resource."
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 36,
    "maxLength": 36,
    "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
  },
  {
    "$type": "ObjectType",
    "name": "StorageAccount",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts."
      },
      "type": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 1,
        "description": "The type of the storage account."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Primary"
  },
  {
    "$type": "StringLiteralType",
    "value": "Secondary"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/6"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaservices@2018-03-30-preview",
    "scopeType": 12,
    "readOnlyScopes": 4,
    "body": {
      "$ref": "#/3"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaServices/assets"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-03-30-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaServices/assets",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 0,
        "description": "The resource properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssetProperties",
    "properties": {
      "assetId": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 2,
        "description": "The Asset ID."
      },
      "created": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The creation date of the Asset."
      },
      "lastModified": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The last modified date of the Asset."
      },
      "alternateId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The alternate ID of the Asset."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Asset description."
      },
      "container": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the asset blob container."
      },
      "storageAccountName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the storage account."
      },
      "storageEncryptionFormat": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 2,
        "description": "The Asset encryption format. One of None or MediaStorageEncryption."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "MediaStorageClientEncryption"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/17"
      },
      {
        "$ref": "#/18"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaServices/assets@2018-03-30-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/15"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaServices/contentKeyPolicies"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-03-30-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaServices/contentKeyPolicies",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 0,
        "description": "The properties of the Content Key Policy."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyProperties",
    "properties": {
      "policyId": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 2,
        "description": "The legacy Policy ID."
      },
      "created": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The creation date of the Policy"
      },
      "lastModified": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The last modified date of the Policy"
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A description for the Policy."
      },
      "options": {
        "type": {
          "$ref": "#/89"
        },
        "flags": 1,
        "description": "The Key Policy options."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyOption",
    "properties": {
      "policyOptionId": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 2,
        "description": "The legacy Policy Option ID."
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Policy Option description."
      },
      "configuration": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 1,
        "description": "The key delivery configuration."
      },
      "restriction": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 1,
        "description": "The requirements that must be met to deliver keys with this configuration"
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ContentKeyPolicyConfiguration",
    "discriminator": "@odata.type",
    "baseProperties": {},
    "elements": {
      "#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration": {
        "$ref": "#/27"
      },
      "#Microsoft.Media.ContentKeyPolicyFairPlayConfiguration": {
        "$ref": "#/29"
      },
      "#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration": {
        "$ref": "#/38"
      },
      "#Microsoft.Media.ContentKeyPolicyUnknownConfiguration": {
        "$ref": "#/64"
      },
      "#Microsoft.Media.ContentKeyPolicyWidevineConfiguration": {
        "$ref": "#/66"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyClearKeyConfiguration",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyFairPlayConfiguration",
    "properties": {
      "ask": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 1,
        "description": "The key that must be used as FairPlay ASk."
      },
      "fairPlayPfxPassword": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The password encrypting FairPlay certificate in PKCS 12 (pfx) format."
      },
      "fairPlayPfx": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key)."
      },
      "rentalAndLeaseKeyType": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 1,
        "description": "The rental and lease key type."
      },
      "rentalDuration": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 1,
        "description": "The rental duration. Must be greater than or equal to 0."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/37"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Undefined"
  },
  {
    "$type": "StringLiteralType",
    "value": "PersistentUnlimited"
  },
  {
    "$type": "StringLiteralType",
    "value": "PersistentLimited"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/31"
      },
      {
        "$ref": "#/32"
      },
      {
        "$ref": "#/33"
      },
      {
        "$ref": "#/34"
      }
    ]
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyFairPlayConfiguration"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyPlayReadyConfiguration",
    "properties": {
      "licenses": {
        "type": {
          "$ref": "#/62"
        },
        "flags": 1,
        "description": "The PlayReady licenses."
      },
      "responseCustomData": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The custom response data."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyPlayReadyLicense",
    "properties": {
      "allowTestDevices": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 1,
        "description": "A flag indicating whether test devices can use the license."
      },
      "beginDate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The begin date of license"
      },
      "expirationDate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The expiration date of license."
      },
      "relativeBeginDate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The relative begin date of license."
      },
      "relativeExpirationDate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The relative expiration date of license."
      },
      "gracePeriod": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The grace period of license."
      },
      "playRight": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 0,
        "description": "The license PlayRight"
      },
      "licenseType": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 1,
        "description": "The license type."
      },
      "contentKeyLocation": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 1,
        "description": "The content key location."
      },
      "contentType": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 1,
        "description": "The PlayReady content type."
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyPlayReadyPlayRight",
    "properties": {
      "firstPlayExpiration": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The amount of time that the license is valid after the license is first used to play content."
      },
      "scmsRestriction": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "Configures the Serial Copy Management System (SCMS) in the license. Must be between 0 and 3 inclusive."
      },
      "agcAndColorStripeRestriction": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "Configures Automatic Gain Control (AGC) and Color Stripe in the license. Must be between 0 and 3 inclusive."
      },
      "explicitAnalogTelevisionOutputRestriction": {
        "type": {
          "$ref": "#/42"
        },
        "flags": 0,
        "description": "Configures the Explicit Analog Television Output Restriction in the license. Configuration data must be between 0 and 3 inclusive."
      },
      "digitalVideoOnlyContentRestriction": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 1,
        "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
      },
      "imageConstraintForAnalogComponentVideoRestriction": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 1,
        "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
      },
      "imageConstraintForAnalogComputerMonitorRestriction": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 1,
        "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
      },
      "allowPassingVideoContentToUnknownOutput": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 1,
        "description": "Configures Unknown output handling settings of the license."
      },
      "uncompressedDigitalVideoOpl": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "Specifies the output protection level for uncompressed digital video."
      },
      "compressedDigitalVideoOpl": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "Specifies the output protection level for compressed digital video."
      },
      "analogVideoOpl": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "Specifies the output protection level for compressed digital audio."
      },
      "compressedDigitalAudioOpl": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "Specifies the output protection level for compressed digital audio."
      },
      "uncompressedDigitalAudioOpl": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "Specifies the output protection level for uncompressed digital audio."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction",
    "properties": {
      "bestEffort": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 1,
        "description": "Indicates whether this restriction is enforced on a Best Effort basis."
      },
      "configurationData": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 1,
        "description": "Configures the restriction control bits. Must be between 0 and 3 inclusive."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotAllowed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Allowed"
  },
  {
    "$type": "StringLiteralType",
    "value": "AllowedWithVideoConstriction"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/43"
      },
      {
        "$ref": "#/44"
      },
      {
        "$ref": "#/45"
      },
      {
        "$ref": "#/46"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "NonPersistent"
  },
  {
    "$type": "StringLiteralType",
    "value": "Persistent"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/48"
      },
      {
        "$ref": "#/49"
      },
      {
        "$ref": "#/50"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ContentKeyPolicyPlayReadyContentKeyLocation",
    "discriminator": "@odata.type",
    "baseProperties": {},
    "elements": {
      "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader": {
        "$ref": "#/53"
      },
      "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier": {
        "$ref": "#/55"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier",
    "properties": {
      "keyId": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 1,
        "description": "The content key ID."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unspecified"
  },
  {
    "$type": "StringLiteralType",
    "value": "UltraVioletDownload"
  },
  {
    "$type": "StringLiteralType",
    "value": "UltraVioletStreaming"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/57"
      },
      {
        "$ref": "#/58"
      },
      {
        "$ref": "#/59"
      },
      {
        "$ref": "#/60"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/39"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyUnknownConfiguration",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyUnknownConfiguration"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyWidevineConfiguration",
    "properties": {
      "widevineTemplate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The Widevine template."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyWidevineConfiguration"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ContentKeyPolicyRestriction",
    "discriminator": "@odata.type",
    "baseProperties": {},
    "elements": {
      "#Microsoft.Media.ContentKeyPolicyOpenRestriction": {
        "$ref": "#/69"
      },
      "#Microsoft.Media.ContentKeyPolicyTokenRestriction": {
        "$ref": "#/71"
      },
      "#Microsoft.Media.ContentKeyPolicyUnknownRestriction": {
        "$ref": "#/87"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyOpenRestriction",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyOpenRestriction"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyTokenRestriction",
    "properties": {
      "issuer": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The token issuer."
      },
      "audience": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The audience for the token."
      },
      "primaryVerificationKey": {
        "type": {
          "$ref": "#/72"
        },
        "flags": 1,
        "description": "The primary verification key."
      },
      "alternateVerificationKeys": {
        "type": {
          "$ref": "#/79"
        },
        "flags": 0,
        "description": "A list of alternative verification keys."
      },
      "requiredClaims": {
        "type": {
          "$ref": "#/81"
        },
        "flags": 0,
        "description": "A list of required token claims."
      },
      "restrictionTokenType": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 1,
        "description": "The type of token."
      },
      "openIdConnectDiscoveryDocument": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The OpenID connect discovery document."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ContentKeyPolicyRestrictionTokenKey",
    "discriminator": "@odata.type",
    "baseProperties": {},
    "elements": {
      "#Microsoft.Media.ContentKeyPolicyRsaTokenKey": {
        "$ref": "#/73"
      },
      "#Microsoft.Media.ContentKeyPolicySymmetricTokenKey": {
        "$ref": "#/75"
      },
      "#Microsoft.Media.ContentKeyPolicyX509CertificateTokenKey": {
        "$ref": "#/77"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyRsaTokenKey",
    "properties": {
      "exponent": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 1,
        "description": "The RSA Parameter exponent"
      },
      "modulus": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 1,
        "description": "The RSA Parameter modulus"
      },
      "@odata.type": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyRsaTokenKey"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicySymmetricTokenKey",
    "properties": {
      "keyValue": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 1,
        "description": "The key value of the key"
      },
      "@odata.type": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicySymmetricTokenKey"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyX509CertificateTokenKey",
    "properties": {
      "rawBody": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 1,
        "description": "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)"
      },
      "@odata.type": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyX509CertificateTokenKey"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/72"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyTokenClaim",
    "properties": {
      "claimType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Token claim type."
      },
      "claimValue": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Token claim value."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/80"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Swt"
  },
  {
    "$type": "StringLiteralType",
    "value": "Jwt"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/82"
      },
      {
        "$ref": "#/83"
      },
      {
        "$ref": "#/84"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyTokenRestriction"
  },
  {
    "$type": "ObjectType",
    "name": "ContentKeyPolicyUnknownRestriction",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/88"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.ContentKeyPolicyUnknownRestriction"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/25"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaServices/contentKeyPolicies@2018-03-30-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/23"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaServices/transforms"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-03-30-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaServices/transforms",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/94"
        },
        "flags": 0,
        "description": "The resource properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TransformProperties",
    "properties": {
      "created": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The UTC date and time when the Transform was created, in 'YYYY-MM-DDThh:mm:ssZ' format."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "An optional verbose description of the Transform."
      },
      "lastModified": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The UTC date and time when the Transform was last updated, in 'YYYY-MM-DDThh:mm:ssZ' format."
      },
      "outputs": {
        "type": {
          "$ref": "#/203"
        },
        "flags": 1,
        "description": "An array of one or more TransformOutputs that the Transform should generate."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TransformOutput",
    "properties": {
      "onError": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 0,
        "description": "A Transform can define more than one outputs. This property defines what the service should do when one output fails - either continue to produce other outputs, or, stop the other outputs. The default is stop."
      },
      "relativePriority": {
        "type": {
          "$ref": "#/102"
        },
        "flags": 0,
        "description": "Sets the relative priority of the TransformOutputs within a Transform. This sets the priority that the service uses for processing TransformOutputs. The default priority is Normal."
      },
      "preset": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 1,
        "description": "Preset that describes the operations that will be used to modify, transcode, or extract insights from the source file to generate the output."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "StopProcessingJob"
  },
  {
    "$type": "StringLiteralType",
    "value": "ContinueJob"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/96"
      },
      {
        "$ref": "#/97"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Low"
  },
  {
    "$type": "StringLiteralType",
    "value": "Normal"
  },
  {
    "$type": "StringLiteralType",
    "value": "High"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/99"
      },
      {
        "$ref": "#/100"
      },
      {
        "$ref": "#/101"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Preset",
    "discriminator": "@odata.type",
    "baseProperties": {},
    "elements": {
      "#Microsoft.Media.VideoAnalyzerPreset": {
        "$ref": "#/104"
      },
      "#Microsoft.Media.BuiltInStandardEncoderPreset": {
        "$ref": "#/106"
      },
      "#Microsoft.Media.StandardEncoderPreset": {
        "$ref": "#/114"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VideoAnalyzerPreset",
    "properties": {
      "audioInsightsOnly": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 0,
        "description": "Whether to only extract audio insights when processing a video file."
      },
      "audioLanguage": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The language for the audio payload in the input using the BCP-47 format of 'language tag-region' (e.g: 'en-US'). The list of supported languages are, 'en-US', 'en-GB', 'es-ES', 'es-MX', 'fr-FR', 'it-IT', 'ja-JP', 'pt-BR', 'zh-CN'."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/105"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.VideoAnalyzerPreset"
  },
  {
    "$type": "ObjectType",
    "name": "BuiltInStandardEncoderPreset",
    "properties": {
      "presetName": {
        "type": {
          "$ref": "#/112"
        },
        "flags": 1,
        "description": "The built-in preset to be used for encoding videos."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/113"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AdaptiveStreaming"
  },
  {
    "$type": "StringLiteralType",
    "value": "AACGoodQualityAudio"
  },
  {
    "$type": "StringLiteralType",
    "value": "H264MultipleBitrate1080p"
  },
  {
    "$type": "StringLiteralType",
    "value": "H264MultipleBitrate720p"
  },
  {
    "$type": "StringLiteralType",
    "value": "H264MultipleBitrateSD"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/107"
      },
      {
        "$ref": "#/108"
      },
      {
        "$ref": "#/109"
      },
      {
        "$ref": "#/110"
      },
      {
        "$ref": "#/111"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.BuiltInStandardEncoderPreset"
  },
  {
    "$type": "ObjectType",
    "name": "StandardEncoderPreset",
    "properties": {
      "filters": {
        "type": {
          "$ref": "#/115"
        },
        "flags": 0,
        "description": "One or more filtering operations that are applied to the input media before encoding."
      },
      "codecs": {
        "type": {
          "$ref": "#/187"
        },
        "flags": 0,
        "description": "The list of codecs to be used when encoding the input video."
      },
      "formats": {
        "type": {
          "$ref": "#/201"
        },
        "flags": 0,
        "description": "The list of outputs to be produced by the encoder."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/202"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Filters",
    "properties": {
      "deinterlace": {
        "type": {
          "$ref": "#/116"
        },
        "flags": 0,
        "description": "The de-interlacing settings."
      },
      "rotation": {
        "type": {
          "$ref": "#/130"
        },
        "flags": 0,
        "description": "The rotation, if any, to be applied to the input video, before it is encoded. Default is Auto"
      },
      "crop": {
        "type": {
          "$ref": "#/131"
        },
        "flags": 0,
        "description": "The parameters for the rectangular window with which to crop the input video."
      },
      "overlays": {
        "type": {
          "$ref": "#/137"
        },
        "flags": 0,
        "description": "The properties of overlays to be applied to the input video. These could be audio, image or video overlays."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Deinterlace",
    "properties": {
      "parity": {
        "type": {
          "$ref": "#/120"
        },
        "flags": 0,
        "description": "The field parity for de-interlacing, defaults to Auto."
      },
      "mode": {
        "type": {
          "$ref": "#/123"
        },
        "flags": 0,
        "description": "The deinterlacing mode. Defaults to AutoPixelAdaptive."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "StringLiteralType",
    "value": "TopFieldFirst"
  },
  {
    "$type": "StringLiteralType",
    "value": "BottomFieldFirst"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/117"
      },
      {
        "$ref": "#/118"
      },
      {
        "$ref": "#/119"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Off"
  },
  {
    "$type": "StringLiteralType",
    "value": "AutoPixelAdaptive"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/121"
      },
      {
        "$ref": "#/122"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rotate0"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rotate90"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rotate180"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rotate270"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/124"
      },
      {
        "$ref": "#/125"
      },
      {
        "$ref": "#/126"
      },
      {
        "$ref": "#/127"
      },
      {
        "$ref": "#/128"
      },
      {
        "$ref": "#/129"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Rectangle",
    "properties": {
      "left": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%)."
      },
      "top": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%)."
      },
      "width": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%)."
      },
      "height": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%)."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Overlay",
    "discriminator": "@odata.type",
    "baseProperties": {
      "inputLabel": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The label of the job input which is to be used as an overlay. The Input must specify exactly one file. You can specify an image file in JPG or PNG formats, or an audio file (such as a WAV, MP3, WMA or M4A file), or a video file. See https://aka.ms/mesformats for the complete list of supported audio and video file formats."
      },
      "start": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The start position, with reference to the input video, at which the overlay starts. The value should be in ISO 8601 format. For example, PT05S to start the overlay at 5 seconds in to the input video. If not specified the overlay starts from the beginning of the input video."
      },
      "end": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The position in the input video at which the overlay ends. The value should be in ISO 8601 duration format. For example, PT30S to end the overlay at 30 seconds in to the input video. If not specified the overlay will be applied until the end of the input video if inputLoop is true. Else, if inputLoop is false, then overlay will last as long as the duration of the overlay media."
      },
      "fadeInDuration": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The duration over which the overlay fades in onto the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade in (same as PT0S)."
      },
      "fadeOutDuration": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The duration over which the overlay fades out of the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade out (same as PT0S)."
      },
      "audioGainLevel": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The gain level of audio in the overlay. The value should be in the range [0, 1.0]. The default is 1.0."
      }
    },
    "elements": {
      "#Microsoft.Media.AudioOverlay": {
        "$ref": "#/133"
      },
      "#Microsoft.Media.VideoOverlay": {
        "$ref": "#/135"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AudioOverlay",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/134"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.AudioOverlay"
  },
  {
    "$type": "ObjectType",
    "name": "VideoOverlay",
    "properties": {
      "position": {
        "type": {
          "$ref": "#/131"
        },
        "flags": 0,
        "description": "The location in the input video where the overlay is applied."
      },
      "opacity": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The opacity of the overlay. This is a value in the range [0 - 1.0]. Default is 1.0 which mean the overlay is opaque."
      },
      "cropRectangle": {
        "type": {
          "$ref": "#/131"
        },
        "flags": 0,
        "description": "An optional rectangular window used to crop the overlay image or video."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/136"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.VideoOverlay"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/132"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Codec",
    "discriminator": "@odata.type",
    "baseProperties": {
      "label": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "An optional label for the codec. The label can be used to control muxing behavior."
      }
    },
    "elements": {
      "#Microsoft.Media.AacAudio": {
        "$ref": "#/139"
      },
      "#Microsoft.Media.CopyAudio": {
        "$ref": "#/145"
      },
      "#Microsoft.Media.CopyVideo": {
        "$ref": "#/147"
      },
      "#Microsoft.Media.H264Video": {
        "$ref": "#/149"
      },
      "#Microsoft.Media.JpgImage": {
        "$ref": "#/171"
      },
      "#Microsoft.Media.PngImage": {
        "$ref": "#/179"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AacAudio",
    "properties": {
      "profile": {
        "type": {
          "$ref": "#/143"
        },
        "flags": 0,
        "description": "The encoding profile to be used when encoding audio with AAC."
      },
      "channels": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The number of channels in the audio."
      },
      "samplingRate": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The sampling rate to use for encoding in hertz."
      },
      "bitrate": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The bitrate, in bits per second, of the output encoded audio."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/144"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AacLc"
  },
  {
    "$type": "StringLiteralType",
    "value": "HeAacV1"
  },
  {
    "$type": "StringLiteralType",
    "value": "HeAacV2"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/140"
      },
      {
        "$ref": "#/141"
      },
      {
        "$ref": "#/142"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.AacAudio"
  },
  {
    "$type": "ObjectType",
    "name": "CopyAudio",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/146"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.CopyAudio"
  },
  {
    "$type": "ObjectType",
    "name": "CopyVideo",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/148"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.CopyVideo"
  },
  {
    "$type": "ObjectType",
    "name": "H264Video",
    "properties": {
      "sceneChangeDetection": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 0,
        "description": "Whether or not the encoder should insert key frames at scene changes. If not specified, the default is false. This flag should be set to true only when the encoder is being configured to produce a single output video."
      },
      "complexity": {
        "type": {
          "$ref": "#/153"
        },
        "flags": 0,
        "description": "Tells the encoder how to choose its encoding settings. The default value is Balanced."
      },
      "layers": {
        "type": {
          "$ref": "#/165"
        },
        "flags": 0,
        "description": "The collection of output H.264 layers to be produced by the encoder."
      },
      "keyFrameInterval": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The distance between two key frames, thereby defining a group of pictures (GOP). The value should be a non-zero integer in the range [1, 30] seconds, specified in ISO 8601 format. The default is 2 seconds (PT2S)."
      },
      "stretchMode": {
        "type": {
          "$ref": "#/169"
        },
        "flags": 0,
        "description": "The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize"
      },
      "@odata.type": {
        "type": {
          "$ref": "#/170"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Speed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Balanced"
  },
  {
    "$type": "StringLiteralType",
    "value": "Quality"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/150"
      },
      {
        "$ref": "#/151"
      },
      {
        "$ref": "#/152"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "H264Layer",
    "properties": {
      "profile": {
        "type": {
          "$ref": "#/161"
        },
        "flags": 0,
        "description": "Which profile of the H.264 standard should be used when encoding this layer. Default is Auto."
      },
      "level": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Which level of the H.264 standard should be used when encoding this layer. The value can be Auto, or a number that matches the H.264 profile. If not specified, the default is Auto, which lets the encoder choose the Level that is appropriate for this layer."
      },
      "bufferWindow": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The VBV buffer window length. The value should be in ISO 8601 format. The value should be in the range [0.1-100] seconds. The default is 5 seconds (for example, PT5S)."
      },
      "referenceFrames": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The number of reference frames to be used when encoding this layer. If not specified, the encoder determines an appropriate number based on the encoder complexity setting."
      },
      "entropyMode": {
        "type": {
          "$ref": "#/164"
        },
        "flags": 0,
        "description": "The entropy mode to be used for this layer. If not specified, the encoder chooses the mode that is appropriate for the profile and level."
      },
      "bitrate": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The average bitrate in bits per second at which to encode the input video when generating this layer. This is a required field."
      },
      "maxBitrate": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The maximum bitrate (in bits per second), at which the VBV buffer should be assumed to refill. If not specified, defaults to the same value as bitrate."
      },
      "bFrames": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The number of B-frames to be used when encoding this layer.  If not specified, the encoder chooses an appropriate number based on the video profile and level."
      },
      "frameRate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The frame rate (in frames per second) at which to encode this layer. The value can be in the form of M/N where M and N are integers (For example, 30000/1001), or in the form of a number (For example, 30, or 29.97). The encoder enforces constraints on allowed frame rates based on the profile and level. If it is not specified, the encoder will use the same frame rate as the input video."
      },
      "slices": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The number of slices to be used when encoding this layer. If not specified, default is zero, which means that encoder will use a single slice for each frame."
      },
      "adaptiveBFrame": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 0,
        "description": "Whether or not adaptive B-frames are to be used when encoding this layer. If not specified, the encoder will turn it on whenever the video profile permits its use."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      },
      "width": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input."
      },
      "height": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input."
      },
      "label": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "StringLiteralType",
    "value": "Baseline"
  },
  {
    "$type": "StringLiteralType",
    "value": "Main"
  },
  {
    "$type": "StringLiteralType",
    "value": "High"
  },
  {
    "$type": "StringLiteralType",
    "value": "High422"
  },
  {
    "$type": "StringLiteralType",
    "value": "High444"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/155"
      },
      {
        "$ref": "#/156"
      },
      {
        "$ref": "#/157"
      },
      {
        "$ref": "#/158"
      },
      {
        "$ref": "#/159"
      },
      {
        "$ref": "#/160"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Cabac"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cavlc"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/162"
      },
      {
        "$ref": "#/163"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/154"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "AutoSize"
  },
  {
    "$type": "StringLiteralType",
    "value": "AutoFit"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/166"
      },
      {
        "$ref": "#/167"
      },
      {
        "$ref": "#/168"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.H264Video"
  },
  {
    "$type": "ObjectType",
    "name": "JpgImage",
    "properties": {
      "layers": {
        "type": {
          "$ref": "#/173"
        },
        "flags": 0,
        "description": "A collection of output JPEG image layers to be produced by the encoder."
      },
      "start": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The position in the input video from where to start generating thumbnails. The value can be in absolute timestamp (ISO 8601, e.g: PT05S), or a frame count (For example, 10 for the 10th frame), or a relative value (For example, 1%). Also supports a macro {Best}, which tells the encoder to select the best thumbnail from the first few seconds of the video."
      },
      "step": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The intervals at which thumbnails are generated. The value can be in absolute timestamp (ISO 8601, e.g: PT05S for one image every 5 seconds), or a frame count (For example, 30 for every 30 frames), or a relative value (For example, 1%)."
      },
      "range": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The position in the input video at which to stop generating thumbnails. The value can be in absolute timestamp (ISO 8601, e.g: PT5M30S to stop at 5 minutes and 30 seconds), or a frame count (For example, 300 to stop at the 300th frame), or a relative value (For example, 100%)."
      },
      "keyFrameInterval": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The distance between two key frames, thereby defining a group of pictures (GOP). The value should be a non-zero integer in the range [1, 30] seconds, specified in ISO 8601 format. The default is 2 seconds (PT2S)."
      },
      "stretchMode": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 0,
        "description": "The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize"
      },
      "@odata.type": {
        "type": {
          "$ref": "#/178"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JpgLayer",
    "properties": {
      "quality": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The compression quality of the JPEG output. Range is from 0-100 and the default is 70."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      },
      "width": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input."
      },
      "height": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input."
      },
      "label": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/172"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "AutoSize"
  },
  {
    "$type": "StringLiteralType",
    "value": "AutoFit"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/174"
      },
      {
        "$ref": "#/175"
      },
      {
        "$ref": "#/176"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.JpgImage"
  },
  {
    "$type": "ObjectType",
    "name": "PngImage",
    "properties": {
      "layers": {
        "type": {
          "$ref": "#/181"
        },
        "flags": 0,
        "description": "A collection of output PNG image layers to be produced by the encoder."
      },
      "start": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The position in the input video from where to start generating thumbnails. The value can be in absolute timestamp (ISO 8601, e.g: PT05S), or a frame count (For example, 10 for the 10th frame), or a relative value (For example, 1%). Also supports a macro {Best}, which tells the encoder to select the best thumbnail from the first few seconds of the video."
      },
      "step": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The intervals at which thumbnails are generated. The value can be in absolute timestamp (ISO 8601, e.g: PT05S for one image every 5 seconds), or a frame count (For example, 30 for every 30 frames), or a relative value (For example, 1%)."
      },
      "range": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The position in the input video at which to stop generating thumbnails. The value can be in absolute timestamp (ISO 8601, e.g: PT5M30S to stop at 5 minutes and 30 seconds), or a frame count (For example, 300 to stop at the 300th frame), or a relative value (For example, 100%)."
      },
      "keyFrameInterval": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The distance between two key frames, thereby defining a group of pictures (GOP). The value should be a non-zero integer in the range [1, 30] seconds, specified in ISO 8601 format. The default is 2 seconds (PT2S)."
      },
      "stretchMode": {
        "type": {
          "$ref": "#/185"
        },
        "flags": 0,
        "description": "The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize"
      },
      "@odata.type": {
        "type": {
          "$ref": "#/186"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PngLayer",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      },
      "width": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input."
      },
      "height": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input."
      },
      "label": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/180"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "AutoSize"
  },
  {
    "$type": "StringLiteralType",
    "value": "AutoFit"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/182"
      },
      {
        "$ref": "#/183"
      },
      {
        "$ref": "#/184"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.PngImage"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/138"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Format",
    "discriminator": "@odata.type",
    "baseProperties": {
      "filenamePattern": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The pattern of the file names for the generated output files. The following macros are supported in the file name: {Basename} - The base name of the input video {Extension} - The appropriate extension for this format. {Label} - The label assigned to the codec/layer. {Index} - A unique index for thumbnails. Only applicable to thumbnails. {Bitrate} - The audio/video bitrate. Not applicable to thumbnails. {Codec} - The type of the audio/video codec. Any unsubstituted macros will be collapsed and removed from the filename."
      }
    },
    "elements": {
      "#Microsoft.Media.JpgFormat": {
        "$ref": "#/189"
      },
      "#Microsoft.Media.PngFormat": {
        "$ref": "#/191"
      },
      "#Microsoft.Media.Mp4Format": {
        "$ref": "#/193"
      },
      "#Microsoft.Media.TransportStreamFormat": {
        "$ref": "#/198"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JpgFormat",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/190"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.JpgFormat"
  },
  {
    "$type": "ObjectType",
    "name": "PngFormat",
    "properties": {
      "@odata.type": {
        "type": {
          "$ref": "#/192"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.PngFormat"
  },
  {
    "$type": "ObjectType",
    "name": "Mp4Format",
    "properties": {
      "outputFiles": {
        "type": {
          "$ref": "#/196"
        },
        "flags": 0,
        "description": "The list of output files to produce.  Each entry in the list is a set of audio and video layer labels to be muxed together ."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/197"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "OutputFile",
    "properties": {
      "labels": {
        "type": {
          "$ref": "#/195"
        },
        "flags": 0,
        "description": "The list of labels that describe how the encoder should multiplex video and audio into an output file. For example, if the encoder is producing two video layers with labels v1 and v2, and one audio layer with label a1, then an array like '[v1, a1]' tells the encoder to produce an output file with the video track represented by v1 and the audio track represented by a1."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/194"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.Mp4Format"
  },
  {
    "$type": "ObjectType",
    "name": "TransportStreamFormat",
    "properties": {
      "outputFiles": {
        "type": {
          "$ref": "#/199"
        },
        "flags": 0,
        "description": "The list of output files to produce.  Each entry in the list is a set of audio and video layer labels to be muxed together ."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/200"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/194"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.TransportStreamFormat"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/188"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.StandardEncoderPreset"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/95"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaServices/transforms@2018-03-30-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/93"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaServices/transforms/jobs"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-03-30-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaServices/transforms/jobs",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/205"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/206"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 0,
        "description": "The resource properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobProperties",
    "properties": {
      "created": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The UTC date and time when the Job was created, in 'YYYY-MM-DDThh:mm:ssZ' format."
      },
      "state": {
        "type": {
          "$ref": "#/216"
        },
        "flags": 2,
        "description": "The current state of the job."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Optional customer supplied description of the Job."
      },
      "input": {
        "type": {
          "$ref": "#/217"
        },
        "flags": 1,
        "description": "The inputs for the Job."
      },
      "lastModified": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The UTC date and time when the Job was last updated, in 'YYYY-MM-DDThh:mm:ssZ' format."
      },
      "outputs": {
        "type": {
          "$ref": "#/260"
        },
        "flags": 1,
        "description": "The outputs for the Job."
      },
      "priority": {
        "type": {
          "$ref": "#/264"
        },
        "flags": 0,
        "description": "Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "StringLiteralType",
    "value": "Finished"
  },
  {
    "$type": "StringLiteralType",
    "value": "Processing"
  },
  {
    "$type": "StringLiteralType",
    "value": "Queued"
  },
  {
    "$type": "StringLiteralType",
    "value": "Scheduled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/209"
      },
      {
        "$ref": "#/210"
      },
      {
        "$ref": "#/211"
      },
      {
        "$ref": "#/212"
      },
      {
        "$ref": "#/213"
      },
      {
        "$ref": "#/214"
      },
      {
        "$ref": "#/215"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "JobInput",
    "discriminator": "@odata.type",
    "baseProperties": {
      "label": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A label that is assigned to a JobInput, that is used to satisfy a reference used in the Transform. For example, a Transform can be authored so as to take an image file with the label 'xyz' and apply it as an overlay onto the input video before it is encoded. When submitting a Job, exactly one of the JobInputs should be the image file, and it should have the label 'xyz'."
      }
    },
    "elements": {
      "#Microsoft.Media.JobInputAsset": {
        "$ref": "#/218"
      },
      "#Microsoft.Media.JobInputHttp": {
        "$ref": "#/221"
      },
      "#Microsoft.Media.JobInputs": {
        "$ref": "#/224"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobInputAsset",
    "properties": {
      "assetName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the input Asset."
      },
      "files": {
        "type": {
          "$ref": "#/219"
        },
        "flags": 0,
        "description": "List of files. Required for JobInputHttp."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/220"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.JobInputAsset"
  },
  {
    "$type": "ObjectType",
    "name": "JobInputHttp",
    "properties": {
      "baseUri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Base URI for HTTPS job input. It will be concatenated with provided file names.   If no base uri is given, then the provided file list is assumed to be fully qualified uris."
      },
      "files": {
        "type": {
          "$ref": "#/222"
        },
        "flags": 0,
        "description": "List of files. Required for JobInputHttp."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.JobInputHttp"
  },
  {
    "$type": "ObjectType",
    "name": "JobInputs",
    "properties": {
      "inputs": {
        "type": {
          "$ref": "#/225"
        },
        "flags": 0,
        "description": "List of inputs to a Job."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/226"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/217"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.JobInputs"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "JobOutput",
    "discriminator": "@odata.type",
    "baseProperties": {
      "error": {
        "type": {
          "$ref": "#/228"
        },
        "flags": 2,
        "description": "If the JobOutput is in the Error state, it contains the details of the error."
      },
      "state": {
        "type": {
          "$ref": "#/257"
        },
        "flags": 2,
        "description": "Describes the state of the JobOutput."
      },
      "progress": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 2,
        "description": "If the JobOutput is in a Processing state, this contains the job completion percentage.  The value is an estimate and not intended to be used to predict job completion times. To determine if the JobOutput is complete, use the State property."
      }
    },
    "elements": {
      "#Microsoft.Media.JobOutputAsset": {
        "$ref": "#/258"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobError",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/238"
        },
        "flags": 2,
        "description": "Error code describing the error."
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A human-readable language-dependent representation of the error."
      },
      "category": {
        "type": {
          "$ref": "#/244"
        },
        "flags": 2,
        "description": "Helps with categorization of errors."
      },
      "retry": {
        "type": {
          "$ref": "#/247"
        },
        "flags": 2,
        "description": "Indicates that it may be possible to retry the Job. If retry is unsuccessful, please contact Azure support via Azure Portal."
      },
      "details": {
        "type": {
          "$ref": "#/249"
        },
        "flags": 2,
        "description": "An array of details about specific errors that led to this reported error."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ServiceError"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServiceTransientError"
  },
  {
    "$type": "StringLiteralType",
    "value": "DownloadNotAccessible"
  },
  {
    "$type": "StringLiteralType",
    "value": "DownloadTransientError"
  },
  {
    "$type": "StringLiteralType",
    "value": "UploadNotAccessible"
  },
  {
    "$type": "StringLiteralType",
    "value": "UploadTransientError"
  },
  {
    "$type": "StringLiteralType",
    "value": "ConfigurationUnsupported"
  },
  {
    "$type": "StringLiteralType",
    "value": "ContentMalformed"
  },
  {
    "$type": "StringLiteralType",
    "value": "ContentUnsupported"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/229"
      },
      {
        "$ref": "#/230"
      },
      {
        "$ref": "#/231"
      },
      {
        "$ref": "#/232"
      },
      {
        "$ref": "#/233"
      },
      {
        "$ref": "#/234"
      },
      {
        "$ref": "#/235"
      },
      {
        "$ref": "#/236"
      },
      {
        "$ref": "#/237"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Service"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "StringLiteralType",
    "value": "Upload"
  },
  {
    "$type": "StringLiteralType",
    "value": "Configuration"
  },
  {
    "$type": "StringLiteralType",
    "value": "Content"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/239"
      },
      {
        "$ref": "#/240"
      },
      {
        "$ref": "#/241"
      },
      {
        "$ref": "#/242"
      },
      {
        "$ref": "#/243"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "DoNotRetry"
  },
  {
    "$type": "StringLiteralType",
    "value": "MayRetry"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/245"
      },
      {
        "$ref": "#/246"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "JobErrorDetail",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Code describing the error detail."
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A human-readable representation of the error."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/248"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "StringLiteralType",
    "value": "Finished"
  },
  {
    "$type": "StringLiteralType",
    "value": "Processing"
  },
  {
    "$type": "StringLiteralType",
    "value": "Queued"
  },
  {
    "$type": "StringLiteralType",
    "value": "Scheduled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/250"
      },
      {
        "$ref": "#/251"
      },
      {
        "$ref": "#/252"
      },
      {
        "$ref": "#/253"
      },
      {
        "$ref": "#/254"
      },
      {
        "$ref": "#/255"
      },
      {
        "$ref": "#/256"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "JobOutputAsset",
    "properties": {
      "assetName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the output Asset."
      },
      "@odata.type": {
        "type": {
          "$ref": "#/259"
        },
        "flags": 1,
        "description": "The discriminator for derived types."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "#Microsoft.Media.JobOutputAsset"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/227"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Low"
  },
  {
    "$type": "StringLiteralType",
    "value": "Normal"
  },
  {
    "$type": "StringLiteralType",
    "value": "High"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/261"
      },
      {
        "$ref": "#/262"
      },
      {
        "$ref": "#/263"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaServices/transforms/jobs@2018-03-30-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/207"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaServices/streamingPolicies"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-03-30-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaServices/streamingPolicies",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/266"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/267"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/269"
        },
        "flags": 0,
        "description": "Class to specify properties of Streaming Policy"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingPolicyProperties",
    "properties": {
      "created": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Creation time of Streaming Policy"
      },
      "defaultContentKeyPolicyName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Default ContentKey used by current Streaming Policy"
      },
      "envelopeEncryption": {
        "type": {
          "$ref": "#/270"
        },
        "flags": 0,
        "description": "Configuration of EnvelopeEncryption"
      },
      "commonEncryptionCenc": {
        "type": {
          "$ref": "#/287"
        },
        "flags": 0,
        "description": "Configuration of CommonEncryptionCenc"
      },
      "commonEncryptionCbcs": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 0,
        "description": "Configuration of CommonEncryptionCbcs"
      },
      "noEncryption": {
        "type": {
          "$ref": "#/296"
        },
        "flags": 0,
        "description": "Configuration of NoEncryption"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvelopeEncryption",
    "properties": {
      "enabledProtocols": {
        "type": {
          "$ref": "#/271"
        },
        "flags": 0,
        "description": "Representing supported protocols"
      },
      "clearTracks": {
        "type": {
          "$ref": "#/281"
        },
        "flags": 0,
        "description": "Representing which tracks should not be encrypted"
      },
      "contentKeys": {
        "type": {
          "$ref": "#/282"
        },
        "flags": 0,
        "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks"
      },
      "customLicenseAcquisitionUrlTemplate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "LicenseAcquisitionUrlTemplate is used to point to user specified service to delivery content keys"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnabledProtocols",
    "properties": {
      "download": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 1,
        "description": "Enable Download protocol or not"
      },
      "dash": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 1,
        "description": "Enable Dash protocol or not"
      },
      "hls": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 1,
        "description": "Enable Hls protocol or not"
      },
      "smoothStreaming": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 1,
        "description": "Enable SmoothStreaming protocol or not"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackSelection",
    "properties": {
      "trackSelections": {
        "type": {
          "$ref": "#/280"
        },
        "flags": 0,
        "description": "TrackSelections is a track property condition list which can specify track(s)"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackPropertyCondition",
    "properties": {
      "property": {
        "type": {
          "$ref": "#/276"
        },
        "flags": 1,
        "description": "Track property type"
      },
      "operation": {
        "type": {
          "$ref": "#/279"
        },
        "flags": 1,
        "description": "Track property condition operation"
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Track property value"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "FourCC"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/274"
      },
      {
        "$ref": "#/275"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Equal"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/277"
      },
      {
        "$ref": "#/278"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/273"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/272"
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingPolicyContentKeys",
    "properties": {
      "defaultKey": {
        "type": {
          "$ref": "#/283"
        },
        "flags": 0,
        "description": "Default content key for an encryption scheme"
      },
      "keyToTrackMappings": {
        "type": {
          "$ref": "#/286"
        },
        "flags": 0,
        "description": "Representing tracks needs separate content key"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefaultKey",
    "properties": {
      "label": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Label can be used to specify Content Key when creating Streaming Locator"
      },
      "policyName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Policy used by Default Key"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingPolicyContentKey",
    "properties": {
      "label": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Label can be used to specify Content Key when creating Streaming Locator"
      },
      "policyName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Policy used by Content Key"
      },
      "tracks": {
        "type": {
          "$ref": "#/285"
        },
        "flags": 0,
        "description": "Tracks which use this content key"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/272"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/284"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CommonEncryptionCenc",
    "properties": {
      "enabledProtocols": {
        "type": {
          "$ref": "#/271"
        },
        "flags": 0,
        "description": "Representing supported protocols"
      },
      "clearTracks": {
        "type": {
          "$ref": "#/288"
        },
        "flags": 0,
        "description": "Representing which tracks should not be encrypted"
      },
      "contentKeys": {
        "type": {
          "$ref": "#/282"
        },
        "flags": 0,
        "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks"
      },
      "drm": {
        "type": {
          "$ref": "#/289"
        },
        "flags": 0,
        "description": "Configuration of DRMs for CommonEncryptionCenc encryption scheme"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/272"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CencDrmConfiguration",
    "properties": {
      "playReady": {
        "type": {
          "$ref": "#/290"
        },
        "flags": 0,
        "description": "PlayReady configurations"
      },
      "widevine": {
        "type": {
          "$ref": "#/291"
        },
        "flags": 0,
        "description": "Widevine configurations"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingPolicyPlayReadyConfiguration",
    "properties": {
      "customLicenseAcquisitionUrlTemplate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The template for a customer service to deliver keys to end users.  Not needed when using Azure Media Services for issuing keys."
      },
      "playReadyCustomAttributes": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Custom attributes for PlayReady"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingPolicyWidevineConfiguration",
    "properties": {
      "customLicenseAcquisitionUrlTemplate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The template for a customer service to deliver keys to end users.  Not needed when using Azure Media Services for issuing keys."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CommonEncryptionCbcs",
    "properties": {
      "enabledProtocols": {
        "type": {
          "$ref": "#/271"
        },
        "flags": 0,
        "description": "Representing supported protocols"
      },
      "clearTracks": {
        "type": {
          "$ref": "#/293"
        },
        "flags": 0,
        "description": "Representing which tracks should not be encrypted"
      },
      "contentKeys": {
        "type": {
          "$ref": "#/282"
        },
        "flags": 0,
        "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks"
      },
      "drm": {
        "type": {
          "$ref": "#/294"
        },
        "flags": 0,
        "description": "Configuration of DRMs for current encryption scheme"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/272"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CbcsDrmConfiguration",
    "properties": {
      "fairPlay": {
        "type": {
          "$ref": "#/295"
        },
        "flags": 0,
        "description": "Fairplay configurations"
      },
      "playReady": {
        "type": {
          "$ref": "#/290"
        },
        "flags": 0,
        "description": "PlayReady configurations"
      },
      "widevine": {
        "type": {
          "$ref": "#/291"
        },
        "flags": 0,
        "description": "Widevine configurations"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingPolicyFairPlayConfiguration",
    "properties": {
      "customLicenseAcquisitionUrlTemplate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The template for a customer service to deliver keys to end users.  Not needed when using Azure Media Services for issuing keys."
      },
      "allowPersistentLicense": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 1,
        "description": "All license to be persistent or not"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NoEncryption",
    "properties": {
      "enabledProtocols": {
        "type": {
          "$ref": "#/271"
        },
        "flags": 0,
        "description": "Representing supported protocols"
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaServices/streamingPolicies@2018-03-30-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/268"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaServices/streamingLocators"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-03-30-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaServices/streamingLocators",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/298"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/299"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/301"
        },
        "flags": 0,
        "description": "Class to specify properties of Streaming Locator"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingLocatorProperties",
    "properties": {
      "assetName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Asset Name"
      },
      "created": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Creation time of Streaming Locator"
      },
      "startTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "StartTime of Streaming Locator"
      },
      "endTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "EndTime of Streaming Locator"
      },
      "streamingLocatorId": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "StreamingLocatorId of Streaming Locator"
      },
      "streamingPolicyName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Streaming policy name used by this streaming locator. Either specify the name of streaming policy you created or use one of the predefined streaming polices. The predefined streaming policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_SecureStreaming' and 'Predefined_SecureStreamingWithFairPlay'"
      },
      "defaultContentKeyPolicyName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Default ContentKeyPolicy used by this Streaming Locator"
      },
      "contentKeys": {
        "type": {
          "$ref": "#/303"
        },
        "flags": 0,
        "description": "ContentKeys used by this Streaming Locator"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingLocatorUserDefinedContentKey",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 1,
        "description": "ID of Content Key"
      },
      "label": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Content Key description"
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Content Key secret"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/302"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaServices/streamingLocators@2018-03-30-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/300"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 32,
    "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaservices/liveEvents"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-03-30-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaservices/liveEvents",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/305"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/306"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/307"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 0,
        "description": "The Live Event properties."
      },
      "tags": {
        "type": {
          "$ref": "#/337"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Azure Region of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LiveEventProperties",
    "properties": {
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Live Event description."
      },
      "input": {
        "type": {
          "$ref": "#/310"
        },
        "flags": 1,
        "description": "The Live Event input."
      },
      "preview": {
        "type": {
          "$ref": "#/316"
        },
        "flags": 0,
        "description": "The Live Event preview."
      },
      "encoding": {
        "type": {
          "$ref": "#/322"
        },
        "flags": 0,
        "description": "The Live Event encoding."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The provisioning state of the Live Event."
      },
      "resourceState": {
        "type": {
          "$ref": "#/331"
        },
        "flags": 2,
        "description": "The resource state of the Live Event."
      },
      "crossSiteAccessPolicies": {
        "type": {
          "$ref": "#/332"
        },
        "flags": 0,
        "description": "The Live Event access policies."
      },
      "vanityUrl": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 0,
        "description": "The Live Event vanity URL flag."
      },
      "streamOptions": {
        "type": {
          "$ref": "#/336"
        },
        "flags": 0,
        "description": "The stream options."
      },
      "created": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The exact time the Live Event was created."
      },
      "lastModified": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The exact time the Live Event was last modified."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LiveEventInput",
    "properties": {
      "streamingProtocol": {
        "type": {
          "$ref": "#/313"
        },
        "flags": 1,
        "description": "The streaming protocol for the Live Event."
      },
      "keyFrameIntervalDuration": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ISO 8601 timespan duration of the key frame interval duration."
      },
      "accessToken": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The access token."
      },
      "endpoints": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 0,
        "description": "The input endpoints for the Live Event."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "FragmentedMP4"
  },
  {
    "$type": "StringLiteralType",
    "value": "RTMP"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/311"
      },
      {
        "$ref": "#/312"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "LiveEventEndpoint",
    "properties": {
      "protocol": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The endpoint protocol."
      },
      "url": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The endpoint URL."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/314"
    }
  },
  {
    "$type": "ObjectType",
    "name": "LiveEventPreview",
    "properties": {
      "endpoints": {
        "type": {
          "$ref": "#/317"
        },
        "flags": 0,
        "description": "The endpoints for preview."
      },
      "accessControl": {
        "type": {
          "$ref": "#/318"
        },
        "flags": 0,
        "description": "The access control for LiveEvent preview."
      },
      "previewLocator": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The preview locator Guid."
      },
      "streamingPolicyName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of streaming policy used for LiveEvent preview"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/314"
    }
  },
  {
    "$type": "ObjectType",
    "name": "LiveEventPreviewAccessControl",
    "properties": {
      "ip": {
        "type": {
          "$ref": "#/319"
        },
        "flags": 0,
        "description": "The IP access control properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IPAccessControl",
    "properties": {
      "allow": {
        "type": {
          "$ref": "#/321"
        },
        "flags": 0,
        "description": "The IP allow list."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IPRange",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The friendly name for the IP address range."
      },
      "address": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The IP address."
      },
      "subnetPrefixLength": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The subnet mask prefix length (see CIDR notation)."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/320"
    }
  },
  {
    "$type": "ObjectType",
    "name": "LiveEventEncoding",
    "properties": {
      "encodingType": {
        "type": {
          "$ref": "#/325"
        },
        "flags": 0,
        "description": "The encoding type for Live Event."
      },
      "presetName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The encoding preset name."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Basic"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/323"
      },
      {
        "$ref": "#/324"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopped"
  },
  {
    "$type": "StringLiteralType",
    "value": "Starting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopping"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/326"
      },
      {
        "$ref": "#/327"
      },
      {
        "$ref": "#/328"
      },
      {
        "$ref": "#/329"
      },
      {
        "$ref": "#/330"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CrossSiteAccessPolicies",
    "properties": {
      "clientAccessPolicy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The content of clientaccesspolicy.xml used by Silverlight."
      },
      "crossDomainPolicy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The content of crossdomain.xml used by Silverlight."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "LowLatency"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/333"
      },
      {
        "$ref": "#/334"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/335"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaservices/liveEvents@2018-03-30-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/308"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 256,
    "pattern": "^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaservices/liveEvents/liveOutputs"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-03-30-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaservices/liveEvents/liveOutputs",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/339"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/340"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/341"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/343"
        },
        "flags": 0,
        "description": "The Live Output properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LiveOutputProperties",
    "properties": {
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The description of the Live Output."
      },
      "assetName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The asset name."
      },
      "archiveWindowLength": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "ISO 8601 timespan duration of the archive window length. This is duration that customer want to retain the recorded content."
      },
      "manifestName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The manifest file name."
      },
      "hls": {
        "type": {
          "$ref": "#/344"
        },
        "flags": 0,
        "description": "The HLS configuration."
      },
      "outputSnapTime": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The output snapshot time."
      },
      "created": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The exact time the Live Output was created."
      },
      "lastModified": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The exact time the Live Output was last modified."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The provisioning state of the Live Output."
      },
      "resourceState": {
        "type": {
          "$ref": "#/348"
        },
        "flags": 2,
        "description": "The resource state of the Live Output."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Hls",
    "properties": {
      "fragmentsPerTsSegment": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The amount of fragments per HTTP Live Streaming (HLS) segment."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/345"
      },
      {
        "$ref": "#/346"
      },
      {
        "$ref": "#/347"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaservices/liveEvents/liveOutputs@2018-03-30-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/342"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 24,
    "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Media/mediaservices/streamingEndpoints"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-03-30-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Media/mediaservices/streamingEndpoints",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/350"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/351"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/352"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/354"
        },
        "flags": 0,
        "description": "The StreamingEndpoint properties."
      },
      "tags": {
        "type": {
          "$ref": "#/367"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Azure Region of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingEndpointProperties",
    "properties": {
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The StreamingEndpoint description."
      },
      "scaleUnits": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The number of scale units."
      },
      "availabilitySetName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "AvailabilitySet name"
      },
      "accessControl": {
        "type": {
          "$ref": "#/355"
        },
        "flags": 0,
        "description": "The access control definition of the StreamingEndpoint."
      },
      "maxCacheAge": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "Max cache age"
      },
      "customHostNames": {
        "type": {
          "$ref": "#/359"
        },
        "flags": 0,
        "description": "The custom host names of the StreamingEndpoint"
      },
      "hostName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The StreamingEndpoint host name."
      },
      "cdnEnabled": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 0,
        "description": "The CDN enabled flag."
      },
      "cdnProvider": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The CDN provider name."
      },
      "cdnProfile": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The CDN profile name."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The provisioning state of the StreamingEndpoint."
      },
      "resourceState": {
        "type": {
          "$ref": "#/366"
        },
        "flags": 2,
        "description": "The resource state of the StreamingEndpoint."
      },
      "crossSiteAccessPolicies": {
        "type": {
          "$ref": "#/332"
        },
        "flags": 0,
        "description": "The StreamingEndpoint access policies."
      },
      "freeTrialEndTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The free trial expiration time."
      },
      "created": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The exact time the StreamingEndpoint was created."
      },
      "lastModified": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The exact time the StreamingEndpoint was last modified."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingEndpointAccessControl",
    "properties": {
      "akamai": {
        "type": {
          "$ref": "#/356"
        },
        "flags": 0,
        "description": "The access control of Akamai"
      },
      "ip": {
        "type": {
          "$ref": "#/319"
        },
        "flags": 0,
        "description": "The IP access control of the StreamingEndpoint."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkamaiAccessControl",
    "properties": {
      "akamaiSignatureHeaderAuthenticationKeyList": {
        "type": {
          "$ref": "#/358"
        },
        "flags": 0,
        "description": "authentication key list"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AkamaiSignatureHeaderAuthenticationKey",
    "properties": {
      "identifier": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "identifier of the key"
      },
      "base64Key": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "authentication key"
      },
      "expiration": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The exact time the authentication key."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/357"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopped"
  },
  {
    "$type": "StringLiteralType",
    "value": "Starting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopping"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Scaling"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/360"
      },
      {
        "$ref": "#/361"
      },
      {
        "$ref": "#/362"
      },
      {
        "$ref": "#/363"
      },
      {
        "$ref": "#/364"
      },
      {
        "$ref": "#/365"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Media/mediaservices/streamingEndpoints@2018-03-30-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/353"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "SyncStorageKeysInput",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The ID of the storage account resource."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "syncStorageKeys",
    "resourceType": "Microsoft.Media/mediaservices",
    "apiVersion": "2018-03-30-preview",
    "input": {
      "$ref": "#/369"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CheckNameAvailabilityInput",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The account name."
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The account type. For a Media Services account, this should be 'MediaServices'."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EntityNameAvailabilityCheckOutput",
    "properties": {
      "nameAvailable": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 1,
        "description": "Specifies if the name is available."
      },
      "reason": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the reason if the name is not available."
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the detailed reason if the name is not available."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "checkNameAvailability",
    "resourceType": "Microsoft.Media/locations",
    "apiVersion": "2018-03-30-preview",
    "output": {
      "$ref": "#/372"
    },
    "input": {
      "$ref": "#/371"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ListContainerSasInput",
    "properties": {
      "permissions": {
        "type": {
          "$ref": "#/378"
        },
        "flags": 0,
        "description": "The permissions to set on the SAS URL."
      },
      "expiryTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The SAS URL expiration time.  This must be less than 24 hours from the current time."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Read"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWrite"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteDelete"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/375"
      },
      {
        "$ref": "#/376"
      },
      {
        "$ref": "#/377"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AssetContainerSas",
    "properties": {
      "assetContainerSasUrls": {
        "type": {
          "$ref": "#/380"
        },
        "flags": 0,
        "description": "The list of Asset container SAS URLs."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listContainerSas",
    "resourceType": "Microsoft.Media/mediaServices/assets",
    "apiVersion": "2018-03-30-preview",
    "output": {
      "$ref": "#/379"
    },
    "input": {
      "$ref": "#/374"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssetStorageEncryptionKey",
    "properties": {
      "storageEncryptionKey": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The Asset storage encryption key."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "getEncryptionKey",
    "resourceType": "Microsoft.Media/mediaServices/assets",
    "apiVersion": "2018-03-30-preview",
    "output": {
      "$ref": "#/382"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "getPolicyPropertiesWithSecrets",
    "resourceType": "Microsoft.Media/mediaServices/contentKeyPolicies",
    "apiVersion": "2018-03-30-preview",
    "output": {
      "$ref": "#/24"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "cancelJob",
    "resourceType": "Microsoft.Media/mediaServices/transforms/jobs",
    "apiVersion": "2018-03-30-preview"
  },
  {
    "$type": "ObjectType",
    "name": "ListContentKeysResponse",
    "properties": {
      "contentKeys": {
        "type": {
          "$ref": "#/393"
        },
        "flags": 0,
        "description": "ContentKeys used by current Streaming Locator"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingLocatorContentKey",
    "properties": {
      "label": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Label of Content Key"
      },
      "type": {
        "type": {
          "$ref": "#/391"
        },
        "flags": 1,
        "description": "Encryption type of Content Key"
      },
      "id": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 1,
        "description": "ID of Content Key"
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of Content Key"
      },
      "policyName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ContentKeyPolicy used by Content Key"
      },
      "tracks": {
        "type": {
          "$ref": "#/392"
        },
        "flags": 0,
        "description": "Tracks which use this Content Key"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CommonEncryptionCenc"
  },
  {
    "$type": "StringLiteralType",
    "value": "CommonEncryptionCbcs"
  },
  {
    "$type": "StringLiteralType",
    "value": "EnvelopeEncryption"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/388"
      },
      {
        "$ref": "#/389"
      },
      {
        "$ref": "#/390"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/272"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/387"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listContentKeys",
    "resourceType": "Microsoft.Media/mediaServices/streamingLocators",
    "apiVersion": "2018-03-30-preview",
    "output": {
      "$ref": "#/386"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ListPathsResponse",
    "properties": {
      "streamingPaths": {
        "type": {
          "$ref": "#/408"
        },
        "flags": 0,
        "description": "Streaming Paths supported by current Streaming Locator"
      },
      "downloadPaths": {
        "type": {
          "$ref": "#/409"
        },
        "flags": 0,
        "description": "Download Paths supported by current Streaming Locator"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StreamingPath",
    "properties": {
      "streamingProtocol": {
        "type": {
          "$ref": "#/401"
        },
        "flags": 1,
        "description": "Streaming protocol"
      },
      "encryptionScheme": {
        "type": {
          "$ref": "#/406"
        },
        "flags": 1,
        "description": "Encryption scheme"
      },
      "paths": {
        "type": {
          "$ref": "#/407"
        },
        "flags": 0,
        "description": "Streaming paths for each protocol and encryptionScheme pair"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Hls"
  },
  {
    "$type": "StringLiteralType",
    "value": "Dash"
  },
  {
    "$type": "StringLiteralType",
    "value": "SmoothStreaming"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/397"
      },
      {
        "$ref": "#/398"
      },
      {
        "$ref": "#/399"
      },
      {
        "$ref": "#/400"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "NoEncryption"
  },
  {
    "$type": "StringLiteralType",
    "value": "EnvelopeEncryption"
  },
  {
    "$type": "StringLiteralType",
    "value": "CommonEncryptionCenc"
  },
  {
    "$type": "StringLiteralType",
    "value": "CommonEncryptionCbcs"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/402"
      },
      {
        "$ref": "#/403"
      },
      {
        "$ref": "#/404"
      },
      {
        "$ref": "#/405"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/396"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listPaths",
    "resourceType": "Microsoft.Media/mediaServices/streamingLocators",
    "apiVersion": "2018-03-30-preview",
    "output": {
      "$ref": "#/395"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "start",
    "resourceType": "Microsoft.Media/mediaservices/liveEvents",
    "apiVersion": "2018-03-30-preview"
  },
  {
    "$type": "ObjectType",
    "name": "LiveEventActionInput",
    "properties": {
      "removeOutputsOnStop": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 0,
        "description": "The flag indicates if remove LiveOutputs on Stop."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "stop",
    "resourceType": "Microsoft.Media/mediaservices/liveEvents",
    "apiVersion": "2018-03-30-preview",
    "input": {
      "$ref": "#/412"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "reset",
    "resourceType": "Microsoft.Media/mediaservices/liveEvents",
    "apiVersion": "2018-03-30-preview"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "start",
    "resourceType": "Microsoft.Media/mediaservices/streamingEndpoints",
    "apiVersion": "2018-03-30-preview"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "stop",
    "resourceType": "Microsoft.Media/mediaservices/streamingEndpoints",
    "apiVersion": "2018-03-30-preview"
  },
  {
    "$type": "ObjectType",
    "name": "StreamingEntityScaleUnit",
    "properties": {
      "scaleUnit": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The scale unit number of the StreamingEndpoint."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "scale",
    "resourceType": "Microsoft.Media/mediaservices/streamingEndpoints",
    "apiVersion": "2018-03-30-preview",
    "input": {
      "$ref": "#/417"
    }
  }
]