[
  {
    "$type": "StringType",
    "pattern": "^[-0-9a-zA-Z_]{1,80}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.StorageCache/caches"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2020-10-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.StorageCache/caches",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "tags": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "ARM tags as name/value pairs."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Region name string."
      },
      "identity": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "The identity of the cache, if configured."
      },
      "systemData": {
        "type": {
          "$ref": "#/10"
        },
        "flags": 2,
        "description": "The system meta data relating to this resource."
      },
      "properties": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Properties of the Cache."
      },
      "sku": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 0,
        "description": "SKU for the Cache."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ObjectType",
    "name": "CacheIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The principal id of the cache."
      },
      "tenantId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The tenant id associated with the cache."
      },
      "type": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 0,
        "description": "The type of identity used for the cache"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/12"
      },
      {
        "$ref": "#/13"
      },
      {
        "$ref": "#/14"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/16"
      },
      {
        "$ref": "#/17"
      },
      {
        "$ref": "#/18"
      },
      {
        "$ref": "#/19"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CacheProperties",
    "properties": {
      "cacheSizeGB": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 0,
        "description": "The size of this Cache, in GB."
      },
      "health": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Health of the Cache."
      },
      "mountAddresses": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 2,
        "description": "Array of IP addresses that can be used by clients mounting this Cache."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 0,
        "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property"
      },
      "subnet": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Subnet used for the Cache."
      },
      "upgradeStatus": {
        "type": {
          "$ref": "#/42"
        },
        "flags": 0,
        "description": "Upgrade status of the Cache."
      },
      "networkSettings": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 0,
        "description": "Specifies network settings of the cache."
      },
      "encryptionSettings": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Specifies encryption settings of the cache."
      },
      "securitySettings": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 0,
        "description": "Specifies security settings of the cache."
      },
      "directoryServicesSettings": {
        "type": {
          "$ref": "#/66"
        },
        "flags": 0,
        "description": "Specifies Directory Services settings of the cache."
      }
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ObjectType",
    "name": "CacheHealth",
    "properties": {
      "state": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "List of Cache health states."
      },
      "statusDescription": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Describes explanation of state."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Healthy"
  },
  {
    "$type": "StringLiteralType",
    "value": "Degraded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Down"
  },
  {
    "$type": "StringLiteralType",
    "value": "Transitioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopping"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopped"
  },
  {
    "$type": "StringLiteralType",
    "value": "Upgrading"
  },
  {
    "$type": "StringLiteralType",
    "value": "Flushing"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/24"
      },
      {
        "$ref": "#/25"
      },
      {
        "$ref": "#/26"
      },
      {
        "$ref": "#/27"
      },
      {
        "$ref": "#/28"
      },
      {
        "$ref": "#/29"
      },
      {
        "$ref": "#/30"
      },
      {
        "$ref": "#/31"
      },
      {
        "$ref": "#/32"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cancelled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/35"
      },
      {
        "$ref": "#/36"
      },
      {
        "$ref": "#/37"
      },
      {
        "$ref": "#/38"
      },
      {
        "$ref": "#/39"
      },
      {
        "$ref": "#/40"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CacheUpgradeStatus",
    "properties": {
      "currentFirmwareVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Version string of the firmware currently installed on this Cache."
      },
      "firmwareUpdateStatus": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 2,
        "description": "True if there is a firmware update ready to install on this Cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation."
      },
      "firmwareUpdateDeadline": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Time at which the pending firmware update will automatically be installed on the Cache."
      },
      "lastFirmwareUpdate": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Time of the last successful firmware update."
      },
      "pendingFirmwareVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "When firmwareUpdateAvailable is true, this field holds the version string for the update."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "available"
  },
  {
    "$type": "StringLiteralType",
    "value": "unavailable"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/43"
      },
      {
        "$ref": "#/44"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CacheNetworkSettings",
    "properties": {
      "mtu": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 0,
        "description": "The IPv4 maximum transmission unit configured for the subnet."
      },
      "utilityAddresses": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 2,
        "description": "Array of additional IP addresses used by this Cache."
      }
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 576,
    "maxValue": 1500
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CacheEncryptionSettings",
    "properties": {
      "keyEncryptionKey": {
        "type": {
          "$ref": "#/50"
        },
        "flags": 0,
        "description": "Specifies the location of the key encryption key in Key Vault."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KeyVaultKeyReference",
    "properties": {
      "keyUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The URL referencing a key encryption key in Key Vault."
      },
      "sourceVault": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 1,
        "description": "Describes a resource Id to source Key Vault."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KeyVaultKeyReferenceSourceVault",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource Id."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CacheSecuritySettings",
    "properties": {
      "accessPolicies": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 0,
        "description": "NFS access policies defined for this cache."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NfsAccessPolicy",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Name identifying this policy. Access Policy names are not case sensitive."
      },
      "accessRules": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 1,
        "description": "The set of rules describing client accesses allowed under this policy."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NfsAccessRule",
    "properties": {
      "scope": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 1,
        "description": "Scope for this rule. The scope and filter determine which clients match the rule."
      },
      "filter": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Filter applied to the scope for this rule. The filter's format depends on its scope. 'default' scope matches all clients and has no filter value. 'network' scope takes a filter in CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address or fully qualified domain name as filter. If a client does not match any filter rule and there is no default rule, access is denied."
      },
      "access": {
        "type": {
          "$ref": "#/62"
        },
        "flags": 1,
        "description": "Access allowed by this rule."
      },
      "suid": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Allow SUID semantics."
      },
      "submountAccess": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "For the default policy, allow access to subdirectories under the root export. If this is set to no, clients can only mount the path '/'. If set to yes, clients can mount a deeper path, like '/a/b'."
      },
      "rootSquash": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Map root accesses to anonymousUID and anonymousGID."
      },
      "anonymousUID": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "UID value that replaces 0 when rootSquash is true."
      },
      "anonymousGID": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "GID value that replaces 0 when rootSquash is true."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "network"
  },
  {
    "$type": "StringLiteralType",
    "value": "host"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/55"
      },
      {
        "$ref": "#/56"
      },
      {
        "$ref": "#/57"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "no"
  },
  {
    "$type": "StringLiteralType",
    "value": "ro"
  },
  {
    "$type": "StringLiteralType",
    "value": "rw"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/59"
      },
      {
        "$ref": "#/60"
      },
      {
        "$ref": "#/61"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/54"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/53"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CacheDirectorySettings",
    "properties": {
      "activeDirectory": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 0,
        "description": "Specifies settings for joining the HPC Cache to an Active Directory domain."
      },
      "usernameDownload": {
        "type": {
          "$ref": "#/75"
        },
        "flags": 0,
        "description": "Specifies settings for Extended Groups. Extended Groups allows users to be members of more than 16 groups."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CacheActiveDirectorySettings",
    "properties": {
      "primaryDnsIpAddress": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name."
      },
      "secondaryDnsIpAddress": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name."
      },
      "domainName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The fully qualified domain name of the Active Directory domain controller."
      },
      "domainNetBiosName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The Active Directory domain's NetBIOS name."
      },
      "cacheNetBiosName": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 1,
        "description": "The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z]."
      },
      "domainJoined": {
        "type": {
          "$ref": "#/72"
        },
        "flags": 2,
        "description": "True if the HPC Cache is joined to the Active Directory domain."
      },
      "credentials": {
        "type": {
          "$ref": "#/73"
        },
        "flags": 0,
        "description": "Active Directory admin credentials used to join the HPC Cache to a domain."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "^[-0-9a-zA-Z]{1,15}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Yes"
  },
  {
    "$type": "StringLiteralType",
    "value": "No"
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/69"
      },
      {
        "$ref": "#/70"
      },
      {
        "$ref": "#/71"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CacheActiveDirectorySettingsCredentials",
    "properties": {
      "username": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response."
      },
      "password": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 1,
        "description": "Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response."
      }
    }
  },
  {
    "$type": "StringType",
    "sensitive": true
  },
  {
    "$type": "ObjectType",
    "name": "CacheUsernameDownloadSettings",
    "properties": {
      "extendedGroups": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Whether or not Extended Groups is enabled."
      },
      "usernameSource": {
        "type": {
          "$ref": "#/80"
        },
        "flags": 0,
        "description": "This setting determines how the cache gets username and group names for clients."
      },
      "groupFileURI": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The URI of the file containing group information (in /etc/group file format). This field must be populated when 'usernameSource' is set to 'File'."
      },
      "userFileURI": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The URI of the file containing user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'."
      },
      "ldapServer": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The fully qualified domain name or IP address of the LDAP server to use."
      },
      "ldapBaseDN": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The base distinguished name for the LDAP domain."
      },
      "encryptLdapConnection": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Whether or not the LDAP connection should be encrypted."
      },
      "requireValidCertificate": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Determines if the certificates must be validated by a certificate authority. When true, caCertificateURI must be provided."
      },
      "autoDownloadCertificate": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' only if 'requireValidCertificate' is true."
      },
      "caCertificateURI": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true."
      },
      "usernameDownloaded": {
        "type": {
          "$ref": "#/84"
        },
        "flags": 2,
        "description": "Indicates whether or not the HPC Cache has performed the username download successfully."
      },
      "credentials": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 0,
        "description": "When present, these are the credentials for the secure LDAP connection."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AD"
  },
  {
    "$type": "StringLiteralType",
    "value": "LDAP"
  },
  {
    "$type": "StringLiteralType",
    "value": "File"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/76"
      },
      {
        "$ref": "#/77"
      },
      {
        "$ref": "#/78"
      },
      {
        "$ref": "#/79"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Yes"
  },
  {
    "$type": "StringLiteralType",
    "value": "No"
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/81"
      },
      {
        "$ref": "#/82"
      },
      {
        "$ref": "#/83"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CacheUsernameDownloadSettingsCredentials",
    "properties": {
      "bindDn": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The Bind Distinguished Name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response."
      },
      "bindPassword": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 0,
        "description": "The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CacheSku",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "SKU name for this Cache."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.StorageCache/caches@2020-10-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/4"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.StorageCache/caches/storageTargets"
  },
  {
    "$type": "StringLiteralType",
    "value": "2020-10-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.StorageCache/caches/storageTargets",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/88"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/89"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 0,
        "description": "StorageTarget properties"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Region name string."
      },
      "systemData": {
        "type": {
          "$ref": "#/10"
        },
        "flags": 2,
        "description": "The system meta data relating to this resource."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "StorageTargetProperties",
    "discriminator": "targetType",
    "baseProperties": {
      "junctions": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "List of Cache namespace junctions to target for namespace associations."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/100"
        },
        "flags": 0,
        "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property"
      },
      "nfs3": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 0,
        "description": "Properties when targetType is nfs3."
      },
      "clfs": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 0,
        "description": "Properties when targetType is clfs."
      },
      "unknown": {
        "type": {
          "$ref": "#/104"
        },
        "flags": 0,
        "description": "Properties when targetType is unknown."
      }
    },
    "elements": {
      "clfs": {
        "$ref": "#/106"
      },
      "nfs3": {
        "$ref": "#/108"
      },
      "unknown": {
        "$ref": "#/110"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NamespaceJunction",
    "properties": {
      "namespacePath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Namespace path on a Cache for a Storage Target."
      },
      "targetPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Path in Storage Target to which namespacePath points."
      },
      "nfsExport": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "NFS export where targetPath exists."
      },
      "nfsAccessPolicy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the access policy applied to this junction."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/92"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cancelled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/94"
      },
      {
        "$ref": "#/95"
      },
      {
        "$ref": "#/96"
      },
      {
        "$ref": "#/97"
      },
      {
        "$ref": "#/98"
      },
      {
        "$ref": "#/99"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Nfs3Target",
    "properties": {
      "target": {
        "type": {
          "$ref": "#/102"
        },
        "flags": 0,
        "description": "IP address or host name of an NFSv3 host (e.g., 10.0.44.44)."
      },
      "usageModel": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Identifies the usage model to be used for this Storage Target. Get choices from .../usageModels"
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "^[-.0-9a-zA-Z]+$"
  },
  {
    "$type": "ObjectType",
    "name": "ClfsTarget",
    "properties": {
      "target": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource ID of storage container."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UnknownTarget",
    "properties": {
      "unknownMap": {
        "type": {
          "$ref": "#/105"
        },
        "flags": 0,
        "description": "Dictionary of string->string pairs containing information about the Storage Target."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UnknownProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClfsTargetProperties",
    "properties": {
      "targetType": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 1,
        "description": "Type of the Storage Target."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "clfs"
  },
  {
    "$type": "ObjectType",
    "name": "Nfs3TargetProperties",
    "properties": {
      "targetType": {
        "type": {
          "$ref": "#/109"
        },
        "flags": 1,
        "description": "Type of the Storage Target."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "nfs3"
  },
  {
    "$type": "ObjectType",
    "name": "UnknownTargetProperties",
    "properties": {
      "targetType": {
        "type": {
          "$ref": "#/111"
        },
        "flags": 1,
        "description": "Type of the Storage Target."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "unknown"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.StorageCache/caches/storageTargets@2020-10-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/90"
    },
    "flags": 0
  },
  {
    "$type": "ResourceFunctionType",
    "name": "debugInfo",
    "resourceType": "Microsoft.StorageCache/caches",
    "apiVersion": "2020-10-01"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "flush",
    "resourceType": "Microsoft.StorageCache/caches",
    "apiVersion": "2020-10-01"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "start",
    "resourceType": "Microsoft.StorageCache/caches",
    "apiVersion": "2020-10-01"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "stop",
    "resourceType": "Microsoft.StorageCache/caches",
    "apiVersion": "2020-10-01"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "upgrade",
    "resourceType": "Microsoft.StorageCache/caches",
    "apiVersion": "2020-10-01"
  }
]