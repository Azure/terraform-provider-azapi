[
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 63,
    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ContainerService/fleets"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ContainerService/fleets",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "eTag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields."
      },
      "identity": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 0,
        "description": "Managed identity."
      },
      "tags": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FleetProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 2,
        "description": "The status of the last operation."
      },
      "hubProfile": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0,
        "description": "The FleetHubProfile configures the Fleet's hub."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "FleetHubProfile",
    "properties": {
      "dnsPrefix": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "DNS prefix used to create the FQDN for the Fleet hub."
      },
      "apiServerAccessProfile": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "The access profile for the Fleet hub API server."
      },
      "agentProfile": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "The agent profile for the Fleet hub."
      },
      "fqdn": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The FQDN of the Fleet hub."
      },
      "kubernetesVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The Kubernetes version of the Fleet hub."
      },
      "portalFqdn": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The Azure Portal FQDN of the Fleet hub."
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 54,
    "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][a-zA-Z0-9-]{0,52}[a-zA-Z0-9]$"
  },
  {
    "$type": "ObjectType",
    "name": "APIServerAccessProfile",
    "properties": {
      "enablePrivateCluster": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 0,
        "description": "Whether to create the Fleet hub as a private cluster or not."
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ObjectType",
    "name": "AgentProfile",
    "properties": {
      "subnetId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ID of the subnet which the Fleet hub node will join on startup. If this is not specified, a vnet and subnet will be generated and used."
      },
      "vmSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The virtual machine size of the Fleet hub."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedServiceIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 2,
        "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "tenantId": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 2,
        "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "type": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 1,
        "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."
      },
      "userAssignedIdentities": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 0,
        "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 36,
    "maxLength": 36,
    "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned, UserAssigned"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/20"
      },
      {
        "$ref": "#/21"
      },
      {
        "$ref": "#/22"
      },
      {
        "$ref": "#/23"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 2,
        "description": "The principal ID of the assigned identity."
      },
      "clientId": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 2,
        "description": "The client ID of the assigned identity."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentities",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/25"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/29"
      },
      {
        "$ref": "#/30"
      },
      {
        "$ref": "#/31"
      },
      {
        "$ref": "#/32"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/34"
      },
      {
        "$ref": "#/35"
      },
      {
        "$ref": "#/36"
      },
      {
        "$ref": "#/37"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ContainerService/fleets@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/4"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 50,
    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ContainerService/fleets/members"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ContainerService/fleets/members",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/42"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "eTag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields."
      },
      "systemData": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FleetMemberProperties",
    "properties": {
      "clusterResourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The ARM resource id of the cluster that joins the Fleet. Must be a valid Azure resource id. e.g.: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{clusterName}'."
      },
      "group": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 0,
        "description": "The group this member belongs to for multi-cluster update management."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 2,
        "description": "The status of the last operation."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Joining"
  },
  {
    "$type": "StringLiteralType",
    "value": "Leaving"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/45"
      },
      {
        "$ref": "#/46"
      },
      {
        "$ref": "#/47"
      },
      {
        "$ref": "#/48"
      },
      {
        "$ref": "#/49"
      },
      {
        "$ref": "#/50"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ContainerService/fleets/members@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/43"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ContainerService/fleets/updateRuns"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ContainerService/fleets/updateRuns",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "eTag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields."
      },
      "systemData": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateRunProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/60"
        },
        "flags": 2,
        "description": "The provisioning state of the UpdateRun resource."
      },
      "updateStrategyId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The resource id of the FleetUpdateStrategy resource to reference.\n\nWhen creating a new run, there are three ways to define a strategy for the run:\n1. Define a new strategy in place: Set the \"strategy\" field.\n2. Use an existing strategy: Set the \"updateStrategyId\" field. (since 2023-08-15-preview)\n3. Use the default strategy to update all the members one by one: Leave both \"updateStrategyId\" and \"strategy\" unset. (since 2023-08-15-preview)\n\nSetting both \"updateStrategyId\" and \"strategy\" is invalid.\n\nUpdateRuns created by \"updateStrategyId\" snapshot the referenced UpdateStrategy at the time of creation and store it in the \"strategy\" field. \nSubsequent changes to the referenced FleetUpdateStrategy resource do not propagate.\nUpdateRunStrategy changes can be made directly on the \"strategy\" field before launching the UpdateRun."
      },
      "strategy": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 0,
        "description": "The strategy defines the order in which the clusters will be updated.\nIf not set, all members will be updated sequentially. The UpdateRun status will show a single UpdateStage and a single UpdateGroup targeting all members.\nThe strategy of the UpdateRun can be modified until the run is started."
      },
      "managedClusterUpdate": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 1,
        "description": "The update to be applied to all clusters in the UpdateRun. The managedClusterUpdate can be modified until the run is started."
      },
      "status": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 2,
        "description": "The status of the UpdateRun."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/57"
      },
      {
        "$ref": "#/58"
      },
      {
        "$ref": "#/59"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "UpdateRunStrategy",
    "properties": {
      "stages": {
        "type": {
          "$ref": "#/66"
        },
        "flags": 1,
        "description": "The list of stages that compose this update run. Min size: 1."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateStage",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 1,
        "description": "The name of the stage. Must be unique within the UpdateRun."
      },
      "groups": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Defines the groups to be executed in parallel in this stage. Duplicate groups are not allowed. Min size: 1."
      },
      "afterStageWaitInSeconds": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 0,
        "description": "The time in seconds to wait at the end of this stage before starting the next one. Defaults to 0 seconds if unspecified."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateGroup",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 1,
        "description": "Name of the group.\nIt must match a group name of an existing fleet member."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/63"
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/62"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedClusterUpdate",
    "properties": {
      "upgrade": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 1,
        "description": "The upgrade to apply to the ManagedClusters."
      },
      "nodeImageSelection": {
        "type": {
          "$ref": "#/73"
        },
        "flags": 0,
        "description": "The node image upgrade to be applied to the target nodes in update run."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedClusterUpgradeSpec",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/72"
        },
        "flags": 1,
        "description": "ManagedClusterUpgradeType is the type of upgrade to be applied."
      },
      "kubernetesVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The Kubernetes version to upgrade the member clusters to."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Full"
  },
  {
    "$type": "StringLiteralType",
    "value": "NodeImageOnly"
  },
  {
    "$type": "StringLiteralType",
    "value": "ControlPlaneOnly"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/69"
      },
      {
        "$ref": "#/70"
      },
      {
        "$ref": "#/71"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NodeImageSelection",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 1,
        "description": "The node image upgrade type."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Latest"
  },
  {
    "$type": "StringLiteralType",
    "value": "Consistent"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/74"
      },
      {
        "$ref": "#/75"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "UpdateRunStatus",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 2,
        "description": "The status of the UpdateRun."
      },
      "stages": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 2,
        "description": "The stages composing an update run. Stages are run sequentially withing an UpdateRun."
      },
      "nodeImageSelection": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 2,
        "description": "The node image upgrade specs for the update run. It is only set in update run when `NodeImageSelection.type` is `Consistent`."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateStatus",
    "properties": {
      "startTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time the operation or group was started."
      },
      "completedTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time the operation or group was completed."
      },
      "state": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 2,
        "description": "The State of the operation or group."
      },
      "error": {
        "type": {
          "$ref": "#/87"
        },
        "flags": 2,
        "description": "The error details when a failure is encountered."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotStarted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopping"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopped"
  },
  {
    "$type": "StringLiteralType",
    "value": "Skipped"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Completed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/79"
      },
      {
        "$ref": "#/80"
      },
      {
        "$ref": "#/81"
      },
      {
        "$ref": "#/82"
      },
      {
        "$ref": "#/83"
      },
      {
        "$ref": "#/84"
      },
      {
        "$ref": "#/85"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ErrorDetail",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error code."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error message."
      },
      "target": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error target."
      },
      "details": {
        "type": {
          "$ref": "#/88"
        },
        "flags": 2,
        "description": "The error details."
      },
      "additionalInfo": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 2,
        "description": "The error additional info."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/87"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ErrorAdditionalInfo",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The additional info type."
      },
      "info": {
        "type": {
          "$ref": "#/90"
        },
        "flags": 2,
        "description": "The additional info."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/89"
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateStageStatus",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 2,
        "description": "The status of the UpdateStage."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the UpdateStage."
      },
      "groups": {
        "type": {
          "$ref": "#/96"
        },
        "flags": 2,
        "description": "The list of groups to be updated as part of this UpdateStage."
      },
      "afterStageWaitStatus": {
        "type": {
          "$ref": "#/97"
        },
        "flags": 2,
        "description": "The status of the wait period configured on the UpdateStage."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateGroupStatus",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 2,
        "description": "The status of the UpdateGroup."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the UpdateGroup."
      },
      "members": {
        "type": {
          "$ref": "#/95"
        },
        "flags": 2,
        "description": "The list of member this UpdateGroup updates."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MemberUpdateStatus",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 2,
        "description": "The status of the MemberUpdate operation."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the FleetMember."
      },
      "clusterResourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The Azure resource id of the target Kubernetes cluster."
      },
      "operationId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The operation resource id of the latest attempt to perform the operation."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The status message after processing the member update operation."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/94"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/93"
    }
  },
  {
    "$type": "ObjectType",
    "name": "WaitStatus",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 2,
        "description": "The status of the wait duration."
      },
      "waitDurationInSeconds": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 2,
        "description": "The wait duration configured in seconds."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/92"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NodeImageSelectionStatus",
    "properties": {
      "selectedNodeImageVersions": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 2,
        "description": "The image versions to upgrade the nodes to."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NodeImageVersion",
    "properties": {
      "version": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The image version to upgrade the nodes to (e.g., 'AKSUbuntu-1804gen2containerd-2022.12.13')."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/100"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ContainerService/fleets/updateRuns@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/55"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ContainerService/fleets/updateStrategies"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ContainerService/fleets/updateStrategies",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/104"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/106"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "eTag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields."
      },
      "systemData": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FleetUpdateStrategyProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/110"
        },
        "flags": 2,
        "description": "The provisioning state of the UpdateStrategy resource."
      },
      "strategy": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 1,
        "description": "Defines the update sequence of the clusters."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/107"
      },
      {
        "$ref": "#/108"
      },
      {
        "$ref": "#/109"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ContainerService/fleets/updateStrategies@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/105"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "FleetCredentialResults",
    "properties": {
      "kubeconfigs": {
        "type": {
          "$ref": "#/114"
        },
        "flags": 2,
        "description": "Array of base64-encoded Kubernetes configuration files."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FleetCredentialResult",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the credential."
      },
      "value": {
        "type": {
          "$ref": "#/90"
        },
        "flags": 2,
        "description": "Base64-encoded Kubernetes configuration file."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/113"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listCredentials",
    "resourceType": "Microsoft.ContainerService/fleets",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/112"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SkipProperties",
    "properties": {
      "targets": {
        "type": {
          "$ref": "#/123"
        },
        "flags": 1,
        "description": "The targets to skip."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SkipTarget",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/122"
        },
        "flags": 1,
        "description": "The skip target type."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The skip target's name. \nTo skip a member/group/stage, use the member/group/stage's name;\nTp skip an after stage wait, use the parent stage's name."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Member"
  },
  {
    "$type": "StringLiteralType",
    "value": "Group"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stage"
  },
  {
    "$type": "StringLiteralType",
    "value": "AfterStageWait"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/118"
      },
      {
        "$ref": "#/119"
      },
      {
        "$ref": "#/120"
      },
      {
        "$ref": "#/121"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/117"
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateRun",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "eTag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "skip",
    "resourceType": "Microsoft.ContainerService/fleets/updateRuns",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/124"
    },
    "input": {
      "$ref": "#/116"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "start",
    "resourceType": "Microsoft.ContainerService/fleets/updateRuns",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/124"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "stop",
    "resourceType": "Microsoft.ContainerService/fleets/updateRuns",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/124"
    }
  }
]