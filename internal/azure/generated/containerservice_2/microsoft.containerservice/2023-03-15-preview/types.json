[
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 63,
    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ContainerService/fleets"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-03-15-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ContainerService/fleets",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "eTag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields."
      },
      "tags": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FleetProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 2,
        "description": "The status of the last operation."
      },
      "hubProfile": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0,
        "description": "The FleetHubProfile configures the Fleet's hub."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "FleetHubProfile",
    "properties": {
      "dnsPrefix": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "DNS prefix used to create the FQDN for the Fleet hub."
      },
      "fqdn": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The FQDN of the Fleet hub."
      },
      "kubernetesVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The Kubernetes version of the Fleet hub."
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 54,
    "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][a-zA-Z0-9-]{0,52}[a-zA-Z0-9]$"
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/17"
      },
      {
        "$ref": "#/18"
      },
      {
        "$ref": "#/19"
      },
      {
        "$ref": "#/20"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/22"
      },
      {
        "$ref": "#/23"
      },
      {
        "$ref": "#/24"
      },
      {
        "$ref": "#/25"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ContainerService/fleets@2023-03-15-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/4"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 50,
    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ContainerService/fleets/members"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-03-15-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ContainerService/fleets/members",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "eTag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields."
      },
      "systemData": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FleetMemberProperties",
    "properties": {
      "clusterResourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The ARM resource id of the cluster that joins the Fleet. Must be a valid Azure resource id. e.g.: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{clusterName}'."
      },
      "group": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 0,
        "description": "The group this member belongs to for multi-cluster update management."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 2,
        "description": "The status of the last operation."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Joining"
  },
  {
    "$type": "StringLiteralType",
    "value": "Leaving"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/33"
      },
      {
        "$ref": "#/34"
      },
      {
        "$ref": "#/35"
      },
      {
        "$ref": "#/36"
      },
      {
        "$ref": "#/37"
      },
      {
        "$ref": "#/38"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ContainerService/fleets/members@2023-03-15-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/31"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.ContainerService/fleets/updateRuns"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-03-15-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.ContainerService/fleets/updateRuns",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/42"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "eTag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields."
      },
      "systemData": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateRunProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 2,
        "description": "The provisioning state of the UpdateRun resource."
      },
      "strategy": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "The strategy defines the order in which the clusters will be updated.\nIf not set, all members will be updated sequentially. The UpdateRun status will show a single UpdateStage and a single UpdateGroup targeting all members.\nThe strategy of the UpdateRun can be modified until the run is started."
      },
      "managedClusterUpdate": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 1,
        "description": "The update to be applied to all clusters in the UpdateRun. The managedClusterUpdate can be modified until the run is started."
      },
      "status": {
        "type": {
          "$ref": "#/60"
        },
        "flags": 2,
        "description": "The status of the UpdateRun."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/45"
      },
      {
        "$ref": "#/46"
      },
      {
        "$ref": "#/47"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "UpdateRunStrategy",
    "properties": {
      "stages": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 1,
        "description": "The list of stages that compose this update run. Min size: 1."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateStage",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 1,
        "description": "The name of the stage. Must be unique within the UpdateRun."
      },
      "groups": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 0,
        "description": "Defines the groups to be executed in parallel in this stage. Duplicate groups are not allowed. Min size: 1."
      },
      "afterStageWaitInSeconds": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 0,
        "description": "The time in seconds to wait at the end of this stage before starting the next one. Defaults to 0 seconds if unspecified."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateGroup",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 1,
        "description": "Name of the group.\nIt must match a group name of an existing fleet member."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/51"
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/50"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedClusterUpdate",
    "properties": {
      "upgrade": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 1,
        "description": "The upgrade to apply to the ManagedClusters."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedClusterUpgradeSpec",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/59"
        },
        "flags": 1,
        "description": "ManagedClusterUpgradeType is the type of upgrade to be applied."
      },
      "kubernetesVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The Kubernetes version to upgrade the member clusters to."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Full"
  },
  {
    "$type": "StringLiteralType",
    "value": "NodeImageOnly"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/57"
      },
      {
        "$ref": "#/58"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "UpdateRunStatus",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 2,
        "description": "The status of the UpdateRun."
      },
      "stages": {
        "type": {
          "$ref": "#/80"
        },
        "flags": 2,
        "description": "The stages composing an update run. Stages are run sequentially withing an UpdateRun."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateStatus",
    "properties": {
      "startTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time the operation or group was started."
      },
      "completedTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time the operation or group was completed."
      },
      "state": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 2,
        "description": "The State of the operation or group."
      },
      "error": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 2,
        "description": "The error details when a failure is encountered."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotStarted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopping"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopped"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Completed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/62"
      },
      {
        "$ref": "#/63"
      },
      {
        "$ref": "#/64"
      },
      {
        "$ref": "#/65"
      },
      {
        "$ref": "#/66"
      },
      {
        "$ref": "#/67"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ErrorDetail",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error code."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error message."
      },
      "target": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error target."
      },
      "details": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 2,
        "description": "The error details."
      },
      "additionalInfo": {
        "type": {
          "$ref": "#/73"
        },
        "flags": 2,
        "description": "The error additional info."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/69"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ErrorAdditionalInfo",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The additional info type."
      },
      "info": {
        "type": {
          "$ref": "#/72"
        },
        "flags": 2,
        "description": "The additional info."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/71"
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateStageStatus",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 2,
        "description": "The status of the UpdateStage."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the UpdateStage."
      },
      "groups": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 2,
        "description": "The list of groups to be updated as part of this UpdateStage."
      },
      "afterStageWaitStatus": {
        "type": {
          "$ref": "#/79"
        },
        "flags": 2,
        "description": "The status of the wait period configured on the UpdateStage."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateGroupStatus",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 2,
        "description": "The status of the UpdateGroup."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the UpdateGroup."
      },
      "members": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 2,
        "description": "The list of member this UpdateGroup updates."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MemberUpdateStatus",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 2,
        "description": "The status of the MemberUpdate operation."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the FleetMember."
      },
      "clusterResourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The Azure resource id of the target Kubernetes cluster."
      },
      "operationId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The operation resource id of the latest attempt to perform the operation."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/76"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/75"
    }
  },
  {
    "$type": "ObjectType",
    "name": "WaitStatus",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 2,
        "description": "The status of the wait duration."
      },
      "waitDurationInSeconds": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 2,
        "description": "The wait duration configured in seconds."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/74"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.ContainerService/fleets/updateRuns@2023-03-15-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/43"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "FleetCredentialResults",
    "properties": {
      "kubeconfigs": {
        "type": {
          "$ref": "#/84"
        },
        "flags": 2,
        "description": "Array of base64-encoded Kubernetes configuration files."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FleetCredentialResult",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the credential."
      },
      "value": {
        "type": {
          "$ref": "#/72"
        },
        "flags": 2,
        "description": "Base64-encoded Kubernetes configuration file."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/83"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listCredentials",
    "resourceType": "Microsoft.ContainerService/fleets",
    "apiVersion": "2023-03-15-preview",
    "output": {
      "$ref": "#/82"
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateRun",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "eTag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "start",
    "resourceType": "Microsoft.ContainerService/fleets/updateRuns",
    "apiVersion": "2023-03-15-preview",
    "output": {
      "$ref": "#/86"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "stop",
    "resourceType": "Microsoft.ContainerService/fleets/updateRuns",
    "apiVersion": "2023-03-15-preview",
    "output": {
      "$ref": "#/86"
    }
  }
]