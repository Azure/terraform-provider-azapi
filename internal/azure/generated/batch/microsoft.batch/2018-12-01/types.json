[
  {
    "$type": "StringType",
    "minLength": 3,
    "maxLength": 24,
    "pattern": "^[-\\w\\._]+$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Batch/batchAccounts"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-12-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Batch/batchAccounts",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The region in which to create the account."
      },
      "tags": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "The user-specified tags associated with the account."
      },
      "properties": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "The properties of the Batch account."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BatchAccountCreateParametersTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "BatchAccountCreatePropertiesOrBatchAccountProperties",
    "properties": {
      "autoStorage": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "The properties related to the auto-storage account."
      },
      "poolAllocationMode": {
        "type": {
          "$ref": "#/10"
        },
        "flags": 0,
        "description": "The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService."
      },
      "keyVaultReference": {
        "type": {
          "$ref": "#/11"
        },
        "flags": 0,
        "description": "A reference to the Azure key vault associated with the Batch account."
      },
      "accountEndpoint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The account endpoint used to interact with the Batch service."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 2,
        "description": "The provisioned state of the resource"
      },
      "dedicatedCoreQuota": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 2,
        "description": "The dedicated core quota for this Batch account."
      },
      "lowPriorityCoreQuota": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 2,
        "description": "The low-priority core quota for this Batch account."
      },
      "poolQuota": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 2,
        "description": "The pool quota for this Batch account."
      },
      "activeJobAndJobScheduleQuota": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 2,
        "description": "The active job and job schedule quota for this Batch account."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoStorageBasePropertiesOrAutoStorageProperties",
    "properties": {
      "storageAccountId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The resource ID of the storage account to be used for auto-storage account."
      },
      "lastKeySync": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The UTC time at which storage keys were last synchronized with the Batch account."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "BatchService"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserSubscription"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/9"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "KeyVaultReference",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The resource ID of the Azure key vault associated with the Batch account."
      },
      "url": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The URL of the Azure key vault associated with the Batch account."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Invalid"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cancelled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/12"
      },
      {
        "$ref": "#/13"
      },
      {
        "$ref": "#/14"
      },
      {
        "$ref": "#/15"
      },
      {
        "$ref": "#/16"
      },
      {
        "$ref": "#/17"
      }
    ]
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Batch/batchAccounts@2018-12-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/4"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 64,
    "pattern": "^[a-zA-Z0-9_-][a-zA-Z0-9_.-]*$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Batch/batchAccounts/applications/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-12-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Batch/batchAccounts/applications/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 0,
        "description": "The properties associated with the Application Package."
      },
      "etag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The ETag of the resource, used for concurrency statements."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ApplicationPackageProperties",
    "properties": {
      "state": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 2,
        "description": "The current state of the application package."
      },
      "format": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The format of the application package, if the package is active."
      },
      "storageUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The URL for the application package in Azure Storage."
      },
      "storageUrlExpiry": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The UTC time at which the Azure Storage URL will expire."
      },
      "lastActivationTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time at which the package was last activated, if the package is active."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Active"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/26"
      },
      {
        "$ref": "#/27"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Batch/batchAccounts/applications/versions@2018-12-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/24"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 64,
    "pattern": "^[a-zA-Z0-9_-]+$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Batch/batchAccounts/applications"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-12-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Batch/batchAccounts/applications",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The properties associated with the Application."
      },
      "etag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The ETag of the resource, used for concurrency statements."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ApplicationProperties",
    "properties": {
      "displayName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The display name for the application."
      },
      "allowUpdates": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 0,
        "description": "A value indicating whether packages within the application may be overwritten using the same version string."
      },
      "defaultVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package."
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Batch/batchAccounts/applications@2018-12-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/33"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 5,
    "maxLength": 45,
    "pattern": "^[\\w]+-[\\w]+$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Batch/batchAccounts/certificates"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-12-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Batch/batchAccounts/certificates",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/37"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 0,
        "description": "The properties associated with the certificate."
      },
      "etag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The ETag of the resource, used for concurrency statements."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CertificateCreateOrUpdatePropertiesOrCertificateProperties",
    "properties": {
      "data": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 5,
        "description": "The maximum size is 10KB."
      },
      "password": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 4,
        "description": "This is required if the certificate format is pfx and must be omitted if the certificate format is cer."
      },
      "thumbprintAlgorithm": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "This must match the first portion of the certificate name. Currently required to be 'SHA1'."
      },
      "thumbprint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "This must match the thumbprint from the name."
      },
      "format": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 2
      },
      "provisioningStateTransitionTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time at which the certificate entered its current state."
      },
      "previousProvisioningState": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 2,
        "description": "The previous provisioned state of the resource"
      },
      "previousProvisioningStateTransitionTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time at which the certificate entered its previous state."
      },
      "publicData": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The public key of the certificate."
      },
      "deleteCertificateError": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 2,
        "description": "This is only returned when the certificate provisioningState is 'Failed'."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Pfx"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cer"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/42"
      },
      {
        "$ref": "#/43"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/45"
      },
      {
        "$ref": "#/46"
      },
      {
        "$ref": "#/47"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/49"
      },
      {
        "$ref": "#/50"
      },
      {
        "$ref": "#/51"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DeleteCertificateError",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "A message describing the error, intended to be suitable for display in a user interface."
      },
      "target": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The target of the particular error. For example, the name of the property in error."
      },
      "details": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 0,
        "description": "A list of additional details about the error."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/53"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Batch/batchAccounts/certificates@2018-12-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/40"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Batch/batchAccounts/pools"
  },
  {
    "$type": "StringLiteralType",
    "value": "2018-12-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Batch/batchAccounts/pools",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/59"
        },
        "flags": 0,
        "description": "The properties associated with the pool."
      },
      "etag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The ETag of the resource, used for concurrency statements."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PoolProperties",
    "properties": {
      "displayName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
      },
      "lastModified": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "This is the last time at which the pool level data, such as the targetDedicatedNodes or autoScaleSettings, changed. It does not factor in node-level changes such as a compute node changing state."
      },
      "creationTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The creation time of the pool."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/62"
        },
        "flags": 2,
        "description": "The current state of the pool."
      },
      "provisioningStateTransitionTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time at which the pool entered its current state."
      },
      "allocationState": {
        "type": {
          "$ref": "#/66"
        },
        "flags": 2,
        "description": "Whether the pool is resizing."
      },
      "allocationStateTransitionTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time at which the pool entered its current allocation state."
      },
      "vmSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series)."
      },
      "deploymentConfiguration": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 0,
        "description": "Using CloudServiceConfiguration specifies that the nodes should be creating using Azure Cloud Services (PaaS), while VirtualMachineConfiguration uses Azure Virtual Machines (IaaS)."
      },
      "currentDedicatedNodes": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 2,
        "description": "The number of compute nodes currently in the pool."
      },
      "currentLowPriorityNodes": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 2,
        "description": "The number of low priority compute nodes currently in the pool."
      },
      "scaleSettings": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 0,
        "description": "Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes."
      },
      "autoScaleRun": {
        "type": {
          "$ref": "#/94"
        },
        "flags": 2,
        "description": "This property is set only if the pool automatically scales, i.e. autoScaleSettings are used."
      },
      "interNodeCommunication": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 0,
        "description": "This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'."
      },
      "networkConfiguration": {
        "type": {
          "$ref": "#/100"
        },
        "flags": 0,
        "description": "The network configuration for a pool."
      },
      "maxTasksPerNode": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 0,
        "description": "The maximum number of tasks that can run concurrently on a single compute node in the pool."
      },
      "taskSchedulingPolicy": {
        "type": {
          "$ref": "#/112"
        },
        "flags": 0,
        "description": "Specifies how tasks should be distributed across compute nodes."
      },
      "userAccounts": {
        "type": {
          "$ref": "#/125"
        },
        "flags": 0,
        "description": "The list of user accounts to be created on each node in the pool."
      },
      "metadata": {
        "type": {
          "$ref": "#/127"
        },
        "flags": 0,
        "description": "The Batch service does not assign any meaning to metadata; it is solely for the use of user code."
      },
      "startTask": {
        "type": {
          "$ref": "#/128"
        },
        "flags": 0,
        "description": "In an PATCH (update) operation, this property can be set to an empty object to remove the start task from the pool."
      },
      "certificates": {
        "type": {
          "$ref": "#/151"
        },
        "flags": 0,
        "description": "For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory."
      },
      "applicationPackages": {
        "type": {
          "$ref": "#/153"
        },
        "flags": 0,
        "description": "Changes to application packages affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged."
      },
      "applicationLicenses": {
        "type": {
          "$ref": "#/154"
        },
        "flags": 0,
        "description": "The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail."
      },
      "resizeOperationStatus": {
        "type": {
          "$ref": "#/155"
        },
        "flags": 2,
        "description": "Describes either the current operation (if the pool AllocationState is Resizing) or the previously completed operation (if the AllocationState is Steady)."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/60"
      },
      {
        "$ref": "#/61"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Steady"
  },
  {
    "$type": "StringLiteralType",
    "value": "Resizing"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopping"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/63"
      },
      {
        "$ref": "#/64"
      },
      {
        "$ref": "#/65"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentConfiguration",
    "properties": {
      "cloudServiceConfiguration": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 0,
        "description": "This property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch account was created with its poolAllocationMode property set to 'UserSubscription'."
      },
      "virtualMachineConfiguration": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 0,
        "description": "This property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CloudServiceConfiguration",
    "properties": {
      "osFamily": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Possible values are: 2 - OS Family 2, equivalent to Windows Server 2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 - OS Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5, equivalent to Windows Server 2016. For more information, see Azure Guest OS Releases (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases)."
      },
      "osVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The default value is * which specifies the latest operating system version for the specified OS family."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineConfiguration",
    "properties": {
      "imageReference": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 1,
        "description": "A reference to an Azure Virtual Machines Marketplace image or the Azure Image resource of a custom Virtual Machine. To get the list of all imageReferences verified by Azure Batch, see the 'List supported node agent SKUs' operation."
      },
      "nodeAgentSkuId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems. You must specify a node agent SKU which matches the selected image reference. To get the list of supported node agent SKUs along with their list of verified image references, see the 'List supported node agent SKUs' operation."
      },
      "windowsConfiguration": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 0,
        "description": "This property must not be specified if the imageReference specifies a Linux OS image."
      },
      "dataDisks": {
        "type": {
          "$ref": "#/80"
        },
        "flags": 0,
        "description": "This property must be specified if the compute nodes in the pool need to have empty data disks attached to them."
      },
      "licenseType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "This only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are:\n\n Windows_Server - The on-premises license is for Windows Server.\n Windows_Client - The on-premises license is for Windows Client."
      },
      "containerConfiguration": {
        "type": {
          "$ref": "#/81"
        },
        "flags": 0,
        "description": "If specified, setup is performed on each node in the pool to allow tasks to run in containers. All regular tasks and job manager tasks run on this pool must specify the containerSettings property, and all other tasks may specify it."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ImageReference",
    "properties": {
      "publisher": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "For example, Canonical or MicrosoftWindowsServer."
      },
      "offer": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "For example, UbuntuServer or WindowsServer."
      },
      "sku": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "For example, 14.04.0-LTS or 2012-R2-Datacenter."
      },
      "version": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "This property is mutually exclusive with other properties. The virtual machine image must be in the same region and subscription as the Azure Batch account. For information about the firewall settings for Batch node agent to communicate with Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration ."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WindowsConfiguration",
    "properties": {
      "enableAutomaticUpdates": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 0,
        "description": "If omitted, the default value is true."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataDisk",
    "properties": {
      "lun": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 1,
        "description": "The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun."
      },
      "caching": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 0,
        "description": "Values are:\n\n none - The caching mode for the disk is not enabled.\n readOnly - The caching mode for the disk is read only.\n readWrite - The caching mode for the disk is read and write.\n\n The default value for caching is none. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/."
      },
      "diskSizeGB": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 1,
        "description": "The initial disk size in GB when creating new data disk."
      },
      "storageAccountType": {
        "type": {
          "$ref": "#/79"
        },
        "flags": 0,
        "description": "If omitted, the default is \"Standard_LRS\". Values are:\n\n Standard_LRS - The data disk should use standard locally redundant storage.\n Premium_LRS - The data disk should use premium locally redundant storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnly"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWrite"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/73"
      },
      {
        "$ref": "#/74"
      },
      {
        "$ref": "#/75"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard_LRS"
  },
  {
    "$type": "StringLiteralType",
    "value": "Premium_LRS"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/77"
      },
      {
        "$ref": "#/78"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/72"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerConfiguration",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/82"
        },
        "flags": 1,
        "description": "The container technology to be used."
      },
      "containerImageNames": {
        "type": {
          "$ref": "#/83"
        },
        "flags": 0,
        "description": "This is the full image reference, as would be specified to \"docker pull\". An image will be sourced from the default Docker registry unless the image is fully qualified with an alternative registry."
      },
      "containerRegistries": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 0,
        "description": "If any images must be downloaded from a private registry which requires credentials, then those credentials must be provided here."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DockerCompatible"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerRegistry",
    "properties": {
      "registryServer": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "If omitted, the default is \"docker.io\"."
      },
      "username": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The user name to log into the registry server."
      },
      "password": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The password to log into the registry server."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/84"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScaleSettings",
    "properties": {
      "fixedScale": {
        "type": {
          "$ref": "#/87"
        },
        "flags": 0,
        "description": "This property and autoScale are mutually exclusive and one of the properties must be specified."
      },
      "autoScale": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "This property and fixedScale are mutually exclusive and one of the properties must be specified."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FixedScaleSettings",
    "properties": {
      "resizeTimeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The default value is 15 minutes. Timeout values use ISO 8601 format. For example, use PT10M for 10 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service rejects the request with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
      },
      "targetDedicatedNodes": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 0,
        "description": "At least one of targetDedicatedNodes, targetLowPriority nodes must be set."
      },
      "targetLowPriorityNodes": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 0,
        "description": "At least one of targetDedicatedNodes, targetLowPriority nodes must be set."
      },
      "nodeDeallocationOption": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 0,
        "description": "If omitted, the default value is Requeue."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Requeue"
  },
  {
    "$type": "StringLiteralType",
    "value": "Terminate"
  },
  {
    "$type": "StringLiteralType",
    "value": "TaskCompletion"
  },
  {
    "$type": "StringLiteralType",
    "value": "RetainedData"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/88"
      },
      {
        "$ref": "#/89"
      },
      {
        "$ref": "#/90"
      },
      {
        "$ref": "#/91"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AutoScaleSettings",
    "properties": {
      "formula": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "A formula for the desired number of compute nodes in the pool."
      },
      "evaluationInterval": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "If omitted, the default value is 15 minutes (PT15M)."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoScaleRun",
    "properties": {
      "evaluationTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The time at which the autoscale formula was last evaluated."
      },
      "results": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Each variable value is returned in the form $variable=value, and variables are separated by semicolons."
      },
      "error": {
        "type": {
          "$ref": "#/95"
        },
        "flags": 0,
        "description": "An error that occurred when autoscaling a pool."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoScaleRunError",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "A message describing the error, intended to be suitable for display in a user interface."
      },
      "details": {
        "type": {
          "$ref": "#/96"
        },
        "flags": 0,
        "description": "Additional details about the error."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/95"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/97"
      },
      {
        "$ref": "#/98"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NetworkConfiguration",
    "properties": {
      "subnetId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The virtual network must be in the same region and subscription as the Azure Batch account. The specified subnet should have enough free IP addresses to accommodate the number of nodes in the pool. If the subnet doesn't have enough free IP addresses, the pool will partially allocate compute nodes, and a resize error will occur. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow communication from the Azure Batch service to be able to schedule tasks on the compute nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the compute nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the compute nodes to unusable. For pools created via virtualMachineConfiguration the Batch account must have poolAllocationMode userSubscription in order to use a VNet. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication. For pools created with a virtual machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. For pools created with a cloud service configuration, enable ports 10100, 20100, and 30100. Also enable outbound connections to Azure Storage on port 443. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration"
      },
      "endpointConfiguration": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 0,
        "description": "Pool endpoint configuration is only supported on pools with the virtualMachineConfiguration property."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PoolEndpointConfiguration",
    "properties": {
      "inboundNatPools": {
        "type": {
          "$ref": "#/111"
        },
        "flags": 1,
        "description": "The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the request fails with HTTP status code 400."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "InboundNatPool",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters.  If any invalid values are provided the request fails with HTTP status code 400."
      },
      "protocol": {
        "type": {
          "$ref": "#/105"
        },
        "flags": 1,
        "description": "The protocol of the endpoint."
      },
      "backendPort": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 1,
        "description": "This must be unique within a Batch pool. Acceptable values are between 1 and 65535 except for 22, 3389, 29876 and 29877 as these are reserved. If any reserved values are provided the request fails with HTTP status code 400."
      },
      "frontendPortRangeStart": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 1,
        "description": "Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400."
      },
      "frontendPortRangeEnd": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 1,
        "description": "Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved by the Batch service. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400."
      },
      "networkSecurityGroupRules": {
        "type": {
          "$ref": "#/110"
        },
        "flags": 0,
        "description": "The maximum number of rules that can be specified across all the endpoints on a Batch pool is 25. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the maximum number of network security group rules is exceeded the request fails with HTTP status code 400."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "TCP"
  },
  {
    "$type": "StringLiteralType",
    "value": "UDP"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/103"
      },
      {
        "$ref": "#/104"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NetworkSecurityGroupRule",
    "properties": {
      "priority": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 1,
        "description": "Priorities within a pool must be unique and are evaluated in order of priority. The lower the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150 to 3500. If any reserved or duplicate values are provided the request fails with HTTP status code 400."
      },
      "access": {
        "type": {
          "$ref": "#/109"
        },
        "flags": 1,
        "description": "The action that should be taken for a specified IP address, subnet range or tag."
      },
      "sourceAddressPrefix": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If any other values are provided the request fails with HTTP status code 400."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Allow"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deny"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/107"
      },
      {
        "$ref": "#/108"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/106"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/102"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TaskSchedulingPolicy",
    "properties": {
      "nodeFillType": {
        "type": {
          "$ref": "#/115"
        },
        "flags": 1,
        "description": "How tasks should be distributed across compute nodes."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Spread"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pack"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/113"
      },
      {
        "$ref": "#/114"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "UserAccount",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the user account."
      },
      "password": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The password for the user account."
      },
      "elevationLevel": {
        "type": {
          "$ref": "#/119"
        },
        "flags": 0,
        "description": "nonAdmin - The auto user is a standard user without elevated access. admin - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin."
      },
      "linuxUserConfiguration": {
        "type": {
          "$ref": "#/120"
        },
        "flags": 0,
        "description": "This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options."
      },
      "windowsUserConfiguration": {
        "type": {
          "$ref": "#/121"
        },
        "flags": 0,
        "description": "This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NonAdmin"
  },
  {
    "$type": "StringLiteralType",
    "value": "Admin"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/117"
      },
      {
        "$ref": "#/118"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "LinuxUserConfiguration",
    "properties": {
      "uid": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 0,
        "description": "The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid."
      },
      "gid": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 0,
        "description": "The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid."
      },
      "sshPrivateKey": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between nodes in a Linux pool when the pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between nodes (no modification of the user's .ssh directory is done)."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WindowsUserConfiguration",
    "properties": {
      "loginMode": {
        "type": {
          "$ref": "#/124"
        },
        "flags": 0,
        "description": "Specifies login mode for the user. The default value for VirtualMachineConfiguration pools is interactive mode and for CloudServiceConfiguration pools is batch mode."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Batch"
  },
  {
    "$type": "StringLiteralType",
    "value": "Interactive"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/122"
      },
      {
        "$ref": "#/123"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/116"
    }
  },
  {
    "$type": "ObjectType",
    "name": "MetadataItem",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the metadata item."
      },
      "value": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The value of the metadata item."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/126"
    }
  },
  {
    "$type": "ObjectType",
    "name": "StartTask",
    "properties": {
      "commandLine": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. Required if any other properties of the startTask are specified."
      },
      "resourceFiles": {
        "type": {
          "$ref": "#/130"
        },
        "flags": 0,
        "description": "A list of files that the Batch service will download to the compute node before running the command line."
      },
      "environmentSettings": {
        "type": {
          "$ref": "#/132"
        },
        "flags": 0,
        "description": "A list of environment variable settings for the start task."
      },
      "userIdentity": {
        "type": {
          "$ref": "#/133"
        },
        "flags": 0,
        "description": "If omitted, the task runs as a non-administrative user unique to the task."
      },
      "maxTaskRetryCount": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 0,
        "description": "The Batch service retries a task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task. If the maximum retry count is -1, the Batch service retries the task without limit."
      },
      "waitForSuccess": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 0,
        "description": "If true and the start task fails on a compute node, the Batch service retries the start task up to its maximum retry count (maxTaskRetryCount). If the task has still not completed successfully after all retries, then the Batch service marks the compute node unusable, and will not schedule tasks to it. This condition can be detected via the node state and scheduling error detail. If false, the Batch service will not wait for the start task to complete. In this case, other tasks can start executing on the compute node while the start task is still running; and even if the start task fails, new tasks will continue to be scheduled on the node. The default is false."
      },
      "containerSettings": {
        "type": {
          "$ref": "#/141"
        },
        "flags": 0,
        "description": "When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceFile",
    "properties": {
      "autoStorageContainerName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified."
      },
      "storageContainerUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. This URL must be readable and listable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the blob, or set the ACL for the blob or its container to allow public access."
      },
      "httpUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. If the URL is Azure Blob Storage, it must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access."
      },
      "blobPrefix": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The property is valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded."
      },
      "filePath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "If the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the task's working directory (for example by using '..')."
      },
      "fileMode": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/129"
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentSetting",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the environment variable."
      },
      "value": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The value of the environment variable."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/131"
    }
  },
  {
    "$type": "ObjectType",
    "name": "UserIdentity",
    "properties": {
      "userName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The userName and autoUser properties are mutually exclusive; you must specify one but not both."
      },
      "autoUser": {
        "type": {
          "$ref": "#/134"
        },
        "flags": 0,
        "description": "The userName and autoUser properties are mutually exclusive; you must specify one but not both."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoUserSpecification",
    "properties": {
      "scope": {
        "type": {
          "$ref": "#/137"
        },
        "flags": 0,
        "description": "The default value is task."
      },
      "elevationLevel": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 0,
        "description": "nonAdmin - The auto user is a standard user without elevated access. admin - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Task"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pool"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/135"
      },
      {
        "$ref": "#/136"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "NonAdmin"
  },
  {
    "$type": "StringLiteralType",
    "value": "Admin"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/138"
      },
      {
        "$ref": "#/139"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TaskContainerSettings",
    "properties": {
      "containerRunOptions": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "These additional options are supplied as arguments to the \"docker create\" command, in addition to those controlled by the Batch Service."
      },
      "imageName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "This is the full image reference, as would be specified to \"docker pull\". If no tag is provided as part of the image name, the tag \":latest\" is used as a default."
      },
      "registry": {
        "type": {
          "$ref": "#/84"
        },
        "flags": 0,
        "description": "This setting can be omitted if was already provided at pool creation."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CertificateReference",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The fully qualified ID of the certificate to install on the pool. This must be inside the same batch account as the pool."
      },
      "storeLocation": {
        "type": {
          "$ref": "#/145"
        },
        "flags": 0,
        "description": "The default value is currentUser. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory."
      },
      "storeName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default value is My."
      },
      "visibility": {
        "type": {
          "$ref": "#/150"
        },
        "flags": 0,
        "description": "Which user accounts on the compute node should have access to the private data of the certificate."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CurrentUser"
  },
  {
    "$type": "StringLiteralType",
    "value": "LocalMachine"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/143"
      },
      {
        "$ref": "#/144"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "StartTask"
  },
  {
    "$type": "StringLiteralType",
    "value": "Task"
  },
  {
    "$type": "StringLiteralType",
    "value": "RemoteUser"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/146"
      },
      {
        "$ref": "#/147"
      },
      {
        "$ref": "#/148"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/149"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/142"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ApplicationPackageReference",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The ID of the application package to install. This must be inside the same batch account as the pool. This can either be a reference to a specific version or the default version if one exists."
      },
      "version": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "If this is omitted, and no default version is specified for this application, the request fails with the error code InvalidApplicationPackageReferences. If you are calling the REST API directly, the HTTP status code is 409."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/152"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResizeOperationStatus",
    "properties": {
      "targetDedicatedNodes": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 0,
        "description": "The desired number of dedicated compute nodes in the pool."
      },
      "targetLowPriorityNodes": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 0,
        "description": "The desired number of low-priority compute nodes in the pool."
      },
      "resizeTimeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
      },
      "nodeDeallocationOption": {
        "type": {
          "$ref": "#/160"
        },
        "flags": 0,
        "description": "The default value is requeue."
      },
      "startTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The time when this resize operation was started."
      },
      "errors": {
        "type": {
          "$ref": "#/163"
        },
        "flags": 0,
        "description": "This property is set only if an error occurred during the last pool resize, and only when the pool allocationState is Steady."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Requeue"
  },
  {
    "$type": "StringLiteralType",
    "value": "Terminate"
  },
  {
    "$type": "StringLiteralType",
    "value": "TaskCompletion"
  },
  {
    "$type": "StringLiteralType",
    "value": "RetainedData"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/156"
      },
      {
        "$ref": "#/157"
      },
      {
        "$ref": "#/158"
      },
      {
        "$ref": "#/159"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResizeError",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "A message describing the error, intended to be suitable for display in a user interface."
      },
      "details": {
        "type": {
          "$ref": "#/162"
        },
        "flags": 0,
        "description": "Additional details about the error."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/161"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/161"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Batch/batchAccounts/pools@2018-12-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/58"
    },
    "flags": 0
  },
  {
    "$type": "ResourceFunctionType",
    "name": "syncAutoStorageKeys",
    "resourceType": "Microsoft.Batch/batchAccounts",
    "apiVersion": "2018-12-01"
  },
  {
    "$type": "ObjectType",
    "name": "BatchAccountRegenerateKeyParameters",
    "properties": {
      "keyName": {
        "type": {
          "$ref": "#/169"
        },
        "flags": 1,
        "description": "The type of account key to regenerate."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Primary"
  },
  {
    "$type": "StringLiteralType",
    "value": "Secondary"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/167"
      },
      {
        "$ref": "#/168"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "BatchAccountKeys",
    "properties": {
      "accountName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The Batch account name."
      },
      "primary": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The primary key associated with the account."
      },
      "secondary": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The secondary key associated with the account."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "regenerateKeys",
    "resourceType": "Microsoft.Batch/batchAccounts",
    "apiVersion": "2018-12-01",
    "output": {
      "$ref": "#/170"
    },
    "input": {
      "$ref": "#/166"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listKeys",
    "resourceType": "Microsoft.Batch/batchAccounts",
    "apiVersion": "2018-12-01",
    "output": {
      "$ref": "#/170"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ActivateApplicationPackageParameters",
    "properties": {
      "format": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The format of the application package binary file."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ApplicationPackage",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 0,
        "description": "The properties associated with the Application Package."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The ID of the resource."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the resource."
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The type of the resource."
      },
      "etag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The ETag of the resource, used for concurrency statements."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "activate",
    "resourceType": "Microsoft.Batch/batchAccounts/applications/versions",
    "apiVersion": "2018-12-01",
    "output": {
      "$ref": "#/174"
    },
    "input": {
      "$ref": "#/173"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CheckNameAvailabilityParameters",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name to check for availability"
      },
      "type": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 1,
        "description": "The resource type. Must be set to Microsoft.Batch/batchAccounts"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Batch/batchAccounts"
  },
  {
    "$type": "ObjectType",
    "name": "CheckNameAvailabilityResult",
    "properties": {
      "nameAvailable": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 2,
        "description": "Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used."
      },
      "reason": {
        "type": {
          "$ref": "#/181"
        },
        "flags": 2,
        "description": "Gets the reason that a Batch account name could not be used. The Reason element is only returned if NameAvailable is false."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Gets an error message explaining the Reason value in more detail."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Invalid"
  },
  {
    "$type": "StringLiteralType",
    "value": "AlreadyExists"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/179"
      },
      {
        "$ref": "#/180"
      }
    ]
  },
  {
    "$type": "ResourceFunctionType",
    "name": "checkNameAvailability",
    "resourceType": "Microsoft.Batch/locations",
    "apiVersion": "2018-12-01",
    "output": {
      "$ref": "#/178"
    },
    "input": {
      "$ref": "#/176"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Certificate",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/184"
        },
        "flags": 0,
        "description": "The properties associated with the certificate."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The ID of the resource."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the resource."
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The type of the resource."
      },
      "etag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The ETag of the resource, used for concurrency statements."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CertificateProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/188"
        },
        "flags": 2
      },
      "provisioningStateTransitionTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time at which the certificate entered its current state."
      },
      "previousProvisioningState": {
        "type": {
          "$ref": "#/192"
        },
        "flags": 2,
        "description": "The previous provisioned state of the resource"
      },
      "previousProvisioningStateTransitionTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time at which the certificate entered its previous state."
      },
      "publicData": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The public key of the certificate."
      },
      "deleteCertificateError": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 2,
        "description": "This is only returned when the certificate provisioningState is 'Failed'."
      },
      "thumbprintAlgorithm": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "This must match the first portion of the certificate name. Currently required to be 'SHA1'."
      },
      "thumbprint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "This must match the thumbprint from the name."
      },
      "format": {
        "type": {
          "$ref": "#/195"
        },
        "flags": 0,
        "description": "The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/185"
      },
      {
        "$ref": "#/186"
      },
      {
        "$ref": "#/187"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/189"
      },
      {
        "$ref": "#/190"
      },
      {
        "$ref": "#/191"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Pfx"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cer"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/193"
      },
      {
        "$ref": "#/194"
      }
    ]
  },
  {
    "$type": "ResourceFunctionType",
    "name": "cancelDelete",
    "resourceType": "Microsoft.Batch/batchAccounts/certificates",
    "apiVersion": "2018-12-01",
    "output": {
      "$ref": "#/183"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Pool",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/59"
        },
        "flags": 0,
        "description": "The properties associated with the pool."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The ID of the resource."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the resource."
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The type of the resource."
      },
      "etag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The ETag of the resource, used for concurrency statements."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "disableAutoScale",
    "resourceType": "Microsoft.Batch/batchAccounts/pools",
    "apiVersion": "2018-12-01",
    "output": {
      "$ref": "#/197"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "stopResize",
    "resourceType": "Microsoft.Batch/batchAccounts/pools",
    "apiVersion": "2018-12-01",
    "output": {
      "$ref": "#/197"
    }
  }
]