[
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/computes"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/computes",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The identity of the resource."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the location of the resource."
      },
      "tags": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0,
        "description": "Contains resource tags defined as key/value pairs."
      },
      "sku": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "The sku of the workspace."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      },
      "properties": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 0,
        "description": "Compute properties"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedServiceIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 2,
        "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "tenantId": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 2,
        "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "type": {
        "type": {
          "$ref": "#/10"
        },
        "flags": 1,
        "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."
      },
      "userAssignedIdentities": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 36,
    "maxLength": 36,
    "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned,UserAssigned"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 2,
        "description": "The principal ID of the assigned identity."
      },
      "clientId": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 2,
        "description": "The client ID of the assigned identity."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentities",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/11"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Sku",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
      },
      "tier": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 0,
        "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
      },
      "size": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code."
      },
      "family": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
      },
      "capacity": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Free"
  },
  {
    "$type": "StringLiteralType",
    "value": "Basic"
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard"
  },
  {
    "$type": "StringLiteralType",
    "value": "Premium"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/15"
      },
      {
        "$ref": "#/16"
      },
      {
        "$ref": "#/17"
      },
      {
        "$ref": "#/18"
      }
    ]
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/22"
      },
      {
        "$ref": "#/23"
      },
      {
        "$ref": "#/24"
      },
      {
        "$ref": "#/25"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/27"
      },
      {
        "$ref": "#/28"
      },
      {
        "$ref": "#/29"
      },
      {
        "$ref": "#/30"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Compute",
    "discriminator": "computeType",
    "baseProperties": {
      "computeLocation": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Location for the underlying compute"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 2,
        "description": "The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The description of the Machine Learning compute."
      },
      "createdOn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The time at which the compute was created."
      },
      "modifiedOn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The time at which the compute was last modified."
      },
      "resourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ARM resource id of the underlying compute"
      },
      "provisioningErrors": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 2,
        "description": "Errors during provisioning"
      },
      "isAttachedCompute": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 2,
        "description": "Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false."
      },
      "disableLocalAuth": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication."
      }
    },
    "elements": {
      "AKS": {
        "$ref": "#/49"
      },
      "AmlCompute": {
        "$ref": "#/71"
      },
      "ComputeInstance": {
        "$ref": "#/93"
      },
      "DataFactory": {
        "$ref": "#/262"
      },
      "DataLakeAnalytics": {
        "$ref": "#/264"
      },
      "Databricks": {
        "$ref": "#/267"
      },
      "HDInsight": {
        "$ref": "#/270"
      },
      "Kubernetes": {
        "$ref": "#/274"
      },
      "SynapseSpark": {
        "$ref": "#/283"
      },
      "VirtualMachine": {
        "$ref": "#/288"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/33"
      },
      {
        "$ref": "#/34"
      },
      {
        "$ref": "#/35"
      },
      {
        "$ref": "#/36"
      },
      {
        "$ref": "#/37"
      },
      {
        "$ref": "#/38"
      },
      {
        "$ref": "#/39"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ErrorResponse",
    "properties": {
      "error": {
        "type": {
          "$ref": "#/42"
        },
        "flags": 0,
        "description": "The error object."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ErrorDetail",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The error code."
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The error message."
      },
      "target": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The error target."
      },
      "details": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 2,
        "description": "The error details."
      },
      "additionalInfo": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 2,
        "description": "The error additional info."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/42"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ErrorAdditionalInfo",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The additional info type."
      },
      "info": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 2,
        "description": "The additional info."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/44"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/41"
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ObjectType",
    "name": "AKS",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/50"
        },
        "flags": 0,
        "description": "AKS properties"
      },
      "computeType": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AKSSchemaProperties",
    "properties": {
      "clusterFqdn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Cluster full qualified domain name"
      },
      "systemServices": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 2,
        "description": "System services"
      },
      "agentCount": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 0,
        "description": "Number of agents"
      },
      "agentVmSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Agent virtual machine size"
      },
      "clusterPurpose": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0,
        "description": "Intended usage of the cluster"
      },
      "sslConfiguration": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 0,
        "description": "SSL configuration"
      },
      "aksNetworkingConfiguration": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "AKS networking configuration for vnet"
      },
      "loadBalancerType": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 0,
        "description": "Load Balancer Type"
      },
      "loadBalancerSubnet": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Load Balancer Subnet"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemService",
    "properties": {
      "systemServiceType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of this system service."
      },
      "publicIpAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Public IP address"
      },
      "version": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The version for this type."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/51"
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "FastProd"
  },
  {
    "$type": "StringLiteralType",
    "value": "DenseProd"
  },
  {
    "$type": "StringLiteralType",
    "value": "DevTest"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/54"
      },
      {
        "$ref": "#/55"
      },
      {
        "$ref": "#/56"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SslConfiguration",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/62"
        },
        "flags": 0,
        "description": "Enable or disable ssl for scoring"
      },
      "cert": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Cert data"
      },
      "key": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Key data"
      },
      "cname": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "CNAME of the cert"
      },
      "leafDomainLabel": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Leaf domain label of public endpoint"
      },
      "overwriteExistingDomain": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Indicates whether to overwrite existing domain label."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/59"
      },
      {
        "$ref": "#/60"
      },
      {
        "$ref": "#/61"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringType",
    "sensitive": true
  },
  {
    "$type": "ObjectType",
    "name": "AksNetworkingConfiguration",
    "properties": {
      "subnetId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Virtual network subnet resource ID the compute nodes belong to"
      },
      "serviceCidr": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 0,
        "description": "A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges."
      },
      "dnsServiceIP": {
        "type": {
          "$ref": "#/66"
        },
        "flags": 0,
        "description": "An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr."
      },
      "dockerBridgeCidr": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 0,
        "description": "A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
  },
  {
    "$type": "StringType",
    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
  },
  {
    "$type": "StringLiteralType",
    "value": "PublicIp"
  },
  {
    "$type": "StringLiteralType",
    "value": "InternalLoadBalancer"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/67"
      },
      {
        "$ref": "#/68"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "AKS"
  },
  {
    "$type": "ObjectType",
    "name": "AmlCompute",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/72"
        },
        "flags": 0,
        "description": "Properties of AmlCompute"
      },
      "computeType": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AmlComputeProperties",
    "properties": {
      "osType": {
        "type": {
          "$ref": "#/75"
        },
        "flags": 0,
        "description": "Compute OS Type"
      },
      "vmSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Virtual Machine Size"
      },
      "vmPriority": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0,
        "description": "Virtual Machine priority"
      },
      "virtualMachineImage": {
        "type": {
          "$ref": "#/79"
        },
        "flags": 0,
        "description": "Virtual Machine image for AML Compute - windows only"
      },
      "isolatedNetwork": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Network is isolated or not"
      },
      "scaleSettings": {
        "type": {
          "$ref": "#/80"
        },
        "flags": 0,
        "description": "Scale settings for AML Compute"
      },
      "userAccountCredentials": {
        "type": {
          "$ref": "#/81"
        },
        "flags": 0,
        "description": "Credentials for an administrator user account that will be created on each compute node."
      },
      "subnet": {
        "type": {
          "$ref": "#/82"
        },
        "flags": 0,
        "description": "Virtual network subnet resource ID the compute nodes belong to."
      },
      "remoteLoginPortPublicAccess": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 0,
        "description": "State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled."
      },
      "allocationState": {
        "type": {
          "$ref": "#/89"
        },
        "flags": 2,
        "description": "Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute."
      },
      "allocationStateTransitionTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The time at which the compute entered its current allocation state."
      },
      "errors": {
        "type": {
          "$ref": "#/90"
        },
        "flags": 2,
        "description": "Collection of errors encountered by various compute nodes during node setup."
      },
      "currentNodeCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 2,
        "description": "The number of compute nodes currently assigned to the compute."
      },
      "targetNodeCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 2,
        "description": "The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation."
      },
      "nodeStateCounts": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 2,
        "description": "Counts of various node states on the compute."
      },
      "enableNodePublicIp": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs."
      },
      "propertyBag": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "A property bag containing additional properties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Linux"
  },
  {
    "$type": "StringLiteralType",
    "value": "Windows"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/73"
      },
      {
        "$ref": "#/74"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Dedicated"
  },
  {
    "$type": "StringLiteralType",
    "value": "LowPriority"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/76"
      },
      {
        "$ref": "#/77"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineImage",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Virtual Machine image path"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScaleSettings",
    "properties": {
      "maxNodeCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 1,
        "description": "Max number of nodes to use"
      },
      "minNodeCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Min number of nodes to use"
      },
      "nodeIdleTimeBeforeScaleDown": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UserAccountCredentials",
    "properties": {
      "adminUserName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Name of the administrator user account which can be used to SSH to nodes."
      },
      "adminUserSshPublicKey": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "SSH public key of the administrator user account."
      },
      "adminUserPassword": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Password of the administrator user account."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceId",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The ID of the resource"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/83"
      },
      {
        "$ref": "#/84"
      },
      {
        "$ref": "#/85"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Steady"
  },
  {
    "$type": "StringLiteralType",
    "value": "Resizing"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/87"
      },
      {
        "$ref": "#/88"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/41"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NodeStateCounts",
    "properties": {
      "idleNodeCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 2,
        "description": "Number of compute nodes in idle state."
      },
      "runningNodeCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 2,
        "description": "Number of compute nodes which are running jobs."
      },
      "preparingNodeCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 2,
        "description": "Number of compute nodes which are being prepared."
      },
      "unusableNodeCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 2,
        "description": "Number of compute nodes which are in unusable state."
      },
      "leavingNodeCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 2,
        "description": "Number of compute nodes which are leaving the amlCompute."
      },
      "preemptedNodeCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 2,
        "description": "Number of compute nodes which are in preempted state."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AmlCompute"
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstance",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/94"
        },
        "flags": 0,
        "description": "Properties of ComputeInstance"
      },
      "computeType": {
        "type": {
          "$ref": "#/261"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceProperties",
    "properties": {
      "vmSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Virtual Machine Size"
      },
      "subnet": {
        "type": {
          "$ref": "#/82"
        },
        "flags": 0,
        "description": "Virtual network subnet resource ID the compute nodes belong to."
      },
      "applicationSharingPolicy": {
        "type": {
          "$ref": "#/97"
        },
        "flags": 0,
        "description": "Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role."
      },
      "sshSettings": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 0,
        "description": "Specifies policy and settings for SSH access."
      },
      "customServices": {
        "type": {
          "$ref": "#/128"
        },
        "flags": 0,
        "description": "List of Custom Services added to the compute."
      },
      "osImageMetadata": {
        "type": {
          "$ref": "#/129"
        },
        "flags": 2,
        "description": "Returns metadata about the operating system image for this compute instance."
      },
      "connectivityEndpoints": {
        "type": {
          "$ref": "#/130"
        },
        "flags": 2,
        "description": "Describes all connectivity endpoints available for this ComputeInstance."
      },
      "applications": {
        "type": {
          "$ref": "#/132"
        },
        "flags": 2,
        "description": "Describes available applications and their endpoints on this ComputeInstance."
      },
      "createdBy": {
        "type": {
          "$ref": "#/133"
        },
        "flags": 2,
        "description": "Describes information on user who created this ComputeInstance."
      },
      "errors": {
        "type": {
          "$ref": "#/134"
        },
        "flags": 2,
        "description": "Collection of errors encountered on this ComputeInstance."
      },
      "state": {
        "type": {
          "$ref": "#/150"
        },
        "flags": 2,
        "description": "The current state of this ComputeInstance."
      },
      "computeInstanceAuthorizationType": {
        "type": {
          "$ref": "#/152"
        },
        "flags": 0,
        "description": "The Compute Instance Authorization type. Available values are personal (default)."
      },
      "personalComputeInstanceSettings": {
        "type": {
          "$ref": "#/153"
        },
        "flags": 0,
        "description": "Settings for a personal compute instance."
      },
      "setupScripts": {
        "type": {
          "$ref": "#/155"
        },
        "flags": 0,
        "description": "Details of customized scripts to execute for setting up the cluster."
      },
      "lastOperation": {
        "type": {
          "$ref": "#/158"
        },
        "flags": 2,
        "description": "The last operation on ComputeInstance."
      },
      "schedules": {
        "type": {
          "$ref": "#/179"
        },
        "flags": 0,
        "description": "The list of schedules to be applied on the computes."
      },
      "enableNodePublicIp": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs."
      },
      "containers": {
        "type": {
          "$ref": "#/234"
        },
        "flags": 2,
        "description": "Describes informations of containers on this ComputeInstance."
      },
      "dataDisks": {
        "type": {
          "$ref": "#/243"
        },
        "flags": 2,
        "description": "Describes informations of dataDisks on this ComputeInstance."
      },
      "dataMounts": {
        "type": {
          "$ref": "#/259"
        },
        "flags": 2,
        "description": "Describes informations of dataMounts on this ComputeInstance."
      },
      "versions": {
        "type": {
          "$ref": "#/260"
        },
        "flags": 2,
        "description": "ComputeInstance version."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Personal"
  },
  {
    "$type": "StringLiteralType",
    "value": "Shared"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/95"
      },
      {
        "$ref": "#/96"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceSshSettings",
    "properties": {
      "sshPublicAccess": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 0,
        "description": "State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable."
      },
      "adminUserName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Describes the admin user name."
      },
      "sshPort": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 2,
        "description": "Describes the port for connecting through SSH."
      },
      "adminPublicKey": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/99"
      },
      {
        "$ref": "#/100"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CustomService",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the Custom Service"
      },
      "image": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 0,
        "description": "Describes the Image Specifications"
      },
      "environmentVariables": {
        "type": {
          "$ref": "#/110"
        },
        "flags": 0,
        "description": "Environment Variable for the container"
      },
      "docker": {
        "type": {
          "$ref": "#/111"
        },
        "flags": 0,
        "description": "Describes the docker settings for the image"
      },
      "endpoints": {
        "type": {
          "$ref": "#/117"
        },
        "flags": 0,
        "description": "Configuring the endpoints for the container"
      },
      "volumes": {
        "type": {
          "$ref": "#/127"
        },
        "flags": 0,
        "description": "Configuring the volumes for the container"
      }
    },
    "additionalProperties": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Image",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/106"
        },
        "flags": 0,
        "description": "Type of the image. Possible values are: docker - For docker images. azureml - For AzureML images"
      },
      "reference": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Image reference"
      }
    },
    "additionalProperties": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "docker"
  },
  {
    "$type": "StringLiteralType",
    "value": "azureml"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/104"
      },
      {
        "$ref": "#/105"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentVariable",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/109"
        },
        "flags": 0,
        "description": "Type of the Environment Variable. Possible values are: local - For local variable"
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of the Environment variable"
      }
    },
    "additionalProperties": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "local"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/108"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CustomServiceEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/107"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Docker",
    "properties": {
      "privileged": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Indicate whether container shall run in privileged or non-privileged mode."
      }
    },
    "additionalProperties": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Endpoint",
    "properties": {
      "protocol": {
        "type": {
          "$ref": "#/116"
        },
        "flags": 0,
        "description": "Protocol over which communication will happen over this endpoint"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the Endpoint"
      },
      "target": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Application port inside the container."
      },
      "published": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Port over which the application is exposed from container."
      },
      "hostIp": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Host IP over which the application is exposed from the container"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "tcp"
  },
  {
    "$type": "StringLiteralType",
    "value": "udp"
  },
  {
    "$type": "StringLiteralType",
    "value": "http"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/113"
      },
      {
        "$ref": "#/114"
      },
      {
        "$ref": "#/115"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/112"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VolumeDefinition",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/123"
        },
        "flags": 0,
        "description": "Type of Volume Definition. Possible Values: bind,volume,tmpfs,npipe"
      },
      "readOnly": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Indicate whether to mount volume as readOnly. Default value for this is false."
      },
      "source": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Source of the mount. For bind mounts this is the host path."
      },
      "target": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Target of the mount. For bind mounts this is the path in the container."
      },
      "consistency": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Consistency of the volume"
      },
      "bind": {
        "type": {
          "$ref": "#/124"
        },
        "flags": 0,
        "description": "Bind Options of the mount"
      },
      "volume": {
        "type": {
          "$ref": "#/125"
        },
        "flags": 0,
        "description": "Volume Options of the mount"
      },
      "tmpfs": {
        "type": {
          "$ref": "#/126"
        },
        "flags": 0,
        "description": "tmpfs option of the mount"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "bind"
  },
  {
    "$type": "StringLiteralType",
    "value": "volume"
  },
  {
    "$type": "StringLiteralType",
    "value": "tmpfs"
  },
  {
    "$type": "StringLiteralType",
    "value": "npipe"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/119"
      },
      {
        "$ref": "#/120"
      },
      {
        "$ref": "#/121"
      },
      {
        "$ref": "#/122"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "BindOptions",
    "properties": {
      "propagation": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Type of Bind Option"
      },
      "createHostPath": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Indicate whether to create host path."
      },
      "selinux": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Mention the selinux options."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VolumeOptions",
    "properties": {
      "nocopy": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Indicate whether volume is nocopy"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TmpfsOptions",
    "properties": {
      "size": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Mention the Tmpfs size"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/118"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/102"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ImageMetadata",
    "properties": {
      "currentImageVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the current operating system image version this compute instance is running on."
      },
      "latestImageVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the latest available operating system image version."
      },
      "isLatestOsImageVersion": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Specifies whether this compute instance is running on the latest operating system image."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceConnectivityEndpoints",
    "properties": {
      "publicIpAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Public IP Address of this ComputeInstance."
      },
      "privateIpAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is deployed)."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceApplication",
    "properties": {
      "displayName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the ComputeInstance application."
      },
      "endpointUri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Application' endpoint URI."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/131"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceCreatedBy",
    "properties": {
      "userName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Name of the user."
      },
      "userOrgId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Uniquely identifies user' Azure Active Directory organization."
      },
      "userId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Uniquely identifies the user within his/her organization."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/41"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "CreateFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Restarting"
  },
  {
    "$type": "StringLiteralType",
    "value": "JobRunning"
  },
  {
    "$type": "StringLiteralType",
    "value": "SettingUp"
  },
  {
    "$type": "StringLiteralType",
    "value": "SetupFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Starting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopped"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopping"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserSettingUp"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserSetupFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unusable"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/135"
      },
      {
        "$ref": "#/136"
      },
      {
        "$ref": "#/137"
      },
      {
        "$ref": "#/138"
      },
      {
        "$ref": "#/139"
      },
      {
        "$ref": "#/140"
      },
      {
        "$ref": "#/141"
      },
      {
        "$ref": "#/142"
      },
      {
        "$ref": "#/143"
      },
      {
        "$ref": "#/144"
      },
      {
        "$ref": "#/145"
      },
      {
        "$ref": "#/146"
      },
      {
        "$ref": "#/147"
      },
      {
        "$ref": "#/148"
      },
      {
        "$ref": "#/149"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "personal"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/151"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "PersonalComputeInstanceSettings",
    "properties": {
      "assignedUser": {
        "type": {
          "$ref": "#/154"
        },
        "flags": 0,
        "description": "A user explicitly assigned to a personal compute instance."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssignedUser",
    "properties": {
      "objectId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "User’s AAD Object Id."
      },
      "tenantId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "User’s AAD Tenant Id."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SetupScripts",
    "properties": {
      "scripts": {
        "type": {
          "$ref": "#/156"
        },
        "flags": 0,
        "description": "Customized setup scripts"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScriptsToExecute",
    "properties": {
      "startupScript": {
        "type": {
          "$ref": "#/157"
        },
        "flags": 0,
        "description": "Script that's run every time the machine starts."
      },
      "creationScript": {
        "type": {
          "$ref": "#/157"
        },
        "flags": 0,
        "description": "Script that's run only once during provision of the compute."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScriptReference",
    "properties": {
      "scriptSource": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The storage source of the script: workspace."
      },
      "scriptData": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location of scripts in the mounted volume."
      },
      "scriptArguments": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Optional command line arguments passed to the script to run."
      },
      "timeout": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Optional time period passed to timeout command."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceLastOperation",
    "properties": {
      "operationName": {
        "type": {
          "$ref": "#/165"
        },
        "flags": 0,
        "description": "Name of the last operation."
      },
      "operationTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Time of the last operation."
      },
      "operationStatus": {
        "type": {
          "$ref": "#/174"
        },
        "flags": 0,
        "description": "Operation status."
      },
      "operationTrigger": {
        "type": {
          "$ref": "#/178"
        },
        "flags": 0,
        "description": "Trigger of operation."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Create"
  },
  {
    "$type": "StringLiteralType",
    "value": "Start"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stop"
  },
  {
    "$type": "StringLiteralType",
    "value": "Restart"
  },
  {
    "$type": "StringLiteralType",
    "value": "Reimage"
  },
  {
    "$type": "StringLiteralType",
    "value": "Delete"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/159"
      },
      {
        "$ref": "#/160"
      },
      {
        "$ref": "#/161"
      },
      {
        "$ref": "#/162"
      },
      {
        "$ref": "#/163"
      },
      {
        "$ref": "#/164"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "CreateFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "StartFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "StopFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "RestartFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReimageFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "DeleteFailed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/166"
      },
      {
        "$ref": "#/167"
      },
      {
        "$ref": "#/168"
      },
      {
        "$ref": "#/169"
      },
      {
        "$ref": "#/170"
      },
      {
        "$ref": "#/171"
      },
      {
        "$ref": "#/172"
      },
      {
        "$ref": "#/173"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Schedule"
  },
  {
    "$type": "StringLiteralType",
    "value": "IdleShutdown"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/175"
      },
      {
        "$ref": "#/176"
      },
      {
        "$ref": "#/177"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ComputeSchedules",
    "properties": {
      "computeStartStop": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 0,
        "description": "The list of compute start stop schedules to be applied."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeStartStopSchedule",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "A system assigned id for the schedule."
      },
      "provisioningStatus": {
        "type": {
          "$ref": "#/184"
        },
        "flags": 2,
        "description": "The current deployment state of schedule."
      },
      "status": {
        "type": {
          "$ref": "#/187"
        },
        "flags": 0,
        "description": "Is the schedule enabled or disabled?"
      },
      "action": {
        "type": {
          "$ref": "#/190"
        },
        "flags": 0,
        "description": "[Required] The compute power action."
      },
      "triggerType": {
        "type": {
          "$ref": "#/193"
        },
        "flags": 0,
        "description": "[Required] The schedule trigger type."
      },
      "recurrence": {
        "type": {
          "$ref": "#/194"
        },
        "flags": 0,
        "description": "Required if triggerType is Recurrence."
      },
      "cron": {
        "type": {
          "$ref": "#/214"
        },
        "flags": 0,
        "description": "Required if triggerType is Cron."
      },
      "schedule": {
        "type": {
          "$ref": "#/215"
        },
        "flags": 0,
        "description": "[Deprecated] Not used any more."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Completed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/181"
      },
      {
        "$ref": "#/182"
      },
      {
        "$ref": "#/183"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/185"
      },
      {
        "$ref": "#/186"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Start"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stop"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/188"
      },
      {
        "$ref": "#/189"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Recurrence"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cron"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/191"
      },
      {
        "$ref": "#/192"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Recurrence",
    "properties": {
      "frequency": {
        "type": {
          "$ref": "#/200"
        },
        "flags": 0,
        "description": "[Required] The frequency to trigger schedule."
      },
      "interval": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "[Required] Specifies schedule interval in conjunction with frequency"
      },
      "startTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The start time in yyyy-MM-ddTHH:mm:ss format."
      },
      "timeZone": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies time zone in which the schedule runs.\r\nTimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11"
      },
      "schedule": {
        "type": {
          "$ref": "#/201"
        },
        "flags": 0,
        "description": "[Required] The recurrence schedule."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Minute"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hour"
  },
  {
    "$type": "StringLiteralType",
    "value": "Day"
  },
  {
    "$type": "StringLiteralType",
    "value": "Week"
  },
  {
    "$type": "StringLiteralType",
    "value": "Month"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/195"
      },
      {
        "$ref": "#/196"
      },
      {
        "$ref": "#/197"
      },
      {
        "$ref": "#/198"
      },
      {
        "$ref": "#/199"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ComputeRecurrenceSchedule",
    "properties": {
      "hours": {
        "type": {
          "$ref": "#/202"
        },
        "flags": 1,
        "description": "[Required] List of hours for the schedule."
      },
      "minutes": {
        "type": {
          "$ref": "#/203"
        },
        "flags": 1,
        "description": "[Required] List of minutes for the schedule."
      },
      "monthDays": {
        "type": {
          "$ref": "#/204"
        },
        "flags": 0,
        "description": "List of month days for the schedule"
      },
      "weekDays": {
        "type": {
          "$ref": "#/213"
        },
        "flags": 0,
        "description": "List of days for the schedule."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/20"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/20"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/20"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Monday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Tuesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Wednesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Thursday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Friday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Saturday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sunday"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/205"
      },
      {
        "$ref": "#/206"
      },
      {
        "$ref": "#/207"
      },
      {
        "$ref": "#/208"
      },
      {
        "$ref": "#/209"
      },
      {
        "$ref": "#/210"
      },
      {
        "$ref": "#/211"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/212"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Cron",
    "properties": {
      "startTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The start time in yyyy-MM-ddTHH:mm:ss format."
      },
      "timeZone": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies time zone in which the schedule runs.\r\nTimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11"
      },
      "expression": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "[Required] Specifies cron expression of schedule.\r\nThe expression should follow NCronTab format."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScheduleBase",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A system assigned id for the schedule."
      },
      "provisioningStatus": {
        "type": {
          "$ref": "#/219"
        },
        "flags": 0,
        "description": "The current deployment state of schedule."
      },
      "status": {
        "type": {
          "$ref": "#/222"
        },
        "flags": 0,
        "description": "Is the schedule enabled or disabled?"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Completed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/216"
      },
      {
        "$ref": "#/217"
      },
      {
        "$ref": "#/218"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/220"
      },
      {
        "$ref": "#/221"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/180"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceContainer",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the ComputeInstance container."
      },
      "autosave": {
        "type": {
          "$ref": "#/228"
        },
        "flags": 0,
        "description": "Auto save settings."
      },
      "gpu": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Information of GPU."
      },
      "network": {
        "type": {
          "$ref": "#/231"
        },
        "flags": 0,
        "description": "network of this container."
      },
      "environment": {
        "type": {
          "$ref": "#/232"
        },
        "flags": 0,
        "description": "Environment information of this container."
      },
      "services": {
        "type": {
          "$ref": "#/233"
        },
        "flags": 2,
        "description": "services of this containers."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Local"
  },
  {
    "$type": "StringLiteralType",
    "value": "Remote"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/225"
      },
      {
        "$ref": "#/226"
      },
      {
        "$ref": "#/227"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Bridge"
  },
  {
    "$type": "StringLiteralType",
    "value": "Host"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/229"
      },
      {
        "$ref": "#/230"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceEnvironmentInfo",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "name of environment."
      },
      "version": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "version of environment."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/224"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceDataDisk",
    "properties": {
      "caching": {
        "type": {
          "$ref": "#/239"
        },
        "flags": 0,
        "description": "Caching type of Data Disk."
      },
      "diskSizeGB": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The initial disk size in gigabytes."
      },
      "lun": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun."
      },
      "storageAccountType": {
        "type": {
          "$ref": "#/242"
        },
        "flags": 0,
        "description": "type of this storage account."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnly"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWrite"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/236"
      },
      {
        "$ref": "#/237"
      },
      {
        "$ref": "#/238"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard_LRS"
  },
  {
    "$type": "StringLiteralType",
    "value": "Premium_LRS"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/240"
      },
      {
        "$ref": "#/241"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/235"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceDataMount",
    "properties": {
      "source": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Source of the ComputeInstance data mount."
      },
      "sourceType": {
        "type": {
          "$ref": "#/248"
        },
        "flags": 0,
        "description": "Data source type."
      },
      "mountName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "name of the ComputeInstance data mount."
      },
      "mountAction": {
        "type": {
          "$ref": "#/251"
        },
        "flags": 0,
        "description": "Mount Action."
      },
      "createdBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "who this data mount created by."
      },
      "mountPath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Path of this data mount."
      },
      "mountState": {
        "type": {
          "$ref": "#/258"
        },
        "flags": 0,
        "description": "Mount state."
      },
      "mountedOn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The time when the disk mounted."
      },
      "error": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Error of this data mount."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Dataset"
  },
  {
    "$type": "StringLiteralType",
    "value": "Datastore"
  },
  {
    "$type": "StringLiteralType",
    "value": "URI"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/245"
      },
      {
        "$ref": "#/246"
      },
      {
        "$ref": "#/247"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Mount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unmount"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/249"
      },
      {
        "$ref": "#/250"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "MountRequested"
  },
  {
    "$type": "StringLiteralType",
    "value": "Mounted"
  },
  {
    "$type": "StringLiteralType",
    "value": "MountFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "UnmountRequested"
  },
  {
    "$type": "StringLiteralType",
    "value": "UnmountFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unmounted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/252"
      },
      {
        "$ref": "#/253"
      },
      {
        "$ref": "#/254"
      },
      {
        "$ref": "#/255"
      },
      {
        "$ref": "#/256"
      },
      {
        "$ref": "#/257"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/244"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceVersion",
    "properties": {
      "runtime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Runtime of compute instance."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ComputeInstance"
  },
  {
    "$type": "ObjectType",
    "name": "DataFactory",
    "properties": {
      "computeType": {
        "type": {
          "$ref": "#/263"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DataFactory"
  },
  {
    "$type": "ObjectType",
    "name": "DataLakeAnalytics",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/265"
        },
        "flags": 0
      },
      "computeType": {
        "type": {
          "$ref": "#/266"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataLakeAnalyticsSchemaProperties",
    "properties": {
      "dataLakeStoreAccountName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "DataLake Store Account Name"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DataLakeAnalytics"
  },
  {
    "$type": "ObjectType",
    "name": "Databricks",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/268"
        },
        "flags": 0,
        "description": "Properties of Databricks"
      },
      "computeType": {
        "type": {
          "$ref": "#/269"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DatabricksProperties",
    "properties": {
      "databricksAccessToken": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Databricks access token"
      },
      "workspaceUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Workspace Url"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Databricks"
  },
  {
    "$type": "ObjectType",
    "name": "HDInsight",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/271"
        },
        "flags": 0,
        "description": "HDInsight compute properties"
      },
      "computeType": {
        "type": {
          "$ref": "#/273"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HDInsightProperties",
    "properties": {
      "sshPort": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Port open for ssh connections on the master node of the cluster."
      },
      "address": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Public IP address of the master node of the cluster."
      },
      "administratorAccount": {
        "type": {
          "$ref": "#/272"
        },
        "flags": 0,
        "description": "Admin credentials for master node of the cluster"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineSshCredentials",
    "properties": {
      "username": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Username of admin account"
      },
      "password": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Password of admin account"
      },
      "publicKeyData": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Public key data"
      },
      "privateKeyData": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Private key data"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "HDInsight"
  },
  {
    "$type": "ObjectType",
    "name": "Kubernetes",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/275"
        },
        "flags": 0,
        "description": "Properties of Kubernetes"
      },
      "computeType": {
        "type": {
          "$ref": "#/282"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesProperties",
    "properties": {
      "relayConnectionString": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Relay connection string."
      },
      "serviceBusConnectionString": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "ServiceBus connection string."
      },
      "extensionPrincipalId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Extension principal-id."
      },
      "extensionInstanceReleaseTrain": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Extension instance release train."
      },
      "vcName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "VC name."
      },
      "namespace": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Compute namespace"
      },
      "defaultInstanceType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Default instance type"
      },
      "instanceTypes": {
        "type": {
          "$ref": "#/281"
        },
        "flags": 0,
        "description": "Instance Type Schema"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "InstanceTypeSchema",
    "properties": {
      "nodeSelector": {
        "type": {
          "$ref": "#/277"
        },
        "flags": 0,
        "description": "Node Selector"
      },
      "resources": {
        "type": {
          "$ref": "#/278"
        },
        "flags": 0,
        "description": "Resource requests/limits for this instance type"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "InstanceTypeSchemaNodeSelector",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "InstanceTypeSchemaResources",
    "properties": {
      "requests": {
        "type": {
          "$ref": "#/279"
        },
        "flags": 0,
        "description": "Resource requests for this instance type"
      },
      "limits": {
        "type": {
          "$ref": "#/280"
        },
        "flags": 0,
        "description": "Resource limits for this instance type"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "InstanceResourceSchema",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "InstanceResourceSchema",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesPropertiesInstanceTypes",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/276"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Kubernetes"
  },
  {
    "$type": "ObjectType",
    "name": "SynapseSpark",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/284"
        },
        "flags": 0
      },
      "computeType": {
        "type": {
          "$ref": "#/287"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SynapseSparkProperties",
    "properties": {
      "autoScaleProperties": {
        "type": {
          "$ref": "#/285"
        },
        "flags": 0,
        "description": "Auto scale properties."
      },
      "autoPauseProperties": {
        "type": {
          "$ref": "#/286"
        },
        "flags": 0,
        "description": "Auto pause properties."
      },
      "sparkVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Spark version."
      },
      "nodeCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The number of compute nodes currently assigned to the compute."
      },
      "nodeSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Node size."
      },
      "nodeSizeFamily": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Node size family."
      },
      "subscriptionId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure subscription identifier."
      },
      "resourceGroup": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the resource group in which workspace is located."
      },
      "workspaceName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of Azure Machine Learning workspace."
      },
      "poolName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Pool name."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoScaleProperties",
    "properties": {
      "minNodeCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0
      },
      "enabled": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0
      },
      "maxNodeCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoPauseProperties",
    "properties": {
      "delayInMinutes": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0
      },
      "enabled": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SynapseSpark"
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachine",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/289"
        },
        "flags": 0
      },
      "computeType": {
        "type": {
          "$ref": "#/290"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineSchemaProperties",
    "properties": {
      "virtualMachineSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Virtual Machine size"
      },
      "sshPort": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Port open for ssh connections."
      },
      "notebookServerPort": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Notebook server port open for ssh connections."
      },
      "address": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Public IP address of the virtual machine."
      },
      "administratorAccount": {
        "type": {
          "$ref": "#/272"
        },
        "flags": 0,
        "description": "Admin credentials for virtual machine"
      },
      "isNotebookInstanceCompute": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Indicates whether this compute will be used for running notebooks."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "VirtualMachine"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/computes@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/3"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/codes"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/codes",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/293"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/294"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/296"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CodeContainerProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/303"
        },
        "flags": 2,
        "description": "Provisioning state for the code container."
      },
      "isArchived": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "latestVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The latest version inside this container."
      },
      "nextVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The next auto incremental version"
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/304"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/305"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/297"
      },
      {
        "$ref": "#/298"
      },
      {
        "$ref": "#/299"
      },
      {
        "$ref": "#/300"
      },
      {
        "$ref": "#/301"
      },
      {
        "$ref": "#/302"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/codes@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/295"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/codes/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/codes/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/307"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/308"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/310"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CodeVersionProperties",
    "properties": {
      "codeUri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Uri where code is located"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/317"
        },
        "flags": 2,
        "description": "Provisioning state for the code version."
      },
      "isArchived": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "isAnonymous": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "If the name version are system generated (anonymous registration)."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/318"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/319"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/311"
      },
      {
        "$ref": "#/312"
      },
      {
        "$ref": "#/313"
      },
      {
        "$ref": "#/314"
      },
      {
        "$ref": "#/315"
      },
      {
        "$ref": "#/316"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/codes/versions@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/309"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/components"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/components",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/321"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/322"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/324"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComponentContainerProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/331"
        },
        "flags": 2,
        "description": "Provisioning state for the component container."
      },
      "isArchived": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "latestVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The latest version inside this container."
      },
      "nextVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The next auto incremental version"
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/332"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/333"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/325"
      },
      {
        "$ref": "#/326"
      },
      {
        "$ref": "#/327"
      },
      {
        "$ref": "#/328"
      },
      {
        "$ref": "#/329"
      },
      {
        "$ref": "#/330"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/components@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/323"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/components/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/components/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/335"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/336"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/338"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComponentVersionProperties",
    "properties": {
      "componentSpec": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "Defines Component definition details.\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/reference-yaml-component-command\" />"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/345"
        },
        "flags": 2,
        "description": "Provisioning state for the component version."
      },
      "isArchived": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "isAnonymous": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "If the name version are system generated (anonymous registration)."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/346"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/347"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/339"
      },
      {
        "$ref": "#/340"
      },
      {
        "$ref": "#/341"
      },
      {
        "$ref": "#/342"
      },
      {
        "$ref": "#/343"
      },
      {
        "$ref": "#/344"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/components/versions@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/337"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/data"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/data",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/349"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/350"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/352"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataContainerProperties",
    "properties": {
      "dataType": {
        "type": {
          "$ref": "#/356"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of data."
      },
      "isArchived": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "latestVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The latest version inside this container."
      },
      "nextVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The next auto incremental version"
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/357"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/358"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_file"
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_folder"
  },
  {
    "$type": "StringLiteralType",
    "value": "mltable"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/353"
      },
      {
        "$ref": "#/354"
      },
      {
        "$ref": "#/355"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/data@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/351"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/data/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/data/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/360"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/361"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/363"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DataVersionBaseProperties",
    "discriminator": "dataType",
    "baseProperties": {
      "dataUri": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330"
      },
      "isArchived": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "isAnonymous": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "If the name version are system generated (anonymous registration)."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/365"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/366"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    },
    "elements": {
      "mltable": {
        "$ref": "#/367"
      },
      "uri_file": {
        "$ref": "#/370"
      },
      "uri_folder": {
        "$ref": "#/372"
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "pattern": "[a-zA-Z0-9_]"
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "MLTableData",
    "properties": {
      "referencedUris": {
        "type": {
          "$ref": "#/368"
        },
        "flags": 0,
        "description": "Uris referenced in the MLTable definition (required for lineage)"
      },
      "dataType": {
        "type": {
          "$ref": "#/369"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of data."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "mltable"
  },
  {
    "$type": "ObjectType",
    "name": "UriFileDataVersion",
    "properties": {
      "dataType": {
        "type": {
          "$ref": "#/371"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of data."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_file"
  },
  {
    "$type": "ObjectType",
    "name": "UriFolderDataVersion",
    "properties": {
      "dataType": {
        "type": {
          "$ref": "#/373"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of data."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_folder"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/data/versions@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/362"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/environments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/environments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/375"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/376"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/378"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentContainerProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/385"
        },
        "flags": 2,
        "description": "Provisioning state for the environment container."
      },
      "isArchived": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "latestVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The latest version inside this container."
      },
      "nextVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The next auto incremental version"
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/386"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/387"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/379"
      },
      {
        "$ref": "#/380"
      },
      {
        "$ref": "#/381"
      },
      {
        "$ref": "#/382"
      },
      {
        "$ref": "#/383"
      },
      {
        "$ref": "#/384"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/environments@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/377"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/environments/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/environments/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/389"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/390"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/392"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentVersionProperties",
    "properties": {
      "environmentType": {
        "type": {
          "$ref": "#/395"
        },
        "flags": 2,
        "description": "Environment type is either user managed or curated by the Azure ML service\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments\" />"
      },
      "image": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the image that will be used for the environment.\r\n<seealso href=\"https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image\" />"
      },
      "condaFile": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.\r\n<see href=\"https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment\" />"
      },
      "build": {
        "type": {
          "$ref": "#/396"
        },
        "flags": 0,
        "description": "Configuration settings for Docker build context."
      },
      "osType": {
        "type": {
          "$ref": "#/399"
        },
        "flags": 0,
        "description": "The OS type of the environment."
      },
      "inferenceConfig": {
        "type": {
          "$ref": "#/400"
        },
        "flags": 0,
        "description": "Defines configuration specific to inference."
      },
      "autoRebuild": {
        "type": {
          "$ref": "#/404"
        },
        "flags": 0,
        "description": "Defines if image needs to be rebuilt based on base image changes."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/411"
        },
        "flags": 2,
        "description": "Provisioning state for the environment version."
      },
      "stage": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Stage in the environment lifecycle assigned to this environment"
      },
      "isArchived": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "isAnonymous": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "If the name version are system generated (anonymous registration)."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/412"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/413"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Curated"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserCreated"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/393"
      },
      {
        "$ref": "#/394"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "BuildContext",
    "properties": {
      "contextUri": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] URI of the Docker build context used to build the image. Supports blob URIs on environment creation and may return blob or Git URIs.\r\n<seealso href=\"https://docs.docker.com/engine/reference/commandline/build/#extended-description\" />"
      },
      "dockerfilePath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Path to the Dockerfile in the build context.\r\n<seealso href=\"https://docs.docker.com/engine/reference/builder/\" />"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Linux"
  },
  {
    "$type": "StringLiteralType",
    "value": "Windows"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/397"
      },
      {
        "$ref": "#/398"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "InferenceContainerProperties",
    "properties": {
      "livenessRoute": {
        "type": {
          "$ref": "#/401"
        },
        "flags": 0,
        "description": "The route to check the liveness of the inference server container."
      },
      "readinessRoute": {
        "type": {
          "$ref": "#/401"
        },
        "flags": 0,
        "description": "The route to check the readiness of the inference server container."
      },
      "scoringRoute": {
        "type": {
          "$ref": "#/401"
        },
        "flags": 0,
        "description": "The port to send the scoring requests to, within the inference server container."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Route",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] The path for the route."
      },
      "port": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 1,
        "description": "[Required] The port for the route."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "OnBaseImageUpdate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/402"
      },
      {
        "$ref": "#/403"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/405"
      },
      {
        "$ref": "#/406"
      },
      {
        "$ref": "#/407"
      },
      {
        "$ref": "#/408"
      },
      {
        "$ref": "#/409"
      },
      {
        "$ref": "#/410"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/environments/versions@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/391"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/models"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/models",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/415"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/416"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/418"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ModelContainerProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/425"
        },
        "flags": 2,
        "description": "Provisioning state for the model container."
      },
      "isArchived": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "latestVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The latest version inside this container."
      },
      "nextVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The next auto incremental version"
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/426"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/427"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/419"
      },
      {
        "$ref": "#/420"
      },
      {
        "$ref": "#/421"
      },
      {
        "$ref": "#/422"
      },
      {
        "$ref": "#/423"
      },
      {
        "$ref": "#/424"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/models@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/417"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/models/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/models/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/429"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/430"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/432"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ModelVersionProperties",
    "properties": {
      "flavors": {
        "type": {
          "$ref": "#/435"
        },
        "flags": 0,
        "description": "Mapping of model flavors to their properties."
      },
      "modelType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The storage format for this entity. Used for NCD."
      },
      "modelUri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The URI path to the model contents."
      },
      "jobName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the training job which produced this model"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/442"
        },
        "flags": 2,
        "description": "Provisioning state for the model version."
      },
      "stage": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Stage in the model lifecycle assigned to this model"
      },
      "isArchived": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "isAnonymous": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "If the name version are system generated (anonymous registration)."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/443"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/444"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FlavorData",
    "properties": {
      "data": {
        "type": {
          "$ref": "#/434"
        },
        "flags": 0,
        "description": "Model flavor-specific data."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FlavorData",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ModelVersionFlavors",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/433"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/436"
      },
      {
        "$ref": "#/437"
      },
      {
        "$ref": "#/438"
      },
      {
        "$ref": "#/439"
      },
      {
        "$ref": "#/440"
      },
      {
        "$ref": "#/441"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/models/versions@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/431"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/batchEndpoints"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/batchEndpoints",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/446"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/447"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/449"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "identity": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "sku": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/464"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BatchEndpointProperties",
    "properties": {
      "defaults": {
        "type": {
          "$ref": "#/450"
        },
        "flags": 0,
        "description": "Default values for Batch Endpoint"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/457"
        },
        "flags": 2,
        "description": "Provisioning state for the endpoint."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Description of the inference endpoint."
      },
      "properties": {
        "type": {
          "$ref": "#/458"
        },
        "flags": 0,
        "description": "Property dictionary. Properties can be added, but not removed or altered."
      },
      "scoringUri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Endpoint URI."
      },
      "swaggerUri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Endpoint Swagger URI."
      },
      "authMode": {
        "type": {
          "$ref": "#/462"
        },
        "flags": 1,
        "description": "[Required] Use 'Key' for key based authentication and 'AMLToken' for Azure Machine Learning token-based authentication. 'Key' doesn't expire but 'AMLToken' does."
      },
      "keys": {
        "type": {
          "$ref": "#/463"
        },
        "flags": 4,
        "description": "EndpointAuthKeys to set initially on an Endpoint.\r\nThis property will always be returned as null. AuthKey values must be retrieved using the ListKeys API."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BatchEndpointDefaults",
    "properties": {
      "deploymentName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the deployment that will be default for the endpoint.\r\nThis deployment will end up getting 100% traffic when the endpoint scoring URL is invoked."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/451"
      },
      {
        "$ref": "#/452"
      },
      {
        "$ref": "#/453"
      },
      {
        "$ref": "#/454"
      },
      {
        "$ref": "#/455"
      },
      {
        "$ref": "#/456"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "EndpointPropertiesBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AMLToken"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "StringLiteralType",
    "value": "AADToken"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/459"
      },
      {
        "$ref": "#/460"
      },
      {
        "$ref": "#/461"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "EndpointAuthKeys",
    "properties": {
      "primaryKey": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The primary key."
      },
      "secondaryKey": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The secondary key."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/batchEndpoints@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/448"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/batchEndpoints/deployments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/batchEndpoints/deployments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/466"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/467"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/469"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "identity": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "sku": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/508"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BatchDeploymentProperties",
    "properties": {
      "compute": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Compute target for batch inference operation."
      },
      "deploymentConfiguration": {
        "type": {
          "$ref": "#/470"
        },
        "flags": 0,
        "description": "Properties relevant to different deployment types."
      },
      "errorThreshold": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Error threshold, if the error count for the entire input goes above this value,\r\nthe batch inference will be aborted. Range is [-1, int.MaxValue].\r\nFor FileDataset, this value is the count of file failures.\r\nFor TabularDataset, this value is the count of record failures.\r\nIf set to -1 (the lower bound), all failures during batch inference will be ignored."
      },
      "retrySettings": {
        "type": {
          "$ref": "#/480"
        },
        "flags": 0,
        "description": "Retry Settings for the batch inference operation.\r\nIf not provided, will default to the defaults defined in BatchRetrySettings."
      },
      "miniBatchSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Size of the mini-batch passed to each batch invocation.\r\nFor FileDataset, this is the number of files per mini-batch.\r\nFor TabularDataset, this is the size of the records in bytes, per mini-batch."
      },
      "loggingLevel": {
        "type": {
          "$ref": "#/484"
        },
        "flags": 0,
        "description": "Logging level for batch inference operation."
      },
      "model": {
        "type": {
          "$ref": "#/485"
        },
        "flags": 0,
        "description": "Reference to the model asset for the endpoint deployment."
      },
      "maxConcurrencyPerInstance": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Indicates maximum number of parallelism per instance."
      },
      "outputAction": {
        "type": {
          "$ref": "#/494"
        },
        "flags": 0,
        "description": "Indicates how the output will be organized."
      },
      "outputFileName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Customized output file name for append_row output action."
      },
      "resources": {
        "type": {
          "$ref": "#/495"
        },
        "flags": 0,
        "description": "Indicates compute configuration for the job.\r\nIf not provided, will default to the defaults defined in ResourceConfiguration."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/504"
        },
        "flags": 2,
        "description": "Provisioning state for the endpoint deployment."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Description of the endpoint deployment."
      },
      "properties": {
        "type": {
          "$ref": "#/505"
        },
        "flags": 0,
        "description": "Property dictionary. Properties can be added, but not removed or altered."
      },
      "codeConfiguration": {
        "type": {
          "$ref": "#/506"
        },
        "flags": 0,
        "description": "Code configuration for the endpoint deployment."
      },
      "environmentId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ARM resource ID or AssetId of the environment specification for the endpoint deployment."
      },
      "environmentVariables": {
        "type": {
          "$ref": "#/507"
        },
        "flags": 0,
        "description": "Environment variables configuration for the deployment."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "BatchDeploymentConfiguration",
    "discriminator": "deploymentConfigurationType",
    "baseProperties": {},
    "elements": {
      "PipelineComponent": {
        "$ref": "#/471"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BatchPipelineComponentDeploymentConfiguration",
    "properties": {
      "componentId": {
        "type": {
          "$ref": "#/472"
        },
        "flags": 0,
        "description": "The ARM id of the component to be run."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The description which will be applied to the job."
      },
      "settings": {
        "type": {
          "$ref": "#/477"
        },
        "flags": 0,
        "description": "Run-time settings for the pipeline job."
      },
      "tags": {
        "type": {
          "$ref": "#/478"
        },
        "flags": 0,
        "description": "The tags which will be applied to the job."
      },
      "deploymentConfigurationType": {
        "type": {
          "$ref": "#/479"
        },
        "flags": 1,
        "description": "[Required] The type of the deployment"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IdAssetReference",
    "properties": {
      "assetId": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] ARM resource ID of the asset."
      },
      "referenceType": {
        "type": {
          "$ref": "#/476"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of asset reference."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Id"
  },
  {
    "$type": "StringLiteralType",
    "value": "DataPath"
  },
  {
    "$type": "StringLiteralType",
    "value": "OutputPath"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/473"
      },
      {
        "$ref": "#/474"
      },
      {
        "$ref": "#/475"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "BatchPipelineComponentDeploymentConfigurationSettings",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "BatchPipelineComponentDeploymentConfigurationTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "PipelineComponent"
  },
  {
    "$type": "ObjectType",
    "name": "BatchRetrySettings",
    "properties": {
      "maxRetries": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Maximum retry count for a mini-batch"
      },
      "timeout": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Invocation timeout for a mini-batch, in ISO 8601 format."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Info"
  },
  {
    "$type": "StringLiteralType",
    "value": "Warning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Debug"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/481"
      },
      {
        "$ref": "#/482"
      },
      {
        "$ref": "#/483"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "AssetReferenceBase",
    "discriminator": "referenceType",
    "baseProperties": {},
    "elements": {
      "DataPath": {
        "$ref": "#/486"
      },
      "Id": {
        "$ref": "#/488"
      },
      "OutputPath": {
        "$ref": "#/490"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataPathAssetReference",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The path of the file/directory in the datastore."
      },
      "datastoreId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ARM resource ID of the datastore where the asset is located."
      },
      "referenceType": {
        "type": {
          "$ref": "#/487"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of asset reference."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DataPath"
  },
  {
    "$type": "ObjectType",
    "name": "IdAssetReference",
    "properties": {
      "assetId": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] ARM resource ID of the asset."
      },
      "referenceType": {
        "type": {
          "$ref": "#/489"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of asset reference."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Id"
  },
  {
    "$type": "ObjectType",
    "name": "OutputPathAssetReference",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The path of the file/directory in the job output."
      },
      "jobId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ARM resource ID of the job."
      },
      "referenceType": {
        "type": {
          "$ref": "#/491"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of asset reference."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "OutputPath"
  },
  {
    "$type": "StringLiteralType",
    "value": "SummaryOnly"
  },
  {
    "$type": "StringLiteralType",
    "value": "AppendRow"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/492"
      },
      {
        "$ref": "#/493"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentResourceConfiguration",
    "properties": {
      "instanceCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Optional number of instances or nodes used by the compute target."
      },
      "instanceType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Optional type of VM used as supported by the compute target."
      },
      "properties": {
        "type": {
          "$ref": "#/496"
        },
        "flags": 0,
        "description": "Additional properties bag."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceConfigurationProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Scaling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/497"
      },
      {
        "$ref": "#/498"
      },
      {
        "$ref": "#/499"
      },
      {
        "$ref": "#/500"
      },
      {
        "$ref": "#/501"
      },
      {
        "$ref": "#/502"
      },
      {
        "$ref": "#/503"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "EndpointDeploymentPropertiesBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CodeConfiguration",
    "properties": {
      "codeId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ARM resource ID of the code asset."
      },
      "scoringScript": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] The script to execute on startup. eg. \"score.py\""
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EndpointDeploymentPropertiesBaseEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/batchEndpoints/deployments@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/468"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/codes"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/codes",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/510"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/511"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/296"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/codes@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/512"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/codes/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/codes/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/514"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/515"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/310"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/codes/versions@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/516"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/components"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/components",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/518"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/519"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/324"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/components@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/520"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/components/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/components/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/522"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/523"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/338"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/components/versions@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/524"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/data"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/data",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/526"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/527"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/352"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/data@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/528"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/data/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/data/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/530"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/531"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/363"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/data/versions@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/532"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/datastores"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/datastores",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/534"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/535"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/537"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DatastoreProperties",
    "discriminator": "datastoreType",
    "baseProperties": {
      "isDefault": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 2,
        "description": "Readonly property to indicate if datastore is the workspace default datastore"
      },
      "credentials": {
        "type": {
          "$ref": "#/538"
        },
        "flags": 1,
        "description": "[Required] Account credentials."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/573"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/574"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    },
    "elements": {
      "AzureBlob": {
        "$ref": "#/575"
      },
      "AzureDataLakeGen1": {
        "$ref": "#/581"
      },
      "AzureDataLakeGen2": {
        "$ref": "#/587"
      },
      "AzureFile": {
        "$ref": "#/593"
      },
      "OneLake": {
        "$ref": "#/599"
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DatastoreCredentials",
    "discriminator": "credentialsType",
    "baseProperties": {},
    "elements": {
      "AccountKey": {
        "$ref": "#/539"
      },
      "Certificate": {
        "$ref": "#/547"
      },
      "None": {
        "$ref": "#/555"
      },
      "Sas": {
        "$ref": "#/557"
      },
      "ServicePrincipal": {
        "$ref": "#/565"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AccountKeyDatastoreCredentials",
    "properties": {
      "secrets": {
        "type": {
          "$ref": "#/540"
        },
        "flags": 5,
        "description": "[Required] Storage account secrets."
      },
      "credentialsType": {
        "type": {
          "$ref": "#/546"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AccountKeyDatastoreSecrets",
    "properties": {
      "key": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Storage account key."
      },
      "secretsType": {
        "type": {
          "$ref": "#/545"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AccountKey"
  },
  {
    "$type": "StringLiteralType",
    "value": "Certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sas"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicePrincipal"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/541"
      },
      {
        "$ref": "#/542"
      },
      {
        "$ref": "#/543"
      },
      {
        "$ref": "#/544"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "AccountKey"
  },
  {
    "$type": "ObjectType",
    "name": "CertificateDatastoreCredentials",
    "properties": {
      "authorityUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Authority URL used for authentication."
      },
      "resourceUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Resource the service principal has access to."
      },
      "tenantId": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 1,
        "description": "[Required] ID of the tenant to which the service principal belongs."
      },
      "clientId": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 1,
        "description": "[Required] Service principal client ID."
      },
      "thumbprint": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Thumbprint of the certificate used for authentication."
      },
      "secrets": {
        "type": {
          "$ref": "#/548"
        },
        "flags": 5,
        "description": "[Required] Service principal secrets."
      },
      "credentialsType": {
        "type": {
          "$ref": "#/554"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CertificateDatastoreSecrets",
    "properties": {
      "certificate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Service principal certificate."
      },
      "secretsType": {
        "type": {
          "$ref": "#/553"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AccountKey"
  },
  {
    "$type": "StringLiteralType",
    "value": "Certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sas"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicePrincipal"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/549"
      },
      {
        "$ref": "#/550"
      },
      {
        "$ref": "#/551"
      },
      {
        "$ref": "#/552"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Certificate"
  },
  {
    "$type": "ObjectType",
    "name": "NoneDatastoreCredentials",
    "properties": {
      "credentialsType": {
        "type": {
          "$ref": "#/556"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "ObjectType",
    "name": "SasDatastoreCredentials",
    "properties": {
      "secrets": {
        "type": {
          "$ref": "#/558"
        },
        "flags": 5,
        "description": "[Required] Storage container secrets."
      },
      "credentialsType": {
        "type": {
          "$ref": "#/564"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SasDatastoreSecrets",
    "properties": {
      "sasToken": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Storage container SAS token."
      },
      "secretsType": {
        "type": {
          "$ref": "#/563"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AccountKey"
  },
  {
    "$type": "StringLiteralType",
    "value": "Certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sas"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicePrincipal"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/559"
      },
      {
        "$ref": "#/560"
      },
      {
        "$ref": "#/561"
      },
      {
        "$ref": "#/562"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Sas"
  },
  {
    "$type": "ObjectType",
    "name": "ServicePrincipalDatastoreCredentials",
    "properties": {
      "authorityUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Authority URL used for authentication."
      },
      "resourceUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Resource the service principal has access to."
      },
      "tenantId": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 1,
        "description": "[Required] ID of the tenant to which the service principal belongs."
      },
      "clientId": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 1,
        "description": "[Required] Service principal client ID."
      },
      "secrets": {
        "type": {
          "$ref": "#/566"
        },
        "flags": 5,
        "description": "[Required] Service principal secrets."
      },
      "credentialsType": {
        "type": {
          "$ref": "#/572"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ServicePrincipalDatastoreSecrets",
    "properties": {
      "clientSecret": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Service principal secret."
      },
      "secretsType": {
        "type": {
          "$ref": "#/571"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AccountKey"
  },
  {
    "$type": "StringLiteralType",
    "value": "Certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sas"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicePrincipal"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/567"
      },
      {
        "$ref": "#/568"
      },
      {
        "$ref": "#/569"
      },
      {
        "$ref": "#/570"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicePrincipal"
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureBlobDatastore",
    "properties": {
      "accountName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Storage account name."
      },
      "containerName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Storage account container name."
      },
      "endpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure cloud endpoint for the storage account."
      },
      "protocol": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Protocol used to communicate with the storage account."
      },
      "serviceDataAccessAuthIdentity": {
        "type": {
          "$ref": "#/579"
        },
        "flags": 0,
        "description": "Indicates which identity to use to authenticate service data access to customer's storage."
      },
      "subscriptionId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure Subscription Id"
      },
      "resourceGroup": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure Resource Group name"
      },
      "datastoreType": {
        "type": {
          "$ref": "#/580"
        },
        "flags": 1,
        "description": "[Required] Storage type backing the datastore."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceSystemAssignedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceUserAssignedIdentity"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/576"
      },
      {
        "$ref": "#/577"
      },
      {
        "$ref": "#/578"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureBlob"
  },
  {
    "$type": "ObjectType",
    "name": "AzureDataLakeGen1Datastore",
    "properties": {
      "storeName": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Azure Data Lake store name."
      },
      "serviceDataAccessAuthIdentity": {
        "type": {
          "$ref": "#/585"
        },
        "flags": 0,
        "description": "Indicates which identity to use to authenticate service data access to customer's storage."
      },
      "subscriptionId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure Subscription Id"
      },
      "resourceGroup": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure Resource Group name"
      },
      "datastoreType": {
        "type": {
          "$ref": "#/586"
        },
        "flags": 1,
        "description": "[Required] Storage type backing the datastore."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceSystemAssignedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceUserAssignedIdentity"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/582"
      },
      {
        "$ref": "#/583"
      },
      {
        "$ref": "#/584"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureDataLakeGen1"
  },
  {
    "$type": "ObjectType",
    "name": "AzureDataLakeGen2Datastore",
    "properties": {
      "filesystem": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] The name of the Data Lake Gen2 filesystem."
      },
      "accountName": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Storage account name."
      },
      "endpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure cloud endpoint for the storage account."
      },
      "protocol": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Protocol used to communicate with the storage account."
      },
      "serviceDataAccessAuthIdentity": {
        "type": {
          "$ref": "#/591"
        },
        "flags": 0,
        "description": "Indicates which identity to use to authenticate service data access to customer's storage."
      },
      "subscriptionId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure Subscription Id"
      },
      "resourceGroup": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure Resource Group name"
      },
      "datastoreType": {
        "type": {
          "$ref": "#/592"
        },
        "flags": 1,
        "description": "[Required] Storage type backing the datastore."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceSystemAssignedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceUserAssignedIdentity"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/588"
      },
      {
        "$ref": "#/589"
      },
      {
        "$ref": "#/590"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureDataLakeGen2"
  },
  {
    "$type": "ObjectType",
    "name": "AzureFileDatastore",
    "properties": {
      "accountName": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Storage account name."
      },
      "fileShareName": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] The name of the Azure file share that the datastore points to."
      },
      "endpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure cloud endpoint for the storage account."
      },
      "protocol": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Protocol used to communicate with the storage account."
      },
      "serviceDataAccessAuthIdentity": {
        "type": {
          "$ref": "#/597"
        },
        "flags": 0,
        "description": "Indicates which identity to use to authenticate service data access to customer's storage."
      },
      "subscriptionId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure Subscription Id"
      },
      "resourceGroup": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Azure Resource Group name"
      },
      "datastoreType": {
        "type": {
          "$ref": "#/598"
        },
        "flags": 1,
        "description": "[Required] Storage type backing the datastore."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceSystemAssignedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceUserAssignedIdentity"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/594"
      },
      {
        "$ref": "#/595"
      },
      {
        "$ref": "#/596"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureFile"
  },
  {
    "$type": "ObjectType",
    "name": "OneLakeDatastore",
    "properties": {
      "artifact": {
        "type": {
          "$ref": "#/600"
        },
        "flags": 1,
        "description": "[Required] OneLake artifact backing the datastore."
      },
      "oneLakeWorkspaceName": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] OneLake workspace name."
      },
      "endpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "OneLake endpoint to use for the datastore."
      },
      "serviceDataAccessAuthIdentity": {
        "type": {
          "$ref": "#/606"
        },
        "flags": 0,
        "description": "Indicates which identity to use to authenticate service data access to customer's storage."
      },
      "datastoreType": {
        "type": {
          "$ref": "#/607"
        },
        "flags": 1,
        "description": "[Required] Storage type backing the datastore."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "OneLakeArtifact",
    "discriminator": "artifactType",
    "baseProperties": {
      "artifactName": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] OneLake artifact name"
      }
    },
    "elements": {
      "LakeHouse": {
        "$ref": "#/601"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LakeHouseArtifact",
    "properties": {
      "artifactType": {
        "type": {
          "$ref": "#/602"
        },
        "flags": 1,
        "description": "[Required] OneLake artifact type"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "LakeHouse"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceSystemAssignedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceUserAssignedIdentity"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/603"
      },
      {
        "$ref": "#/604"
      },
      {
        "$ref": "#/605"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "OneLake"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/datastores@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/536"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/environments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/environments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/609"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/610"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/378"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/environments@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/611"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/environments/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/environments/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/613"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/614"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/392"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/environments/versions@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/615"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/featuresets"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/featuresets",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/617"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/618"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/620"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturesetContainerProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/627"
        },
        "flags": 2,
        "description": "Provisioning state for the featureset container."
      },
      "isArchived": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "latestVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The latest version inside this container."
      },
      "nextVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The next auto incremental version"
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/628"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/629"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/621"
      },
      {
        "$ref": "#/622"
      },
      {
        "$ref": "#/623"
      },
      {
        "$ref": "#/624"
      },
      {
        "$ref": "#/625"
      },
      {
        "$ref": "#/626"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/featuresets@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/619"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/featuresets/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/featuresets/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/631"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/632"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/634"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturesetVersionProperties",
    "properties": {
      "specification": {
        "type": {
          "$ref": "#/635"
        },
        "flags": 0,
        "description": "Specifies the feature spec details"
      },
      "materializationSettings": {
        "type": {
          "$ref": "#/636"
        },
        "flags": 0,
        "description": "Specifies the materialization settings"
      },
      "stage": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the asset stage"
      },
      "entities": {
        "type": {
          "$ref": "#/678"
        },
        "flags": 0,
        "description": "Specifies list of entities"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/685"
        },
        "flags": 2,
        "description": "Provisioning state for the featureset version container."
      },
      "isArchived": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "isAnonymous": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "If the name version are system generated (anonymous registration)."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/686"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/687"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturesetSpecification",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the spec path"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MaterializationSettings",
    "properties": {
      "storeType": {
        "type": {
          "$ref": "#/641"
        },
        "flags": 0,
        "description": "Specifies the stores to which materialization should happen"
      },
      "schedule": {
        "type": {
          "$ref": "#/642"
        },
        "flags": 0,
        "description": "Specifies the schedule details"
      },
      "notification": {
        "type": {
          "$ref": "#/665"
        },
        "flags": 0,
        "description": "Specifies the notification details"
      },
      "resource": {
        "type": {
          "$ref": "#/676"
        },
        "flags": 0,
        "description": "Specifies the compute resource settings"
      },
      "sparkConfiguration": {
        "type": {
          "$ref": "#/677"
        },
        "flags": 0,
        "description": "Specifies the spark compute settings"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Online"
  },
  {
    "$type": "StringLiteralType",
    "value": "Offline"
  },
  {
    "$type": "StringLiteralType",
    "value": "OnlineAndOffline"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/637"
      },
      {
        "$ref": "#/638"
      },
      {
        "$ref": "#/639"
      },
      {
        "$ref": "#/640"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "RecurrenceTrigger",
    "properties": {
      "frequency": {
        "type": {
          "$ref": "#/648"
        },
        "flags": 1,
        "description": "[Required] The frequency to trigger schedule."
      },
      "interval": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 1,
        "description": "[Required] Specifies schedule interval in conjunction with frequency"
      },
      "schedule": {
        "type": {
          "$ref": "#/649"
        },
        "flags": 0,
        "description": "The recurrence schedule."
      },
      "triggerType": {
        "type": {
          "$ref": "#/664"
        },
        "flags": 1,
        "description": "[Required]"
      },
      "endTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies end time of schedule in ISO 8601, but without a UTC offset. Refer https://en.wikipedia.org/wiki/ISO_8601.\r\nRecommented format would be \"2022-06-01T00:00:01\"\r\nIf not present, the schedule will run indefinitely"
      },
      "startTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies start time of schedule in ISO 8601 format, but without a UTC offset."
      },
      "timeZone": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies time zone in which the schedule runs.\r\nTimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Minute"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hour"
  },
  {
    "$type": "StringLiteralType",
    "value": "Day"
  },
  {
    "$type": "StringLiteralType",
    "value": "Week"
  },
  {
    "$type": "StringLiteralType",
    "value": "Month"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/643"
      },
      {
        "$ref": "#/644"
      },
      {
        "$ref": "#/645"
      },
      {
        "$ref": "#/646"
      },
      {
        "$ref": "#/647"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "RecurrenceSchedule",
    "properties": {
      "hours": {
        "type": {
          "$ref": "#/650"
        },
        "flags": 1,
        "description": "[Required] List of hours for the schedule."
      },
      "minutes": {
        "type": {
          "$ref": "#/651"
        },
        "flags": 1,
        "description": "[Required] List of minutes for the schedule."
      },
      "weekDays": {
        "type": {
          "$ref": "#/660"
        },
        "flags": 0,
        "description": "List of days for the schedule."
      },
      "monthDays": {
        "type": {
          "$ref": "#/661"
        },
        "flags": 0,
        "description": "List of month days for the schedule"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/20"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/20"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Monday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Tuesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Wednesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Thursday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Friday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Saturday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sunday"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/652"
      },
      {
        "$ref": "#/653"
      },
      {
        "$ref": "#/654"
      },
      {
        "$ref": "#/655"
      },
      {
        "$ref": "#/656"
      },
      {
        "$ref": "#/657"
      },
      {
        "$ref": "#/658"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/659"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/20"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Recurrence"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cron"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/662"
      },
      {
        "$ref": "#/663"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NotificationSetting",
    "properties": {
      "emails": {
        "type": {
          "$ref": "#/666"
        },
        "flags": 0,
        "description": "This is the email recipient list which has a limitation of 499 characters in total concat with comma separator"
      },
      "emailOn": {
        "type": {
          "$ref": "#/671"
        },
        "flags": 0,
        "description": "Send email notification to user on specified notification type"
      },
      "webhooks": {
        "type": {
          "$ref": "#/675"
        },
        "flags": 0,
        "description": "Send webhook callback to a service. Key is a user-provided name for the webhook."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "JobCompleted"
  },
  {
    "$type": "StringLiteralType",
    "value": "JobFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "JobCancelled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/667"
      },
      {
        "$ref": "#/668"
      },
      {
        "$ref": "#/669"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/670"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Webhook",
    "discriminator": "webhookType",
    "baseProperties": {
      "eventType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Send callback on a specified notification event"
      }
    },
    "elements": {
      "AzureDevOps": {
        "$ref": "#/673"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureDevOpsWebhook",
    "properties": {
      "webhookType": {
        "type": {
          "$ref": "#/674"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of service to send a callback"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureDevOps"
  },
  {
    "$type": "ObjectType",
    "name": "NotificationSettingWebhooks",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/672"
    }
  },
  {
    "$type": "ObjectType",
    "name": "MaterializationComputeResource",
    "properties": {
      "instanceType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the instance type"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MaterializationSettingsSparkConfiguration",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/679"
      },
      {
        "$ref": "#/680"
      },
      {
        "$ref": "#/681"
      },
      {
        "$ref": "#/682"
      },
      {
        "$ref": "#/683"
      },
      {
        "$ref": "#/684"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/featuresets/versions@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/633"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/689"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/690"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/692"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturestoreEntityContainerProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/699"
        },
        "flags": 2,
        "description": "Provisioning state for the featurestore entity container."
      },
      "isArchived": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "latestVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The latest version inside this container."
      },
      "nextVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The next auto incremental version"
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/700"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/701"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/693"
      },
      {
        "$ref": "#/694"
      },
      {
        "$ref": "#/695"
      },
      {
        "$ref": "#/696"
      },
      {
        "$ref": "#/697"
      },
      {
        "$ref": "#/698"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/691"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/703"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/704"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/706"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturestoreEntityVersionProperties",
    "properties": {
      "indexColumns": {
        "type": {
          "$ref": "#/717"
        },
        "flags": 0,
        "description": "Specifies index columns"
      },
      "stage": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the asset stage"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/724"
        },
        "flags": 2,
        "description": "Provisioning state for the featurestore entity version."
      },
      "isArchived": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "isAnonymous": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "If the name version are system generated (anonymous registration)."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/725"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/726"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IndexColumn",
    "properties": {
      "dataType": {
        "type": {
          "$ref": "#/716"
        },
        "flags": 0,
        "description": "Specifies the data type"
      },
      "columnName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the column name"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "String"
  },
  {
    "$type": "StringLiteralType",
    "value": "Integer"
  },
  {
    "$type": "StringLiteralType",
    "value": "Long"
  },
  {
    "$type": "StringLiteralType",
    "value": "Float"
  },
  {
    "$type": "StringLiteralType",
    "value": "Double"
  },
  {
    "$type": "StringLiteralType",
    "value": "Binary"
  },
  {
    "$type": "StringLiteralType",
    "value": "Datetime"
  },
  {
    "$type": "StringLiteralType",
    "value": "Boolean"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/708"
      },
      {
        "$ref": "#/709"
      },
      {
        "$ref": "#/710"
      },
      {
        "$ref": "#/711"
      },
      {
        "$ref": "#/712"
      },
      {
        "$ref": "#/713"
      },
      {
        "$ref": "#/714"
      },
      {
        "$ref": "#/715"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/707"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/718"
      },
      {
        "$ref": "#/719"
      },
      {
        "$ref": "#/720"
      },
      {
        "$ref": "#/721"
      },
      {
        "$ref": "#/722"
      },
      {
        "$ref": "#/723"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities/versions@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/705"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/jobs"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/jobs",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/728"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/729"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/731"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "JobBaseProperties",
    "discriminator": "jobType",
    "baseProperties": {
      "displayName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Display name of job."
      },
      "status": {
        "type": {
          "$ref": "#/746"
        },
        "flags": 2,
        "description": "Status of the job."
      },
      "experimentName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the experiment the job belongs to. If not set, the job is placed in the \"Default\" experiment."
      },
      "services": {
        "type": {
          "$ref": "#/752"
        },
        "flags": 0,
        "description": "List of JobEndpoints.\r\nFor local jobs, a job endpoint will have an endpoint value of FileStreamObject."
      },
      "computeId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ARM resource ID of the compute resource."
      },
      "isArchived": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "identity": {
        "type": {
          "$ref": "#/753"
        },
        "flags": 0,
        "description": "Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.\r\nDefaults to AmlToken if null."
      },
      "componentId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ARM resource ID of the component resource."
      },
      "notificationSetting": {
        "type": {
          "$ref": "#/665"
        },
        "flags": 0,
        "description": "Notification setting for the job"
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/760"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/761"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    },
    "elements": {
      "AutoML": {
        "$ref": "#/762"
      },
      "Command": {
        "$ref": "#/1158"
      },
      "Pipeline": {
        "$ref": "#/1231"
      },
      "Spark": {
        "$ref": "#/1236"
      },
      "Sweep": {
        "$ref": "#/1252"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotStarted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Starting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Preparing"
  },
  {
    "$type": "StringLiteralType",
    "value": "Queued"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Finalizing"
  },
  {
    "$type": "StringLiteralType",
    "value": "CancelRequested"
  },
  {
    "$type": "StringLiteralType",
    "value": "Completed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotResponding"
  },
  {
    "$type": "StringLiteralType",
    "value": "Paused"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/732"
      },
      {
        "$ref": "#/733"
      },
      {
        "$ref": "#/734"
      },
      {
        "$ref": "#/735"
      },
      {
        "$ref": "#/736"
      },
      {
        "$ref": "#/737"
      },
      {
        "$ref": "#/738"
      },
      {
        "$ref": "#/739"
      },
      {
        "$ref": "#/740"
      },
      {
        "$ref": "#/741"
      },
      {
        "$ref": "#/742"
      },
      {
        "$ref": "#/743"
      },
      {
        "$ref": "#/744"
      },
      {
        "$ref": "#/745"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "JobService",
    "properties": {
      "jobServiceType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Endpoint type."
      },
      "port": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Port for endpoint."
      },
      "endpoint": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Url for endpoint."
      },
      "status": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Status of endpoint."
      },
      "errorMessage": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Any error in the service."
      },
      "properties": {
        "type": {
          "$ref": "#/748"
        },
        "flags": 0,
        "description": "Additional properties to set on the endpoint."
      },
      "nodes": {
        "type": {
          "$ref": "#/749"
        },
        "flags": 0,
        "description": "Nodes that user would like to start the service on.\r\nIf Nodes is not set or set to null, the service will only be started on leader node."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobServiceProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Nodes",
    "discriminator": "nodesValueType",
    "baseProperties": {},
    "elements": {
      "All": {
        "$ref": "#/750"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AllNodes",
    "properties": {
      "nodesValueType": {
        "type": {
          "$ref": "#/751"
        },
        "flags": 1,
        "description": "[Required] Type of the Nodes value"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "All"
  },
  {
    "$type": "ObjectType",
    "name": "JobBaseServices",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/747"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "IdentityConfiguration",
    "discriminator": "identityType",
    "baseProperties": {},
    "elements": {
      "AMLToken": {
        "$ref": "#/754"
      },
      "Managed": {
        "$ref": "#/756"
      },
      "UserIdentity": {
        "$ref": "#/758"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AmlToken",
    "properties": {
      "identityType": {
        "type": {
          "$ref": "#/755"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of identity framework."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AMLToken"
  },
  {
    "$type": "ObjectType",
    "name": "ManagedIdentity",
    "properties": {
      "clientId": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Specifies a user-assigned identity by client ID. For system-assigned, do not set this field."
      },
      "objectId": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Specifies a user-assigned identity by object ID. For system-assigned, do not set this field."
      },
      "resourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field."
      },
      "identityType": {
        "type": {
          "$ref": "#/757"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of identity framework."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Managed"
  },
  {
    "$type": "ObjectType",
    "name": "UserIdentity",
    "properties": {
      "identityType": {
        "type": {
          "$ref": "#/759"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of identity framework."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "UserIdentity"
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoMLJob",
    "properties": {
      "resources": {
        "type": {
          "$ref": "#/763"
        },
        "flags": 0,
        "description": "Compute Resource configuration for the job."
      },
      "environmentId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The ARM resource ID of the Environment specification for the job.\r\nThis is optional value to provide, if not provided, AutoML will default this to Production AutoML curated environment version when running the job."
      },
      "environmentVariables": {
        "type": {
          "$ref": "#/766"
        },
        "flags": 0,
        "description": "Environment variables included in the job."
      },
      "taskDetails": {
        "type": {
          "$ref": "#/767"
        },
        "flags": 1,
        "description": "[Required] This represents scenario which can be one of Tables/NLP/Image"
      },
      "outputs": {
        "type": {
          "$ref": "#/1149"
        },
        "flags": 0,
        "description": "Mapping of output data bindings used in the job."
      },
      "queueSettings": {
        "type": {
          "$ref": "#/1150"
        },
        "flags": 0,
        "description": "Queue settings for the job"
      },
      "jobType": {
        "type": {
          "$ref": "#/1157"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobResourceConfiguration",
    "properties": {
      "shmSize": {
        "type": {
          "$ref": "#/764"
        },
        "flags": 0,
        "description": "Size of the docker container's shared memory block. This should be in the format of (number)(unit) where number as to be greater than 0 and the unit can be one of b(bytes), k(kilobytes), m(megabytes), or g(gigabytes)."
      },
      "dockerArgs": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Extra arguments to pass to the Docker run command. This would override any parameters that have already been set by the system, or in this section. This parameter is only supported for Azure ML compute types."
      },
      "instanceCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Optional number of instances or nodes used by the compute target."
      },
      "instanceType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Optional type of VM used as supported by the compute target."
      },
      "properties": {
        "type": {
          "$ref": "#/765"
        },
        "flags": 0,
        "description": "Additional properties bag."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "\\d+[bBkKmMgG]"
  },
  {
    "$type": "ObjectType",
    "name": "ResourceConfigurationProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoMLJobEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "AutoMLVertical",
    "discriminator": "taskType",
    "baseProperties": {
      "logVerbosity": {
        "type": {
          "$ref": "#/774"
        },
        "flags": 0,
        "description": "Log verbosity for the job."
      },
      "trainingData": {
        "type": {
          "$ref": "#/775"
        },
        "flags": 1,
        "description": "[Required] Training data input."
      },
      "targetColumnName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Target column name: This is prediction values column.\r\nAlso known as label column name in context of classification tasks."
      }
    },
    "elements": {
      "Classification": {
        "$ref": "#/791"
      },
      "Forecasting": {
        "$ref": "#/869"
      },
      "ImageClassification": {
        "$ref": "#/961"
      },
      "ImageClassificationMultilabel": {
        "$ref": "#/1010"
      },
      "ImageInstanceSegmentation": {
        "$ref": "#/1020"
      },
      "ImageObjectDetection": {
        "$ref": "#/1047"
      },
      "Regression": {
        "$ref": "#/1052"
      },
      "TextClassification": {
        "$ref": "#/1085"
      },
      "TextClassificationMultilabel": {
        "$ref": "#/1095"
      },
      "TextNER": {
        "$ref": "#/1104"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSet"
  },
  {
    "$type": "StringLiteralType",
    "value": "Debug"
  },
  {
    "$type": "StringLiteralType",
    "value": "Info"
  },
  {
    "$type": "StringLiteralType",
    "value": "Warning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "StringLiteralType",
    "value": "Critical"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/768"
      },
      {
        "$ref": "#/769"
      },
      {
        "$ref": "#/770"
      },
      {
        "$ref": "#/771"
      },
      {
        "$ref": "#/772"
      },
      {
        "$ref": "#/773"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "MLTableJobInput",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      },
      "mode": {
        "type": {
          "$ref": "#/782"
        },
        "flags": 0,
        "description": "Input Asset Delivery Mode."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/790"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Description for the input."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnlyMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalDownload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/776"
      },
      {
        "$ref": "#/777"
      },
      {
        "$ref": "#/778"
      },
      {
        "$ref": "#/779"
      },
      {
        "$ref": "#/780"
      },
      {
        "$ref": "#/781"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "literal"
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_file"
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_folder"
  },
  {
    "$type": "StringLiteralType",
    "value": "mltable"
  },
  {
    "$type": "StringLiteralType",
    "value": "custom_model"
  },
  {
    "$type": "StringLiteralType",
    "value": "mlflow_model"
  },
  {
    "$type": "StringLiteralType",
    "value": "triton_model"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/783"
      },
      {
        "$ref": "#/784"
      },
      {
        "$ref": "#/785"
      },
      {
        "$ref": "#/786"
      },
      {
        "$ref": "#/787"
      },
      {
        "$ref": "#/788"
      },
      {
        "$ref": "#/789"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Classification",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/797"
        },
        "flags": 0,
        "description": "Primary metric for the task."
      },
      "trainingSettings": {
        "type": {
          "$ref": "#/798"
        },
        "flags": 0,
        "description": "Inputs for training phase for an AutoML Job."
      },
      "positiveLabel": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Positive label for binary metrics calculation."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/839"
        },
        "flags": 0,
        "description": "Execution constraints for AutoMLJob."
      },
      "nCrossValidations": {
        "type": {
          "$ref": "#/840"
        },
        "flags": 0,
        "description": "Number of cross validation folds to be applied on training dataset\r\nwhen validation dataset is not provided."
      },
      "cvSplitColumnNames": {
        "type": {
          "$ref": "#/845"
        },
        "flags": 0,
        "description": "Columns to use for CVSplit data."
      },
      "weightColumnName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to be weighted up or down."
      },
      "validationData": {
        "type": {
          "$ref": "#/775"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "testData": {
        "type": {
          "$ref": "#/775"
        },
        "flags": 0,
        "description": "Test data input."
      },
      "validationDataSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "testDataSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The fraction of test dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "featurizationSettings": {
        "type": {
          "$ref": "#/846"
        },
        "flags": 0,
        "description": "Featurization inputs needed for AutoML job."
      },
      "taskType": {
        "type": {
          "$ref": "#/868"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AUCWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accuracy"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormMacroRecall"
  },
  {
    "$type": "StringLiteralType",
    "value": "AveragePrecisionScoreWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "PrecisionScoreWeighted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/792"
      },
      {
        "$ref": "#/793"
      },
      {
        "$ref": "#/794"
      },
      {
        "$ref": "#/795"
      },
      {
        "$ref": "#/796"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ClassificationTrainingSettings",
    "properties": {
      "allowedTrainingAlgorithms": {
        "type": {
          "$ref": "#/813"
        },
        "flags": 0,
        "description": "Allowed models for classification task."
      },
      "blockedTrainingAlgorithms": {
        "type": {
          "$ref": "#/828"
        },
        "flags": 0,
        "description": "Blocked models for classification task."
      },
      "enableOnnxCompatibleModels": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Flag for enabling onnx compatible models."
      },
      "stackEnsembleSettings": {
        "type": {
          "$ref": "#/829"
        },
        "flags": 0,
        "description": "Stack ensemble settings for stack ensemble run."
      },
      "enableStackEnsemble": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable stack ensemble run."
      },
      "enableVoteEnsemble": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable voting ensemble run."
      },
      "ensembleModelDownloadTimeout": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.\r\nConfigure this parameter with a higher value than 300 secs, if more time is needed."
      },
      "enableModelExplainability": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Flag to turn on explainability on best model."
      },
      "enableDnnTraining": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable recommendation of DNN models."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "LogisticRegression"
  },
  {
    "$type": "StringLiteralType",
    "value": "SGD"
  },
  {
    "$type": "StringLiteralType",
    "value": "MultinomialNaiveBayes"
  },
  {
    "$type": "StringLiteralType",
    "value": "BernoulliNaiveBayes"
  },
  {
    "$type": "StringLiteralType",
    "value": "SVM"
  },
  {
    "$type": "StringLiteralType",
    "value": "LinearSVM"
  },
  {
    "$type": "StringLiteralType",
    "value": "KNN"
  },
  {
    "$type": "StringLiteralType",
    "value": "DecisionTree"
  },
  {
    "$type": "StringLiteralType",
    "value": "RandomForest"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExtremeRandomTrees"
  },
  {
    "$type": "StringLiteralType",
    "value": "LightGBM"
  },
  {
    "$type": "StringLiteralType",
    "value": "GradientBoosting"
  },
  {
    "$type": "StringLiteralType",
    "value": "XGBoostClassifier"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/799"
      },
      {
        "$ref": "#/800"
      },
      {
        "$ref": "#/801"
      },
      {
        "$ref": "#/802"
      },
      {
        "$ref": "#/803"
      },
      {
        "$ref": "#/804"
      },
      {
        "$ref": "#/805"
      },
      {
        "$ref": "#/806"
      },
      {
        "$ref": "#/807"
      },
      {
        "$ref": "#/808"
      },
      {
        "$ref": "#/809"
      },
      {
        "$ref": "#/810"
      },
      {
        "$ref": "#/811"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/812"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "LogisticRegression"
  },
  {
    "$type": "StringLiteralType",
    "value": "SGD"
  },
  {
    "$type": "StringLiteralType",
    "value": "MultinomialNaiveBayes"
  },
  {
    "$type": "StringLiteralType",
    "value": "BernoulliNaiveBayes"
  },
  {
    "$type": "StringLiteralType",
    "value": "SVM"
  },
  {
    "$type": "StringLiteralType",
    "value": "LinearSVM"
  },
  {
    "$type": "StringLiteralType",
    "value": "KNN"
  },
  {
    "$type": "StringLiteralType",
    "value": "DecisionTree"
  },
  {
    "$type": "StringLiteralType",
    "value": "RandomForest"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExtremeRandomTrees"
  },
  {
    "$type": "StringLiteralType",
    "value": "LightGBM"
  },
  {
    "$type": "StringLiteralType",
    "value": "GradientBoosting"
  },
  {
    "$type": "StringLiteralType",
    "value": "XGBoostClassifier"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/814"
      },
      {
        "$ref": "#/815"
      },
      {
        "$ref": "#/816"
      },
      {
        "$ref": "#/817"
      },
      {
        "$ref": "#/818"
      },
      {
        "$ref": "#/819"
      },
      {
        "$ref": "#/820"
      },
      {
        "$ref": "#/821"
      },
      {
        "$ref": "#/822"
      },
      {
        "$ref": "#/823"
      },
      {
        "$ref": "#/824"
      },
      {
        "$ref": "#/825"
      },
      {
        "$ref": "#/826"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/827"
    }
  },
  {
    "$type": "ObjectType",
    "name": "StackEnsembleSettings",
    "properties": {
      "stackMetaLearnerType": {
        "type": {
          "$ref": "#/838"
        },
        "flags": 0,
        "description": "The meta-learner is a model trained on the output of the individual heterogeneous models."
      },
      "stackMetaLearnerTrainPercentage": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for training the meta-learner. Default value is 0.2."
      },
      "stackMetaLearnerKWargs": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "Optional parameters to pass to the initializer of the meta-learner."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "LogisticRegression"
  },
  {
    "$type": "StringLiteralType",
    "value": "LogisticRegressionCV"
  },
  {
    "$type": "StringLiteralType",
    "value": "LightGBMClassifier"
  },
  {
    "$type": "StringLiteralType",
    "value": "ElasticNet"
  },
  {
    "$type": "StringLiteralType",
    "value": "ElasticNetCV"
  },
  {
    "$type": "StringLiteralType",
    "value": "LightGBMRegressor"
  },
  {
    "$type": "StringLiteralType",
    "value": "LinearRegression"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/830"
      },
      {
        "$ref": "#/831"
      },
      {
        "$ref": "#/832"
      },
      {
        "$ref": "#/833"
      },
      {
        "$ref": "#/834"
      },
      {
        "$ref": "#/835"
      },
      {
        "$ref": "#/836"
      },
      {
        "$ref": "#/837"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TableVerticalLimitSettings",
    "properties": {
      "maxTrials": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Number of iterations."
      },
      "trialTimeout": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Iteration timeout."
      },
      "timeout": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "AutoML job timeout."
      },
      "maxConcurrentTrials": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Maximum Concurrent iterations."
      },
      "maxCoresPerTrial": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Max cores per iteration."
      },
      "exitScore": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Exit score for the AutoML job."
      },
      "enableEarlyTermination": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "NCrossValidations",
    "discriminator": "mode",
    "baseProperties": {},
    "elements": {
      "Auto": {
        "$ref": "#/841"
      },
      "Custom": {
        "$ref": "#/843"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoNCrossValidations",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/842"
        },
        "flags": 1,
        "description": "[Required] Mode for determining N-Cross validations."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "ObjectType",
    "name": "CustomNCrossValidations",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 1,
        "description": "[Required] N-Cross validations value."
      },
      "mode": {
        "type": {
          "$ref": "#/844"
        },
        "flags": 1,
        "description": "[Required] Mode for determining N-Cross validations."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TableVerticalFeaturizationSettings",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/850"
        },
        "flags": 0,
        "description": "Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.\r\nIf 'Off' is selected then no featurization is done.\r\nIf 'Custom' is selected then user can specify additional inputs to customize how featurization is done."
      },
      "blockedTransformers": {
        "type": {
          "$ref": "#/862"
        },
        "flags": 0,
        "description": "These transformers shall not be used in featurization."
      },
      "columnNameAndTypes": {
        "type": {
          "$ref": "#/863"
        },
        "flags": 0,
        "description": "Dictionary of column name and its type (int, float, string, datetime etc)."
      },
      "transformerParams": {
        "type": {
          "$ref": "#/867"
        },
        "flags": 0,
        "description": "User can specify additional transformers to be used along with the columns to which it would be applied and parameters for the transformer constructor."
      },
      "enableDnnFeaturization": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Determines whether to use Dnn based featurizers for data featurization."
      },
      "datasetLanguage": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Dataset language, useful for the text data."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "StringLiteralType",
    "value": "Off"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/847"
      },
      {
        "$ref": "#/848"
      },
      {
        "$ref": "#/849"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "TextTargetEncoder"
  },
  {
    "$type": "StringLiteralType",
    "value": "OneHotEncoder"
  },
  {
    "$type": "StringLiteralType",
    "value": "CatTargetEncoder"
  },
  {
    "$type": "StringLiteralType",
    "value": "TfIdf"
  },
  {
    "$type": "StringLiteralType",
    "value": "WoETargetEncoder"
  },
  {
    "$type": "StringLiteralType",
    "value": "LabelEncoder"
  },
  {
    "$type": "StringLiteralType",
    "value": "WordEmbedding"
  },
  {
    "$type": "StringLiteralType",
    "value": "NaiveBayes"
  },
  {
    "$type": "StringLiteralType",
    "value": "CountVectorizer"
  },
  {
    "$type": "StringLiteralType",
    "value": "HashOneHotEncoder"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/851"
      },
      {
        "$ref": "#/852"
      },
      {
        "$ref": "#/853"
      },
      {
        "$ref": "#/854"
      },
      {
        "$ref": "#/855"
      },
      {
        "$ref": "#/856"
      },
      {
        "$ref": "#/857"
      },
      {
        "$ref": "#/858"
      },
      {
        "$ref": "#/859"
      },
      {
        "$ref": "#/860"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/861"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TableVerticalFeaturizationSettingsColumnNameAndTypes",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ColumnTransformer",
    "properties": {
      "fields": {
        "type": {
          "$ref": "#/865"
        },
        "flags": 0,
        "description": "Fields to apply transformer logic on."
      },
      "parameters": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "Different properties to be passed to transformer.\r\nInput expected is dictionary of key,value pairs in JSON format."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/864"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TableVerticalFeaturizationSettingsTransformerParams",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/866"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Classification"
  },
  {
    "$type": "ObjectType",
    "name": "Forecasting",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/874"
        },
        "flags": 0,
        "description": "Primary metric for forecasting task."
      },
      "forecastingSettings": {
        "type": {
          "$ref": "#/875"
        },
        "flags": 0,
        "description": "Forecasting task specific inputs."
      },
      "trainingSettings": {
        "type": {
          "$ref": "#/916"
        },
        "flags": 0,
        "description": "Inputs for training phase for an AutoML Job."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/839"
        },
        "flags": 0,
        "description": "Execution constraints for AutoMLJob."
      },
      "nCrossValidations": {
        "type": {
          "$ref": "#/840"
        },
        "flags": 0,
        "description": "Number of cross validation folds to be applied on training dataset\r\nwhen validation dataset is not provided."
      },
      "cvSplitColumnNames": {
        "type": {
          "$ref": "#/959"
        },
        "flags": 0,
        "description": "Columns to use for CVSplit data."
      },
      "weightColumnName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to be weighted up or down."
      },
      "validationData": {
        "type": {
          "$ref": "#/775"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "testData": {
        "type": {
          "$ref": "#/775"
        },
        "flags": 0,
        "description": "Test data input."
      },
      "validationDataSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "testDataSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The fraction of test dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "featurizationSettings": {
        "type": {
          "$ref": "#/846"
        },
        "flags": 0,
        "description": "Featurization inputs needed for AutoML job."
      },
      "taskType": {
        "type": {
          "$ref": "#/960"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SpearmanCorrelation"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormalizedRootMeanSquaredError"
  },
  {
    "$type": "StringLiteralType",
    "value": "R2Score"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormalizedMeanAbsoluteError"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/870"
      },
      {
        "$ref": "#/871"
      },
      {
        "$ref": "#/872"
      },
      {
        "$ref": "#/873"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ForecastingSettings",
    "properties": {
      "countryOrRegionForHolidays": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Country or region for holidays for forecasting tasks.\r\nThese should be ISO 3166 two-letter country/region codes, for example 'US' or 'GB'."
      },
      "timeColumnName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the time column. This parameter is required when forecasting to specify the datetime column in the input data used for building the time series and inferring its frequency."
      },
      "targetLags": {
        "type": {
          "$ref": "#/876"
        },
        "flags": 0,
        "description": "The number of past periods to lag from the target column."
      },
      "targetRollingWindowSize": {
        "type": {
          "$ref": "#/882"
        },
        "flags": 0,
        "description": "The number of past periods used to create a rolling window average of the target column."
      },
      "forecastHorizon": {
        "type": {
          "$ref": "#/887"
        },
        "flags": 0,
        "description": "The desired maximum forecast horizon in units of time-series frequency."
      },
      "timeSeriesIdColumnNames": {
        "type": {
          "$ref": "#/892"
        },
        "flags": 0,
        "description": "The names of columns used to group a timeseries. It can be used to create multiple series.\r\nIf grain is not defined, the data set is assumed to be one time-series. This parameter is used with task type forecasting."
      },
      "frequency": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "When forecasting, this parameter represents the period with which the forecast is desired, for example daily, weekly, yearly, etc. The forecast frequency is dataset frequency by default."
      },
      "featureLags": {
        "type": {
          "$ref": "#/895"
        },
        "flags": 0,
        "description": "Flag for generating lags for the numeric features with 'auto' or null."
      },
      "seasonality": {
        "type": {
          "$ref": "#/896"
        },
        "flags": 0,
        "description": "Set time series seasonality as an integer multiple of the series frequency.\r\nIf seasonality is set to 'auto', it will be inferred."
      },
      "shortSeriesHandlingConfig": {
        "type": {
          "$ref": "#/905"
        },
        "flags": 0,
        "description": "The parameter defining how if AutoML should handle short time series."
      },
      "useStl": {
        "type": {
          "$ref": "#/909"
        },
        "flags": 0,
        "description": "Configure STL Decomposition of the time-series target column."
      },
      "targetAggregateFunction": {
        "type": {
          "$ref": "#/915"
        },
        "flags": 0,
        "description": "The function to be used to aggregate the time series target column to conform to a user specified frequency.\r\nIf the TargetAggregateFunction is set i.e. not 'None', but the freq parameter is not set, the error is raised. The possible target aggregation functions are: \"sum\", \"max\", \"min\" and \"mean\"."
      },
      "cvStepSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Number of periods between the origin time of one CV fold and the next fold. For\r\nexample, if `CVStepSize` = 3 for daily data, the origin time for each fold will be\r\nthree days apart."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "TargetLags",
    "discriminator": "mode",
    "baseProperties": {},
    "elements": {
      "Auto": {
        "$ref": "#/877"
      },
      "Custom": {
        "$ref": "#/879"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoTargetLags",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/878"
        },
        "flags": 1,
        "description": "[Required] Set target lags mode - Auto/Custom"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "ObjectType",
    "name": "CustomTargetLags",
    "properties": {
      "values": {
        "type": {
          "$ref": "#/880"
        },
        "flags": 1,
        "description": "[Required] Set target lags values."
      },
      "mode": {
        "type": {
          "$ref": "#/881"
        },
        "flags": 1,
        "description": "[Required] Set target lags mode - Auto/Custom"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/20"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "TargetRollingWindowSize",
    "discriminator": "mode",
    "baseProperties": {},
    "elements": {
      "Auto": {
        "$ref": "#/883"
      },
      "Custom": {
        "$ref": "#/885"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoTargetRollingWindowSize",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/884"
        },
        "flags": 1,
        "description": "[Required] TargetRollingWindowSiz detection mode."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "ObjectType",
    "name": "CustomTargetRollingWindowSize",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 1,
        "description": "[Required] TargetRollingWindowSize value."
      },
      "mode": {
        "type": {
          "$ref": "#/886"
        },
        "flags": 1,
        "description": "[Required] TargetRollingWindowSiz detection mode."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ForecastHorizon",
    "discriminator": "mode",
    "baseProperties": {},
    "elements": {
      "Auto": {
        "$ref": "#/888"
      },
      "Custom": {
        "$ref": "#/890"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoForecastHorizon",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/889"
        },
        "flags": 1,
        "description": "[Required] Set forecast horizon value selection mode."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "ObjectType",
    "name": "CustomForecastHorizon",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 1,
        "description": "[Required] Forecast horizon value."
      },
      "mode": {
        "type": {
          "$ref": "#/891"
        },
        "flags": 1,
        "description": "[Required] Set forecast horizon value selection mode."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/893"
      },
      {
        "$ref": "#/894"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Seasonality",
    "discriminator": "mode",
    "baseProperties": {},
    "elements": {
      "Auto": {
        "$ref": "#/897"
      },
      "Custom": {
        "$ref": "#/899"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoSeasonality",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/898"
        },
        "flags": 1,
        "description": "[Required] Seasonality mode."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "ObjectType",
    "name": "CustomSeasonality",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 1,
        "description": "[Required] Seasonality value."
      },
      "mode": {
        "type": {
          "$ref": "#/900"
        },
        "flags": 1,
        "description": "[Required] Seasonality mode."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pad"
  },
  {
    "$type": "StringLiteralType",
    "value": "Drop"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/901"
      },
      {
        "$ref": "#/902"
      },
      {
        "$ref": "#/903"
      },
      {
        "$ref": "#/904"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Season"
  },
  {
    "$type": "StringLiteralType",
    "value": "SeasonTrend"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/906"
      },
      {
        "$ref": "#/907"
      },
      {
        "$ref": "#/908"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sum"
  },
  {
    "$type": "StringLiteralType",
    "value": "Max"
  },
  {
    "$type": "StringLiteralType",
    "value": "Min"
  },
  {
    "$type": "StringLiteralType",
    "value": "Mean"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/910"
      },
      {
        "$ref": "#/911"
      },
      {
        "$ref": "#/912"
      },
      {
        "$ref": "#/913"
      },
      {
        "$ref": "#/914"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ForecastingTrainingSettings",
    "properties": {
      "allowedTrainingAlgorithms": {
        "type": {
          "$ref": "#/937"
        },
        "flags": 0,
        "description": "Allowed models for forecasting task."
      },
      "blockedTrainingAlgorithms": {
        "type": {
          "$ref": "#/958"
        },
        "flags": 0,
        "description": "Blocked models for forecasting task."
      },
      "enableOnnxCompatibleModels": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Flag for enabling onnx compatible models."
      },
      "stackEnsembleSettings": {
        "type": {
          "$ref": "#/829"
        },
        "flags": 0,
        "description": "Stack ensemble settings for stack ensemble run."
      },
      "enableStackEnsemble": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable stack ensemble run."
      },
      "enableVoteEnsemble": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable voting ensemble run."
      },
      "ensembleModelDownloadTimeout": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.\r\nConfigure this parameter with a higher value than 300 secs, if more time is needed."
      },
      "enableModelExplainability": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Flag to turn on explainability on best model."
      },
      "enableDnnTraining": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable recommendation of DNN models."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AutoArima"
  },
  {
    "$type": "StringLiteralType",
    "value": "Prophet"
  },
  {
    "$type": "StringLiteralType",
    "value": "Naive"
  },
  {
    "$type": "StringLiteralType",
    "value": "SeasonalNaive"
  },
  {
    "$type": "StringLiteralType",
    "value": "Average"
  },
  {
    "$type": "StringLiteralType",
    "value": "SeasonalAverage"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExponentialSmoothing"
  },
  {
    "$type": "StringLiteralType",
    "value": "Arimax"
  },
  {
    "$type": "StringLiteralType",
    "value": "TCNForecaster"
  },
  {
    "$type": "StringLiteralType",
    "value": "ElasticNet"
  },
  {
    "$type": "StringLiteralType",
    "value": "GradientBoosting"
  },
  {
    "$type": "StringLiteralType",
    "value": "DecisionTree"
  },
  {
    "$type": "StringLiteralType",
    "value": "KNN"
  },
  {
    "$type": "StringLiteralType",
    "value": "LassoLars"
  },
  {
    "$type": "StringLiteralType",
    "value": "SGD"
  },
  {
    "$type": "StringLiteralType",
    "value": "RandomForest"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExtremeRandomTrees"
  },
  {
    "$type": "StringLiteralType",
    "value": "LightGBM"
  },
  {
    "$type": "StringLiteralType",
    "value": "XGBoostRegressor"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/917"
      },
      {
        "$ref": "#/918"
      },
      {
        "$ref": "#/919"
      },
      {
        "$ref": "#/920"
      },
      {
        "$ref": "#/921"
      },
      {
        "$ref": "#/922"
      },
      {
        "$ref": "#/923"
      },
      {
        "$ref": "#/924"
      },
      {
        "$ref": "#/925"
      },
      {
        "$ref": "#/926"
      },
      {
        "$ref": "#/927"
      },
      {
        "$ref": "#/928"
      },
      {
        "$ref": "#/929"
      },
      {
        "$ref": "#/930"
      },
      {
        "$ref": "#/931"
      },
      {
        "$ref": "#/932"
      },
      {
        "$ref": "#/933"
      },
      {
        "$ref": "#/934"
      },
      {
        "$ref": "#/935"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/936"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AutoArima"
  },
  {
    "$type": "StringLiteralType",
    "value": "Prophet"
  },
  {
    "$type": "StringLiteralType",
    "value": "Naive"
  },
  {
    "$type": "StringLiteralType",
    "value": "SeasonalNaive"
  },
  {
    "$type": "StringLiteralType",
    "value": "Average"
  },
  {
    "$type": "StringLiteralType",
    "value": "SeasonalAverage"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExponentialSmoothing"
  },
  {
    "$type": "StringLiteralType",
    "value": "Arimax"
  },
  {
    "$type": "StringLiteralType",
    "value": "TCNForecaster"
  },
  {
    "$type": "StringLiteralType",
    "value": "ElasticNet"
  },
  {
    "$type": "StringLiteralType",
    "value": "GradientBoosting"
  },
  {
    "$type": "StringLiteralType",
    "value": "DecisionTree"
  },
  {
    "$type": "StringLiteralType",
    "value": "KNN"
  },
  {
    "$type": "StringLiteralType",
    "value": "LassoLars"
  },
  {
    "$type": "StringLiteralType",
    "value": "SGD"
  },
  {
    "$type": "StringLiteralType",
    "value": "RandomForest"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExtremeRandomTrees"
  },
  {
    "$type": "StringLiteralType",
    "value": "LightGBM"
  },
  {
    "$type": "StringLiteralType",
    "value": "XGBoostRegressor"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/938"
      },
      {
        "$ref": "#/939"
      },
      {
        "$ref": "#/940"
      },
      {
        "$ref": "#/941"
      },
      {
        "$ref": "#/942"
      },
      {
        "$ref": "#/943"
      },
      {
        "$ref": "#/944"
      },
      {
        "$ref": "#/945"
      },
      {
        "$ref": "#/946"
      },
      {
        "$ref": "#/947"
      },
      {
        "$ref": "#/948"
      },
      {
        "$ref": "#/949"
      },
      {
        "$ref": "#/950"
      },
      {
        "$ref": "#/951"
      },
      {
        "$ref": "#/952"
      },
      {
        "$ref": "#/953"
      },
      {
        "$ref": "#/954"
      },
      {
        "$ref": "#/955"
      },
      {
        "$ref": "#/956"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/957"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Forecasting"
  },
  {
    "$type": "ObjectType",
    "name": "ImageClassification",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/967"
        },
        "flags": 0,
        "description": "Primary metric to optimize for this task."
      },
      "modelSettings": {
        "type": {
          "$ref": "#/968"
        },
        "flags": 0,
        "description": "Settings used for training the model."
      },
      "searchSpace": {
        "type": {
          "$ref": "#/995"
        },
        "flags": 0,
        "description": "Search space for sampling different combinations of models and their hyperparameters."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/996"
        },
        "flags": 1,
        "description": "[Required] Limit settings for the AutoML job."
      },
      "sweepSettings": {
        "type": {
          "$ref": "#/997"
        },
        "flags": 0,
        "description": "Model sweeping and hyperparameter sweeping related settings."
      },
      "validationData": {
        "type": {
          "$ref": "#/775"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "validationDataSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "taskType": {
        "type": {
          "$ref": "#/1009"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AUCWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accuracy"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormMacroRecall"
  },
  {
    "$type": "StringLiteralType",
    "value": "AveragePrecisionScoreWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "PrecisionScoreWeighted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/962"
      },
      {
        "$ref": "#/963"
      },
      {
        "$ref": "#/964"
      },
      {
        "$ref": "#/965"
      },
      {
        "$ref": "#/966"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ImageModelSettingsClassification",
    "properties": {
      "trainingCropSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Image crop size that is input to the neural network for the training dataset. Must be a positive integer."
      },
      "validationCropSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Image crop size that is input to the neural network for the validation dataset. Must be a positive integer."
      },
      "validationResizeSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Image size to which to resize before cropping for validation dataset. Must be a positive integer."
      },
      "weightedLoss": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Weighted loss. The accepted values are 0 for no weighted loss.\r\n1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2."
      },
      "amsGradient": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable AMSGrad when optimizer is 'adam' or 'adamw'."
      },
      "advancedSettings": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Settings for advanced scenarios."
      },
      "augmentations": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Settings for using Augmentations."
      },
      "beta1": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]."
      },
      "beta2": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]."
      },
      "checkpointFrequency": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Frequency to store model checkpoints. Must be a positive integer."
      },
      "checkpointRunId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The id of a previous run that has a pretrained checkpoint for incremental training."
      },
      "checkpointModel": {
        "type": {
          "$ref": "#/969"
        },
        "flags": 0,
        "description": "The pretrained checkpoint model for incremental training."
      },
      "distributed": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Whether to use distributed training."
      },
      "earlyStopping": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable early stopping logic during training."
      },
      "earlyStoppingDelay": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Minimum number of epochs or validation evaluations to wait before primary metric improvement\r\nis tracked for early stopping. Must be a positive integer."
      },
      "earlyStoppingPatience": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Minimum number of epochs or validation evaluations with no primary metric improvement before\r\nthe run is stopped. Must be a positive integer."
      },
      "evaluationFrequency": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Frequency to evaluate validation dataset to get metric scores. Must be a positive integer."
      },
      "enableOnnxNormalization": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable normalization when exporting ONNX model."
      },
      "gradientAccumulationStep": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Gradient accumulation means running a configured number of \"GradAccumulationStep\" steps without\r\nupdating the model weights while accumulating the gradients of those steps, and then using\r\nthe accumulated gradients to compute the weight updates. Must be a positive integer."
      },
      "layersToFreeze": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Number of layers to freeze for the model. Must be a positive integer.\r\nFor instance, passing 2 as value for 'seresnext' means\r\nfreezing layer0 and layer1. For a full list of models supported and details on layer freeze, please\r\nsee: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
      },
      "learningRate": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Initial learning rate. Must be a float in the range [0, 1]."
      },
      "learningRateScheduler": {
        "type": {
          "$ref": "#/988"
        },
        "flags": 0,
        "description": "Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'."
      },
      "modelName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the model to use for training.\r\nFor more information on the available models please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
      },
      "momentum": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1]."
      },
      "nesterov": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable nesterov when optimizer is 'sgd'."
      },
      "numberOfEpochs": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Number of training epochs. Must be a positive integer."
      },
      "numberOfWorkers": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Number of data loader workers. Must be a non-negative integer."
      },
      "optimizer": {
        "type": {
          "$ref": "#/993"
        },
        "flags": 0,
        "description": "Type of optimizer."
      },
      "randomSeed": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Random seed to be used when using deterministic training."
      },
      "stepLRGamma": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1]."
      },
      "stepLRStepSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Value of step size when learning rate scheduler is 'step'. Must be a positive integer."
      },
      "trainingBatchSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Training batch size. Must be a positive integer."
      },
      "validationBatchSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Validation batch size. Must be a positive integer."
      },
      "warmupCosineLRCycles": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1]."
      },
      "warmupCosineLRWarmupEpochs": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer."
      },
      "weightDecay": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1]."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MLFlowModelJobInput",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      },
      "mode": {
        "type": {
          "$ref": "#/976"
        },
        "flags": 0,
        "description": "Input Asset Delivery Mode."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/984"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Description for the input."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnlyMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalDownload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/970"
      },
      {
        "$ref": "#/971"
      },
      {
        "$ref": "#/972"
      },
      {
        "$ref": "#/973"
      },
      {
        "$ref": "#/974"
      },
      {
        "$ref": "#/975"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "literal"
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_file"
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_folder"
  },
  {
    "$type": "StringLiteralType",
    "value": "mltable"
  },
  {
    "$type": "StringLiteralType",
    "value": "custom_model"
  },
  {
    "$type": "StringLiteralType",
    "value": "mlflow_model"
  },
  {
    "$type": "StringLiteralType",
    "value": "triton_model"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/977"
      },
      {
        "$ref": "#/978"
      },
      {
        "$ref": "#/979"
      },
      {
        "$ref": "#/980"
      },
      {
        "$ref": "#/981"
      },
      {
        "$ref": "#/982"
      },
      {
        "$ref": "#/983"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "WarmupCosine"
  },
  {
    "$type": "StringLiteralType",
    "value": "Step"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/985"
      },
      {
        "$ref": "#/986"
      },
      {
        "$ref": "#/987"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sgd"
  },
  {
    "$type": "StringLiteralType",
    "value": "Adam"
  },
  {
    "$type": "StringLiteralType",
    "value": "Adamw"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/989"
      },
      {
        "$ref": "#/990"
      },
      {
        "$ref": "#/991"
      },
      {
        "$ref": "#/992"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ImageModelDistributionSettingsClassification",
    "properties": {
      "trainingCropSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Image crop size that is input to the neural network for the training dataset. Must be a positive integer."
      },
      "validationCropSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Image crop size that is input to the neural network for the validation dataset. Must be a positive integer."
      },
      "validationResizeSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Image size to which to resize before cropping for validation dataset. Must be a positive integer."
      },
      "weightedLoss": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Weighted loss. The accepted values are 0 for no weighted loss.\r\n1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2."
      },
      "amsGradient": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Enable AMSGrad when optimizer is 'adam' or 'adamw'."
      },
      "augmentations": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Settings for using Augmentations."
      },
      "beta1": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]."
      },
      "beta2": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]."
      },
      "distributed": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Whether to use distributer training."
      },
      "earlyStopping": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Enable early stopping logic during training."
      },
      "earlyStoppingDelay": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Minimum number of epochs or validation evaluations to wait before primary metric improvement\r\nis tracked for early stopping. Must be a positive integer."
      },
      "earlyStoppingPatience": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Minimum number of epochs or validation evaluations with no primary metric improvement before\r\nthe run is stopped. Must be a positive integer."
      },
      "evaluationFrequency": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Frequency to evaluate validation dataset to get metric scores. Must be a positive integer."
      },
      "enableOnnxNormalization": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Enable normalization when exporting ONNX model."
      },
      "gradientAccumulationStep": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gradient accumulation means running a configured number of \"GradAccumulationStep\" steps without\r\nupdating the model weights while accumulating the gradients of those steps, and then using\r\nthe accumulated gradients to compute the weight updates. Must be a positive integer."
      },
      "layersToFreeze": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Number of layers to freeze for the model. Must be a positive integer.\r\nFor instance, passing 2 as value for 'seresnext' means\r\nfreezing layer0 and layer1. For a full list of models supported and details on layer freeze, please\r\nsee: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
      },
      "learningRate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Initial learning rate. Must be a float in the range [0, 1]."
      },
      "learningRateScheduler": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'."
      },
      "modelName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the model to use for training.\r\nFor more information on the available models please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
      },
      "momentum": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1]."
      },
      "nesterov": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Enable nesterov when optimizer is 'sgd'."
      },
      "numberOfEpochs": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Number of training epochs. Must be a positive integer."
      },
      "numberOfWorkers": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Number of data loader workers. Must be a non-negative integer."
      },
      "optimizer": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Type of optimizer. Must be either 'sgd', 'adam', or 'adamw'."
      },
      "randomSeed": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Random seed to be used when using deterministic training."
      },
      "stepLRGamma": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1]."
      },
      "stepLRStepSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of step size when learning rate scheduler is 'step'. Must be a positive integer."
      },
      "trainingBatchSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Training batch size. Must be a positive integer."
      },
      "validationBatchSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Validation batch size. Must be a positive integer."
      },
      "warmupCosineLRCycles": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1]."
      },
      "warmupCosineLRWarmupEpochs": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer."
      },
      "weightDecay": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1]."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/994"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ImageLimitSettings",
    "properties": {
      "maxTrials": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Maximum number of AutoML iterations."
      },
      "timeout": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "AutoML job timeout."
      },
      "maxConcurrentTrials": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Maximum number of concurrent AutoML iterations."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ImageSweepSettings",
    "properties": {
      "samplingAlgorithm": {
        "type": {
          "$ref": "#/1001"
        },
        "flags": 1,
        "description": "[Required] Type of the hyperparameter sampling algorithms."
      },
      "earlyTermination": {
        "type": {
          "$ref": "#/1002"
        },
        "flags": 0,
        "description": "Type of early termination policy."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Grid"
  },
  {
    "$type": "StringLiteralType",
    "value": "Random"
  },
  {
    "$type": "StringLiteralType",
    "value": "Bayesian"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/998"
      },
      {
        "$ref": "#/999"
      },
      {
        "$ref": "#/1000"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "EarlyTerminationPolicy",
    "discriminator": "policyType",
    "baseProperties": {
      "evaluationInterval": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Interval (number of runs) between policy evaluations."
      },
      "delayEvaluation": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Number of intervals by which to delay the first evaluation."
      }
    },
    "elements": {
      "Bandit": {
        "$ref": "#/1003"
      },
      "MedianStopping": {
        "$ref": "#/1005"
      },
      "TruncationSelection": {
        "$ref": "#/1007"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BanditPolicy",
    "properties": {
      "slackFactor": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Ratio of the allowed distance from the best performing run."
      },
      "slackAmount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Absolute distance allowed from the best performing run."
      },
      "policyType": {
        "type": {
          "$ref": "#/1004"
        },
        "flags": 1,
        "description": "[Required] Name of policy configuration"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Bandit"
  },
  {
    "$type": "ObjectType",
    "name": "MedianStoppingPolicy",
    "properties": {
      "policyType": {
        "type": {
          "$ref": "#/1006"
        },
        "flags": 1,
        "description": "[Required] Name of policy configuration"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "MedianStopping"
  },
  {
    "$type": "ObjectType",
    "name": "TruncationSelectionPolicy",
    "properties": {
      "truncationPercentage": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The percentage of runs to cancel at each evaluation interval."
      },
      "policyType": {
        "type": {
          "$ref": "#/1008"
        },
        "flags": 1,
        "description": "[Required] Name of policy configuration"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "TruncationSelection"
  },
  {
    "$type": "StringLiteralType",
    "value": "ImageClassification"
  },
  {
    "$type": "ObjectType",
    "name": "ImageClassificationMultilabel",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/1017"
        },
        "flags": 0,
        "description": "Primary metric to optimize for this task."
      },
      "modelSettings": {
        "type": {
          "$ref": "#/968"
        },
        "flags": 0,
        "description": "Settings used for training the model."
      },
      "searchSpace": {
        "type": {
          "$ref": "#/1018"
        },
        "flags": 0,
        "description": "Search space for sampling different combinations of models and their hyperparameters."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/996"
        },
        "flags": 1,
        "description": "[Required] Limit settings for the AutoML job."
      },
      "sweepSettings": {
        "type": {
          "$ref": "#/997"
        },
        "flags": 0,
        "description": "Model sweeping and hyperparameter sweeping related settings."
      },
      "validationData": {
        "type": {
          "$ref": "#/775"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "validationDataSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "taskType": {
        "type": {
          "$ref": "#/1019"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AUCWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accuracy"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormMacroRecall"
  },
  {
    "$type": "StringLiteralType",
    "value": "AveragePrecisionScoreWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "PrecisionScoreWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "IOU"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1011"
      },
      {
        "$ref": "#/1012"
      },
      {
        "$ref": "#/1013"
      },
      {
        "$ref": "#/1014"
      },
      {
        "$ref": "#/1015"
      },
      {
        "$ref": "#/1016"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/994"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ImageClassificationMultilabel"
  },
  {
    "$type": "ObjectType",
    "name": "ImageInstanceSegmentation",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/1022"
        },
        "flags": 0,
        "description": "Primary metric to optimize for this task."
      },
      "modelSettings": {
        "type": {
          "$ref": "#/1023"
        },
        "flags": 0,
        "description": "Settings used for training the model."
      },
      "searchSpace": {
        "type": {
          "$ref": "#/1045"
        },
        "flags": 0,
        "description": "Search space for sampling different combinations of models and their hyperparameters."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/996"
        },
        "flags": 1,
        "description": "[Required] Limit settings for the AutoML job."
      },
      "sweepSettings": {
        "type": {
          "$ref": "#/997"
        },
        "flags": 0,
        "description": "Model sweeping and hyperparameter sweeping related settings."
      },
      "validationData": {
        "type": {
          "$ref": "#/775"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "validationDataSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "taskType": {
        "type": {
          "$ref": "#/1046"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "MeanAveragePrecision"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1021"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ImageModelSettingsObjectDetection",
    "properties": {
      "boxDetectionsPerImage": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Maximum number of detections per image, for all classes. Must be a positive integer.\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "boxScoreThreshold": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "During inference, only return proposals with a classification score greater than\r\nBoxScoreThreshold. Must be a float in the range[0, 1]."
      },
      "imageSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Image size for train and validation. Must be a positive integer.\r\nNote: The training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is only supported for the 'yolov5' algorithm."
      },
      "maxSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Maximum size of the image to be rescaled before feeding it to the backbone.\r\nMust be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "minSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Minimum size of the image to be rescaled before feeding it to the backbone.\r\nMust be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "modelSize": {
        "type": {
          "$ref": "#/1029"
        },
        "flags": 0,
        "description": "Model size. Must be 'small', 'medium', 'large', or 'xlarge'.\r\nNote: training run may get into CUDA OOM if the model size is too big.\r\nNote: This settings is only supported for the 'yolov5' algorithm."
      },
      "multiScale": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable multi-scale image by varying image size by +/- 50%.\r\nNote: training run may get into CUDA OOM if no sufficient GPU memory.\r\nNote: This settings is only supported for the 'yolov5' algorithm."
      },
      "nmsIouThreshold": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "IOU threshold used during inference in NMS post processing. Must be a float in the range [0, 1]."
      },
      "tileGridSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The grid size to use for tiling each image. Note: TileGridSize must not be\r\nNone to enable small object detection logic. A string containing two integers in mxn format.\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "tileOverlapRatio": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Overlap ratio between adjacent tiles in each dimension. Must be float in the range [0, 1).\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "tilePredictionsNmsThreshold": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The IOU threshold to use to perform NMS while merging predictions from tiles and image.\r\nUsed in validation/ inference. Must be float in the range [0, 1].\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "validationIouThreshold": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "IOU threshold to use when computing validation metric. Must be float in the range [0, 1]."
      },
      "validationMetricType": {
        "type": {
          "$ref": "#/1034"
        },
        "flags": 0,
        "description": "Metric computation method to use for validation metrics."
      },
      "amsGradient": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable AMSGrad when optimizer is 'adam' or 'adamw'."
      },
      "advancedSettings": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Settings for advanced scenarios."
      },
      "augmentations": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Settings for using Augmentations."
      },
      "beta1": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]."
      },
      "beta2": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]."
      },
      "checkpointFrequency": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Frequency to store model checkpoints. Must be a positive integer."
      },
      "checkpointRunId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The id of a previous run that has a pretrained checkpoint for incremental training."
      },
      "checkpointModel": {
        "type": {
          "$ref": "#/969"
        },
        "flags": 0,
        "description": "The pretrained checkpoint model for incremental training."
      },
      "distributed": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Whether to use distributed training."
      },
      "earlyStopping": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable early stopping logic during training."
      },
      "earlyStoppingDelay": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Minimum number of epochs or validation evaluations to wait before primary metric improvement\r\nis tracked for early stopping. Must be a positive integer."
      },
      "earlyStoppingPatience": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Minimum number of epochs or validation evaluations with no primary metric improvement before\r\nthe run is stopped. Must be a positive integer."
      },
      "evaluationFrequency": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Frequency to evaluate validation dataset to get metric scores. Must be a positive integer."
      },
      "enableOnnxNormalization": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable normalization when exporting ONNX model."
      },
      "gradientAccumulationStep": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Gradient accumulation means running a configured number of \"GradAccumulationStep\" steps without\r\nupdating the model weights while accumulating the gradients of those steps, and then using\r\nthe accumulated gradients to compute the weight updates. Must be a positive integer."
      },
      "layersToFreeze": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Number of layers to freeze for the model. Must be a positive integer.\r\nFor instance, passing 2 as value for 'seresnext' means\r\nfreezing layer0 and layer1. For a full list of models supported and details on layer freeze, please\r\nsee: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
      },
      "learningRate": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Initial learning rate. Must be a float in the range [0, 1]."
      },
      "learningRateScheduler": {
        "type": {
          "$ref": "#/1038"
        },
        "flags": 0,
        "description": "Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'."
      },
      "modelName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the model to use for training.\r\nFor more information on the available models please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
      },
      "momentum": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1]."
      },
      "nesterov": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable nesterov when optimizer is 'sgd'."
      },
      "numberOfEpochs": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Number of training epochs. Must be a positive integer."
      },
      "numberOfWorkers": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Number of data loader workers. Must be a non-negative integer."
      },
      "optimizer": {
        "type": {
          "$ref": "#/1043"
        },
        "flags": 0,
        "description": "Type of optimizer."
      },
      "randomSeed": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Random seed to be used when using deterministic training."
      },
      "stepLRGamma": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1]."
      },
      "stepLRStepSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Value of step size when learning rate scheduler is 'step'. Must be a positive integer."
      },
      "trainingBatchSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Training batch size. Must be a positive integer."
      },
      "validationBatchSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Validation batch size. Must be a positive integer."
      },
      "warmupCosineLRCycles": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1]."
      },
      "warmupCosineLRWarmupEpochs": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer."
      },
      "weightDecay": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1]."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Small"
  },
  {
    "$type": "StringLiteralType",
    "value": "Medium"
  },
  {
    "$type": "StringLiteralType",
    "value": "Large"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExtraLarge"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1024"
      },
      {
        "$ref": "#/1025"
      },
      {
        "$ref": "#/1026"
      },
      {
        "$ref": "#/1027"
      },
      {
        "$ref": "#/1028"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Coco"
  },
  {
    "$type": "StringLiteralType",
    "value": "Voc"
  },
  {
    "$type": "StringLiteralType",
    "value": "CocoVoc"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1030"
      },
      {
        "$ref": "#/1031"
      },
      {
        "$ref": "#/1032"
      },
      {
        "$ref": "#/1033"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "WarmupCosine"
  },
  {
    "$type": "StringLiteralType",
    "value": "Step"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1035"
      },
      {
        "$ref": "#/1036"
      },
      {
        "$ref": "#/1037"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sgd"
  },
  {
    "$type": "StringLiteralType",
    "value": "Adam"
  },
  {
    "$type": "StringLiteralType",
    "value": "Adamw"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1039"
      },
      {
        "$ref": "#/1040"
      },
      {
        "$ref": "#/1041"
      },
      {
        "$ref": "#/1042"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ImageModelDistributionSettingsObjectDetection",
    "properties": {
      "boxDetectionsPerImage": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Maximum number of detections per image, for all classes. Must be a positive integer.\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "boxScoreThreshold": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "During inference, only return proposals with a classification score greater than\r\nBoxScoreThreshold. Must be a float in the range[0, 1]."
      },
      "imageSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Image size for train and validation. Must be a positive integer.\r\nNote: The training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is only supported for the 'yolov5' algorithm."
      },
      "maxSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Maximum size of the image to be rescaled before feeding it to the backbone.\r\nMust be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "minSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Minimum size of the image to be rescaled before feeding it to the backbone.\r\nMust be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "modelSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Model size. Must be 'small', 'medium', 'large', or 'xlarge'.\r\nNote: training run may get into CUDA OOM if the model size is too big.\r\nNote: This settings is only supported for the 'yolov5' algorithm."
      },
      "multiScale": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Enable multi-scale image by varying image size by +/- 50%.\r\nNote: training run may get into CUDA OOM if no sufficient GPU memory.\r\nNote: This settings is only supported for the 'yolov5' algorithm."
      },
      "nmsIouThreshold": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "IOU threshold used during inference in NMS post processing. Must be float in the range [0, 1]."
      },
      "tileGridSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The grid size to use for tiling each image. Note: TileGridSize must not be\r\nNone to enable small object detection logic. A string containing two integers in mxn format.\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "tileOverlapRatio": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Overlap ratio between adjacent tiles in each dimension. Must be float in the range [0, 1).\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "tilePredictionsNmsThreshold": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The IOU threshold to use to perform NMS while merging predictions from tiles and image.\r\nUsed in validation/ inference. Must be float in the range [0, 1].\r\nNote: This settings is not supported for the 'yolov5' algorithm.\r\nNMS: Non-maximum suppression"
      },
      "validationIouThreshold": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "IOU threshold to use when computing validation metric. Must be float in the range [0, 1]."
      },
      "validationMetricType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metric computation method to use for validation metrics. Must be 'none', 'coco', 'voc', or 'coco_voc'."
      },
      "amsGradient": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Enable AMSGrad when optimizer is 'adam' or 'adamw'."
      },
      "augmentations": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Settings for using Augmentations."
      },
      "beta1": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]."
      },
      "beta2": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]."
      },
      "distributed": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Whether to use distributer training."
      },
      "earlyStopping": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Enable early stopping logic during training."
      },
      "earlyStoppingDelay": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Minimum number of epochs or validation evaluations to wait before primary metric improvement\r\nis tracked for early stopping. Must be a positive integer."
      },
      "earlyStoppingPatience": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Minimum number of epochs or validation evaluations with no primary metric improvement before\r\nthe run is stopped. Must be a positive integer."
      },
      "evaluationFrequency": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Frequency to evaluate validation dataset to get metric scores. Must be a positive integer."
      },
      "enableOnnxNormalization": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Enable normalization when exporting ONNX model."
      },
      "gradientAccumulationStep": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Gradient accumulation means running a configured number of \"GradAccumulationStep\" steps without\r\nupdating the model weights while accumulating the gradients of those steps, and then using\r\nthe accumulated gradients to compute the weight updates. Must be a positive integer."
      },
      "layersToFreeze": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Number of layers to freeze for the model. Must be a positive integer.\r\nFor instance, passing 2 as value for 'seresnext' means\r\nfreezing layer0 and layer1. For a full list of models supported and details on layer freeze, please\r\nsee: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
      },
      "learningRate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Initial learning rate. Must be a float in the range [0, 1]."
      },
      "learningRateScheduler": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'."
      },
      "modelName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the model to use for training.\r\nFor more information on the available models please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
      },
      "momentum": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1]."
      },
      "nesterov": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Enable nesterov when optimizer is 'sgd'."
      },
      "numberOfEpochs": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Number of training epochs. Must be a positive integer."
      },
      "numberOfWorkers": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Number of data loader workers. Must be a non-negative integer."
      },
      "optimizer": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Type of optimizer. Must be either 'sgd', 'adam', or 'adamw'."
      },
      "randomSeed": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Random seed to be used when using deterministic training."
      },
      "stepLRGamma": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1]."
      },
      "stepLRStepSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of step size when learning rate scheduler is 'step'. Must be a positive integer."
      },
      "trainingBatchSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Training batch size. Must be a positive integer."
      },
      "validationBatchSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Validation batch size. Must be a positive integer."
      },
      "warmupCosineLRCycles": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1]."
      },
      "warmupCosineLRWarmupEpochs": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer."
      },
      "weightDecay": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1]."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1044"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ImageInstanceSegmentation"
  },
  {
    "$type": "ObjectType",
    "name": "ImageObjectDetection",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/1049"
        },
        "flags": 0,
        "description": "Primary metric to optimize for this task."
      },
      "modelSettings": {
        "type": {
          "$ref": "#/1023"
        },
        "flags": 0,
        "description": "Settings used for training the model."
      },
      "searchSpace": {
        "type": {
          "$ref": "#/1050"
        },
        "flags": 0,
        "description": "Search space for sampling different combinations of models and their hyperparameters."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/996"
        },
        "flags": 1,
        "description": "[Required] Limit settings for the AutoML job."
      },
      "sweepSettings": {
        "type": {
          "$ref": "#/997"
        },
        "flags": 0,
        "description": "Model sweeping and hyperparameter sweeping related settings."
      },
      "validationData": {
        "type": {
          "$ref": "#/775"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "validationDataSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "taskType": {
        "type": {
          "$ref": "#/1051"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "MeanAveragePrecision"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1048"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1044"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ImageObjectDetection"
  },
  {
    "$type": "ObjectType",
    "name": "Regression",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/1057"
        },
        "flags": 0,
        "description": "Primary metric for regression task."
      },
      "trainingSettings": {
        "type": {
          "$ref": "#/1058"
        },
        "flags": 0,
        "description": "Inputs for training phase for an AutoML Job."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/839"
        },
        "flags": 0,
        "description": "Execution constraints for AutoMLJob."
      },
      "nCrossValidations": {
        "type": {
          "$ref": "#/840"
        },
        "flags": 0,
        "description": "Number of cross validation folds to be applied on training dataset\r\nwhen validation dataset is not provided."
      },
      "cvSplitColumnNames": {
        "type": {
          "$ref": "#/1083"
        },
        "flags": 0,
        "description": "Columns to use for CVSplit data."
      },
      "weightColumnName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to be weighted up or down."
      },
      "validationData": {
        "type": {
          "$ref": "#/775"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "testData": {
        "type": {
          "$ref": "#/775"
        },
        "flags": 0,
        "description": "Test data input."
      },
      "validationDataSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "testDataSize": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The fraction of test dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "featurizationSettings": {
        "type": {
          "$ref": "#/846"
        },
        "flags": 0,
        "description": "Featurization inputs needed for AutoML job."
      },
      "taskType": {
        "type": {
          "$ref": "#/1084"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SpearmanCorrelation"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormalizedRootMeanSquaredError"
  },
  {
    "$type": "StringLiteralType",
    "value": "R2Score"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormalizedMeanAbsoluteError"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1053"
      },
      {
        "$ref": "#/1054"
      },
      {
        "$ref": "#/1055"
      },
      {
        "$ref": "#/1056"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "RegressionTrainingSettings",
    "properties": {
      "allowedTrainingAlgorithms": {
        "type": {
          "$ref": "#/1070"
        },
        "flags": 0,
        "description": "Allowed models for regression task."
      },
      "blockedTrainingAlgorithms": {
        "type": {
          "$ref": "#/1082"
        },
        "flags": 0,
        "description": "Blocked models for regression task."
      },
      "enableOnnxCompatibleModels": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Flag for enabling onnx compatible models."
      },
      "stackEnsembleSettings": {
        "type": {
          "$ref": "#/829"
        },
        "flags": 0,
        "description": "Stack ensemble settings for stack ensemble run."
      },
      "enableStackEnsemble": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable stack ensemble run."
      },
      "enableVoteEnsemble": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable voting ensemble run."
      },
      "ensembleModelDownloadTimeout": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.\r\nConfigure this parameter with a higher value than 300 secs, if more time is needed."
      },
      "enableModelExplainability": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Flag to turn on explainability on best model."
      },
      "enableDnnTraining": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enable recommendation of DNN models."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ElasticNet"
  },
  {
    "$type": "StringLiteralType",
    "value": "GradientBoosting"
  },
  {
    "$type": "StringLiteralType",
    "value": "DecisionTree"
  },
  {
    "$type": "StringLiteralType",
    "value": "KNN"
  },
  {
    "$type": "StringLiteralType",
    "value": "LassoLars"
  },
  {
    "$type": "StringLiteralType",
    "value": "SGD"
  },
  {
    "$type": "StringLiteralType",
    "value": "RandomForest"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExtremeRandomTrees"
  },
  {
    "$type": "StringLiteralType",
    "value": "LightGBM"
  },
  {
    "$type": "StringLiteralType",
    "value": "XGBoostRegressor"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1059"
      },
      {
        "$ref": "#/1060"
      },
      {
        "$ref": "#/1061"
      },
      {
        "$ref": "#/1062"
      },
      {
        "$ref": "#/1063"
      },
      {
        "$ref": "#/1064"
      },
      {
        "$ref": "#/1065"
      },
      {
        "$ref": "#/1066"
      },
      {
        "$ref": "#/1067"
      },
      {
        "$ref": "#/1068"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1069"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ElasticNet"
  },
  {
    "$type": "StringLiteralType",
    "value": "GradientBoosting"
  },
  {
    "$type": "StringLiteralType",
    "value": "DecisionTree"
  },
  {
    "$type": "StringLiteralType",
    "value": "KNN"
  },
  {
    "$type": "StringLiteralType",
    "value": "LassoLars"
  },
  {
    "$type": "StringLiteralType",
    "value": "SGD"
  },
  {
    "$type": "StringLiteralType",
    "value": "RandomForest"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExtremeRandomTrees"
  },
  {
    "$type": "StringLiteralType",
    "value": "LightGBM"
  },
  {
    "$type": "StringLiteralType",
    "value": "XGBoostRegressor"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1071"
      },
      {
        "$ref": "#/1072"
      },
      {
        "$ref": "#/1073"
      },
      {
        "$ref": "#/1074"
      },
      {
        "$ref": "#/1075"
      },
      {
        "$ref": "#/1076"
      },
      {
        "$ref": "#/1077"
      },
      {
        "$ref": "#/1078"
      },
      {
        "$ref": "#/1079"
      },
      {
        "$ref": "#/1080"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1081"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Regression"
  },
  {
    "$type": "ObjectType",
    "name": "TextClassification",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/1091"
        },
        "flags": 0,
        "description": "Primary metric for Text-Classification task."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/1092"
        },
        "flags": 0,
        "description": "Execution constraints for AutoMLJob."
      },
      "featurizationSettings": {
        "type": {
          "$ref": "#/1093"
        },
        "flags": 0,
        "description": "Featurization inputs needed for AutoML job."
      },
      "validationData": {
        "type": {
          "$ref": "#/775"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "taskType": {
        "type": {
          "$ref": "#/1094"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AUCWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accuracy"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormMacroRecall"
  },
  {
    "$type": "StringLiteralType",
    "value": "AveragePrecisionScoreWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "PrecisionScoreWeighted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1086"
      },
      {
        "$ref": "#/1087"
      },
      {
        "$ref": "#/1088"
      },
      {
        "$ref": "#/1089"
      },
      {
        "$ref": "#/1090"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NlpVerticalLimitSettings",
    "properties": {
      "timeout": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "AutoML job timeout."
      },
      "maxTrials": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Number of AutoML iterations."
      },
      "maxConcurrentTrials": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Maximum Concurrent AutoML iterations."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NlpVerticalFeaturizationSettings",
    "properties": {
      "datasetLanguage": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Dataset language, useful for the text data."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "TextClassification"
  },
  {
    "$type": "ObjectType",
    "name": "TextClassificationMultilabel",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/1102"
        },
        "flags": 2,
        "description": "Primary metric for Text-Classification-Multilabel task.\r\nCurrently only Accuracy is supported as primary metric, hence user need not set it explicitly."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/1092"
        },
        "flags": 0,
        "description": "Execution constraints for AutoMLJob."
      },
      "featurizationSettings": {
        "type": {
          "$ref": "#/1093"
        },
        "flags": 0,
        "description": "Featurization inputs needed for AutoML job."
      },
      "validationData": {
        "type": {
          "$ref": "#/775"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "taskType": {
        "type": {
          "$ref": "#/1103"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AUCWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accuracy"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormMacroRecall"
  },
  {
    "$type": "StringLiteralType",
    "value": "AveragePrecisionScoreWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "PrecisionScoreWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "IOU"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1096"
      },
      {
        "$ref": "#/1097"
      },
      {
        "$ref": "#/1098"
      },
      {
        "$ref": "#/1099"
      },
      {
        "$ref": "#/1100"
      },
      {
        "$ref": "#/1101"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "TextClassificationMultilabel"
  },
  {
    "$type": "ObjectType",
    "name": "TextNer",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/1110"
        },
        "flags": 2,
        "description": "Primary metric for Text-NER task.\r\nOnly 'Accuracy' is supported for Text-NER, so user need not set this explicitly."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/1092"
        },
        "flags": 0,
        "description": "Execution constraints for AutoMLJob."
      },
      "featurizationSettings": {
        "type": {
          "$ref": "#/1093"
        },
        "flags": 0,
        "description": "Featurization inputs needed for AutoML job."
      },
      "validationData": {
        "type": {
          "$ref": "#/775"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "taskType": {
        "type": {
          "$ref": "#/1111"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AUCWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accuracy"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormMacroRecall"
  },
  {
    "$type": "StringLiteralType",
    "value": "AveragePrecisionScoreWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "PrecisionScoreWeighted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1105"
      },
      {
        "$ref": "#/1106"
      },
      {
        "$ref": "#/1107"
      },
      {
        "$ref": "#/1108"
      },
      {
        "$ref": "#/1109"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "TextNER"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "JobOutput",
    "discriminator": "jobOutputType",
    "baseProperties": {
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Description for the output."
      }
    },
    "elements": {
      "custom_model": {
        "$ref": "#/1113"
      },
      "mlflow_model": {
        "$ref": "#/1119"
      },
      "mltable": {
        "$ref": "#/1125"
      },
      "triton_model": {
        "$ref": "#/1131"
      },
      "uri_file": {
        "$ref": "#/1137"
      },
      "uri_folder": {
        "$ref": "#/1143"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomModelJobOutput",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Output Asset URI."
      },
      "mode": {
        "type": {
          "$ref": "#/1117"
        },
        "flags": 0,
        "description": "Output Asset Delivery Mode."
      },
      "jobOutputType": {
        "type": {
          "$ref": "#/1118"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Upload"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1114"
      },
      {
        "$ref": "#/1115"
      },
      {
        "$ref": "#/1116"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "custom_model"
  },
  {
    "$type": "ObjectType",
    "name": "MLFlowModelJobOutput",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Output Asset URI."
      },
      "mode": {
        "type": {
          "$ref": "#/1123"
        },
        "flags": 0,
        "description": "Output Asset Delivery Mode."
      },
      "jobOutputType": {
        "type": {
          "$ref": "#/1124"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Upload"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1120"
      },
      {
        "$ref": "#/1121"
      },
      {
        "$ref": "#/1122"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "mlflow_model"
  },
  {
    "$type": "ObjectType",
    "name": "MLTableJobOutput",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Output Asset URI."
      },
      "mode": {
        "type": {
          "$ref": "#/1129"
        },
        "flags": 0,
        "description": "Output Asset Delivery Mode."
      },
      "jobOutputType": {
        "type": {
          "$ref": "#/1130"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Upload"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1126"
      },
      {
        "$ref": "#/1127"
      },
      {
        "$ref": "#/1128"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "mltable"
  },
  {
    "$type": "ObjectType",
    "name": "TritonModelJobOutput",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Output Asset URI."
      },
      "mode": {
        "type": {
          "$ref": "#/1135"
        },
        "flags": 0,
        "description": "Output Asset Delivery Mode."
      },
      "jobOutputType": {
        "type": {
          "$ref": "#/1136"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Upload"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1132"
      },
      {
        "$ref": "#/1133"
      },
      {
        "$ref": "#/1134"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "triton_model"
  },
  {
    "$type": "ObjectType",
    "name": "UriFileJobOutput",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Output Asset URI."
      },
      "mode": {
        "type": {
          "$ref": "#/1141"
        },
        "flags": 0,
        "description": "Output Asset Delivery Mode."
      },
      "jobOutputType": {
        "type": {
          "$ref": "#/1142"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Upload"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1138"
      },
      {
        "$ref": "#/1139"
      },
      {
        "$ref": "#/1140"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_file"
  },
  {
    "$type": "ObjectType",
    "name": "UriFolderJobOutput",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Output Asset URI."
      },
      "mode": {
        "type": {
          "$ref": "#/1147"
        },
        "flags": 0,
        "description": "Output Asset Delivery Mode."
      },
      "jobOutputType": {
        "type": {
          "$ref": "#/1148"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Upload"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1144"
      },
      {
        "$ref": "#/1145"
      },
      {
        "$ref": "#/1146"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_folder"
  },
  {
    "$type": "ObjectType",
    "name": "AutoMLJobOutputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1112"
    }
  },
  {
    "$type": "ObjectType",
    "name": "QueueSettings",
    "properties": {
      "jobTier": {
        "type": {
          "$ref": "#/1156"
        },
        "flags": 0,
        "description": "Controls the compute job tier"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Null"
  },
  {
    "$type": "StringLiteralType",
    "value": "Spot"
  },
  {
    "$type": "StringLiteralType",
    "value": "Basic"
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard"
  },
  {
    "$type": "StringLiteralType",
    "value": "Premium"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1151"
      },
      {
        "$ref": "#/1152"
      },
      {
        "$ref": "#/1153"
      },
      {
        "$ref": "#/1154"
      },
      {
        "$ref": "#/1155"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "AutoML"
  },
  {
    "$type": "ObjectType",
    "name": "CommandJob",
    "properties": {
      "resources": {
        "type": {
          "$ref": "#/763"
        },
        "flags": 0,
        "description": "Compute Resource configuration for the job."
      },
      "codeId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ARM resource ID of the code asset."
      },
      "command": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] The command to execute on startup of the job. eg. \"python train.py\""
      },
      "environmentId": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] The ARM resource ID of the Environment specification for the job."
      },
      "inputs": {
        "type": {
          "$ref": "#/1216"
        },
        "flags": 0,
        "description": "Mapping of input data bindings used in the job."
      },
      "outputs": {
        "type": {
          "$ref": "#/1217"
        },
        "flags": 0,
        "description": "Mapping of output data bindings used in the job."
      },
      "distribution": {
        "type": {
          "$ref": "#/1218"
        },
        "flags": 0,
        "description": "Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null."
      },
      "limits": {
        "type": {
          "$ref": "#/1225"
        },
        "flags": 0,
        "description": "Command Job limit."
      },
      "environmentVariables": {
        "type": {
          "$ref": "#/1229"
        },
        "flags": 0,
        "description": "Environment variables included in the job."
      },
      "parameters": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 2,
        "description": "Input parameters."
      },
      "queueSettings": {
        "type": {
          "$ref": "#/1150"
        },
        "flags": 0,
        "description": "Queue settings for the job"
      },
      "jobType": {
        "type": {
          "$ref": "#/1230"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "JobInput",
    "discriminator": "jobInputType",
    "baseProperties": {
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Description for the input."
      }
    },
    "elements": {
      "custom_model": {
        "$ref": "#/1160"
      },
      "literal": {
        "$ref": "#/1169"
      },
      "mlflow_model": {
        "$ref": "#/1171"
      },
      "mltable": {
        "$ref": "#/1180"
      },
      "triton_model": {
        "$ref": "#/1189"
      },
      "uri_file": {
        "$ref": "#/1198"
      },
      "uri_folder": {
        "$ref": "#/1207"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomModelJobInput",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      },
      "mode": {
        "type": {
          "$ref": "#/1167"
        },
        "flags": 0,
        "description": "Input Asset Delivery Mode."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/1168"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnlyMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalDownload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1161"
      },
      {
        "$ref": "#/1162"
      },
      {
        "$ref": "#/1163"
      },
      {
        "$ref": "#/1164"
      },
      {
        "$ref": "#/1165"
      },
      {
        "$ref": "#/1166"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "custom_model"
  },
  {
    "$type": "ObjectType",
    "name": "LiteralJobInput",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Literal value for the input."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/1170"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "literal"
  },
  {
    "$type": "ObjectType",
    "name": "MLFlowModelJobInput",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      },
      "mode": {
        "type": {
          "$ref": "#/1178"
        },
        "flags": 0,
        "description": "Input Asset Delivery Mode."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/1179"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnlyMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalDownload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1172"
      },
      {
        "$ref": "#/1173"
      },
      {
        "$ref": "#/1174"
      },
      {
        "$ref": "#/1175"
      },
      {
        "$ref": "#/1176"
      },
      {
        "$ref": "#/1177"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "mlflow_model"
  },
  {
    "$type": "ObjectType",
    "name": "MLTableJobInput",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      },
      "mode": {
        "type": {
          "$ref": "#/1187"
        },
        "flags": 0,
        "description": "Input Asset Delivery Mode."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/1188"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnlyMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalDownload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1181"
      },
      {
        "$ref": "#/1182"
      },
      {
        "$ref": "#/1183"
      },
      {
        "$ref": "#/1184"
      },
      {
        "$ref": "#/1185"
      },
      {
        "$ref": "#/1186"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "mltable"
  },
  {
    "$type": "ObjectType",
    "name": "TritonModelJobInput",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      },
      "mode": {
        "type": {
          "$ref": "#/1196"
        },
        "flags": 0,
        "description": "Input Asset Delivery Mode."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/1197"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnlyMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalDownload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1190"
      },
      {
        "$ref": "#/1191"
      },
      {
        "$ref": "#/1192"
      },
      {
        "$ref": "#/1193"
      },
      {
        "$ref": "#/1194"
      },
      {
        "$ref": "#/1195"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "triton_model"
  },
  {
    "$type": "ObjectType",
    "name": "UriFileJobInput",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      },
      "mode": {
        "type": {
          "$ref": "#/1205"
        },
        "flags": 0,
        "description": "Input Asset Delivery Mode."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/1206"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnlyMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalDownload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1199"
      },
      {
        "$ref": "#/1200"
      },
      {
        "$ref": "#/1201"
      },
      {
        "$ref": "#/1202"
      },
      {
        "$ref": "#/1203"
      },
      {
        "$ref": "#/1204"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_file"
  },
  {
    "$type": "ObjectType",
    "name": "UriFolderJobInput",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      },
      "mode": {
        "type": {
          "$ref": "#/1214"
        },
        "flags": 0,
        "description": "Input Asset Delivery Mode."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/1215"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnlyMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalDownload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1208"
      },
      {
        "$ref": "#/1209"
      },
      {
        "$ref": "#/1210"
      },
      {
        "$ref": "#/1211"
      },
      {
        "$ref": "#/1212"
      },
      {
        "$ref": "#/1213"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_folder"
  },
  {
    "$type": "ObjectType",
    "name": "CommandJobInputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1159"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CommandJobOutputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1112"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DistributionConfiguration",
    "discriminator": "distributionType",
    "baseProperties": {},
    "elements": {
      "Mpi": {
        "$ref": "#/1219"
      },
      "PyTorch": {
        "$ref": "#/1221"
      },
      "TensorFlow": {
        "$ref": "#/1223"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Mpi",
    "properties": {
      "processCountPerInstance": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Number of processes per MPI node."
      },
      "distributionType": {
        "type": {
          "$ref": "#/1220"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of distribution framework."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Mpi"
  },
  {
    "$type": "ObjectType",
    "name": "PyTorch",
    "properties": {
      "processCountPerInstance": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Number of processes per node."
      },
      "distributionType": {
        "type": {
          "$ref": "#/1222"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of distribution framework."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "PyTorch"
  },
  {
    "$type": "ObjectType",
    "name": "TensorFlow",
    "properties": {
      "workerCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Number of workers. If not specified, will default to the instance count."
      },
      "parameterServerCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Number of parameter server tasks."
      },
      "distributionType": {
        "type": {
          "$ref": "#/1224"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of distribution framework."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "TensorFlow"
  },
  {
    "$type": "ObjectType",
    "name": "CommandJobLimits",
    "properties": {
      "jobLimitsType": {
        "type": {
          "$ref": "#/1228"
        },
        "flags": 1,
        "description": "[Required] JobLimit type."
      },
      "timeout": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Command"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sweep"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1226"
      },
      {
        "$ref": "#/1227"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CommandJobEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Command"
  },
  {
    "$type": "ObjectType",
    "name": "PipelineJob",
    "properties": {
      "settings": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "Pipeline settings, for things like ContinueRunOnStepFailure etc."
      },
      "jobs": {
        "type": {
          "$ref": "#/1232"
        },
        "flags": 0,
        "description": "Jobs construct the Pipeline Job."
      },
      "inputs": {
        "type": {
          "$ref": "#/1233"
        },
        "flags": 0,
        "description": "Inputs for the pipeline job."
      },
      "outputs": {
        "type": {
          "$ref": "#/1234"
        },
        "flags": 0,
        "description": "Outputs for the pipeline job"
      },
      "sourceJobId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ARM resource ID of source job."
      },
      "jobType": {
        "type": {
          "$ref": "#/1235"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PipelineJobJobs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PipelineJobInputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1159"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PipelineJobOutputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1112"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Pipeline"
  },
  {
    "$type": "ObjectType",
    "name": "SparkJob",
    "properties": {
      "resources": {
        "type": {
          "$ref": "#/1237"
        },
        "flags": 0,
        "description": "Compute Resource configuration for the job."
      },
      "args": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Arguments for the job."
      },
      "codeId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "[Required] arm-id of the code asset."
      },
      "entry": {
        "type": {
          "$ref": "#/1238"
        },
        "flags": 1,
        "description": "[Required] The entry to execute on startup of the job."
      },
      "environmentId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The ARM resource ID of the Environment specification for the job."
      },
      "inputs": {
        "type": {
          "$ref": "#/1243"
        },
        "flags": 0,
        "description": "Mapping of input data bindings used in the job."
      },
      "outputs": {
        "type": {
          "$ref": "#/1244"
        },
        "flags": 0,
        "description": "Mapping of output data bindings used in the job."
      },
      "pyFiles": {
        "type": {
          "$ref": "#/1245"
        },
        "flags": 0,
        "description": "Python files used in the job."
      },
      "jars": {
        "type": {
          "$ref": "#/1246"
        },
        "flags": 0,
        "description": "Jar files used in the job."
      },
      "files": {
        "type": {
          "$ref": "#/1247"
        },
        "flags": 0,
        "description": "Files used in the job."
      },
      "archives": {
        "type": {
          "$ref": "#/1248"
        },
        "flags": 0,
        "description": "Archive files used in the job."
      },
      "conf": {
        "type": {
          "$ref": "#/1249"
        },
        "flags": 0,
        "description": "Spark configured properties."
      },
      "queueSettings": {
        "type": {
          "$ref": "#/1150"
        },
        "flags": 0,
        "description": "Queue settings for the job"
      },
      "environmentVariables": {
        "type": {
          "$ref": "#/1250"
        },
        "flags": 0,
        "description": "Environment variables included in the job."
      },
      "jobType": {
        "type": {
          "$ref": "#/1251"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SparkResourceConfiguration",
    "properties": {
      "instanceType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Optional type of VM used as supported by the compute target."
      },
      "runtimeVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Version of spark runtime used for the job."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "SparkJobEntry",
    "discriminator": "sparkJobEntryType",
    "baseProperties": {},
    "elements": {
      "SparkJobPythonEntry": {
        "$ref": "#/1239"
      },
      "SparkJobScalaEntry": {
        "$ref": "#/1241"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SparkJobPythonEntry",
    "properties": {
      "file": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Relative python file path for job entry point."
      },
      "sparkJobEntryType": {
        "type": {
          "$ref": "#/1240"
        },
        "flags": 1,
        "description": "[Required] Type of the job's entry point."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SparkJobPythonEntry"
  },
  {
    "$type": "ObjectType",
    "name": "SparkJobScalaEntry",
    "properties": {
      "className": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Scala class name used as entry point."
      },
      "sparkJobEntryType": {
        "type": {
          "$ref": "#/1242"
        },
        "flags": 1,
        "description": "[Required] Type of the job's entry point."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SparkJobScalaEntry"
  },
  {
    "$type": "ObjectType",
    "name": "SparkJobInputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1159"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SparkJobOutputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1112"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SparkJobConf",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SparkJobEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Spark"
  },
  {
    "$type": "ObjectType",
    "name": "SweepJob",
    "properties": {
      "searchSpace": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 1,
        "description": "[Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter"
      },
      "samplingAlgorithm": {
        "type": {
          "$ref": "#/1253"
        },
        "flags": 1,
        "description": "[Required] The hyperparameter sampling algorithm"
      },
      "limits": {
        "type": {
          "$ref": "#/1263"
        },
        "flags": 0,
        "description": "Sweep Job limit."
      },
      "earlyTermination": {
        "type": {
          "$ref": "#/1002"
        },
        "flags": 0,
        "description": "Early termination policies enable canceling poor-performing runs before they complete"
      },
      "objective": {
        "type": {
          "$ref": "#/1267"
        },
        "flags": 1,
        "description": "[Required] Optimization objective."
      },
      "trial": {
        "type": {
          "$ref": "#/1271"
        },
        "flags": 1,
        "description": "[Required] Trial component definition."
      },
      "inputs": {
        "type": {
          "$ref": "#/1273"
        },
        "flags": 0,
        "description": "Mapping of input data bindings used in the job."
      },
      "outputs": {
        "type": {
          "$ref": "#/1274"
        },
        "flags": 0,
        "description": "Mapping of output data bindings used in the job."
      },
      "queueSettings": {
        "type": {
          "$ref": "#/1150"
        },
        "flags": 0,
        "description": "Queue settings for the job"
      },
      "jobType": {
        "type": {
          "$ref": "#/1275"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "SamplingAlgorithm",
    "discriminator": "samplingAlgorithmType",
    "baseProperties": {},
    "elements": {
      "Bayesian": {
        "$ref": "#/1254"
      },
      "Grid": {
        "$ref": "#/1256"
      },
      "Random": {
        "$ref": "#/1258"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BayesianSamplingAlgorithm",
    "properties": {
      "samplingAlgorithmType": {
        "type": {
          "$ref": "#/1255"
        },
        "flags": 1,
        "description": "[Required] The algorithm used for generating hyperparameter values, along with configuration properties"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Bayesian"
  },
  {
    "$type": "ObjectType",
    "name": "GridSamplingAlgorithm",
    "properties": {
      "samplingAlgorithmType": {
        "type": {
          "$ref": "#/1257"
        },
        "flags": 1,
        "description": "[Required] The algorithm used for generating hyperparameter values, along with configuration properties"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Grid"
  },
  {
    "$type": "ObjectType",
    "name": "RandomSamplingAlgorithm",
    "properties": {
      "seed": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "An optional integer to use as the seed for random number generation"
      },
      "rule": {
        "type": {
          "$ref": "#/1261"
        },
        "flags": 0,
        "description": "The specific type of random algorithm"
      },
      "samplingAlgorithmType": {
        "type": {
          "$ref": "#/1262"
        },
        "flags": 1,
        "description": "[Required] The algorithm used for generating hyperparameter values, along with configuration properties"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Random"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sobol"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1259"
      },
      {
        "$ref": "#/1260"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Random"
  },
  {
    "$type": "ObjectType",
    "name": "SweepJobLimits",
    "properties": {
      "maxTotalTrials": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Sweep Job max total trials."
      },
      "maxConcurrentTrials": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Sweep Job max concurrent trials."
      },
      "trialTimeout": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Sweep Job Trial timeout value."
      },
      "jobLimitsType": {
        "type": {
          "$ref": "#/1266"
        },
        "flags": 1,
        "description": "[Required] JobLimit type."
      },
      "timeout": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Command"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sweep"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1264"
      },
      {
        "$ref": "#/1265"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Objective",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Name of the metric to optimize."
      },
      "goal": {
        "type": {
          "$ref": "#/1270"
        },
        "flags": 1,
        "description": "[Required] Defines supported metric goals for hyperparameter tuning"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Minimize"
  },
  {
    "$type": "StringLiteralType",
    "value": "Maximize"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1268"
      },
      {
        "$ref": "#/1269"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrialComponent",
    "properties": {
      "codeId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ARM resource ID of the code asset."
      },
      "command": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] The command to execute on startup of the job. eg. \"python train.py\""
      },
      "environmentId": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] The ARM resource ID of the Environment specification for the job."
      },
      "environmentVariables": {
        "type": {
          "$ref": "#/1272"
        },
        "flags": 0,
        "description": "Environment variables included in the job."
      },
      "distribution": {
        "type": {
          "$ref": "#/1218"
        },
        "flags": 0,
        "description": "Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null."
      },
      "resources": {
        "type": {
          "$ref": "#/763"
        },
        "flags": 0,
        "description": "Compute Resource configuration for the job."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrialComponentEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SweepJobInputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1159"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SweepJobOutputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1112"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Sweep"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/jobs@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/730"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/marketplaceSubscriptions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/marketplaceSubscriptions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1277"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1278"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/1280"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MarketplaceSubscriptionProperties",
    "properties": {
      "modelId": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Target Marketplace Model ID to create a Marketplace Subscription for."
      },
      "marketplacePlan": {
        "type": {
          "$ref": "#/1281"
        },
        "flags": 2,
        "description": "Marketplace Plan associated with the Marketplace Subscription."
      },
      "marketplaceSubscriptionStatus": {
        "type": {
          "$ref": "#/1285"
        },
        "flags": 2,
        "description": "Current status of the Marketplace Subscription."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/1292"
        },
        "flags": 2,
        "description": "Provisioning State of the Marketplace Subscription."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MarketplacePlan",
    "properties": {
      "publisherId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The identifying name of the Publisher of the Marketplace Plan."
      },
      "offerId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The identifying name of the Offer of the Marketplace Plan."
      },
      "planId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The identifying name of the Plan of the Marketplace Plan."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Subscribed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Suspended"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unsubscribed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1282"
      },
      {
        "$ref": "#/1283"
      },
      {
        "$ref": "#/1284"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1286"
      },
      {
        "$ref": "#/1287"
      },
      {
        "$ref": "#/1288"
      },
      {
        "$ref": "#/1289"
      },
      {
        "$ref": "#/1290"
      },
      {
        "$ref": "#/1291"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/marketplaceSubscriptions@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/1279"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/models"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/models",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1294"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1295"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/418"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/models@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/1296"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/models/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/models/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1298"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1299"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/432"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/models/versions@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/1300"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1302"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1303"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/1305"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "identity": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "sku": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/1323"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "OnlineEndpointProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/1312"
        },
        "flags": 2,
        "description": "Provisioning state for the endpoint."
      },
      "compute": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ARM resource ID of the compute if it exists.\r\noptional"
      },
      "publicNetworkAccess": {
        "type": {
          "$ref": "#/1315"
        },
        "flags": 0,
        "description": "Set to \"Enabled\" for endpoints that should allow public access when Private Link is enabled."
      },
      "traffic": {
        "type": {
          "$ref": "#/1316"
        },
        "flags": 0,
        "description": "Percentage of traffic from endpoint to divert to each deployment. Traffic values need to sum to 100."
      },
      "mirrorTraffic": {
        "type": {
          "$ref": "#/1317"
        },
        "flags": 0,
        "description": "Percentage of traffic to be mirrored to each deployment without using returned scoring. Traffic values need to sum to utmost 50."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Description of the inference endpoint."
      },
      "properties": {
        "type": {
          "$ref": "#/1318"
        },
        "flags": 0,
        "description": "Property dictionary. Properties can be added, but not removed or altered."
      },
      "scoringUri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Endpoint URI."
      },
      "swaggerUri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Endpoint Swagger URI."
      },
      "authMode": {
        "type": {
          "$ref": "#/1322"
        },
        "flags": 1,
        "description": "[Required] Use 'Key' for key based authentication and 'AMLToken' for Azure Machine Learning token-based authentication. 'Key' doesn't expire but 'AMLToken' does."
      },
      "keys": {
        "type": {
          "$ref": "#/463"
        },
        "flags": 4,
        "description": "EndpointAuthKeys to set initially on an Endpoint.\r\nThis property will always be returned as null. AuthKey values must be retrieved using the ListKeys API."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1306"
      },
      {
        "$ref": "#/1307"
      },
      {
        "$ref": "#/1308"
      },
      {
        "$ref": "#/1309"
      },
      {
        "$ref": "#/1310"
      },
      {
        "$ref": "#/1311"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1313"
      },
      {
        "$ref": "#/1314"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "OnlineEndpointTraffic",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/20"
    }
  },
  {
    "$type": "ObjectType",
    "name": "OnlineEndpointMirrorTraffic",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/20"
    }
  },
  {
    "$type": "ObjectType",
    "name": "EndpointPropertiesBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AMLToken"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "StringLiteralType",
    "value": "AADToken"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1319"
      },
      {
        "$ref": "#/1320"
      },
      {
        "$ref": "#/1321"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/1304"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints/deployments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints/deployments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1325"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1326"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/1328"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "identity": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "sku": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/1369"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "OnlineDeploymentProperties",
    "discriminator": "endpointComputeType",
    "baseProperties": {
      "scaleSettings": {
        "type": {
          "$ref": "#/1329"
        },
        "flags": 0,
        "description": "Scale settings for the deployment.\r\nIf it is null or not provided,\r\nit defaults to TargetUtilizationScaleSettings for KubernetesOnlineDeployment\r\nand to DefaultScaleSettings for ManagedOnlineDeployment."
      },
      "requestSettings": {
        "type": {
          "$ref": "#/1334"
        },
        "flags": 0,
        "description": "Request settings for the deployment."
      },
      "modelMountPath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The path to mount the model in custom container."
      },
      "appInsightsEnabled": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "If true, enables Application Insights logging."
      },
      "livenessProbe": {
        "type": {
          "$ref": "#/1335"
        },
        "flags": 0,
        "description": "Liveness probe monitors the health of the container regularly."
      },
      "readinessProbe": {
        "type": {
          "$ref": "#/1335"
        },
        "flags": 0,
        "description": "Readiness probe validates if the container is ready to serve traffic. The properties and defaults are the same as liveness probe."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/1343"
        },
        "flags": 2,
        "description": "Provisioning state for the endpoint deployment."
      },
      "instanceType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Compute instance type."
      },
      "model": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The URI path to the model."
      },
      "egressPublicNetworkAccess": {
        "type": {
          "$ref": "#/1346"
        },
        "flags": 0,
        "description": "If Enabled, allow egress public network access. If Disabled, this will create secure egress. Default: Enabled."
      },
      "dataCollector": {
        "type": {
          "$ref": "#/1347"
        },
        "flags": 0,
        "description": "The mdc configuration, we disable mdc when it's null."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Description of the endpoint deployment."
      },
      "properties": {
        "type": {
          "$ref": "#/1361"
        },
        "flags": 0,
        "description": "Property dictionary. Properties can be added, but not removed or altered."
      },
      "codeConfiguration": {
        "type": {
          "$ref": "#/506"
        },
        "flags": 0,
        "description": "Code configuration for the endpoint deployment."
      },
      "environmentId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ARM resource ID or AssetId of the environment specification for the endpoint deployment."
      },
      "environmentVariables": {
        "type": {
          "$ref": "#/1362"
        },
        "flags": 0,
        "description": "Environment variables configuration for the deployment."
      }
    },
    "elements": {
      "Kubernetes": {
        "$ref": "#/1363"
      },
      "Managed": {
        "$ref": "#/1367"
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "OnlineScaleSettings",
    "discriminator": "scaleType",
    "baseProperties": {},
    "elements": {
      "Default": {
        "$ref": "#/1330"
      },
      "TargetUtilization": {
        "$ref": "#/1332"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefaultScaleSettings",
    "properties": {
      "scaleType": {
        "type": {
          "$ref": "#/1331"
        },
        "flags": 1,
        "description": "[Required] Type of deployment scaling algorithm"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "ObjectType",
    "name": "TargetUtilizationScaleSettings",
    "properties": {
      "pollingInterval": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds."
      },
      "targetUtilizationPercentage": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Target CPU usage for the autoscaler."
      },
      "minInstances": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The minimum number of instances to always be present."
      },
      "maxInstances": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances."
      },
      "scaleType": {
        "type": {
          "$ref": "#/1333"
        },
        "flags": 1,
        "description": "[Required] Type of deployment scaling algorithm"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "TargetUtilization"
  },
  {
    "$type": "ObjectType",
    "name": "OnlineRequestSettings",
    "properties": {
      "maxQueueWait": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "(Deprecated for Managed Online Endpoints) The maximum amount of time a request will stay in the queue in ISO 8601 format.\r\nDefaults to 500ms.\r\n(Now increase `request_timeout_ms` to account for any networking/queue delays)"
      },
      "requestTimeout": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The scoring timeout in ISO 8601 format.\r\nDefaults to 5000ms."
      },
      "maxConcurrentRequestsPerInstance": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The number of maximum concurrent requests per node allowed per deployment. Defaults to 1."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProbeSettings",
    "properties": {
      "failureThreshold": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The number of failures to allow before returning an unhealthy status."
      },
      "successThreshold": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The number of successful probes before returning a healthy status."
      },
      "timeout": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The probe timeout in ISO 8601 format."
      },
      "period": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The length of time between probes in ISO 8601 format."
      },
      "initialDelay": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The delay before the first probe in ISO 8601 format."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Scaling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1336"
      },
      {
        "$ref": "#/1337"
      },
      {
        "$ref": "#/1338"
      },
      {
        "$ref": "#/1339"
      },
      {
        "$ref": "#/1340"
      },
      {
        "$ref": "#/1341"
      },
      {
        "$ref": "#/1342"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1344"
      },
      {
        "$ref": "#/1345"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataCollector",
    "properties": {
      "collections": {
        "type": {
          "$ref": "#/1352"
        },
        "flags": 1,
        "description": "[Required] The collection configuration. Each collection has it own configuration to collect model data and the name of collection can be arbitrary string.\r\nModel data collector can be used for either payload logging or custom logging or both of them. Collection request and response are reserved for payload logging, others are for custom logging."
      },
      "rollingRate": {
        "type": {
          "$ref": "#/1358"
        },
        "flags": 0,
        "description": "When model data is collected to blob storage, we need to roll the data to different path to avoid logging all of them in a single blob file.\r\nIf the rolling rate is hour, all data will be collected in the blob path /yyyy/MM/dd/HH/.\r\nIf it's day, all data will be collected in blob path /yyyy/MM/dd/.\r\nThe other benefit of rolling path is that model monitoring ui is able to select a time range of data very quickly."
      },
      "requestLogging": {
        "type": {
          "$ref": "#/1359"
        },
        "flags": 0,
        "description": "The request logging configuration for mdc, it includes advanced logging settings for all collections. It's optional."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Collection",
    "properties": {
      "samplingRate": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The sampling rate for collection. Sampling rate 1.0 means we collect 100% of data by default."
      },
      "dataCollectionMode": {
        "type": {
          "$ref": "#/1351"
        },
        "flags": 0,
        "description": "Enable or disable data collection."
      },
      "dataId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The data asset arm resource id. Client side will ensure data asset is pointing to the blob storage, and backend will collect data to the blob storage."
      },
      "clientId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The msi client id used to collect logging to blob storage. If it's null,backend will pick a registered endpoint identity to auth."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1349"
      },
      {
        "$ref": "#/1350"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataCollectorCollections",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1348"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Year"
  },
  {
    "$type": "StringLiteralType",
    "value": "Month"
  },
  {
    "$type": "StringLiteralType",
    "value": "Day"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hour"
  },
  {
    "$type": "StringLiteralType",
    "value": "Minute"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1353"
      },
      {
        "$ref": "#/1354"
      },
      {
        "$ref": "#/1355"
      },
      {
        "$ref": "#/1356"
      },
      {
        "$ref": "#/1357"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "RequestLogging",
    "properties": {
      "captureHeaders": {
        "type": {
          "$ref": "#/1360"
        },
        "flags": 0,
        "description": "For payload logging, we only collect payload by default. If customers also want to collect the specified headers, they can set them in captureHeaders so that backend will collect those headers along with payload."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "EndpointDeploymentPropertiesBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "EndpointDeploymentPropertiesBaseEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesOnlineDeployment",
    "properties": {
      "containerResourceRequirements": {
        "type": {
          "$ref": "#/1364"
        },
        "flags": 0,
        "description": "The resource requirements for the container (cpu and memory)."
      },
      "endpointComputeType": {
        "type": {
          "$ref": "#/1366"
        },
        "flags": 1,
        "description": "[Required] The compute type of the endpoint."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerResourceRequirements",
    "properties": {
      "containerResourceRequests": {
        "type": {
          "$ref": "#/1365"
        },
        "flags": 0,
        "description": "Container resource request info:"
      },
      "containerResourceLimits": {
        "type": {
          "$ref": "#/1365"
        },
        "flags": 0,
        "description": "Container resource limit info:"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerResourceSettings",
    "properties": {
      "cpu": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Number of vCPUs request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
      },
      "memory": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Memory size request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
      },
      "gpu": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Number of Nvidia GPU cards request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Kubernetes"
  },
  {
    "$type": "ObjectType",
    "name": "ManagedOnlineDeployment",
    "properties": {
      "endpointComputeType": {
        "type": {
          "$ref": "#/1368"
        },
        "flags": 1,
        "description": "[Required] The compute type of the endpoint."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Managed"
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints/deployments@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/1327"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/schedules"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/schedules",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1371"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1372"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/1374"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScheduleProperties",
    "properties": {
      "displayName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Display name of schedule."
      },
      "isEnabled": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Is the schedule enabled?"
      },
      "trigger": {
        "type": {
          "$ref": "#/1375"
        },
        "flags": 1,
        "description": "[Required] Specifies the trigger details"
      },
      "action": {
        "type": {
          "$ref": "#/1386"
        },
        "flags": 1,
        "description": "[Required] Specifies the action of the schedule"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/1529"
        },
        "flags": 2,
        "description": "Provisioning state for the schedule."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/1530"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/1531"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "TriggerBase",
    "discriminator": "triggerType",
    "baseProperties": {
      "endTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies end time of schedule in ISO 8601, but without a UTC offset. Refer https://en.wikipedia.org/wiki/ISO_8601.\r\nRecommented format would be \"2022-06-01T00:00:01\"\r\nIf not present, the schedule will run indefinitely"
      },
      "startTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies start time of schedule in ISO 8601 format, but without a UTC offset."
      },
      "timeZone": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies time zone in which the schedule runs.\r\nTimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11"
      }
    },
    "elements": {
      "Cron": {
        "$ref": "#/1376"
      },
      "Recurrence": {
        "$ref": "#/1378"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CronTrigger",
    "properties": {
      "expression": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Specifies cron expression of schedule.\r\nThe expression should follow NCronTab format."
      },
      "triggerType": {
        "type": {
          "$ref": "#/1377"
        },
        "flags": 1,
        "description": "[Required]"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Cron"
  },
  {
    "$type": "ObjectType",
    "name": "RecurrenceTrigger",
    "properties": {
      "frequency": {
        "type": {
          "$ref": "#/1384"
        },
        "flags": 1,
        "description": "[Required] The frequency to trigger schedule."
      },
      "interval": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 1,
        "description": "[Required] Specifies schedule interval in conjunction with frequency"
      },
      "schedule": {
        "type": {
          "$ref": "#/649"
        },
        "flags": 0,
        "description": "The recurrence schedule."
      },
      "triggerType": {
        "type": {
          "$ref": "#/1385"
        },
        "flags": 1,
        "description": "[Required]"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Minute"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hour"
  },
  {
    "$type": "StringLiteralType",
    "value": "Day"
  },
  {
    "$type": "StringLiteralType",
    "value": "Week"
  },
  {
    "$type": "StringLiteralType",
    "value": "Month"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1379"
      },
      {
        "$ref": "#/1380"
      },
      {
        "$ref": "#/1381"
      },
      {
        "$ref": "#/1382"
      },
      {
        "$ref": "#/1383"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Recurrence"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ScheduleActionBase",
    "discriminator": "actionType",
    "baseProperties": {},
    "elements": {
      "CreateJob": {
        "$ref": "#/1387"
      },
      "CreateMonitor": {
        "$ref": "#/1389"
      },
      "InvokeBatchEndpoint": {
        "$ref": "#/1521"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobScheduleAction",
    "properties": {
      "jobDefinition": {
        "type": {
          "$ref": "#/731"
        },
        "flags": 1,
        "description": "[Required] Defines Schedule action definition details."
      },
      "actionType": {
        "type": {
          "$ref": "#/1388"
        },
        "flags": 1,
        "description": "[Required] Specifies the action type of the schedule"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CreateJob"
  },
  {
    "$type": "ObjectType",
    "name": "CreateMonitorAction",
    "properties": {
      "monitorDefinition": {
        "type": {
          "$ref": "#/1390"
        },
        "flags": 1,
        "description": "[Required] Defines the monitor."
      },
      "actionType": {
        "type": {
          "$ref": "#/1520"
        },
        "flags": 1,
        "description": "[Required] Specifies the action type of the schedule"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitorDefinition",
    "properties": {
      "monitoringTarget": {
        "type": {
          "$ref": "#/1391"
        },
        "flags": 0,
        "description": "The entities targeted by the monitor."
      },
      "signals": {
        "type": {
          "$ref": "#/1507"
        },
        "flags": 1,
        "description": "[Required] The signals to monitor."
      },
      "computeConfiguration": {
        "type": {
          "$ref": "#/1508"
        },
        "flags": 1,
        "description": "[Required] The ARM resource ID of the compute resource to run the monitoring job on."
      },
      "alertNotificationSettings": {
        "type": {
          "$ref": "#/1517"
        },
        "flags": 0,
        "description": "The monitor's notification settings."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitoringTarget",
    "properties": {
      "modelId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Reference to the model asset targeted by this monitor."
      },
      "deploymentId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Reference to the deployment asset targeted by this monitor."
      },
      "taskType": {
        "type": {
          "$ref": "#/1394"
        },
        "flags": 1,
        "description": "[Required] The machine learning task type of the monitored model."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Classification"
  },
  {
    "$type": "StringLiteralType",
    "value": "Regression"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1392"
      },
      {
        "$ref": "#/1393"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "MonitoringSignalBase",
    "discriminator": "signalType",
    "baseProperties": {
      "notificationTypes": {
        "type": {
          "$ref": "#/1398"
        },
        "flags": 0,
        "description": "The current notification mode for this signal."
      },
      "properties": {
        "type": {
          "$ref": "#/1399"
        },
        "flags": 0,
        "description": "Property dictionary. Properties can be added, but not removed or altered."
      }
    },
    "elements": {
      "Custom": {
        "$ref": "#/1400"
      },
      "DataDrift": {
        "$ref": "#/1423"
      },
      "DataQuality": {
        "$ref": "#/1456"
      },
      "FeatureAttributionDrift": {
        "$ref": "#/1476"
      },
      "PredictionDrift": {
        "$ref": "#/1486"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AmlNotification"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1396"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1397"
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitoringSignalBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomMonitoringSignal",
    "properties": {
      "inputAssets": {
        "type": {
          "$ref": "#/1417"
        },
        "flags": 0,
        "description": "Monitoring assets to take as input. Key is the component input port name, value is the data asset."
      },
      "inputs": {
        "type": {
          "$ref": "#/1418"
        },
        "flags": 0,
        "description": "Extra component parameters to take as input. Key is the component literal input port name, value is the parameter value."
      },
      "componentId": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Reference to the component asset used to calculate the custom metrics."
      },
      "metricThresholds": {
        "type": {
          "$ref": "#/1421"
        },
        "flags": 1,
        "description": "[Required] A list of metrics to calculate and their associated thresholds."
      },
      "signalType": {
        "type": {
          "$ref": "#/1422"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "MonitoringInputDataBase",
    "discriminator": "inputDataType",
    "baseProperties": {
      "dataContext": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The context metadata of the data source."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/1409"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      },
      "uri": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      },
      "columns": {
        "type": {
          "$ref": "#/1410"
        },
        "flags": 0,
        "description": "Mapping of column names to special uses."
      }
    },
    "elements": {
      "Fixed": {
        "$ref": "#/1411"
      },
      "Rolling": {
        "$ref": "#/1413"
      },
      "Static": {
        "$ref": "#/1415"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "literal"
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_file"
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_folder"
  },
  {
    "$type": "StringLiteralType",
    "value": "mltable"
  },
  {
    "$type": "StringLiteralType",
    "value": "custom_model"
  },
  {
    "$type": "StringLiteralType",
    "value": "mlflow_model"
  },
  {
    "$type": "StringLiteralType",
    "value": "triton_model"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1402"
      },
      {
        "$ref": "#/1403"
      },
      {
        "$ref": "#/1404"
      },
      {
        "$ref": "#/1405"
      },
      {
        "$ref": "#/1406"
      },
      {
        "$ref": "#/1407"
      },
      {
        "$ref": "#/1408"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "MonitoringInputDataBaseColumns",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FixedInputData",
    "properties": {
      "inputDataType": {
        "type": {
          "$ref": "#/1412"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Fixed"
  },
  {
    "$type": "ObjectType",
    "name": "RollingInputData",
    "properties": {
      "windowOffset": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "[Required] The time offset between the end of the data window and the monitor's current run time."
      },
      "windowSize": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "[Required] The size of the rolling data window."
      },
      "preprocessingComponentId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Reference to the component asset used to preprocess the data."
      },
      "inputDataType": {
        "type": {
          "$ref": "#/1414"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Rolling"
  },
  {
    "$type": "ObjectType",
    "name": "StaticInputData",
    "properties": {
      "windowStart": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "[Required] The start date of the data window."
      },
      "windowEnd": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "[Required] The end date of the data window."
      },
      "preprocessingComponentId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Reference to the component asset used to preprocess the data."
      },
      "inputDataType": {
        "type": {
          "$ref": "#/1416"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Static"
  },
  {
    "$type": "ObjectType",
    "name": "CustomMonitoringSignalInputAssets",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1401"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomMonitoringSignalInputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1159"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomMetricThreshold",
    "properties": {
      "threshold": {
        "type": {
          "$ref": "#/1420"
        },
        "flags": 0,
        "description": "The threshold value. If null, a default value will be set depending on the selected metric."
      },
      "metric": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] The user-defined metric to calculate."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitoringThreshold",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The threshold value. If null, the set default is dependent on the metric type."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1419"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "ObjectType",
    "name": "DataDriftMonitoringSignal",
    "properties": {
      "features": {
        "type": {
          "$ref": "#/1424"
        },
        "flags": 0,
        "description": "The feature filter which identifies which feature to calculate drift over."
      },
      "featureImportanceSettings": {
        "type": {
          "$ref": "#/1432"
        },
        "flags": 0,
        "description": "The settings for computing feature importance."
      },
      "metricThresholds": {
        "type": {
          "$ref": "#/1450"
        },
        "flags": 1,
        "description": "[Required] A list of metrics to calculate and their associated thresholds."
      },
      "productionData": {
        "type": {
          "$ref": "#/1401"
        },
        "flags": 1,
        "description": "[Required] The data which drift will be calculated for."
      },
      "referenceData": {
        "type": {
          "$ref": "#/1401"
        },
        "flags": 1,
        "description": "[Required] The data to calculate drift against."
      },
      "featureDataTypeOverride": {
        "type": {
          "$ref": "#/1454"
        },
        "flags": 0,
        "description": "A dictionary that maps feature names to their respective data types."
      },
      "signalType": {
        "type": {
          "$ref": "#/1455"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "MonitoringFeatureFilterBase",
    "discriminator": "filterType",
    "baseProperties": {},
    "elements": {
      "AllFeatures": {
        "$ref": "#/1425"
      },
      "FeatureSubset": {
        "$ref": "#/1427"
      },
      "TopNByAttribution": {
        "$ref": "#/1430"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AllFeatures",
    "properties": {
      "filterType": {
        "type": {
          "$ref": "#/1426"
        },
        "flags": 1,
        "description": "[Required] Specifies the feature filter to leverage when selecting features to calculate metrics over."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AllFeatures"
  },
  {
    "$type": "ObjectType",
    "name": "FeatureSubset",
    "properties": {
      "features": {
        "type": {
          "$ref": "#/1428"
        },
        "flags": 1,
        "description": "[Required] The list of features to include."
      },
      "filterType": {
        "type": {
          "$ref": "#/1429"
        },
        "flags": 1,
        "description": "[Required] Specifies the feature filter to leverage when selecting features to calculate metrics over."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "FeatureSubset"
  },
  {
    "$type": "ObjectType",
    "name": "TopNFeaturesByAttribution",
    "properties": {
      "top": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The number of top features to include."
      },
      "filterType": {
        "type": {
          "$ref": "#/1431"
        },
        "flags": 1,
        "description": "[Required] Specifies the feature filter to leverage when selecting features to calculate metrics over."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "TopNByAttribution"
  },
  {
    "$type": "ObjectType",
    "name": "FeatureImportanceSettings",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/1435"
        },
        "flags": 0,
        "description": "The mode of operation for computing feature importance."
      },
      "targetColumn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The name of the target column within the input data asset."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1433"
      },
      {
        "$ref": "#/1434"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DataDriftMetricThresholdBase",
    "discriminator": "dataType",
    "baseProperties": {
      "threshold": {
        "type": {
          "$ref": "#/1420"
        },
        "flags": 0,
        "description": "The threshold value. If null, a default value will be set depending on the selected metric."
      }
    },
    "elements": {
      "Categorical": {
        "$ref": "#/1437"
      },
      "Numerical": {
        "$ref": "#/1443"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CategoricalDataDriftMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/1441"
        },
        "flags": 1,
        "description": "[Required] The categorical data drift metric to calculate."
      },
      "dataType": {
        "type": {
          "$ref": "#/1442"
        },
        "flags": 1,
        "description": "[Required] Specifies the data type of the metric threshold."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "JensenShannonDistance"
  },
  {
    "$type": "StringLiteralType",
    "value": "PopulationStabilityIndex"
  },
  {
    "$type": "StringLiteralType",
    "value": "PearsonsChiSquaredTest"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1438"
      },
      {
        "$ref": "#/1439"
      },
      {
        "$ref": "#/1440"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Categorical"
  },
  {
    "$type": "ObjectType",
    "name": "NumericalDataDriftMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/1448"
        },
        "flags": 1,
        "description": "[Required] The numerical data drift metric to calculate."
      },
      "dataType": {
        "type": {
          "$ref": "#/1449"
        },
        "flags": 1,
        "description": "[Required] Specifies the data type of the metric threshold."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "JensenShannonDistance"
  },
  {
    "$type": "StringLiteralType",
    "value": "PopulationStabilityIndex"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormalizedWassersteinDistance"
  },
  {
    "$type": "StringLiteralType",
    "value": "TwoSampleKolmogorovSmirnovTest"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1444"
      },
      {
        "$ref": "#/1445"
      },
      {
        "$ref": "#/1446"
      },
      {
        "$ref": "#/1447"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Numerical"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1436"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Numerical"
  },
  {
    "$type": "StringLiteralType",
    "value": "Categorical"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1451"
      },
      {
        "$ref": "#/1452"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataDriftMonitoringSignalFeatureDataTypeOverride",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1453"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DataDrift"
  },
  {
    "$type": "ObjectType",
    "name": "DataQualityMonitoringSignal",
    "properties": {
      "features": {
        "type": {
          "$ref": "#/1424"
        },
        "flags": 0,
        "description": "The features to calculate drift over."
      },
      "featureImportanceSettings": {
        "type": {
          "$ref": "#/1432"
        },
        "flags": 0,
        "description": "The settings for computing feature importance."
      },
      "metricThresholds": {
        "type": {
          "$ref": "#/1470"
        },
        "flags": 1,
        "description": "[Required] A list of metrics to calculate and their associated thresholds."
      },
      "productionData": {
        "type": {
          "$ref": "#/1401"
        },
        "flags": 1,
        "description": "[Required] The data produced by the production service which drift will be calculated for."
      },
      "referenceData": {
        "type": {
          "$ref": "#/1401"
        },
        "flags": 1,
        "description": "[Required] The data to calculate drift against."
      },
      "featureDataTypeOverride": {
        "type": {
          "$ref": "#/1474"
        },
        "flags": 0,
        "description": "A dictionary that maps feature names to their respective data types."
      },
      "signalType": {
        "type": {
          "$ref": "#/1475"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DataQualityMetricThresholdBase",
    "discriminator": "dataType",
    "baseProperties": {
      "threshold": {
        "type": {
          "$ref": "#/1420"
        },
        "flags": 0,
        "description": "The threshold value. If null, a default value will be set depending on the selected metric."
      }
    },
    "elements": {
      "Categorical": {
        "$ref": "#/1458"
      },
      "Numerical": {
        "$ref": "#/1464"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CategoricalDataQualityMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/1462"
        },
        "flags": 1,
        "description": "[Required] The categorical data quality metric to calculate."
      },
      "dataType": {
        "type": {
          "$ref": "#/1463"
        },
        "flags": 1,
        "description": "[Required] Specifies the data type of the metric threshold."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NullValueRate"
  },
  {
    "$type": "StringLiteralType",
    "value": "DataTypeErrorRate"
  },
  {
    "$type": "StringLiteralType",
    "value": "OutOfBoundsRate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1459"
      },
      {
        "$ref": "#/1460"
      },
      {
        "$ref": "#/1461"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Categorical"
  },
  {
    "$type": "ObjectType",
    "name": "NumericalDataQualityMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/1468"
        },
        "flags": 1,
        "description": "[Required] The numerical data quality metric to calculate."
      },
      "dataType": {
        "type": {
          "$ref": "#/1469"
        },
        "flags": 1,
        "description": "[Required] Specifies the data type of the metric threshold."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NullValueRate"
  },
  {
    "$type": "StringLiteralType",
    "value": "DataTypeErrorRate"
  },
  {
    "$type": "StringLiteralType",
    "value": "OutOfBoundsRate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1465"
      },
      {
        "$ref": "#/1466"
      },
      {
        "$ref": "#/1467"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Numerical"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1457"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Numerical"
  },
  {
    "$type": "StringLiteralType",
    "value": "Categorical"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1471"
      },
      {
        "$ref": "#/1472"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataQualityMonitoringSignalFeatureDataTypeOverride",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1473"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DataQuality"
  },
  {
    "$type": "ObjectType",
    "name": "FeatureAttributionDriftMonitoringSignal",
    "properties": {
      "metricThreshold": {
        "type": {
          "$ref": "#/1477"
        },
        "flags": 1,
        "description": "[Required] A list of metrics to calculate and their associated thresholds."
      },
      "featureImportanceSettings": {
        "type": {
          "$ref": "#/1432"
        },
        "flags": 1,
        "description": "[Required] The settings for computing feature importance."
      },
      "productionData": {
        "type": {
          "$ref": "#/1480"
        },
        "flags": 1,
        "description": "[Required] The data which drift will be calculated for."
      },
      "referenceData": {
        "type": {
          "$ref": "#/1401"
        },
        "flags": 1,
        "description": "[Required] The data to calculate drift against."
      },
      "featureDataTypeOverride": {
        "type": {
          "$ref": "#/1484"
        },
        "flags": 0,
        "description": "A dictionary that maps feature names to their respective data types."
      },
      "signalType": {
        "type": {
          "$ref": "#/1485"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeatureAttributionMetricThreshold",
    "properties": {
      "threshold": {
        "type": {
          "$ref": "#/1420"
        },
        "flags": 0,
        "description": "The threshold value. If null, a default value will be set depending on the selected metric."
      },
      "metric": {
        "type": {
          "$ref": "#/1479"
        },
        "flags": 1,
        "description": "[Required] The feature attribution metric to calculate."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NormalizedDiscountedCumulativeGain"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1478"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1401"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Numerical"
  },
  {
    "$type": "StringLiteralType",
    "value": "Categorical"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1481"
      },
      {
        "$ref": "#/1482"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "FeatureAttributionDriftMonitoringSignalFeatureDataTypeOverride",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1483"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "FeatureAttributionDrift"
  },
  {
    "$type": "ObjectType",
    "name": "PredictionDriftMonitoringSignal",
    "properties": {
      "metricThresholds": {
        "type": {
          "$ref": "#/1501"
        },
        "flags": 1,
        "description": "[Required] A list of metrics to calculate and their associated thresholds."
      },
      "productionData": {
        "type": {
          "$ref": "#/1401"
        },
        "flags": 1,
        "description": "[Required] The data which drift will be calculated for."
      },
      "referenceData": {
        "type": {
          "$ref": "#/1401"
        },
        "flags": 1,
        "description": "[Required] The data to calculate drift against."
      },
      "featureDataTypeOverride": {
        "type": {
          "$ref": "#/1505"
        },
        "flags": 0,
        "description": "A dictionary that maps feature names to their respective data types."
      },
      "signalType": {
        "type": {
          "$ref": "#/1506"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "PredictionDriftMetricThresholdBase",
    "discriminator": "dataType",
    "baseProperties": {
      "threshold": {
        "type": {
          "$ref": "#/1420"
        },
        "flags": 0,
        "description": "The threshold value. If null, a default value will be set depending on the selected metric."
      }
    },
    "elements": {
      "Categorical": {
        "$ref": "#/1488"
      },
      "Numerical": {
        "$ref": "#/1494"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CategoricalPredictionDriftMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/1492"
        },
        "flags": 1,
        "description": "[Required] The categorical prediction drift metric to calculate."
      },
      "dataType": {
        "type": {
          "$ref": "#/1493"
        },
        "flags": 1,
        "description": "[Required] Specifies the data type of the metric threshold."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "JensenShannonDistance"
  },
  {
    "$type": "StringLiteralType",
    "value": "PopulationStabilityIndex"
  },
  {
    "$type": "StringLiteralType",
    "value": "PearsonsChiSquaredTest"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1489"
      },
      {
        "$ref": "#/1490"
      },
      {
        "$ref": "#/1491"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Categorical"
  },
  {
    "$type": "ObjectType",
    "name": "NumericalPredictionDriftMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/1499"
        },
        "flags": 1,
        "description": "[Required] The numerical prediction drift metric to calculate."
      },
      "dataType": {
        "type": {
          "$ref": "#/1500"
        },
        "flags": 1,
        "description": "[Required] Specifies the data type of the metric threshold."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "JensenShannonDistance"
  },
  {
    "$type": "StringLiteralType",
    "value": "PopulationStabilityIndex"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormalizedWassersteinDistance"
  },
  {
    "$type": "StringLiteralType",
    "value": "TwoSampleKolmogorovSmirnovTest"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1495"
      },
      {
        "$ref": "#/1496"
      },
      {
        "$ref": "#/1497"
      },
      {
        "$ref": "#/1498"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Numerical"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1487"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Numerical"
  },
  {
    "$type": "StringLiteralType",
    "value": "Categorical"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1502"
      },
      {
        "$ref": "#/1503"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "PredictionDriftMonitoringSignalFeatureDataTypeOverride",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1504"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "PredictionDrift"
  },
  {
    "$type": "ObjectType",
    "name": "MonitorDefinitionSignals",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1395"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "MonitorComputeConfigurationBase",
    "discriminator": "computeType",
    "baseProperties": {},
    "elements": {
      "ServerlessSpark": {
        "$ref": "#/1509"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitorServerlessSparkCompute",
    "properties": {
      "computeIdentity": {
        "type": {
          "$ref": "#/1510"
        },
        "flags": 1,
        "description": "[Required] The identity scheme leveraged to by the spark jobs running on serverless Spark."
      },
      "instanceType": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 1,
        "description": "[Required] The instance type running the Spark job."
      },
      "runtimeVersion": {
        "type": {
          "$ref": "#/1515"
        },
        "flags": 1,
        "description": "[Required] The Spark runtime version."
      },
      "computeType": {
        "type": {
          "$ref": "#/1516"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "MonitorComputeIdentityBase",
    "discriminator": "computeIdentityType",
    "baseProperties": {},
    "elements": {
      "AmlToken": {
        "$ref": "#/1511"
      },
      "ManagedIdentity": {
        "$ref": "#/1513"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AmlTokenComputeIdentity",
    "properties": {
      "computeIdentityType": {
        "type": {
          "$ref": "#/1512"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of identity to use within the monitoring jobs."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AmlToken"
  },
  {
    "$type": "ObjectType",
    "name": "ManagedComputeIdentity",
    "properties": {
      "identity": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The identity which will be leveraged by the monitoring jobs."
      },
      "computeIdentityType": {
        "type": {
          "$ref": "#/1514"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of identity to use within the monitoring jobs."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "pattern": "^[0-9]+\\.[0-9]+$"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServerlessSpark"
  },
  {
    "$type": "ObjectType",
    "name": "MonitorNotificationSettings",
    "properties": {
      "emailNotificationSettings": {
        "type": {
          "$ref": "#/1518"
        },
        "flags": 0,
        "description": "The AML notification email settings."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitorEmailNotificationSettings",
    "properties": {
      "emails": {
        "type": {
          "$ref": "#/1519"
        },
        "flags": 0,
        "description": "The email recipient list which has a limitation of 499 characters in total."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CreateMonitor"
  },
  {
    "$type": "ObjectType",
    "name": "EndpointScheduleAction",
    "properties": {
      "endpointInvocationDefinition": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 1,
        "description": "[Required] Defines Schedule action definition details.\r\n<see href=\"TBD\" />"
      },
      "actionType": {
        "type": {
          "$ref": "#/1522"
        },
        "flags": 1,
        "description": "[Required] Specifies the action type of the schedule"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "InvokeBatchEndpoint"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1523"
      },
      {
        "$ref": "#/1524"
      },
      {
        "$ref": "#/1525"
      },
      {
        "$ref": "#/1526"
      },
      {
        "$ref": "#/1527"
      },
      {
        "$ref": "#/1528"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/schedules@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/1373"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z][a-zA-Z0-9-]{0,51}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/serverlessEndpoints"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/serverlessEndpoints",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/1533"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1534"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1535"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/1537"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "identity": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "sku": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/1564"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ServerlessEndpointProperties",
    "properties": {
      "modelSettings": {
        "type": {
          "$ref": "#/1538"
        },
        "flags": 0,
        "description": "The model settings (model id) for the model being serviced on the ServerlessEndpoint."
      },
      "authMode": {
        "type": {
          "$ref": "#/1540"
        },
        "flags": 1,
        "description": "[Required] Specifies the authentication mode for the Serverless endpoint."
      },
      "inferenceEndpoint": {
        "type": {
          "$ref": "#/1541"
        },
        "flags": 2,
        "description": "The inference uri to target when making requests against the serverless endpoint"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/1549"
        },
        "flags": 2,
        "description": "Provisioning state for the endpoint."
      },
      "endpointState": {
        "type": {
          "$ref": "#/1559"
        },
        "flags": 2,
        "description": "The current state of the ServerlessEndpoint."
      },
      "marketplaceSubscriptionId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The MarketplaceSubscription Azure ID associated to this ServerlessEndpoint."
      },
      "contentSafety": {
        "type": {
          "$ref": "#/1560"
        },
        "flags": 0,
        "description": "Specifies the content safety options. If omitted, the default content safety settings will be configured"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ModelSettings",
    "properties": {
      "modelId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The unique model identifier that this ServerlessEndpoint should provision."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1539"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ServerlessInferenceEndpoint",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 3,
        "description": "[Required] The inference uri to target when making requests against the Serverless Endpoint."
      },
      "headers": {
        "type": {
          "$ref": "#/1542"
        },
        "flags": 2,
        "description": "Specifies any required headers to target this serverless endpoint."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ServerlessInferenceEndpointHeaders",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1543"
      },
      {
        "$ref": "#/1544"
      },
      {
        "$ref": "#/1545"
      },
      {
        "$ref": "#/1546"
      },
      {
        "$ref": "#/1547"
      },
      {
        "$ref": "#/1548"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Suspending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Reinstating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Online"
  },
  {
    "$type": "StringLiteralType",
    "value": "Suspended"
  },
  {
    "$type": "StringLiteralType",
    "value": "CreationFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "DeletionFailed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1550"
      },
      {
        "$ref": "#/1551"
      },
      {
        "$ref": "#/1552"
      },
      {
        "$ref": "#/1553"
      },
      {
        "$ref": "#/1554"
      },
      {
        "$ref": "#/1555"
      },
      {
        "$ref": "#/1556"
      },
      {
        "$ref": "#/1557"
      },
      {
        "$ref": "#/1558"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ContentSafety",
    "properties": {
      "contentSafetyStatus": {
        "type": {
          "$ref": "#/1563"
        },
        "flags": 1,
        "description": "[Required] Specifies the status of content safety."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1561"
      },
      {
        "$ref": "#/1562"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/serverlessEndpoints@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/1536"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{2,32}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/1566"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1567"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1568"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "properties": {
        "type": {
          "$ref": "#/1570"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "sku": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/1591"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryProperties",
    "properties": {
      "discoveryUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Discovery URL for the Registry"
      },
      "intellectualPropertyPublisher": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "IntellectualPropertyPublisher for the registry"
      },
      "managedResourceGroup": {
        "type": {
          "$ref": "#/1571"
        },
        "flags": 0,
        "description": "ResourceId of the managed RG if the registry has system created resources"
      },
      "mlFlowRegistryUri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "MLFlow Registry URI for the Registry"
      },
      "registryPrivateEndpointConnections": {
        "type": {
          "$ref": "#/1582"
        },
        "flags": 0,
        "description": "Private endpoint connections info used for pending connections in private link portal"
      },
      "publicNetworkAccess": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Is the Registry accessible from the internet?\r\nPossible values: \"Enabled\" or \"Disabled\""
      },
      "regionDetails": {
        "type": {
          "$ref": "#/1590"
        },
        "flags": 0,
        "description": "Details of each region the registry is in"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ArmResourceId",
    "properties": {
      "resourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Arm ResourceId is in the format \"/subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Storage/storageAccounts/{StorageAccountName}\"\r\nor \"/subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{AcrName}\""
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryPrivateEndpointConnection",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "This is the private endpoint connection name created on SRP\r\nFull resource id: /subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.MachineLearningServices/{resourceType}/{resourceName}/registryPrivateEndpointConnections/{peConnectionName}"
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Same as workspace location."
      },
      "properties": {
        "type": {
          "$ref": "#/1573"
        },
        "flags": 0,
        "description": "Properties of the Private Endpoint Connection"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryPrivateEndpointConnectionProperties",
    "properties": {
      "groupIds": {
        "type": {
          "$ref": "#/1574"
        },
        "flags": 0,
        "description": "The group ids"
      },
      "privateEndpoint": {
        "type": {
          "$ref": "#/1575"
        },
        "flags": 0,
        "description": "The PE network resource that is linked to this PE connection."
      },
      "registryPrivateLinkServiceConnectionState": {
        "type": {
          "$ref": "#/1576"
        },
        "flags": 0,
        "description": "The connection state."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "One of null, \"Succeeded\", \"Provisioning\", \"Failed\". While not approved, it's null."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointResource",
    "properties": {
      "subnetArmId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The subnetId that the private endpoint is connected to."
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The ARM identifier for Private Endpoint"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryPrivateLinkServiceConnectionState",
    "properties": {
      "actionsRequired": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Some RP chose \"None\". Other RPs use this for region expansion."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "User-defined message that, per NRP doc, may be used for approval-related message."
      },
      "status": {
        "type": {
          "$ref": "#/1581"
        },
        "flags": 0,
        "description": "Connection status of the service consumer with the service provider"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Approved"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rejected"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disconnected"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1577"
      },
      {
        "$ref": "#/1578"
      },
      {
        "$ref": "#/1579"
      },
      {
        "$ref": "#/1580"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1572"
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryRegionArmDetails",
    "properties": {
      "acrDetails": {
        "type": {
          "$ref": "#/1586"
        },
        "flags": 0,
        "description": "List of ACR accounts"
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The location where the registry exists"
      },
      "storageAccountDetails": {
        "type": {
          "$ref": "#/1589"
        },
        "flags": 0,
        "description": "List of storage accounts"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AcrDetails",
    "properties": {
      "systemCreatedAcrAccount": {
        "type": {
          "$ref": "#/1585"
        },
        "flags": 0,
        "description": "Details of system created ACR account to be used for the Registry"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemCreatedAcrAccount",
    "properties": {
      "acrAccountName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the ACR account"
      },
      "acrAccountSku": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "SKU of the ACR account"
      },
      "armResourceId": {
        "type": {
          "$ref": "#/1571"
        },
        "flags": 0,
        "description": "This is populated once the ACR account is created."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1584"
    }
  },
  {
    "$type": "ObjectType",
    "name": "StorageAccountDetails",
    "properties": {
      "systemCreatedStorageAccount": {
        "type": {
          "$ref": "#/1588"
        },
        "flags": 0,
        "description": "Details of system created storage account to be used for the registry"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemCreatedStorageAccount",
    "properties": {
      "allowBlobPublicAccess": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Public blob access allowed"
      },
      "armResourceId": {
        "type": {
          "$ref": "#/1571"
        },
        "flags": 0,
        "description": "This is populated once the storage account is created."
      },
      "storageAccountHnsEnabled": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "HNS enabled for storage account"
      },
      "storageAccountName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Name of the storage account"
      },
      "storageAccountType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Allowed values:\r\n\"Standard_LRS\",\r\n\"Standard_GRS\",\r\n\"Standard_RAGRS\",\r\n\"Standard_ZRS\",\r\n\"Standard_GZRS\",\r\n\"Standard_RAGZRS\",\r\n\"Premium_LRS\",\r\n\"Premium_ZRS\""
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1587"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1583"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/1569"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/1593"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1594"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1595"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/1597"
        },
        "flags": 0,
        "description": "The properties of the machine learning workspace."
      },
      "identity": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The identity of the resource."
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the location of the resource."
      },
      "tags": {
        "type": {
          "$ref": "#/1685"
        },
        "flags": 0,
        "description": "Contains resource tags defined as key/value pairs."
      },
      "sku": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "The sku of the workspace."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceProperties",
    "properties": {
      "workspaceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The immutable id associated with this workspace."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The description of this workspace."
      },
      "friendlyName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The friendly name for this workspace. This name in mutable"
      },
      "keyVault": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created"
      },
      "applicationInsights": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ARM id of the application insights associated with this workspace."
      },
      "containerRegistry": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ARM id of the container registry associated with this workspace."
      },
      "storageAccount": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created"
      },
      "discoveryUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/1605"
        },
        "flags": 2,
        "description": "The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning."
      },
      "encryption": {
        "type": {
          "$ref": "#/1606"
        },
        "flags": 0,
        "description": "The encryption settings of Azure ML workspace."
      },
      "hbiWorkspace": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service"
      },
      "serviceProvisionedResourceGroup": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace"
      },
      "privateLinkCount": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 2,
        "description": "Count of private connections in the workspace"
      },
      "imageBuildCompute": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The compute name for image build"
      },
      "allowPublicAccessWhenBehindVnet": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "The flag to indicate whether to allow public access when behind VNet."
      },
      "publicNetworkAccess": {
        "type": {
          "$ref": "#/1614"
        },
        "flags": 0,
        "description": "Whether requests from Public Network are allowed."
      },
      "privateEndpointConnections": {
        "type": {
          "$ref": "#/1631"
        },
        "flags": 2,
        "description": "The list of private endpoint connections in the workspace."
      },
      "serverlessComputeSettings": {
        "type": {
          "$ref": "#/1632"
        },
        "flags": 0,
        "description": "Settings for serverless compute created in the workspace"
      },
      "sharedPrivateLinkResources": {
        "type": {
          "$ref": "#/1641"
        },
        "flags": 0,
        "description": "The list of shared private link resources in this workspace."
      },
      "notebookInfo": {
        "type": {
          "$ref": "#/1642"
        },
        "flags": 2,
        "description": "The notebook info of Azure ML workspace."
      },
      "serviceManagedResourcesSettings": {
        "type": {
          "$ref": "#/1644"
        },
        "flags": 0,
        "description": "The service managed resource settings."
      },
      "primaryUserAssignedIdentity": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The user assigned identity resource id that represents the workspace identity."
      },
      "tenantId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The tenant id associated with this workspace."
      },
      "storageHnsEnabled": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 2,
        "description": "If the storage associated with the workspace has hierarchical namespace(HNS) enabled."
      },
      "mlFlowTrackingUri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The URI associated with this workspace that machine learning flow must point at to set up tracking."
      },
      "v1LegacyMode": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enabling v1_legacy_mode may prevent you from using features provided by the v2 API."
      },
      "managedNetwork": {
        "type": {
          "$ref": "#/1646"
        },
        "flags": 0,
        "description": "Managed Network settings for a machine learning workspace."
      },
      "featureStoreSettings": {
        "type": {
          "$ref": "#/1680"
        },
        "flags": 0,
        "description": "Settings for feature store type workspace."
      },
      "associatedWorkspaces": {
        "type": {
          "$ref": "#/1682"
        },
        "flags": 0
      },
      "enableDataIsolation": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0
      },
      "hubResourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "workspaceHubConfig": {
        "type": {
          "$ref": "#/1683"
        },
        "flags": 0,
        "description": "WorkspaceHub's configuration object."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1598"
      },
      {
        "$ref": "#/1599"
      },
      {
        "$ref": "#/1600"
      },
      {
        "$ref": "#/1601"
      },
      {
        "$ref": "#/1602"
      },
      {
        "$ref": "#/1603"
      },
      {
        "$ref": "#/1604"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "EncryptionProperty",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/1609"
        },
        "flags": 1,
        "description": "Indicates whether or not the encryption is enabled for the workspace."
      },
      "identity": {
        "type": {
          "$ref": "#/1610"
        },
        "flags": 0,
        "description": "The identity that will be used to access the key vault for encryption at rest."
      },
      "keyVaultProperties": {
        "type": {
          "$ref": "#/1611"
        },
        "flags": 1,
        "description": "Customer Key vault properties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1607"
      },
      {
        "$ref": "#/1608"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "IdentityForCmk",
    "properties": {
      "userAssignedIdentity": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The ArmId of the user assigned identity that will be used to access the customer managed key vault"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EncryptionKeyVaultProperties",
    "properties": {
      "keyVaultArmId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The ArmId of the keyVault where the customer owned encryption key is present."
      },
      "keyIdentifier": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Key vault uri to access the encryption key."
      },
      "identityClientId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "For future use - The client id of the identity which will be used to access key vault."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1612"
      },
      {
        "$ref": "#/1613"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnection",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/1616"
        },
        "flags": 0,
        "description": "Resource properties."
      },
      "identity": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The identity of the resource."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the location of the resource."
      },
      "tags": {
        "type": {
          "$ref": "#/1630"
        },
        "flags": 0,
        "description": "Contains resource tags defined as key/value pairs."
      },
      "sku": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "The sku of the workspace."
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnectionProperties",
    "properties": {
      "privateEndpoint": {
        "type": {
          "$ref": "#/1617"
        },
        "flags": 0,
        "description": "The resource of private end point."
      },
      "privateLinkServiceConnectionState": {
        "type": {
          "$ref": "#/1618"
        },
        "flags": 1,
        "description": "A collection of information about the state of the connection between service consumer and provider."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/1629"
        },
        "flags": 2,
        "description": "The provisioning state of the private endpoint connection resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpoint",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The ARM identifier for Private Endpoint"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateLinkServiceConnectionState",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/1624"
        },
        "flags": 0,
        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The reason for approval/rejection of the connection."
      },
      "actionsRequired": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "A message indicating if changes on the service provider require any updates on the consumer."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Approved"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rejected"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disconnected"
  },
  {
    "$type": "StringLiteralType",
    "value": "Timeout"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1619"
      },
      {
        "$ref": "#/1620"
      },
      {
        "$ref": "#/1621"
      },
      {
        "$ref": "#/1622"
      },
      {
        "$ref": "#/1623"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1625"
      },
      {
        "$ref": "#/1626"
      },
      {
        "$ref": "#/1627"
      },
      {
        "$ref": "#/1628"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnectionTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1615"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ServerlessComputeSettings",
    "properties": {
      "serverlessComputeCustomSubnet": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource ID of an existing virtual network subnet in which serverless compute nodes should be deployed"
      },
      "serverlessComputeNoPublicIP": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "The flag to signal if serverless compute nodes deployed in custom vNet would have no public IP addresses for a workspace with private endpoint"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SharedPrivateLinkResource",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Unique name of the private link."
      },
      "properties": {
        "type": {
          "$ref": "#/1634"
        },
        "flags": 0,
        "description": "Resource properties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SharedPrivateLinkResourceProperty",
    "properties": {
      "privateLinkResourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource id that private link links to."
      },
      "groupId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The private link resource group id."
      },
      "requestMessage": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Request message."
      },
      "status": {
        "type": {
          "$ref": "#/1640"
        },
        "flags": 0,
        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Approved"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rejected"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disconnected"
  },
  {
    "$type": "StringLiteralType",
    "value": "Timeout"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1635"
      },
      {
        "$ref": "#/1636"
      },
      {
        "$ref": "#/1637"
      },
      {
        "$ref": "#/1638"
      },
      {
        "$ref": "#/1639"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1633"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NotebookResourceInfo",
    "properties": {
      "fqdn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "resourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "the data plane resourceId that used to initialize notebook component"
      },
      "notebookPreparationError": {
        "type": {
          "$ref": "#/1643"
        },
        "flags": 0,
        "description": "The error that occurs when preparing notebook."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NotebookPreparationError",
    "properties": {
      "errorMessage": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "statusCode": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ServiceManagedResourcesSettings",
    "properties": {
      "cosmosDb": {
        "type": {
          "$ref": "#/1645"
        },
        "flags": 0,
        "description": "The settings for the service managed cosmosdb account."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CosmosDbSettings",
    "properties": {
      "collectionsThroughput": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The throughput of the collections in cosmosdb database"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedNetworkSettings",
    "properties": {
      "isolationMode": {
        "type": {
          "$ref": "#/1650"
        },
        "flags": 0,
        "description": "Isolation mode for the managed network of a machine learning workspace."
      },
      "networkId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2
      },
      "outboundRules": {
        "type": {
          "$ref": "#/1675"
        },
        "flags": 0,
        "description": "Dictionary of <OutboundRule>"
      },
      "status": {
        "type": {
          "$ref": "#/1676"
        },
        "flags": 0,
        "description": "Status of the Provisioning for the managed network of a machine learning workspace."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "AllowInternetOutbound"
  },
  {
    "$type": "StringLiteralType",
    "value": "AllowOnlyApprovedOutbound"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1647"
      },
      {
        "$ref": "#/1648"
      },
      {
        "$ref": "#/1649"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "OutboundRule",
    "discriminator": "type",
    "baseProperties": {
      "category": {
        "type": {
          "$ref": "#/1656"
        },
        "flags": 0,
        "description": "Category of a managed network Outbound Rule of a machine learning workspace."
      },
      "status": {
        "type": {
          "$ref": "#/1659"
        },
        "flags": 0,
        "description": "Type of a managed network Outbound Rule of a machine learning workspace."
      }
    },
    "elements": {
      "FQDN": {
        "$ref": "#/1660"
      },
      "PrivateEndpoint": {
        "$ref": "#/1662"
      },
      "ServiceTag": {
        "$ref": "#/1668"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Required"
  },
  {
    "$type": "StringLiteralType",
    "value": "Recommended"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserDefined"
  },
  {
    "$type": "StringLiteralType",
    "value": "Dependency"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1652"
      },
      {
        "$ref": "#/1653"
      },
      {
        "$ref": "#/1654"
      },
      {
        "$ref": "#/1655"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Inactive"
  },
  {
    "$type": "StringLiteralType",
    "value": "Active"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1657"
      },
      {
        "$ref": "#/1658"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "FqdnOutboundRule",
    "properties": {
      "destination": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "type": {
        "type": {
          "$ref": "#/1661"
        },
        "flags": 1,
        "description": "Type of a managed network Outbound Rule of a machine learning workspace."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "FQDN"
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointOutboundRule",
    "properties": {
      "destination": {
        "type": {
          "$ref": "#/1663"
        },
        "flags": 0,
        "description": "Private Endpoint destination for a Private Endpoint Outbound Rule for the managed network of a machine learning workspace."
      },
      "type": {
        "type": {
          "$ref": "#/1667"
        },
        "flags": 1,
        "description": "Type of a managed network Outbound Rule of a machine learning workspace."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointDestination",
    "properties": {
      "serviceResourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "sparkEnabled": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0
      },
      "sparkStatus": {
        "type": {
          "$ref": "#/1666"
        },
        "flags": 0,
        "description": "Type of a managed network Outbound Rule of a machine learning workspace."
      },
      "subresourceTarget": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Inactive"
  },
  {
    "$type": "StringLiteralType",
    "value": "Active"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1664"
      },
      {
        "$ref": "#/1665"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "PrivateEndpoint"
  },
  {
    "$type": "ObjectType",
    "name": "ServiceTagOutboundRule",
    "properties": {
      "destination": {
        "type": {
          "$ref": "#/1669"
        },
        "flags": 0,
        "description": "Service Tag destination for a Service Tag Outbound Rule for the managed network of a machine learning workspace."
      },
      "type": {
        "type": {
          "$ref": "#/1674"
        },
        "flags": 1,
        "description": "Type of a managed network Outbound Rule of a machine learning workspace."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ServiceTagDestination",
    "properties": {
      "action": {
        "type": {
          "$ref": "#/1672"
        },
        "flags": 0,
        "description": "The action enum for networking rule."
      },
      "addressPrefixes": {
        "type": {
          "$ref": "#/1673"
        },
        "flags": 2,
        "description": "Optional, if provided, the ServiceTag property will be ignored."
      },
      "portRanges": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "protocol": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "serviceTag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Allow"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deny"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1670"
      },
      {
        "$ref": "#/1671"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ServiceTag"
  },
  {
    "$type": "ObjectType",
    "name": "ManagedNetworkSettingsOutboundRules",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1651"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedNetworkProvisionStatus",
    "properties": {
      "sparkReady": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0
      },
      "status": {
        "type": {
          "$ref": "#/1679"
        },
        "flags": 0,
        "description": "Status for the managed network of a machine learning workspace."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Inactive"
  },
  {
    "$type": "StringLiteralType",
    "value": "Active"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1677"
      },
      {
        "$ref": "#/1678"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "FeatureStoreSettings",
    "properties": {
      "computeRuntime": {
        "type": {
          "$ref": "#/1681"
        },
        "flags": 0,
        "description": "Compute runtime config for feature store type workspace."
      },
      "offlineStoreConnectionName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "onlineStoreConnectionName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeRuntimeDto",
    "properties": {
      "sparkRuntimeVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceHubConfig",
    "properties": {
      "additionalWorkspaceStorageAccounts": {
        "type": {
          "$ref": "#/1684"
        },
        "flags": 0
      },
      "defaultWorkspaceResourceGroup": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/1596"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1687"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1688"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/1616"
        },
        "flags": 0,
        "description": "Resource properties."
      },
      "identity": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The identity of the resource."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the location of the resource."
      },
      "tags": {
        "type": {
          "$ref": "#/1690"
        },
        "flags": 0,
        "description": "Contains resource tags defined as key/value pairs."
      },
      "sku": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "The sku of the workspace."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnectionTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/1689"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/connections"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/connections",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/1593"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1692"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1693"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/1695"
        },
        "flags": 1
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "WorkspaceConnectionPropertiesV2",
    "discriminator": "authType",
    "baseProperties": {
      "category": {
        "type": {
          "$ref": "#/1798"
        },
        "flags": 0,
        "description": "Category of the connection"
      },
      "createdByWorkspaceArmId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2
      },
      "expiryTime": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "group": {
        "type": {
          "$ref": "#/1806"
        },
        "flags": 2,
        "description": "Group based on connection category"
      },
      "isSharedToAll": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0
      },
      "target": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "metadata": {
        "type": {
          "$ref": "#/1807"
        },
        "flags": 0,
        "description": "Store user metadata for this connection"
      },
      "sharedUserList": {
        "type": {
          "$ref": "#/1808"
        },
        "flags": 0
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Value details of the workspace connection."
      },
      "valueFormat": {
        "type": {
          "$ref": "#/1810"
        },
        "flags": 0,
        "description": "format for the workspace connection value"
      }
    },
    "elements": {
      "AAD": {
        "$ref": "#/1811"
      },
      "AccessKey": {
        "$ref": "#/1813"
      },
      "AccountKey": {
        "$ref": "#/1816"
      },
      "ApiKey": {
        "$ref": "#/1819"
      },
      "CustomKeys": {
        "$ref": "#/1822"
      },
      "ManagedIdentity": {
        "$ref": "#/1826"
      },
      "None": {
        "$ref": "#/1829"
      },
      "OAuth2": {
        "$ref": "#/1831"
      },
      "PAT": {
        "$ref": "#/1834"
      },
      "SAS": {
        "$ref": "#/1837"
      },
      "ServicePrincipal": {
        "$ref": "#/1840"
      },
      "UsernamePassword": {
        "$ref": "#/1843"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "PythonFeed"
  },
  {
    "$type": "StringLiteralType",
    "value": "ContainerRegistry"
  },
  {
    "$type": "StringLiteralType",
    "value": "Git"
  },
  {
    "$type": "StringLiteralType",
    "value": "S3"
  },
  {
    "$type": "StringLiteralType",
    "value": "Snowflake"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureSqlDb"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureSynapseAnalytics"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureMySqlDb"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzurePostgresDb"
  },
  {
    "$type": "StringLiteralType",
    "value": "ADLSGen2"
  },
  {
    "$type": "StringLiteralType",
    "value": "Redis"
  },
  {
    "$type": "StringLiteralType",
    "value": "ApiKey"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureOpenAI"
  },
  {
    "$type": "StringLiteralType",
    "value": "CognitiveSearch"
  },
  {
    "$type": "StringLiteralType",
    "value": "CognitiveService"
  },
  {
    "$type": "StringLiteralType",
    "value": "CustomKeys"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureBlob"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureOneLake"
  },
  {
    "$type": "StringLiteralType",
    "value": "CosmosDb"
  },
  {
    "$type": "StringLiteralType",
    "value": "CosmosDbMongoDbApi"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureDataExplorer"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureMariaDb"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureDatabricksDeltaLake"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureSqlMi"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureTableStorage"
  },
  {
    "$type": "StringLiteralType",
    "value": "AmazonRdsForOracle"
  },
  {
    "$type": "StringLiteralType",
    "value": "AmazonRdsForSqlServer"
  },
  {
    "$type": "StringLiteralType",
    "value": "AmazonRedshift"
  },
  {
    "$type": "StringLiteralType",
    "value": "Db2"
  },
  {
    "$type": "StringLiteralType",
    "value": "Drill"
  },
  {
    "$type": "StringLiteralType",
    "value": "GoogleBigQuery"
  },
  {
    "$type": "StringLiteralType",
    "value": "Greenplum"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hbase"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hive"
  },
  {
    "$type": "StringLiteralType",
    "value": "Impala"
  },
  {
    "$type": "StringLiteralType",
    "value": "Informix"
  },
  {
    "$type": "StringLiteralType",
    "value": "MariaDb"
  },
  {
    "$type": "StringLiteralType",
    "value": "MicrosoftAccess"
  },
  {
    "$type": "StringLiteralType",
    "value": "MySql"
  },
  {
    "$type": "StringLiteralType",
    "value": "Netezza"
  },
  {
    "$type": "StringLiteralType",
    "value": "Oracle"
  },
  {
    "$type": "StringLiteralType",
    "value": "Phoenix"
  },
  {
    "$type": "StringLiteralType",
    "value": "PostgreSql"
  },
  {
    "$type": "StringLiteralType",
    "value": "Presto"
  },
  {
    "$type": "StringLiteralType",
    "value": "SapOpenHub"
  },
  {
    "$type": "StringLiteralType",
    "value": "SapBw"
  },
  {
    "$type": "StringLiteralType",
    "value": "SapHana"
  },
  {
    "$type": "StringLiteralType",
    "value": "SapTable"
  },
  {
    "$type": "StringLiteralType",
    "value": "Spark"
  },
  {
    "$type": "StringLiteralType",
    "value": "SqlServer"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sybase"
  },
  {
    "$type": "StringLiteralType",
    "value": "Teradata"
  },
  {
    "$type": "StringLiteralType",
    "value": "Vertica"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cassandra"
  },
  {
    "$type": "StringLiteralType",
    "value": "Couchbase"
  },
  {
    "$type": "StringLiteralType",
    "value": "MongoDbV2"
  },
  {
    "$type": "StringLiteralType",
    "value": "MongoDbAtlas"
  },
  {
    "$type": "StringLiteralType",
    "value": "AmazonS3Compatible"
  },
  {
    "$type": "StringLiteralType",
    "value": "FileServer"
  },
  {
    "$type": "StringLiteralType",
    "value": "FtpServer"
  },
  {
    "$type": "StringLiteralType",
    "value": "GoogleCloudStorage"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hdfs"
  },
  {
    "$type": "StringLiteralType",
    "value": "OracleCloudStorage"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sftp"
  },
  {
    "$type": "StringLiteralType",
    "value": "GenericHttp"
  },
  {
    "$type": "StringLiteralType",
    "value": "ODataRest"
  },
  {
    "$type": "StringLiteralType",
    "value": "Odbc"
  },
  {
    "$type": "StringLiteralType",
    "value": "GenericRest"
  },
  {
    "$type": "StringLiteralType",
    "value": "AmazonMws"
  },
  {
    "$type": "StringLiteralType",
    "value": "Concur"
  },
  {
    "$type": "StringLiteralType",
    "value": "Dynamics"
  },
  {
    "$type": "StringLiteralType",
    "value": "DynamicsAx"
  },
  {
    "$type": "StringLiteralType",
    "value": "DynamicsCrm"
  },
  {
    "$type": "StringLiteralType",
    "value": "GoogleAdWords"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hubspot"
  },
  {
    "$type": "StringLiteralType",
    "value": "Jira"
  },
  {
    "$type": "StringLiteralType",
    "value": "Magento"
  },
  {
    "$type": "StringLiteralType",
    "value": "Marketo"
  },
  {
    "$type": "StringLiteralType",
    "value": "Office365"
  },
  {
    "$type": "StringLiteralType",
    "value": "Eloqua"
  },
  {
    "$type": "StringLiteralType",
    "value": "Responsys"
  },
  {
    "$type": "StringLiteralType",
    "value": "OracleServiceCloud"
  },
  {
    "$type": "StringLiteralType",
    "value": "PayPal"
  },
  {
    "$type": "StringLiteralType",
    "value": "QuickBooks"
  },
  {
    "$type": "StringLiteralType",
    "value": "Salesforce"
  },
  {
    "$type": "StringLiteralType",
    "value": "SalesforceServiceCloud"
  },
  {
    "$type": "StringLiteralType",
    "value": "SalesforceMarketingCloud"
  },
  {
    "$type": "StringLiteralType",
    "value": "SapCloudForCustomer"
  },
  {
    "$type": "StringLiteralType",
    "value": "SapEcc"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServiceNow"
  },
  {
    "$type": "StringLiteralType",
    "value": "SharePointOnlineList"
  },
  {
    "$type": "StringLiteralType",
    "value": "Shopify"
  },
  {
    "$type": "StringLiteralType",
    "value": "Square"
  },
  {
    "$type": "StringLiteralType",
    "value": "WebTable"
  },
  {
    "$type": "StringLiteralType",
    "value": "Xero"
  },
  {
    "$type": "StringLiteralType",
    "value": "Zoho"
  },
  {
    "$type": "StringLiteralType",
    "value": "GenericContainerRegistry"
  },
  {
    "$type": "StringLiteralType",
    "value": "OpenAI"
  },
  {
    "$type": "StringLiteralType",
    "value": "Serp"
  },
  {
    "$type": "StringLiteralType",
    "value": "BingLLMSearch"
  },
  {
    "$type": "StringLiteralType",
    "value": "Serverless"
  },
  {
    "$type": "StringLiteralType",
    "value": "AIServices"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1696"
      },
      {
        "$ref": "#/1697"
      },
      {
        "$ref": "#/1698"
      },
      {
        "$ref": "#/1699"
      },
      {
        "$ref": "#/1700"
      },
      {
        "$ref": "#/1701"
      },
      {
        "$ref": "#/1702"
      },
      {
        "$ref": "#/1703"
      },
      {
        "$ref": "#/1704"
      },
      {
        "$ref": "#/1705"
      },
      {
        "$ref": "#/1706"
      },
      {
        "$ref": "#/1707"
      },
      {
        "$ref": "#/1708"
      },
      {
        "$ref": "#/1709"
      },
      {
        "$ref": "#/1710"
      },
      {
        "$ref": "#/1711"
      },
      {
        "$ref": "#/1712"
      },
      {
        "$ref": "#/1713"
      },
      {
        "$ref": "#/1714"
      },
      {
        "$ref": "#/1715"
      },
      {
        "$ref": "#/1716"
      },
      {
        "$ref": "#/1717"
      },
      {
        "$ref": "#/1718"
      },
      {
        "$ref": "#/1719"
      },
      {
        "$ref": "#/1720"
      },
      {
        "$ref": "#/1721"
      },
      {
        "$ref": "#/1722"
      },
      {
        "$ref": "#/1723"
      },
      {
        "$ref": "#/1724"
      },
      {
        "$ref": "#/1725"
      },
      {
        "$ref": "#/1726"
      },
      {
        "$ref": "#/1727"
      },
      {
        "$ref": "#/1728"
      },
      {
        "$ref": "#/1729"
      },
      {
        "$ref": "#/1730"
      },
      {
        "$ref": "#/1731"
      },
      {
        "$ref": "#/1732"
      },
      {
        "$ref": "#/1733"
      },
      {
        "$ref": "#/1734"
      },
      {
        "$ref": "#/1735"
      },
      {
        "$ref": "#/1736"
      },
      {
        "$ref": "#/1737"
      },
      {
        "$ref": "#/1738"
      },
      {
        "$ref": "#/1739"
      },
      {
        "$ref": "#/1740"
      },
      {
        "$ref": "#/1741"
      },
      {
        "$ref": "#/1742"
      },
      {
        "$ref": "#/1743"
      },
      {
        "$ref": "#/1744"
      },
      {
        "$ref": "#/1745"
      },
      {
        "$ref": "#/1746"
      },
      {
        "$ref": "#/1747"
      },
      {
        "$ref": "#/1748"
      },
      {
        "$ref": "#/1749"
      },
      {
        "$ref": "#/1750"
      },
      {
        "$ref": "#/1751"
      },
      {
        "$ref": "#/1752"
      },
      {
        "$ref": "#/1753"
      },
      {
        "$ref": "#/1754"
      },
      {
        "$ref": "#/1755"
      },
      {
        "$ref": "#/1756"
      },
      {
        "$ref": "#/1757"
      },
      {
        "$ref": "#/1758"
      },
      {
        "$ref": "#/1759"
      },
      {
        "$ref": "#/1760"
      },
      {
        "$ref": "#/1761"
      },
      {
        "$ref": "#/1762"
      },
      {
        "$ref": "#/1763"
      },
      {
        "$ref": "#/1764"
      },
      {
        "$ref": "#/1765"
      },
      {
        "$ref": "#/1766"
      },
      {
        "$ref": "#/1767"
      },
      {
        "$ref": "#/1768"
      },
      {
        "$ref": "#/1769"
      },
      {
        "$ref": "#/1770"
      },
      {
        "$ref": "#/1771"
      },
      {
        "$ref": "#/1772"
      },
      {
        "$ref": "#/1773"
      },
      {
        "$ref": "#/1774"
      },
      {
        "$ref": "#/1775"
      },
      {
        "$ref": "#/1776"
      },
      {
        "$ref": "#/1777"
      },
      {
        "$ref": "#/1778"
      },
      {
        "$ref": "#/1779"
      },
      {
        "$ref": "#/1780"
      },
      {
        "$ref": "#/1781"
      },
      {
        "$ref": "#/1782"
      },
      {
        "$ref": "#/1783"
      },
      {
        "$ref": "#/1784"
      },
      {
        "$ref": "#/1785"
      },
      {
        "$ref": "#/1786"
      },
      {
        "$ref": "#/1787"
      },
      {
        "$ref": "#/1788"
      },
      {
        "$ref": "#/1789"
      },
      {
        "$ref": "#/1790"
      },
      {
        "$ref": "#/1791"
      },
      {
        "$ref": "#/1792"
      },
      {
        "$ref": "#/1793"
      },
      {
        "$ref": "#/1794"
      },
      {
        "$ref": "#/1795"
      },
      {
        "$ref": "#/1796"
      },
      {
        "$ref": "#/1797"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Azure"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureAI"
  },
  {
    "$type": "StringLiteralType",
    "value": "Database"
  },
  {
    "$type": "StringLiteralType",
    "value": "NoSQL"
  },
  {
    "$type": "StringLiteralType",
    "value": "File"
  },
  {
    "$type": "StringLiteralType",
    "value": "GenericProtocol"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicesAndApps"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1799"
      },
      {
        "$ref": "#/1800"
      },
      {
        "$ref": "#/1801"
      },
      {
        "$ref": "#/1802"
      },
      {
        "$ref": "#/1803"
      },
      {
        "$ref": "#/1804"
      },
      {
        "$ref": "#/1805"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionPropertiesV2Metadata",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "JSON"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1809"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AADAuthTypeWorkspaceConnectionProperties",
    "properties": {
      "authType": {
        "type": {
          "$ref": "#/1812"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AAD"
  },
  {
    "$type": "ObjectType",
    "name": "AccessKeyAuthTypeWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/1814"
        },
        "flags": 0
      },
      "authType": {
        "type": {
          "$ref": "#/1815"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionAccessKey",
    "properties": {
      "accessKeyId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "secretAccessKey": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AccessKey"
  },
  {
    "$type": "ObjectType",
    "name": "AccountKeyAuthTypeWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/1817"
        },
        "flags": 0
      },
      "authType": {
        "type": {
          "$ref": "#/1818"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionAccountKey",
    "properties": {
      "key": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AccountKey"
  },
  {
    "$type": "ObjectType",
    "name": "ApiKeyAuthWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/1820"
        },
        "flags": 0,
        "description": "Api key object for workspace connection credential."
      },
      "authType": {
        "type": {
          "$ref": "#/1821"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionApiKey",
    "properties": {
      "key": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ApiKey"
  },
  {
    "$type": "ObjectType",
    "name": "CustomKeysWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/1823"
        },
        "flags": 0,
        "description": "Custom Keys credential object"
      },
      "authType": {
        "type": {
          "$ref": "#/1825"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomKeys",
    "properties": {
      "keys": {
        "type": {
          "$ref": "#/1824"
        },
        "flags": 0,
        "description": "Dictionary of <string>"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomKeys",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CustomKeys"
  },
  {
    "$type": "ObjectType",
    "name": "ManagedIdentityAuthTypeWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/1827"
        },
        "flags": 0
      },
      "authType": {
        "type": {
          "$ref": "#/1828"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionManagedIdentity",
    "properties": {
      "resourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "clientId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "ObjectType",
    "name": "NoneAuthTypeWorkspaceConnectionProperties",
    "properties": {
      "authType": {
        "type": {
          "$ref": "#/1830"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "ObjectType",
    "name": "OAuth2AuthTypeWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/1832"
        },
        "flags": 0,
        "description": "ClientId and ClientSecret are required. Other properties are optional\r\ndepending on each OAuth2 provider's implementation."
      },
      "authType": {
        "type": {
          "$ref": "#/1833"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionOAuth2",
    "properties": {
      "authUrl": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Required by Concur connection category"
      },
      "clientId": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Client id in the format of UUID"
      },
      "clientSecret": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0
      },
      "developerToken": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Required by GoogleAdWords connection category"
      },
      "password": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0
      },
      "refreshToken": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho\r\nwhere user needs to get RefreshToken offline"
      },
      "tenantId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Required by QuickBooks and Xero connection categories"
      },
      "username": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Concur, ServiceNow auth server AccessToken grant type is 'Password'\r\nwhich requires UsernamePassword"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "OAuth2"
  },
  {
    "$type": "ObjectType",
    "name": "PATAuthTypeWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/1835"
        },
        "flags": 0
      },
      "authType": {
        "type": {
          "$ref": "#/1836"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionPersonalAccessToken",
    "properties": {
      "pat": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "PAT"
  },
  {
    "$type": "ObjectType",
    "name": "SASAuthTypeWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/1838"
        },
        "flags": 0
      },
      "authType": {
        "type": {
          "$ref": "#/1839"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionSharedAccessSignature",
    "properties": {
      "sas": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SAS"
  },
  {
    "$type": "ObjectType",
    "name": "ServicePrincipalAuthTypeWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/1841"
        },
        "flags": 0
      },
      "authType": {
        "type": {
          "$ref": "#/1842"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionServicePrincipal",
    "properties": {
      "clientId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "clientSecret": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0
      },
      "tenantId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicePrincipal"
  },
  {
    "$type": "ObjectType",
    "name": "UsernamePasswordAuthTypeWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/1844"
        },
        "flags": 0
      },
      "authType": {
        "type": {
          "$ref": "#/1845"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionUsernamePassword",
    "properties": {
      "username": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "password": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0
      },
      "securityToken": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Optional, required by connections like SalesForce for extra security in addition to UsernamePassword"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "UsernamePassword"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/connections@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/1694"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/outboundRules"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/outboundRules",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/1593"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1847"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1848"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/1651"
        },
        "flags": 1,
        "description": "Outbound Rule for the managed network of a machine learning workspace."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/outboundRules@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/1849"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/featuresets/versions/features"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/featuresets/versions/features",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1851"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1852"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/1854"
        },
        "flags": 2,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeatureProperties",
    "properties": {
      "featureName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies name"
      },
      "dataType": {
        "type": {
          "$ref": "#/1863"
        },
        "flags": 0,
        "description": "Specifies type"
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "tags": {
        "type": {
          "$ref": "#/1864"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "properties": {
        "type": {
          "$ref": "#/1865"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "String"
  },
  {
    "$type": "StringLiteralType",
    "value": "Integer"
  },
  {
    "$type": "StringLiteralType",
    "value": "Long"
  },
  {
    "$type": "StringLiteralType",
    "value": "Float"
  },
  {
    "$type": "StringLiteralType",
    "value": "Double"
  },
  {
    "$type": "StringLiteralType",
    "value": "Binary"
  },
  {
    "$type": "StringLiteralType",
    "value": "Datetime"
  },
  {
    "$type": "StringLiteralType",
    "value": "Boolean"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1855"
      },
      {
        "$ref": "#/1856"
      },
      {
        "$ref": "#/1857"
      },
      {
        "$ref": "#/1858"
      },
      {
        "$ref": "#/1859"
      },
      {
        "$ref": "#/1860"
      },
      {
        "$ref": "#/1861"
      },
      {
        "$ref": "#/1862"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/featuresets/versions/features@2024-04-01",
    "scopeType": 8,
    "body": {
      "$ref": "#/1853"
    },
    "flags": 1
  },
  {
    "$type": "ObjectType",
    "name": "QuotaUpdateParameters",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/1871"
        },
        "flags": 0,
        "description": "The list for update quota."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Region of workspace quota to be updated."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "QuotaBaseProperties",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the resource ID."
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the resource type."
      },
      "limit": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The maximum permitted quota of the resource."
      },
      "unit": {
        "type": {
          "$ref": "#/1870"
        },
        "flags": 0,
        "description": "An enum describing the unit of quota measurement."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Count"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1869"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1868"
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateWorkspaceQuotasResult",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/1885"
        },
        "flags": 2,
        "description": "The list of workspace quota update result."
      },
      "nextLink": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The URI to fetch the next page of workspace quota update result. Call ListNext() with this to fetch the next page of Workspace Quota update result."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateWorkspaceQuotas",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Specifies the resource ID."
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Specifies the resource type."
      },
      "limit": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The maximum permitted quota of the resource."
      },
      "unit": {
        "type": {
          "$ref": "#/1875"
        },
        "flags": 2,
        "description": "An enum describing the unit of quota measurement."
      },
      "status": {
        "type": {
          "$ref": "#/1884"
        },
        "flags": 0,
        "description": "Status of update workspace quota."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Count"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1874"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Undefined"
  },
  {
    "$type": "StringLiteralType",
    "value": "Success"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failure"
  },
  {
    "$type": "StringLiteralType",
    "value": "InvalidQuotaBelowClusterMinimum"
  },
  {
    "$type": "StringLiteralType",
    "value": "InvalidQuotaExceedsSubscriptionLimit"
  },
  {
    "$type": "StringLiteralType",
    "value": "InvalidVMFamilyName"
  },
  {
    "$type": "StringLiteralType",
    "value": "OperationNotSupportedForSku"
  },
  {
    "$type": "StringLiteralType",
    "value": "OperationNotEnabledForRegion"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1876"
      },
      {
        "$ref": "#/1877"
      },
      {
        "$ref": "#/1878"
      },
      {
        "$ref": "#/1879"
      },
      {
        "$ref": "#/1880"
      },
      {
        "$ref": "#/1881"
      },
      {
        "$ref": "#/1882"
      },
      {
        "$ref": "#/1883"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1873"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "updateQuotas",
    "resourceType": "Microsoft.MachineLearningServices/locations",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/1872"
    },
    "input": {
      "$ref": "#/1867"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AmlComputeNodesInformation",
    "properties": {
      "nodes": {
        "type": {
          "$ref": "#/1896"
        },
        "flags": 2,
        "description": "The collection of returned AmlCompute nodes details."
      },
      "nextLink": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The continuation token."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AmlComputeNodeInformation",
    "properties": {
      "nodeId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "ID of the compute node."
      },
      "privateIpAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Private IP address of the compute node."
      },
      "publicIpAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Public IP address of the compute node."
      },
      "port": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 2,
        "description": "SSH port number of the node."
      },
      "nodeState": {
        "type": {
          "$ref": "#/1895"
        },
        "flags": 2,
        "description": "State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted."
      },
      "runId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "ID of the Experiment running on the node, if any else null."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "idle"
  },
  {
    "$type": "StringLiteralType",
    "value": "running"
  },
  {
    "$type": "StringLiteralType",
    "value": "preparing"
  },
  {
    "$type": "StringLiteralType",
    "value": "unusable"
  },
  {
    "$type": "StringLiteralType",
    "value": "leaving"
  },
  {
    "$type": "StringLiteralType",
    "value": "preempted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1889"
      },
      {
        "$ref": "#/1890"
      },
      {
        "$ref": "#/1891"
      },
      {
        "$ref": "#/1892"
      },
      {
        "$ref": "#/1893"
      },
      {
        "$ref": "#/1894"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1888"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listNodes",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/computes",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/1887"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ComputeSecrets",
    "discriminator": "computeType",
    "baseProperties": {},
    "elements": {
      "AKS": {
        "$ref": "#/1899"
      },
      "Databricks": {
        "$ref": "#/1901"
      },
      "VirtualMachine": {
        "$ref": "#/1903"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AksComputeSecrets",
    "properties": {
      "userKubeConfig": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Content of kubeconfig file that can be used to connect to the Kubernetes cluster."
      },
      "adminKubeConfig": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Content of kubeconfig file that can be used to connect to the Kubernetes cluster."
      },
      "imagePullSecretName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Image registry pull secret."
      },
      "computeType": {
        "type": {
          "$ref": "#/1900"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AKS"
  },
  {
    "$type": "ObjectType",
    "name": "DatabricksComputeSecrets",
    "properties": {
      "databricksAccessToken": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "access token for databricks account."
      },
      "computeType": {
        "type": {
          "$ref": "#/1902"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Databricks"
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineSecrets",
    "properties": {
      "administratorAccount": {
        "type": {
          "$ref": "#/272"
        },
        "flags": 0,
        "description": "Admin credentials for virtual machine."
      },
      "computeType": {
        "type": {
          "$ref": "#/1904"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "VirtualMachine"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/computes",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/1898"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "start",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/computes",
    "apiVersion": "2024-04-01"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "stop",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/computes",
    "apiVersion": "2024-04-01"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "restart",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/computes",
    "apiVersion": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "PendingUploadRequestDto",
    "properties": {
      "pendingUploadId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "If PendingUploadId = null then random guid will be used."
      },
      "pendingUploadType": {
        "type": {
          "$ref": "#/1912"
        },
        "flags": 0,
        "description": "TemporaryBlobReference is the only supported type"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "TemporaryBlobReference"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1910"
      },
      {
        "$ref": "#/1911"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "PendingUploadResponseDto",
    "properties": {
      "blobReferenceForConsumption": {
        "type": {
          "$ref": "#/1914"
        },
        "flags": 0,
        "description": "Container level read, write, list SAS"
      },
      "pendingUploadId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "ID for this upload request"
      },
      "pendingUploadType": {
        "type": {
          "$ref": "#/1920"
        },
        "flags": 0,
        "description": "TemporaryBlobReference is the only supported type"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BlobReferenceForConsumptionDto",
    "properties": {
      "blobUri": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Blob URI path for client to upload data.\r\nExample: https://blob.windows.core.net/Container/Path"
      },
      "storageAccountArmId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Arm ID of the storage account to use"
      },
      "credential": {
        "type": {
          "$ref": "#/1915"
        },
        "flags": 0,
        "description": "Credential info to access storage account"
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "PendingUploadCredentialDto",
    "discriminator": "credentialType",
    "baseProperties": {},
    "elements": {
      "SAS": {
        "$ref": "#/1916"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SASCredentialDto",
    "properties": {
      "sasUri": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Full SAS Uri, including the storage, container/blob path and SAS token"
      },
      "credentialType": {
        "type": {
          "$ref": "#/1917"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SAS"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "TemporaryBlobReference"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1918"
      },
      {
        "$ref": "#/1919"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceFunctionType",
    "name": "startPendingUpload",
    "resourceType": "Microsoft.MachineLearningServices/registries/codes/versions",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/1913"
    },
    "input": {
      "$ref": "#/1909"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "startPendingUpload",
    "resourceType": "Microsoft.MachineLearningServices/registries/data/versions",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/1913"
    },
    "input": {
      "$ref": "#/1909"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "startPendingUpload",
    "resourceType": "Microsoft.MachineLearningServices/registries/models/versions",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/1913"
    },
    "input": {
      "$ref": "#/1909"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listkeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/batchEndpoints",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/463"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DestinationAsset",
    "properties": {
      "registryName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Destination registry name"
      },
      "destinationName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Destination asset name"
      },
      "destinationVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Destination asset version"
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "publish",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/codes/versions",
    "apiVersion": "2024-04-01",
    "input": {
      "$ref": "#/1925"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "startPendingUpload",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/codes/versions",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/1913"
    },
    "input": {
      "$ref": "#/1909"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "publish",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/components/versions",
    "apiVersion": "2024-04-01",
    "input": {
      "$ref": "#/1925"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "publish",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/data/versions",
    "apiVersion": "2024-04-01",
    "input": {
      "$ref": "#/1925"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DatastoreSecrets",
    "discriminator": "secretsType",
    "baseProperties": {},
    "elements": {
      "AccountKey": {
        "$ref": "#/1931"
      },
      "Certificate": {
        "$ref": "#/1933"
      },
      "Sas": {
        "$ref": "#/1935"
      },
      "ServicePrincipal": {
        "$ref": "#/1937"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AccountKeyDatastoreSecrets",
    "properties": {
      "key": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Storage account key."
      },
      "secretsType": {
        "type": {
          "$ref": "#/1932"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AccountKey"
  },
  {
    "$type": "ObjectType",
    "name": "CertificateDatastoreSecrets",
    "properties": {
      "certificate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Service principal certificate."
      },
      "secretsType": {
        "type": {
          "$ref": "#/1934"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Certificate"
  },
  {
    "$type": "ObjectType",
    "name": "SasDatastoreSecrets",
    "properties": {
      "sasToken": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Storage container SAS token."
      },
      "secretsType": {
        "type": {
          "$ref": "#/1936"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Sas"
  },
  {
    "$type": "ObjectType",
    "name": "ServicePrincipalDatastoreSecrets",
    "properties": {
      "clientSecret": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Service principal secret."
      },
      "secretsType": {
        "type": {
          "$ref": "#/1938"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicePrincipal"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listSecrets",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/datastores",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/1930"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "publish",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/environments/versions",
    "apiVersion": "2024-04-01",
    "input": {
      "$ref": "#/1925"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturesetVersionBackfillRequest",
    "properties": {
      "displayName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies description"
      },
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies description"
      },
      "featureWindow": {
        "type": {
          "$ref": "#/1942"
        },
        "flags": 0,
        "description": "Specifies the backfill feature window to be materialized"
      },
      "dataAvailabilityStatus": {
        "type": {
          "$ref": "#/1948"
        },
        "flags": 0,
        "description": "Specified the data availability status that you want to backfill"
      },
      "jobId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specify the jobId to retry the failed materialization"
      },
      "tags": {
        "type": {
          "$ref": "#/1949"
        },
        "flags": 0,
        "description": "Specifies the tags"
      },
      "resource": {
        "type": {
          "$ref": "#/676"
        },
        "flags": 0,
        "description": "Specifies the compute resource settings"
      },
      "sparkConfiguration": {
        "type": {
          "$ref": "#/1950"
        },
        "flags": 0,
        "description": "Specifies the spark compute settings"
      },
      "properties": {
        "type": {
          "$ref": "#/1951"
        },
        "flags": 0,
        "description": "Specifies the properties"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeatureWindow",
    "properties": {
      "featureWindowStart": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the feature window start time"
      },
      "featureWindowEnd": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the feature window end time"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Incomplete"
  },
  {
    "$type": "StringLiteralType",
    "value": "Complete"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1943"
      },
      {
        "$ref": "#/1944"
      },
      {
        "$ref": "#/1945"
      },
      {
        "$ref": "#/1946"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1947"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturesetVersionBackfillRequestTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturesetVersionBackfillRequestSparkConfiguration",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturesetVersionBackfillRequestProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturesetVersionBackfillResponse",
    "properties": {
      "jobIds": {
        "type": {
          "$ref": "#/1953"
        },
        "flags": 0,
        "description": "List of jobs submitted as part of the backfill request."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "backfill",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/featuresets/versions",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/1952"
    },
    "input": {
      "$ref": "#/1941"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "cancel",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/jobs",
    "apiVersion": "2024-04-01"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "publish",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/models/versions",
    "apiVersion": "2024-04-01",
    "input": {
      "$ref": "#/1925"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/463"
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegenerateEndpointKeysRequest",
    "properties": {
      "keyType": {
        "type": {
          "$ref": "#/1961"
        },
        "flags": 1,
        "description": "[Required] Specification for which type of key to generate. Primary or Secondary."
      },
      "keyValue": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The value the key is set to."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Primary"
  },
  {
    "$type": "StringLiteralType",
    "value": "Secondary"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1959"
      },
      {
        "$ref": "#/1960"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ResourceFunctionType",
    "name": "regenerateKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints",
    "apiVersion": "2024-04-01",
    "input": {
      "$ref": "#/1958"
    }
  },
  {
    "$type": "ObjectType",
    "name": "EndpointAuthToken",
    "properties": {
      "accessToken": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Access token for endpoint authentication."
      },
      "tokenType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Access token type."
      },
      "expiryTimeUtc": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Access token expiry time (UTC)."
      },
      "refreshAfterTimeUtc": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Refresh access token after time (UTC)."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "token",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/1963"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentLogsRequest",
    "properties": {
      "containerType": {
        "type": {
          "$ref": "#/1968"
        },
        "flags": 0,
        "description": "The type of container to retrieve logs from."
      },
      "tail": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The maximum number of lines to tail."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "StorageInitializer"
  },
  {
    "$type": "StringLiteralType",
    "value": "InferenceServer"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1966"
      },
      {
        "$ref": "#/1967"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentLogs",
    "properties": {
      "content": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The retrieved online deployment logs."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "getLogs",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints/deployments",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/1969"
    },
    "input": {
      "$ref": "#/1965"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/serverlessEndpoints",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/463"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "regenerateKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/serverlessEndpoints",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/463"
    },
    "input": {
      "$ref": "#/1958"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Registry",
    "properties": {
      "identity": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "properties": {
        "type": {
          "$ref": "#/1570"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "sku": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/1974"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "removeRegions",
    "resourceType": "Microsoft.MachineLearningServices/registries",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/1973"
    },
    "input": {
      "$ref": "#/1973"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseWorkspaceParameters",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/1977"
        },
        "flags": 0,
        "description": "Value of Parameters"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestProperties",
    "properties": {
      "udr": {
        "type": {
          "$ref": "#/1978"
        },
        "flags": 0,
        "description": "Setting for diagnosing user defined routing"
      },
      "nsg": {
        "type": {
          "$ref": "#/1979"
        },
        "flags": 0,
        "description": "Setting for diagnosing network security group"
      },
      "resourceLock": {
        "type": {
          "$ref": "#/1980"
        },
        "flags": 0,
        "description": "Setting for diagnosing resource lock"
      },
      "dnsResolution": {
        "type": {
          "$ref": "#/1981"
        },
        "flags": 0,
        "description": "Setting for diagnosing dns resolution"
      },
      "storageAccount": {
        "type": {
          "$ref": "#/1982"
        },
        "flags": 0,
        "description": "Setting for diagnosing dependent storage account"
      },
      "keyVault": {
        "type": {
          "$ref": "#/1983"
        },
        "flags": 0,
        "description": "Setting for diagnosing dependent key vault"
      },
      "containerRegistry": {
        "type": {
          "$ref": "#/1984"
        },
        "flags": 0,
        "description": "Setting for diagnosing dependent container registry"
      },
      "applicationInsights": {
        "type": {
          "$ref": "#/1985"
        },
        "flags": 0,
        "description": "Setting for diagnosing dependent application insights"
      },
      "others": {
        "type": {
          "$ref": "#/1986"
        },
        "flags": 0,
        "description": "Setting for diagnosing unclassified category of problems"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesUdr",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesNsg",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesResourceLock",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesDnsResolution",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesStorageAccount",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesKeyVault",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesContainerRegistry",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesApplicationInsights",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesOthers",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseResponseResult",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/1988"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseResponseResultValue",
    "properties": {
      "userDefinedRouteResults": {
        "type": {
          "$ref": "#/1994"
        },
        "flags": 0
      },
      "networkSecurityRuleResults": {
        "type": {
          "$ref": "#/1995"
        },
        "flags": 0
      },
      "resourceLockResults": {
        "type": {
          "$ref": "#/1996"
        },
        "flags": 0
      },
      "dnsResolutionResults": {
        "type": {
          "$ref": "#/1997"
        },
        "flags": 0
      },
      "storageAccountResults": {
        "type": {
          "$ref": "#/1998"
        },
        "flags": 0
      },
      "keyVaultResults": {
        "type": {
          "$ref": "#/1999"
        },
        "flags": 0
      },
      "containerRegistryResults": {
        "type": {
          "$ref": "#/2000"
        },
        "flags": 0
      },
      "applicationInsightsResults": {
        "type": {
          "$ref": "#/2001"
        },
        "flags": 0
      },
      "otherResults": {
        "type": {
          "$ref": "#/2002"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseResult",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Code for workspace setup error"
      },
      "level": {
        "type": {
          "$ref": "#/1993"
        },
        "flags": 2,
        "description": "Level of workspace setup error"
      },
      "message": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Message of workspace setup error"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Warning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "StringLiteralType",
    "value": "Information"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1990"
      },
      {
        "$ref": "#/1991"
      },
      {
        "$ref": "#/1992"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1989"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1989"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1989"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1989"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1989"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1989"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1989"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1989"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1989"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "diagnose",
    "resourceType": "Microsoft.MachineLearningServices/workspaces",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/1987"
    },
    "input": {
      "$ref": "#/1976"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ListWorkspaceKeysResult",
    "properties": {
      "userStorageKey": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 2
      },
      "userStorageResourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2
      },
      "appInsightsInstrumentationKey": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 2
      },
      "containerRegistryCredentials": {
        "type": {
          "$ref": "#/2005"
        },
        "flags": 2
      },
      "notebookAccessKeys": {
        "type": {
          "$ref": "#/2008"
        },
        "flags": 2
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryListCredentialsResult",
    "properties": {
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2
      },
      "username": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2
      },
      "passwords": {
        "type": {
          "$ref": "#/2007"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Password",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2006"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ListNotebookKeysResult",
    "properties": {
      "primaryAccessKey": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 2
      },
      "secondaryAccessKey": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 2
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/2004"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "resyncKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces",
    "apiVersion": "2024-04-01"
  },
  {
    "$type": "ObjectType",
    "name": "NotebookAccessTokenResult",
    "properties": {
      "notebookResourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2
      },
      "hostName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2
      },
      "publicDns": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2
      },
      "accessToken": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 2
      },
      "tokenType": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2
      },
      "expiresIn": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 2
      },
      "refreshToken": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 2
      },
      "scope": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listNotebookAccessToken",
    "resourceType": "Microsoft.MachineLearningServices/workspaces",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/2011"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "prepareNotebook",
    "resourceType": "Microsoft.MachineLearningServices/workspaces",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/1642"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ListStorageAccountKeysResult",
    "properties": {
      "userStorageKey": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 2
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listStorageAccountKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/2014"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listNotebookKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/2008"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedNetworkProvisionOptions",
    "properties": {
      "includeSpark": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "provisionManagedNetwork",
    "resourceType": "Microsoft.MachineLearningServices/workspaces",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/1676"
    },
    "input": {
      "$ref": "#/2017"
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionPropertiesV2BasicResource",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/1695"
        },
        "flags": 1
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listsecrets",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/connections",
    "apiVersion": "2024-04-01",
    "output": {
      "$ref": "#/2019"
    }
  }
]