[
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z](?![a-zA-Z0-9-]*-\\d+$)[a-zA-Z0-9\\-]{2,23}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/computes"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/computes",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "The identity of the resource."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies the location of the resource."
      },
      "tags": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "Contains resource tags defined as key/value pairs."
      },
      "sku": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "The sku of the workspace."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      },
      "properties": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Compute properties"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedServiceIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "tenantId": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "type": {
        "type": {
          "$ref": "#/11"
        },
        "flags": 1,
        "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."
      },
      "userAssignedIdentities": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0,
        "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 36,
    "maxLength": 36,
    "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned,UserAssigned"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "The principal ID of the assigned identity."
      },
      "clientId": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "The client ID of the assigned identity."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentities",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/12"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Sku",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
      },
      "tier": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
      },
      "size": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code."
      },
      "family": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
      },
      "capacity": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Free"
  },
  {
    "$type": "StringLiteralType",
    "value": "Basic"
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard"
  },
  {
    "$type": "StringLiteralType",
    "value": "Premium"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/16"
      },
      {
        "$ref": "#/17"
      },
      {
        "$ref": "#/18"
      },
      {
        "$ref": "#/19"
      }
    ]
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/23"
      },
      {
        "$ref": "#/24"
      },
      {
        "$ref": "#/25"
      },
      {
        "$ref": "#/26"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/28"
      },
      {
        "$ref": "#/29"
      },
      {
        "$ref": "#/30"
      },
      {
        "$ref": "#/31"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Compute",
    "discriminator": "computeType",
    "baseProperties": {
      "computeLocation": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Location for the underlying compute"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 2,
        "description": "The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The description of the Machine Learning compute."
      },
      "createdOn": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time at which the compute was created."
      },
      "modifiedOn": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time at which the compute was last modified."
      },
      "resourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM resource id of the underlying compute"
      },
      "provisioningErrors": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 2,
        "description": "Errors during provisioning"
      },
      "isAttachedCompute": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 2,
        "description": "Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false."
      },
      "disableLocalAuth": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication."
      }
    },
    "elements": {
      "AKS": {
        "$ref": "#/50"
      },
      "AmlCompute": {
        "$ref": "#/72"
      },
      "ComputeInstance": {
        "$ref": "#/94"
      },
      "DataFactory": {
        "$ref": "#/279"
      },
      "DataLakeAnalytics": {
        "$ref": "#/281"
      },
      "Databricks": {
        "$ref": "#/284"
      },
      "HDInsight": {
        "$ref": "#/287"
      },
      "Kubernetes": {
        "$ref": "#/291"
      },
      "SynapseSpark": {
        "$ref": "#/300"
      },
      "VirtualMachine": {
        "$ref": "#/305"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/34"
      },
      {
        "$ref": "#/35"
      },
      {
        "$ref": "#/36"
      },
      {
        "$ref": "#/37"
      },
      {
        "$ref": "#/38"
      },
      {
        "$ref": "#/39"
      },
      {
        "$ref": "#/40"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ErrorResponse",
    "properties": {
      "error": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "The error object."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ErrorDetail",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error code."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error message."
      },
      "target": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error target."
      },
      "details": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 2,
        "description": "The error details."
      },
      "additionalInfo": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 2,
        "description": "The error additional info."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/43"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ErrorAdditionalInfo",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The additional info type."
      },
      "info": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 2,
        "description": "The additional info."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/42"
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ObjectType",
    "name": "AKS",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 0,
        "description": "AKS properties"
      },
      "computeType": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AKSSchemaProperties",
    "properties": {
      "clusterFqdn": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Cluster full qualified domain name"
      },
      "systemServices": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 2,
        "description": "System services"
      },
      "agentCount": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 0,
        "description": "Number of agents"
      },
      "agentVmSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Agent virtual machine size"
      },
      "clusterPurpose": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 0,
        "description": "Intended usage of the cluster"
      },
      "sslConfiguration": {
        "type": {
          "$ref": "#/59"
        },
        "flags": 0,
        "description": "SSL configuration"
      },
      "aksNetworkingConfiguration": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 0,
        "description": "AKS networking configuration for vnet"
      },
      "loadBalancerType": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 0,
        "description": "Load Balancer Type"
      },
      "loadBalancerSubnet": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Load Balancer Subnet"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemService",
    "properties": {
      "systemServiceType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The type of this system service."
      },
      "publicIpAddress": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Public IP address"
      },
      "version": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The version for this type."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/52"
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "FastProd"
  },
  {
    "$type": "StringLiteralType",
    "value": "DenseProd"
  },
  {
    "$type": "StringLiteralType",
    "value": "DevTest"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/55"
      },
      {
        "$ref": "#/56"
      },
      {
        "$ref": "#/57"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SslConfiguration",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "Enable or disable ssl for scoring"
      },
      "cert": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Cert data"
      },
      "key": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Key data"
      },
      "cname": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "CNAME of the cert"
      },
      "leafDomainLabel": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Leaf domain label of public endpoint"
      },
      "overwriteExistingDomain": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Indicates whether to overwrite existing domain label."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/60"
      },
      {
        "$ref": "#/61"
      },
      {
        "$ref": "#/62"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringType",
    "sensitive": true
  },
  {
    "$type": "ObjectType",
    "name": "AksNetworkingConfiguration",
    "properties": {
      "subnetId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Virtual network subnet resource ID the compute nodes belong to"
      },
      "serviceCidr": {
        "type": {
          "$ref": "#/66"
        },
        "flags": 0,
        "description": "A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges."
      },
      "dnsServiceIP": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 0,
        "description": "An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr."
      },
      "dockerBridgeCidr": {
        "type": {
          "$ref": "#/66"
        },
        "flags": 0,
        "description": "A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
  },
  {
    "$type": "StringType",
    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
  },
  {
    "$type": "StringLiteralType",
    "value": "PublicIp"
  },
  {
    "$type": "StringLiteralType",
    "value": "InternalLoadBalancer"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/68"
      },
      {
        "$ref": "#/69"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "AKS"
  },
  {
    "$type": "ObjectType",
    "name": "AmlCompute",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/73"
        },
        "flags": 0,
        "description": "Properties of AmlCompute"
      },
      "computeType": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AmlComputeProperties",
    "properties": {
      "osType": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 0,
        "description": "Compute OS Type"
      },
      "vmSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Virtual Machine Size"
      },
      "vmPriority": {
        "type": {
          "$ref": "#/79"
        },
        "flags": 0,
        "description": "Virtual Machine priority"
      },
      "virtualMachineImage": {
        "type": {
          "$ref": "#/80"
        },
        "flags": 0,
        "description": "Virtual Machine image for AML Compute - windows only"
      },
      "isolatedNetwork": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Network is isolated or not"
      },
      "scaleSettings": {
        "type": {
          "$ref": "#/81"
        },
        "flags": 0,
        "description": "Scale settings for AML Compute"
      },
      "userAccountCredentials": {
        "type": {
          "$ref": "#/82"
        },
        "flags": 0,
        "description": "Credentials for an administrator user account that will be created on each compute node."
      },
      "subnet": {
        "type": {
          "$ref": "#/83"
        },
        "flags": 0,
        "description": "Virtual network subnet resource ID the compute nodes belong to."
      },
      "remoteLoginPortPublicAccess": {
        "type": {
          "$ref": "#/87"
        },
        "flags": 0,
        "description": "State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled."
      },
      "allocationState": {
        "type": {
          "$ref": "#/90"
        },
        "flags": 2,
        "description": "Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute."
      },
      "allocationStateTransitionTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time at which the compute entered its current allocation state."
      },
      "errors": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 2,
        "description": "Collection of errors encountered by various compute nodes during node setup."
      },
      "currentNodeCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "The number of compute nodes currently assigned to the compute."
      },
      "targetNodeCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation."
      },
      "nodeStateCounts": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 2,
        "description": "Counts of various node states on the compute."
      },
      "enableNodePublicIp": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs."
      },
      "propertyBag": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 0,
        "description": "A property bag containing additional properties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Linux"
  },
  {
    "$type": "StringLiteralType",
    "value": "Windows"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/74"
      },
      {
        "$ref": "#/75"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Dedicated"
  },
  {
    "$type": "StringLiteralType",
    "value": "LowPriority"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/77"
      },
      {
        "$ref": "#/78"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineImage",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Virtual Machine image path"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScaleSettings",
    "properties": {
      "maxNodeCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "Max number of nodes to use"
      },
      "minNodeCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Min number of nodes to use"
      },
      "nodeIdleTimeBeforeScaleDown": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UserAccountCredentials",
    "properties": {
      "adminUserName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Name of the administrator user account which can be used to SSH to nodes."
      },
      "adminUserSshPublicKey": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "SSH public key of the administrator user account."
      },
      "adminUserPassword": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Password of the administrator user account."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceId",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The ID of the resource"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/84"
      },
      {
        "$ref": "#/85"
      },
      {
        "$ref": "#/86"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Steady"
  },
  {
    "$type": "StringLiteralType",
    "value": "Resizing"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/88"
      },
      {
        "$ref": "#/89"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/42"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NodeStateCounts",
    "properties": {
      "idleNodeCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Number of compute nodes in idle state."
      },
      "runningNodeCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Number of compute nodes which are running jobs."
      },
      "preparingNodeCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Number of compute nodes which are being prepared."
      },
      "unusableNodeCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Number of compute nodes which are in unusable state."
      },
      "leavingNodeCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Number of compute nodes which are leaving the amlCompute."
      },
      "preemptedNodeCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Number of compute nodes which are in preempted state."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AmlCompute"
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstance",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/95"
        },
        "flags": 0,
        "description": "Properties of ComputeInstance"
      },
      "computeType": {
        "type": {
          "$ref": "#/278"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceProperties",
    "properties": {
      "vmSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Virtual Machine Size"
      },
      "subnet": {
        "type": {
          "$ref": "#/83"
        },
        "flags": 0,
        "description": "Virtual network subnet resource ID the compute nodes belong to."
      },
      "applicationSharingPolicy": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 0,
        "description": "Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role."
      },
      "autologgerSettings": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 0,
        "description": "Specifies settings for autologger."
      },
      "sshSettings": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 0,
        "description": "Specifies policy and settings for SSH access."
      },
      "customServices": {
        "type": {
          "$ref": "#/135"
        },
        "flags": 0,
        "description": "List of Custom Services added to the compute."
      },
      "osImageMetadata": {
        "type": {
          "$ref": "#/136"
        },
        "flags": 2,
        "description": "Returns metadata about the operating system image for this compute instance."
      },
      "connectivityEndpoints": {
        "type": {
          "$ref": "#/144"
        },
        "flags": 2,
        "description": "Describes all connectivity endpoints available for this ComputeInstance."
      },
      "applications": {
        "type": {
          "$ref": "#/146"
        },
        "flags": 2,
        "description": "Describes available applications and their endpoints on this ComputeInstance."
      },
      "createdBy": {
        "type": {
          "$ref": "#/147"
        },
        "flags": 2,
        "description": "Describes information on user who created this ComputeInstance."
      },
      "errors": {
        "type": {
          "$ref": "#/148"
        },
        "flags": 2,
        "description": "Collection of errors encountered on this ComputeInstance."
      },
      "state": {
        "type": {
          "$ref": "#/165"
        },
        "flags": 2,
        "description": "The current state of this ComputeInstance."
      },
      "computeInstanceAuthorizationType": {
        "type": {
          "$ref": "#/167"
        },
        "flags": 0,
        "description": "The Compute Instance Authorization type. Available values are personal (default)."
      },
      "enableOSPatching": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable Auto OS Patching. Possible values are: true, false."
      },
      "enableRootAccess": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable root access. Possible values are: true, false."
      },
      "enableSSO": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable SSO (single sign on). Possible values are: true, false."
      },
      "releaseQuotaOnStop": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Release quota if compute instance stopped. Possible values are: true - release quota if compute instance stopped. false - don't release quota when compute instance stopped."
      },
      "personalComputeInstanceSettings": {
        "type": {
          "$ref": "#/168"
        },
        "flags": 0,
        "description": "Settings for a personal compute instance."
      },
      "setupScripts": {
        "type": {
          "$ref": "#/170"
        },
        "flags": 0,
        "description": "Details of customized scripts to execute for setting up the cluster."
      },
      "lastOperation": {
        "type": {
          "$ref": "#/173"
        },
        "flags": 2,
        "description": "The last operation on ComputeInstance."
      },
      "schedules": {
        "type": {
          "$ref": "#/196"
        },
        "flags": 0,
        "description": "The list of schedules to be applied on the computes."
      },
      "idleTimeBeforeShutdown": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Stops compute instance after user defined period of inactivity. Time is defined in ISO8601 format. Minimum is 15 min, maximum is 3 days."
      },
      "enableNodePublicIp": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs."
      },
      "containers": {
        "type": {
          "$ref": "#/251"
        },
        "flags": 2,
        "description": "Describes informations of containers on this ComputeInstance."
      },
      "dataDisks": {
        "type": {
          "$ref": "#/260"
        },
        "flags": 2,
        "description": "Describes informations of dataDisks on this ComputeInstance."
      },
      "dataMounts": {
        "type": {
          "$ref": "#/276"
        },
        "flags": 2,
        "description": "Describes informations of dataMounts on this ComputeInstance."
      },
      "versions": {
        "type": {
          "$ref": "#/277"
        },
        "flags": 2,
        "description": "ComputeInstance version."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Personal"
  },
  {
    "$type": "StringLiteralType",
    "value": "Shared"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/96"
      },
      {
        "$ref": "#/97"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceAutologgerSettings",
    "properties": {
      "mlflowAutologger": {
        "type": {
          "$ref": "#/102"
        },
        "flags": 0,
        "description": "Indicates whether mlflow autologger is enabled for notebooks."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/100"
      },
      {
        "$ref": "#/101"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceSshSettings",
    "properties": {
      "sshPublicAccess": {
        "type": {
          "$ref": "#/106"
        },
        "flags": 0,
        "description": "State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable."
      },
      "adminUserName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Describes the admin user name."
      },
      "sshPort": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Describes the port for connecting through SSH."
      },
      "adminPublicKey": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/104"
      },
      {
        "$ref": "#/105"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CustomService",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the Custom Service"
      },
      "image": {
        "type": {
          "$ref": "#/108"
        },
        "flags": 0,
        "description": "Describes the Image Specifications"
      },
      "environmentVariables": {
        "type": {
          "$ref": "#/115"
        },
        "flags": 0,
        "description": "Environment Variable for the container"
      },
      "docker": {
        "type": {
          "$ref": "#/116"
        },
        "flags": 0,
        "description": "Describes the docker settings for the image"
      },
      "endpoints": {
        "type": {
          "$ref": "#/122"
        },
        "flags": 0,
        "description": "Configuring the endpoints for the container"
      },
      "volumes": {
        "type": {
          "$ref": "#/132"
        },
        "flags": 0,
        "description": "Configuring the volumes for the container"
      },
      "kernel": {
        "type": {
          "$ref": "#/133"
        },
        "flags": 0,
        "description": "Describes the jupyter kernel settings for the image if its a custom environment"
      }
    },
    "additionalProperties": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Image",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/111"
        },
        "flags": 0,
        "description": "Type of the image. Possible values are: docker - For docker images. azureml - For AzureML Environment images (custom and curated)"
      },
      "reference": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Image reference URL if type is docker. Environment name if type is azureml"
      },
      "version": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Version of image being used. If latest then skip this field"
      }
    },
    "additionalProperties": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "docker"
  },
  {
    "$type": "StringLiteralType",
    "value": "azureml"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/109"
      },
      {
        "$ref": "#/110"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentVariable",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/114"
        },
        "flags": 0,
        "description": "Type of the Environment Variable. Possible values are: local - For local variable"
      },
      "value": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Value of the Environment variable"
      }
    },
    "additionalProperties": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "local"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/113"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CustomServiceEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/112"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Docker",
    "properties": {
      "privileged": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Indicate whether container shall run in privileged or non-privileged mode."
      }
    },
    "additionalProperties": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Endpoint",
    "properties": {
      "protocol": {
        "type": {
          "$ref": "#/121"
        },
        "flags": 0,
        "description": "Protocol over which communication will happen over this endpoint"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the Endpoint"
      },
      "target": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Application port inside the container."
      },
      "published": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Port over which the application is exposed from container."
      },
      "hostIp": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Host IP over which the application is exposed from the container"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "tcp"
  },
  {
    "$type": "StringLiteralType",
    "value": "udp"
  },
  {
    "$type": "StringLiteralType",
    "value": "http"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/118"
      },
      {
        "$ref": "#/119"
      },
      {
        "$ref": "#/120"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/117"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VolumeDefinition",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/128"
        },
        "flags": 0,
        "description": "Type of Volume Definition. Possible Values: bind,volume,tmpfs,npipe"
      },
      "readOnly": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Indicate whether to mount volume as readOnly. Default value for this is false."
      },
      "source": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Source of the mount. For bind mounts this is the host path."
      },
      "target": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Target of the mount. For bind mounts this is the path in the container."
      },
      "consistency": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Consistency of the volume"
      },
      "bind": {
        "type": {
          "$ref": "#/129"
        },
        "flags": 0,
        "description": "Bind Options of the mount"
      },
      "volume": {
        "type": {
          "$ref": "#/130"
        },
        "flags": 0,
        "description": "Volume Options of the mount"
      },
      "tmpfs": {
        "type": {
          "$ref": "#/131"
        },
        "flags": 0,
        "description": "tmpfs option of the mount"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "bind"
  },
  {
    "$type": "StringLiteralType",
    "value": "volume"
  },
  {
    "$type": "StringLiteralType",
    "value": "tmpfs"
  },
  {
    "$type": "StringLiteralType",
    "value": "npipe"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/124"
      },
      {
        "$ref": "#/125"
      },
      {
        "$ref": "#/126"
      },
      {
        "$ref": "#/127"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "BindOptions",
    "properties": {
      "propagation": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Type of Bind Option"
      },
      "createHostPath": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Indicate whether to create host path."
      },
      "selinux": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Mention the selinux options."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VolumeOptions",
    "properties": {
      "nocopy": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Indicate whether volume is nocopy"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TmpfsOptions",
    "properties": {
      "size": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Mention the Tmpfs size"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/123"
    }
  },
  {
    "$type": "ObjectType",
    "name": "JupyterKernelConfig",
    "properties": {
      "argv": {
        "type": {
          "$ref": "#/134"
        },
        "flags": 0,
        "description": "Argument to the the runtime"
      },
      "displayName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Display name of the kernel"
      },
      "language": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Language of the kernel [Example value: python]"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/107"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ImageMetadata",
    "properties": {
      "currentImageVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies the current operating system image version this compute instance is running on."
      },
      "latestImageVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies the latest available operating system image version."
      },
      "isLatestOsImageVersion": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Specifies whether this compute instance is running on the latest operating system image."
      },
      "osPatchingStatus": {
        "type": {
          "$ref": "#/137"
        },
        "flags": 2,
        "description": "Metadata about the os patching."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "OsPatchingStatus",
    "properties": {
      "patchStatus": {
        "type": {
          "$ref": "#/143"
        },
        "flags": 0,
        "description": "The os patching status."
      },
      "latestPatchTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Time of the latest os patching."
      },
      "rebootPending": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Specifies whether this compute instance is pending for reboot to finish os patching."
      },
      "scheduledRebootTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Time of scheduled reboot."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CompletedWithWarnings"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/138"
      },
      {
        "$ref": "#/139"
      },
      {
        "$ref": "#/140"
      },
      {
        "$ref": "#/141"
      },
      {
        "$ref": "#/142"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceConnectivityEndpoints",
    "properties": {
      "publicIpAddress": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Public IP Address of this ComputeInstance."
      },
      "privateIpAddress": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is deployed)."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceApplication",
    "properties": {
      "displayName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the ComputeInstance application."
      },
      "endpointUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Application' endpoint URI."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/145"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceCreatedBy",
    "properties": {
      "userName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Name of the user."
      },
      "userOrgId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Uniquely identifies user' Azure Active Directory organization."
      },
      "userId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Uniquely identifies the user within his/her organization."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/42"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "CreateFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Restarting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Resizing"
  },
  {
    "$type": "StringLiteralType",
    "value": "JobRunning"
  },
  {
    "$type": "StringLiteralType",
    "value": "SettingUp"
  },
  {
    "$type": "StringLiteralType",
    "value": "SetupFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Starting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopped"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stopping"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserSettingUp"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserSetupFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unusable"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/149"
      },
      {
        "$ref": "#/150"
      },
      {
        "$ref": "#/151"
      },
      {
        "$ref": "#/152"
      },
      {
        "$ref": "#/153"
      },
      {
        "$ref": "#/154"
      },
      {
        "$ref": "#/155"
      },
      {
        "$ref": "#/156"
      },
      {
        "$ref": "#/157"
      },
      {
        "$ref": "#/158"
      },
      {
        "$ref": "#/159"
      },
      {
        "$ref": "#/160"
      },
      {
        "$ref": "#/161"
      },
      {
        "$ref": "#/162"
      },
      {
        "$ref": "#/163"
      },
      {
        "$ref": "#/164"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "personal"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/166"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "PersonalComputeInstanceSettings",
    "properties": {
      "assignedUser": {
        "type": {
          "$ref": "#/169"
        },
        "flags": 0,
        "description": "A user explicitly assigned to a personal compute instance."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssignedUser",
    "properties": {
      "objectId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "User’s AAD Object Id."
      },
      "tenantId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "User’s AAD Tenant Id."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SetupScripts",
    "properties": {
      "scripts": {
        "type": {
          "$ref": "#/171"
        },
        "flags": 0,
        "description": "Customized setup scripts"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScriptsToExecute",
    "properties": {
      "startupScript": {
        "type": {
          "$ref": "#/172"
        },
        "flags": 0,
        "description": "Script that's run every time the machine starts."
      },
      "creationScript": {
        "type": {
          "$ref": "#/172"
        },
        "flags": 0,
        "description": "Script that's run only once during provision of the compute."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScriptReference",
    "properties": {
      "scriptSource": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The storage source of the script: inline, workspace."
      },
      "scriptData": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The location of scripts in the mounted volume."
      },
      "scriptArguments": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Optional command line arguments passed to the script to run."
      },
      "timeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Optional time period passed to timeout command."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceLastOperation",
    "properties": {
      "operationName": {
        "type": {
          "$ref": "#/181"
        },
        "flags": 0,
        "description": "Name of the last operation."
      },
      "operationTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Time of the last operation."
      },
      "operationStatus": {
        "type": {
          "$ref": "#/191"
        },
        "flags": 0,
        "description": "Operation status."
      },
      "operationTrigger": {
        "type": {
          "$ref": "#/195"
        },
        "flags": 0,
        "description": "Trigger of operation."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Create"
  },
  {
    "$type": "StringLiteralType",
    "value": "Start"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stop"
  },
  {
    "$type": "StringLiteralType",
    "value": "Restart"
  },
  {
    "$type": "StringLiteralType",
    "value": "Resize"
  },
  {
    "$type": "StringLiteralType",
    "value": "Reimage"
  },
  {
    "$type": "StringLiteralType",
    "value": "Delete"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/174"
      },
      {
        "$ref": "#/175"
      },
      {
        "$ref": "#/176"
      },
      {
        "$ref": "#/177"
      },
      {
        "$ref": "#/178"
      },
      {
        "$ref": "#/179"
      },
      {
        "$ref": "#/180"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "CreateFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "StartFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "StopFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "RestartFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "ResizeFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReimageFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "DeleteFailed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/182"
      },
      {
        "$ref": "#/183"
      },
      {
        "$ref": "#/184"
      },
      {
        "$ref": "#/185"
      },
      {
        "$ref": "#/186"
      },
      {
        "$ref": "#/187"
      },
      {
        "$ref": "#/188"
      },
      {
        "$ref": "#/189"
      },
      {
        "$ref": "#/190"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Schedule"
  },
  {
    "$type": "StringLiteralType",
    "value": "IdleShutdown"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/192"
      },
      {
        "$ref": "#/193"
      },
      {
        "$ref": "#/194"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ComputeSchedules",
    "properties": {
      "computeStartStop": {
        "type": {
          "$ref": "#/240"
        },
        "flags": 0,
        "description": "The list of compute start stop schedules to be applied."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeStartStopSchedule",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "A system assigned id for the schedule."
      },
      "provisioningStatus": {
        "type": {
          "$ref": "#/201"
        },
        "flags": 2,
        "description": "The current deployment state of schedule."
      },
      "status": {
        "type": {
          "$ref": "#/204"
        },
        "flags": 0,
        "description": "Is the schedule enabled or disabled?"
      },
      "action": {
        "type": {
          "$ref": "#/207"
        },
        "flags": 0,
        "description": "[Required] The compute power action."
      },
      "triggerType": {
        "type": {
          "$ref": "#/210"
        },
        "flags": 0,
        "description": "[Required] The schedule trigger type."
      },
      "recurrence": {
        "type": {
          "$ref": "#/211"
        },
        "flags": 0,
        "description": "Required if triggerType is Recurrence."
      },
      "cron": {
        "type": {
          "$ref": "#/231"
        },
        "flags": 0,
        "description": "Required if triggerType is Cron."
      },
      "schedule": {
        "type": {
          "$ref": "#/232"
        },
        "flags": 0,
        "description": "[Deprecated] Not used any more."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Completed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/198"
      },
      {
        "$ref": "#/199"
      },
      {
        "$ref": "#/200"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/202"
      },
      {
        "$ref": "#/203"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Start"
  },
  {
    "$type": "StringLiteralType",
    "value": "Stop"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/205"
      },
      {
        "$ref": "#/206"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Recurrence"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cron"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/208"
      },
      {
        "$ref": "#/209"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Recurrence",
    "properties": {
      "frequency": {
        "type": {
          "$ref": "#/217"
        },
        "flags": 0,
        "description": "[Required] The frequency to trigger schedule."
      },
      "interval": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "[Required] Specifies schedule interval in conjunction with frequency"
      },
      "startTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The start time in yyyy-MM-ddTHH:mm:ss format."
      },
      "timeZone": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies time zone in which the schedule runs.\r\nTimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11"
      },
      "schedule": {
        "type": {
          "$ref": "#/218"
        },
        "flags": 0,
        "description": "[Required] The recurrence schedule."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Minute"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hour"
  },
  {
    "$type": "StringLiteralType",
    "value": "Day"
  },
  {
    "$type": "StringLiteralType",
    "value": "Week"
  },
  {
    "$type": "StringLiteralType",
    "value": "Month"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/212"
      },
      {
        "$ref": "#/213"
      },
      {
        "$ref": "#/214"
      },
      {
        "$ref": "#/215"
      },
      {
        "$ref": "#/216"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ComputeRecurrenceSchedule",
    "properties": {
      "hours": {
        "type": {
          "$ref": "#/219"
        },
        "flags": 1,
        "description": "[Required] List of hours for the schedule."
      },
      "minutes": {
        "type": {
          "$ref": "#/220"
        },
        "flags": 1,
        "description": "[Required] List of minutes for the schedule."
      },
      "monthDays": {
        "type": {
          "$ref": "#/221"
        },
        "flags": 0,
        "description": "List of month days for the schedule"
      },
      "weekDays": {
        "type": {
          "$ref": "#/230"
        },
        "flags": 0,
        "description": "List of days for the schedule."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/21"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/21"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/21"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Monday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Tuesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Wednesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Thursday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Friday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Saturday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sunday"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/222"
      },
      {
        "$ref": "#/223"
      },
      {
        "$ref": "#/224"
      },
      {
        "$ref": "#/225"
      },
      {
        "$ref": "#/226"
      },
      {
        "$ref": "#/227"
      },
      {
        "$ref": "#/228"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/229"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Cron",
    "properties": {
      "startTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The start time in yyyy-MM-ddTHH:mm:ss format."
      },
      "timeZone": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies time zone in which the schedule runs.\r\nTimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11"
      },
      "expression": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "[Required] Specifies cron expression of schedule.\r\nThe expression should follow NCronTab format."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScheduleBase",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "A system assigned id for the schedule."
      },
      "provisioningStatus": {
        "type": {
          "$ref": "#/236"
        },
        "flags": 0,
        "description": "The current deployment state of schedule."
      },
      "status": {
        "type": {
          "$ref": "#/239"
        },
        "flags": 0,
        "description": "Is the schedule enabled or disabled?"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Completed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/233"
      },
      {
        "$ref": "#/234"
      },
      {
        "$ref": "#/235"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/237"
      },
      {
        "$ref": "#/238"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/197"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceContainer",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the ComputeInstance container."
      },
      "autosave": {
        "type": {
          "$ref": "#/245"
        },
        "flags": 0,
        "description": "Auto save settings."
      },
      "gpu": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Information of GPU."
      },
      "network": {
        "type": {
          "$ref": "#/248"
        },
        "flags": 0,
        "description": "network of this container."
      },
      "environment": {
        "type": {
          "$ref": "#/249"
        },
        "flags": 0,
        "description": "Environment information of this container."
      },
      "services": {
        "type": {
          "$ref": "#/250"
        },
        "flags": 2,
        "description": "services of this containers."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Local"
  },
  {
    "$type": "StringLiteralType",
    "value": "Remote"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/242"
      },
      {
        "$ref": "#/243"
      },
      {
        "$ref": "#/244"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Bridge"
  },
  {
    "$type": "StringLiteralType",
    "value": "Host"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/246"
      },
      {
        "$ref": "#/247"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceEnvironmentInfo",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "name of environment."
      },
      "version": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "version of environment."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/241"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceDataDisk",
    "properties": {
      "caching": {
        "type": {
          "$ref": "#/256"
        },
        "flags": 0,
        "description": "Caching type of Data Disk."
      },
      "diskSizeGB": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The initial disk size in gigabytes."
      },
      "lun": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun."
      },
      "storageAccountType": {
        "type": {
          "$ref": "#/259"
        },
        "flags": 0,
        "description": "type of this storage account."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnly"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWrite"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/253"
      },
      {
        "$ref": "#/254"
      },
      {
        "$ref": "#/255"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard_LRS"
  },
  {
    "$type": "StringLiteralType",
    "value": "Premium_LRS"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/257"
      },
      {
        "$ref": "#/258"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/252"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceDataMount",
    "properties": {
      "source": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Source of the ComputeInstance data mount."
      },
      "sourceType": {
        "type": {
          "$ref": "#/265"
        },
        "flags": 0,
        "description": "Data source type."
      },
      "mountName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "name of the ComputeInstance data mount."
      },
      "mountAction": {
        "type": {
          "$ref": "#/268"
        },
        "flags": 0,
        "description": "Mount Action."
      },
      "createdBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "who this data mount created by."
      },
      "mountPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Path of this data mount."
      },
      "mountState": {
        "type": {
          "$ref": "#/275"
        },
        "flags": 0,
        "description": "Mount state."
      },
      "mountedOn": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The time when the disk mounted."
      },
      "error": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Error of this data mount."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Dataset"
  },
  {
    "$type": "StringLiteralType",
    "value": "Datastore"
  },
  {
    "$type": "StringLiteralType",
    "value": "URI"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/262"
      },
      {
        "$ref": "#/263"
      },
      {
        "$ref": "#/264"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Mount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unmount"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/266"
      },
      {
        "$ref": "#/267"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "MountRequested"
  },
  {
    "$type": "StringLiteralType",
    "value": "Mounted"
  },
  {
    "$type": "StringLiteralType",
    "value": "MountFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "UnmountRequested"
  },
  {
    "$type": "StringLiteralType",
    "value": "UnmountFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unmounted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/269"
      },
      {
        "$ref": "#/270"
      },
      {
        "$ref": "#/271"
      },
      {
        "$ref": "#/272"
      },
      {
        "$ref": "#/273"
      },
      {
        "$ref": "#/274"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/261"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeInstanceVersion",
    "properties": {
      "runtime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Runtime of compute instance."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ComputeInstance"
  },
  {
    "$type": "ObjectType",
    "name": "DataFactory",
    "properties": {
      "computeType": {
        "type": {
          "$ref": "#/280"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DataFactory"
  },
  {
    "$type": "ObjectType",
    "name": "DataLakeAnalytics",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/282"
        },
        "flags": 0
      },
      "computeType": {
        "type": {
          "$ref": "#/283"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataLakeAnalyticsSchemaProperties",
    "properties": {
      "dataLakeStoreAccountName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "DataLake Store Account Name"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DataLakeAnalytics"
  },
  {
    "$type": "ObjectType",
    "name": "Databricks",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/285"
        },
        "flags": 0,
        "description": "Properties of Databricks"
      },
      "computeType": {
        "type": {
          "$ref": "#/286"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DatabricksProperties",
    "properties": {
      "databricksAccessToken": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Databricks access token"
      },
      "workspaceUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Workspace Url"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Databricks"
  },
  {
    "$type": "ObjectType",
    "name": "HDInsight",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/288"
        },
        "flags": 0,
        "description": "HDInsight compute properties"
      },
      "computeType": {
        "type": {
          "$ref": "#/290"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HDInsightProperties",
    "properties": {
      "sshPort": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Port open for ssh connections on the master node of the cluster."
      },
      "address": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Public IP address of the master node of the cluster."
      },
      "administratorAccount": {
        "type": {
          "$ref": "#/289"
        },
        "flags": 0,
        "description": "Admin credentials for master node of the cluster"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineSshCredentials",
    "properties": {
      "username": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Username of admin account"
      },
      "password": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Password of admin account"
      },
      "publicKeyData": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Public key data"
      },
      "privateKeyData": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Private key data"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "HDInsight"
  },
  {
    "$type": "ObjectType",
    "name": "Kubernetes",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 0,
        "description": "Properties of Kubernetes"
      },
      "computeType": {
        "type": {
          "$ref": "#/299"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesProperties",
    "properties": {
      "relayConnectionString": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Relay connection string."
      },
      "serviceBusConnectionString": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "ServiceBus connection string."
      },
      "extensionPrincipalId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Extension principal-id."
      },
      "extensionInstanceReleaseTrain": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Extension instance release train."
      },
      "vcName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "VC name."
      },
      "namespace": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Compute namespace"
      },
      "defaultInstanceType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Default instance type"
      },
      "instanceTypes": {
        "type": {
          "$ref": "#/298"
        },
        "flags": 0,
        "description": "Instance Type Schema"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "InstanceTypeSchema",
    "properties": {
      "nodeSelector": {
        "type": {
          "$ref": "#/294"
        },
        "flags": 0,
        "description": "Node Selector"
      },
      "resources": {
        "type": {
          "$ref": "#/295"
        },
        "flags": 0,
        "description": "Resource requests/limits for this instance type"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "InstanceTypeSchemaNodeSelector",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "InstanceTypeSchemaResources",
    "properties": {
      "requests": {
        "type": {
          "$ref": "#/296"
        },
        "flags": 0,
        "description": "Resource requests for this instance type"
      },
      "limits": {
        "type": {
          "$ref": "#/297"
        },
        "flags": 0,
        "description": "Resource limits for this instance type"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "InstanceResourceSchema",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "InstanceResourceSchema",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesPropertiesInstanceTypes",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/293"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Kubernetes"
  },
  {
    "$type": "ObjectType",
    "name": "SynapseSpark",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/301"
        },
        "flags": 0
      },
      "computeType": {
        "type": {
          "$ref": "#/304"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SynapseSparkProperties",
    "properties": {
      "autoScaleProperties": {
        "type": {
          "$ref": "#/302"
        },
        "flags": 0,
        "description": "Auto scale properties."
      },
      "autoPauseProperties": {
        "type": {
          "$ref": "#/303"
        },
        "flags": 0,
        "description": "Auto pause properties."
      },
      "sparkVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Spark version."
      },
      "nodeCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The number of compute nodes currently assigned to the compute."
      },
      "nodeSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Node size."
      },
      "nodeSizeFamily": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Node size family."
      },
      "subscriptionId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Azure subscription identifier."
      },
      "resourceGroup": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the resource group in which workspace is located."
      },
      "workspaceName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of Azure Machine Learning workspace."
      },
      "poolName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Pool name."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoScaleProperties",
    "properties": {
      "minNodeCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0
      },
      "enabled": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0
      },
      "maxNodeCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoPauseProperties",
    "properties": {
      "delayInMinutes": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0
      },
      "enabled": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SynapseSpark"
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachine",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/306"
        },
        "flags": 0
      },
      "computeType": {
        "type": {
          "$ref": "#/307"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineSchemaProperties",
    "properties": {
      "virtualMachineSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Virtual Machine size"
      },
      "sshPort": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Port open for ssh connections."
      },
      "notebookServerPort": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Notebook server port open for ssh connections."
      },
      "address": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Public IP address of the virtual machine."
      },
      "administratorAccount": {
        "type": {
          "$ref": "#/289"
        },
        "flags": 0,
        "description": "Admin credentials for virtual machine"
      },
      "isNotebookInstanceCompute": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Indicates whether this compute will be used for running notebooks."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "VirtualMachine"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/computes@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/4"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/capacityReserverationGroups"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/capacityReserverationGroups",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/310"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/311"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "kind": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "properties": {
        "type": {
          "$ref": "#/313"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "sku": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/316"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CapacityReservationGroupProperties",
    "properties": {
      "offer": {
        "type": {
          "$ref": "#/314"
        },
        "flags": 0,
        "description": "Offer used by this capacity reservation group."
      },
      "reservedCapacity": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "[Required] Specifies the amount of capacity to reserve."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ServerlessOffer",
    "properties": {
      "offerName": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] The name of the Serverless Offer"
      },
      "publisher": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Publisher name of the Serverless Offer"
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "pattern": "[a-zA-Z0-9_]"
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/capacityReserverationGroups@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/312"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/codes"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/codes",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/318"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/319"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/321"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CodeContainerProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/328"
        },
        "flags": 2,
        "description": "Provisioning state for the code container."
      },
      "isArchived": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "latestVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The latest version inside this container."
      },
      "nextVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The next auto incremental version"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/329"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/330"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/322"
      },
      {
        "$ref": "#/323"
      },
      {
        "$ref": "#/324"
      },
      {
        "$ref": "#/325"
      },
      {
        "$ref": "#/326"
      },
      {
        "$ref": "#/327"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/codes@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/320"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/codes/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/codes/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/332"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/333"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/335"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CodeVersionProperties",
    "properties": {
      "codeUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Uri where code is located"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/342"
        },
        "flags": 2,
        "description": "Provisioning state for the code version."
      },
      "autoDeleteSetting": {
        "type": {
          "$ref": "#/343"
        },
        "flags": 0,
        "description": "Specifies the lifecycle setting of managed data asset."
      },
      "isAnonymous": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous"
      },
      "isArchived": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/347"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/348"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/336"
      },
      {
        "$ref": "#/337"
      },
      {
        "$ref": "#/338"
      },
      {
        "$ref": "#/339"
      },
      {
        "$ref": "#/340"
      },
      {
        "$ref": "#/341"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AutoDeleteSetting",
    "properties": {
      "condition": {
        "type": {
          "$ref": "#/346"
        },
        "flags": 0,
        "description": "When to check if an asset is expired"
      },
      "value": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Expiration condition value."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CreatedGreaterThan"
  },
  {
    "$type": "StringLiteralType",
    "value": "LastAccessedGreaterThan"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/344"
      },
      {
        "$ref": "#/345"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/codes/versions@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/334"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/components"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/components",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/350"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/351"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/353"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComponentContainerProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/360"
        },
        "flags": 2,
        "description": "Provisioning state for the component container."
      },
      "isArchived": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "latestVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The latest version inside this container."
      },
      "nextVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The next auto incremental version"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/361"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/362"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/354"
      },
      {
        "$ref": "#/355"
      },
      {
        "$ref": "#/356"
      },
      {
        "$ref": "#/357"
      },
      {
        "$ref": "#/358"
      },
      {
        "$ref": "#/359"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/components@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/352"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/components/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/components/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/364"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/365"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/367"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComponentVersionProperties",
    "properties": {
      "componentSpec": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 0,
        "description": "Defines Component definition details.\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/reference-yaml-component-command\" />"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/374"
        },
        "flags": 2,
        "description": "Provisioning state for the component version."
      },
      "stage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Stage in the component lifecycle"
      },
      "autoDeleteSetting": {
        "type": {
          "$ref": "#/343"
        },
        "flags": 0,
        "description": "Specifies the lifecycle setting of managed data asset."
      },
      "isAnonymous": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous"
      },
      "isArchived": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/375"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/376"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/368"
      },
      {
        "$ref": "#/369"
      },
      {
        "$ref": "#/370"
      },
      {
        "$ref": "#/371"
      },
      {
        "$ref": "#/372"
      },
      {
        "$ref": "#/373"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/components/versions@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/366"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/data"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/data",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/378"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/379"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/381"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataContainerProperties",
    "properties": {
      "dataType": {
        "type": {
          "$ref": "#/385"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of data."
      },
      "isArchived": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "latestVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The latest version inside this container."
      },
      "nextVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The next auto incremental version"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/386"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/387"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_file"
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_folder"
  },
  {
    "$type": "StringLiteralType",
    "value": "mltable"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/382"
      },
      {
        "$ref": "#/383"
      },
      {
        "$ref": "#/384"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/data@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/380"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/data/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/data/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/389"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/390"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/392"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DataVersionBaseProperties",
    "discriminator": "dataType",
    "baseProperties": {
      "dataUri": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330"
      },
      "intellectualProperty": {
        "type": {
          "$ref": "#/393"
        },
        "flags": 0,
        "description": "Intellectual Property details. Used if data is an Intellectual Property."
      },
      "stage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Stage in the data lifecycle assigned to this data asset"
      },
      "autoDeleteSetting": {
        "type": {
          "$ref": "#/343"
        },
        "flags": 0,
        "description": "Specifies the lifecycle setting of managed data asset."
      },
      "isAnonymous": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous"
      },
      "isArchived": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/397"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/398"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    },
    "elements": {
      "mltable": {
        "$ref": "#/399"
      },
      "uri_file": {
        "$ref": "#/402"
      },
      "uri_folder": {
        "$ref": "#/404"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IntellectualProperty",
    "properties": {
      "protectionLevel": {
        "type": {
          "$ref": "#/396"
        },
        "flags": 0,
        "description": "Protection level of the Intellectual Property."
      },
      "publisher": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Publisher of the Intellectual Property. Must be the same as Registry publisher name."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "All"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/394"
      },
      {
        "$ref": "#/395"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "MLTableData",
    "properties": {
      "referencedUris": {
        "type": {
          "$ref": "#/400"
        },
        "flags": 0,
        "description": "Uris referenced in the MLTable definition (required for lineage)"
      },
      "dataType": {
        "type": {
          "$ref": "#/401"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of data."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "mltable"
  },
  {
    "$type": "ObjectType",
    "name": "UriFileDataVersion",
    "properties": {
      "dataType": {
        "type": {
          "$ref": "#/403"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of data."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_file"
  },
  {
    "$type": "ObjectType",
    "name": "UriFolderDataVersion",
    "properties": {
      "dataType": {
        "type": {
          "$ref": "#/405"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of data."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_folder"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/data/versions@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/391"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/environments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/environments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/407"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/408"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/410"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentContainerProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/417"
        },
        "flags": 2,
        "description": "Provisioning state for the environment container."
      },
      "isArchived": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "latestVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The latest version inside this container."
      },
      "nextVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The next auto incremental version"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/418"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/419"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/411"
      },
      {
        "$ref": "#/412"
      },
      {
        "$ref": "#/413"
      },
      {
        "$ref": "#/414"
      },
      {
        "$ref": "#/415"
      },
      {
        "$ref": "#/416"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/environments@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/409"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/environments/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/environments/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/421"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/422"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/424"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentVersionProperties",
    "properties": {
      "autoRebuild": {
        "type": {
          "$ref": "#/427"
        },
        "flags": 0,
        "description": "Defines if image needs to be rebuilt based on base image changes."
      },
      "build": {
        "type": {
          "$ref": "#/428"
        },
        "flags": 0,
        "description": "Configuration settings for Docker build context."
      },
      "condaFile": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.\r\n<see href=\"https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment\" />"
      },
      "environmentType": {
        "type": {
          "$ref": "#/431"
        },
        "flags": 2,
        "description": "Environment type is either user managed or curated by the Azure ML service\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments\" />"
      },
      "image": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the image that will be used for the environment.\r\n<seealso href=\"https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image\" />"
      },
      "inferenceConfig": {
        "type": {
          "$ref": "#/432"
        },
        "flags": 0,
        "description": "Defines configuration specific to inference."
      },
      "intellectualProperty": {
        "type": {
          "$ref": "#/393"
        },
        "flags": 0,
        "description": "Intellectual Property details. Used if environment is an Intellectual Property."
      },
      "osType": {
        "type": {
          "$ref": "#/436"
        },
        "flags": 0,
        "description": "The OS type of the environment."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/443"
        },
        "flags": 2,
        "description": "Provisioning state for the environment version."
      },
      "stage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Stage in the environment lifecycle assigned to this environment"
      },
      "autoDeleteSetting": {
        "type": {
          "$ref": "#/343"
        },
        "flags": 0,
        "description": "Specifies the lifecycle setting of managed data asset."
      },
      "isAnonymous": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous"
      },
      "isArchived": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/444"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/445"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "OnBaseImageUpdate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/425"
      },
      {
        "$ref": "#/426"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "BuildContext",
    "properties": {
      "contextUri": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] URI of the Docker build context used to build the image. Supports blob URIs on environment creation and may return blob or Git URIs.\r\n<seealso href=\"https://docs.docker.com/engine/reference/commandline/build/#extended-description\" />"
      },
      "dockerfilePath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Path to the Dockerfile in the build context.\r\n<seealso href=\"https://docs.docker.com/engine/reference/builder/\" />"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Curated"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserCreated"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/429"
      },
      {
        "$ref": "#/430"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "InferenceContainerProperties",
    "properties": {
      "livenessRoute": {
        "type": {
          "$ref": "#/433"
        },
        "flags": 0,
        "description": "The route to check the liveness of the inference server container."
      },
      "readinessRoute": {
        "type": {
          "$ref": "#/433"
        },
        "flags": 0,
        "description": "The route to check the readiness of the inference server container."
      },
      "scoringRoute": {
        "type": {
          "$ref": "#/433"
        },
        "flags": 0,
        "description": "The port to send the scoring requests to, within the inference server container."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Route",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] The path for the route."
      },
      "port": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "[Required] The port for the route."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Linux"
  },
  {
    "$type": "StringLiteralType",
    "value": "Windows"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/434"
      },
      {
        "$ref": "#/435"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/437"
      },
      {
        "$ref": "#/438"
      },
      {
        "$ref": "#/439"
      },
      {
        "$ref": "#/440"
      },
      {
        "$ref": "#/441"
      },
      {
        "$ref": "#/442"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/environments/versions@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/423"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/models"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/models",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/447"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/448"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/450"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ModelContainerProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/457"
        },
        "flags": 2,
        "description": "Provisioning state for the model container."
      },
      "isArchived": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "latestVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The latest version inside this container."
      },
      "nextVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The next auto incremental version"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/458"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/459"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/451"
      },
      {
        "$ref": "#/452"
      },
      {
        "$ref": "#/453"
      },
      {
        "$ref": "#/454"
      },
      {
        "$ref": "#/455"
      },
      {
        "$ref": "#/456"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/models@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/449"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries/models/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries/models/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/461"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/462"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/464"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ModelVersionProperties",
    "properties": {
      "flavors": {
        "type": {
          "$ref": "#/467"
        },
        "flags": 0,
        "description": "Mapping of model flavors to their properties."
      },
      "intellectualProperty": {
        "type": {
          "$ref": "#/393"
        },
        "flags": 0,
        "description": "Intellectual Property details. Used if model is an Intellectual Property."
      },
      "jobName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the training job which produced this model"
      },
      "modelType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The storage format for this entity. Used for NCD."
      },
      "modelUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The URI path to the model contents."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/474"
        },
        "flags": 2,
        "description": "Provisioning state for the model version."
      },
      "stage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Stage in the model lifecycle assigned to this model"
      },
      "autoDeleteSetting": {
        "type": {
          "$ref": "#/343"
        },
        "flags": 0,
        "description": "Specifies the lifecycle setting of managed data asset."
      },
      "isAnonymous": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous"
      },
      "isArchived": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/475"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/476"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FlavorData",
    "properties": {
      "data": {
        "type": {
          "$ref": "#/466"
        },
        "flags": 0,
        "description": "Model flavor-specific data."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FlavorData",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ModelVersionFlavors",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/465"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/468"
      },
      {
        "$ref": "#/469"
      },
      {
        "$ref": "#/470"
      },
      {
        "$ref": "#/471"
      },
      {
        "$ref": "#/472"
      },
      {
        "$ref": "#/473"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries/models/versions@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/463"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/batchEndpoints"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/batchEndpoints",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/478"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/479"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "kind": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "properties": {
        "type": {
          "$ref": "#/481"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "sku": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/496"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BatchEndpointProperties",
    "properties": {
      "defaults": {
        "type": {
          "$ref": "#/482"
        },
        "flags": 0,
        "description": "Default values for Batch Endpoint."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/489"
        },
        "flags": 2,
        "description": "Provisioning state for the endpoint."
      },
      "authMode": {
        "type": {
          "$ref": "#/493"
        },
        "flags": 1,
        "description": "[Required] Use 'Key' for key based authentication and 'AMLToken' for Azure Machine Learning token-based authentication. 'Key' doesn't expire but 'AMLToken' does."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of the inference endpoint."
      },
      "keys": {
        "type": {
          "$ref": "#/494"
        },
        "flags": 4,
        "description": "EndpointAuthKeys to set initially on an Endpoint.\r\nThis property will always be returned as null. AuthKey values must be retrieved using the ListKeys API."
      },
      "properties": {
        "type": {
          "$ref": "#/495"
        },
        "flags": 0,
        "description": "Property dictionary. Properties can be added, but not removed or altered."
      },
      "scoringUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Endpoint URI."
      },
      "swaggerUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Endpoint Swagger URI."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BatchEndpointDefaults",
    "properties": {
      "deploymentName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the deployment that will be default for the endpoint.\r\nThis deployment will end up getting 100% traffic when the endpoint scoring URL is invoked."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/483"
      },
      {
        "$ref": "#/484"
      },
      {
        "$ref": "#/485"
      },
      {
        "$ref": "#/486"
      },
      {
        "$ref": "#/487"
      },
      {
        "$ref": "#/488"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "AMLToken"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "StringLiteralType",
    "value": "AADToken"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/490"
      },
      {
        "$ref": "#/491"
      },
      {
        "$ref": "#/492"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "EndpointAuthKeys",
    "properties": {
      "primaryKey": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The primary key."
      },
      "secondaryKey": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The secondary key."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EndpointPropertiesBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/batchEndpoints@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/480"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/batchEndpoints/deployments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/batchEndpoints/deployments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/498"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/499"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "kind": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "properties": {
        "type": {
          "$ref": "#/501"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "sku": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/541"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BatchDeploymentProperties",
    "properties": {
      "compute": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Compute target for batch inference operation."
      },
      "deploymentConfiguration": {
        "type": {
          "$ref": "#/502"
        },
        "flags": 0,
        "description": "Properties relevant to different deployment types."
      },
      "errorThreshold": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Error threshold, if the error count for the entire input goes above this value,\r\nthe batch inference will be aborted. Range is [-1, int.MaxValue].\r\nFor FileDataset, this value is the count of file failures.\r\nFor TabularDataset, this value is the count of record failures.\r\nIf set to -1 (the lower bound), all failures during batch inference will be ignored."
      },
      "loggingLevel": {
        "type": {
          "$ref": "#/515"
        },
        "flags": 0,
        "description": "Logging level for batch inference operation."
      },
      "maxConcurrencyPerInstance": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Indicates maximum number of parallelism per instance."
      },
      "miniBatchSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Size of the mini-batch passed to each batch invocation.\r\nFor FileDataset, this is the number of files per mini-batch.\r\nFor TabularDataset, this is the size of the records in bytes, per mini-batch."
      },
      "model": {
        "type": {
          "$ref": "#/516"
        },
        "flags": 0,
        "description": "Reference to the model asset for the endpoint deployment."
      },
      "outputAction": {
        "type": {
          "$ref": "#/525"
        },
        "flags": 0,
        "description": "Indicates how the output will be organized."
      },
      "outputFileName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Customized output file name for append_row output action."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/533"
        },
        "flags": 2,
        "description": "Provisioning state for the endpoint deployment."
      },
      "resources": {
        "type": {
          "$ref": "#/534"
        },
        "flags": 0,
        "description": "Indicates compute configuration for the job.\r\nIf not provided, will default to the defaults defined in ResourceConfiguration."
      },
      "retrySettings": {
        "type": {
          "$ref": "#/537"
        },
        "flags": 0,
        "description": "Retry Settings for the batch inference operation.\r\nIf not provided, will default to the defaults defined in BatchRetrySettings."
      },
      "codeConfiguration": {
        "type": {
          "$ref": "#/538"
        },
        "flags": 0,
        "description": "Code configuration for the endpoint deployment."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of the endpoint deployment."
      },
      "environmentId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM resource ID of the environment specification for the endpoint deployment."
      },
      "environmentVariables": {
        "type": {
          "$ref": "#/539"
        },
        "flags": 0,
        "description": "Environment variables configuration for the deployment."
      },
      "properties": {
        "type": {
          "$ref": "#/540"
        },
        "flags": 0,
        "description": "Property dictionary. Properties can be added, but not removed or altered."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "BatchDeploymentConfiguration",
    "discriminator": "deploymentConfigurationType",
    "baseProperties": {},
    "elements": {
      "PipelineComponent": {
        "$ref": "#/503"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BatchPipelineComponentDeploymentConfiguration",
    "properties": {
      "componentId": {
        "type": {
          "$ref": "#/504"
        },
        "flags": 0,
        "description": "The ARM id of the component to be run."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The description which will be applied to the job."
      },
      "settings": {
        "type": {
          "$ref": "#/509"
        },
        "flags": 0,
        "description": "Run-time settings for the pipeline job."
      },
      "tags": {
        "type": {
          "$ref": "#/510"
        },
        "flags": 0,
        "description": "The tags which will be applied to the job."
      },
      "deploymentConfigurationType": {
        "type": {
          "$ref": "#/511"
        },
        "flags": 1,
        "description": "[Required] The type of the deployment"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IdAssetReference",
    "properties": {
      "assetId": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] ARM resource ID of the asset."
      },
      "referenceType": {
        "type": {
          "$ref": "#/508"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of asset reference."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Id"
  },
  {
    "$type": "StringLiteralType",
    "value": "DataPath"
  },
  {
    "$type": "StringLiteralType",
    "value": "OutputPath"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/505"
      },
      {
        "$ref": "#/506"
      },
      {
        "$ref": "#/507"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "BatchPipelineComponentDeploymentConfigurationSettings",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "BatchPipelineComponentDeploymentConfigurationTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "PipelineComponent"
  },
  {
    "$type": "StringLiteralType",
    "value": "Info"
  },
  {
    "$type": "StringLiteralType",
    "value": "Warning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Debug"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/512"
      },
      {
        "$ref": "#/513"
      },
      {
        "$ref": "#/514"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "AssetReferenceBase",
    "discriminator": "referenceType",
    "baseProperties": {},
    "elements": {
      "DataPath": {
        "$ref": "#/517"
      },
      "Id": {
        "$ref": "#/519"
      },
      "OutputPath": {
        "$ref": "#/521"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataPathAssetReference",
    "properties": {
      "datastoreId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM resource ID of the datastore where the asset is located."
      },
      "path": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The path of the file/directory in the datastore."
      },
      "referenceType": {
        "type": {
          "$ref": "#/518"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of asset reference."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DataPath"
  },
  {
    "$type": "ObjectType",
    "name": "IdAssetReference",
    "properties": {
      "assetId": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] ARM resource ID of the asset."
      },
      "referenceType": {
        "type": {
          "$ref": "#/520"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of asset reference."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Id"
  },
  {
    "$type": "ObjectType",
    "name": "OutputPathAssetReference",
    "properties": {
      "jobId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM resource ID of the job."
      },
      "path": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The path of the file/directory in the job output."
      },
      "referenceType": {
        "type": {
          "$ref": "#/522"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of asset reference."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "OutputPath"
  },
  {
    "$type": "StringLiteralType",
    "value": "SummaryOnly"
  },
  {
    "$type": "StringLiteralType",
    "value": "AppendRow"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/523"
      },
      {
        "$ref": "#/524"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Scaling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/526"
      },
      {
        "$ref": "#/527"
      },
      {
        "$ref": "#/528"
      },
      {
        "$ref": "#/529"
      },
      {
        "$ref": "#/530"
      },
      {
        "$ref": "#/531"
      },
      {
        "$ref": "#/532"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentResourceConfiguration",
    "properties": {
      "instanceCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Optional number of instances or nodes used by the compute target."
      },
      "instanceType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Optional type of VM used as supported by the compute target."
      },
      "locations": {
        "type": {
          "$ref": "#/535"
        },
        "flags": 0,
        "description": "Locations where the job can run."
      },
      "maxInstanceCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Optional max allowed number of instances or nodes to be used by the compute target.\r\nFor use with elastic training, currently supported by PyTorch distribution type only."
      },
      "properties": {
        "type": {
          "$ref": "#/536"
        },
        "flags": 0,
        "description": "Additional properties bag."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceConfigurationProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "ObjectType",
    "name": "BatchRetrySettings",
    "properties": {
      "maxRetries": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Maximum retry count for a mini-batch"
      },
      "timeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Invocation timeout for a mini-batch, in ISO 8601 format."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CodeConfiguration",
    "properties": {
      "codeId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM resource ID of the code asset."
      },
      "scoringScript": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] The script to execute on startup. eg. \"score.py\""
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EndpointDeploymentPropertiesBaseEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "EndpointDeploymentPropertiesBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/batchEndpoints/deployments@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/500"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/codes"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/codes",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/543"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/544"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/321"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/codes@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/545"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/codes/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/codes/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/547"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/548"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/335"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/codes/versions@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/549"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/components"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/components",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/551"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/552"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/353"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/components@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/553"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/components/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/components/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/555"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/556"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/367"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/components/versions@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/557"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/data"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/data",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/559"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/560"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/381"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/data@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/561"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/data/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/data/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/563"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/564"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/392"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/data/versions@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/565"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/datastores"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/datastores",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/567"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/568"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/570"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DatastoreProperties",
    "discriminator": "datastoreType",
    "baseProperties": {
      "credentials": {
        "type": {
          "$ref": "#/571"
        },
        "flags": 1,
        "description": "[Required] Account credentials."
      },
      "intellectualProperty": {
        "type": {
          "$ref": "#/393"
        },
        "flags": 0,
        "description": "Intellectual Property details."
      },
      "isDefault": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 2,
        "description": "Readonly property to indicate if datastore is the workspace default datastore"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/634"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/635"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    },
    "elements": {
      "AzureBlob": {
        "$ref": "#/636"
      },
      "AzureDataLakeGen1": {
        "$ref": "#/642"
      },
      "AzureDataLakeGen2": {
        "$ref": "#/648"
      },
      "AzureFile": {
        "$ref": "#/654"
      },
      "Hdfs": {
        "$ref": "#/660"
      },
      "OneLake": {
        "$ref": "#/662"
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DatastoreCredentials",
    "discriminator": "credentialsType",
    "baseProperties": {},
    "elements": {
      "AccountKey": {
        "$ref": "#/572"
      },
      "Certificate": {
        "$ref": "#/582"
      },
      "KerberosKeytab": {
        "$ref": "#/592"
      },
      "KerberosPassword": {
        "$ref": "#/602"
      },
      "None": {
        "$ref": "#/612"
      },
      "Sas": {
        "$ref": "#/614"
      },
      "ServicePrincipal": {
        "$ref": "#/624"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AccountKeyDatastoreCredentials",
    "properties": {
      "secrets": {
        "type": {
          "$ref": "#/573"
        },
        "flags": 5,
        "description": "[Required] Storage account secrets."
      },
      "credentialsType": {
        "type": {
          "$ref": "#/581"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AccountKeyDatastoreSecrets",
    "properties": {
      "key": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Storage account key."
      },
      "secretsType": {
        "type": {
          "$ref": "#/580"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AccountKey"
  },
  {
    "$type": "StringLiteralType",
    "value": "Certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sas"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicePrincipal"
  },
  {
    "$type": "StringLiteralType",
    "value": "KerberosPassword"
  },
  {
    "$type": "StringLiteralType",
    "value": "KerberosKeytab"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/574"
      },
      {
        "$ref": "#/575"
      },
      {
        "$ref": "#/576"
      },
      {
        "$ref": "#/577"
      },
      {
        "$ref": "#/578"
      },
      {
        "$ref": "#/579"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "AccountKey"
  },
  {
    "$type": "ObjectType",
    "name": "CertificateDatastoreCredentials",
    "properties": {
      "authorityUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Authority URL used for authentication."
      },
      "clientId": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 1,
        "description": "[Required] Service principal client ID."
      },
      "resourceUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource the service principal has access to."
      },
      "secrets": {
        "type": {
          "$ref": "#/583"
        },
        "flags": 5,
        "description": "[Required] Service principal secrets."
      },
      "tenantId": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 1,
        "description": "[Required] ID of the tenant to which the service principal belongs."
      },
      "thumbprint": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Thumbprint of the certificate used for authentication."
      },
      "credentialsType": {
        "type": {
          "$ref": "#/591"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CertificateDatastoreSecrets",
    "properties": {
      "certificate": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Service principal certificate."
      },
      "secretsType": {
        "type": {
          "$ref": "#/590"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AccountKey"
  },
  {
    "$type": "StringLiteralType",
    "value": "Certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sas"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicePrincipal"
  },
  {
    "$type": "StringLiteralType",
    "value": "KerberosPassword"
  },
  {
    "$type": "StringLiteralType",
    "value": "KerberosKeytab"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/584"
      },
      {
        "$ref": "#/585"
      },
      {
        "$ref": "#/586"
      },
      {
        "$ref": "#/587"
      },
      {
        "$ref": "#/588"
      },
      {
        "$ref": "#/589"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Certificate"
  },
  {
    "$type": "ObjectType",
    "name": "KerberosKeytabCredentials",
    "properties": {
      "secrets": {
        "type": {
          "$ref": "#/593"
        },
        "flags": 5,
        "description": "[Required] Keytab secrets."
      },
      "kerberosKdcAddress": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] IP Address or DNS HostName."
      },
      "kerberosPrincipal": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Kerberos Username"
      },
      "kerberosRealm": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Domain over which a Kerberos authentication server has the authority to authenticate a user, host or service."
      },
      "credentialsType": {
        "type": {
          "$ref": "#/601"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KerberosKeytabSecrets",
    "properties": {
      "kerberosKeytab": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Kerberos keytab secret."
      },
      "secretsType": {
        "type": {
          "$ref": "#/600"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AccountKey"
  },
  {
    "$type": "StringLiteralType",
    "value": "Certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sas"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicePrincipal"
  },
  {
    "$type": "StringLiteralType",
    "value": "KerberosPassword"
  },
  {
    "$type": "StringLiteralType",
    "value": "KerberosKeytab"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/594"
      },
      {
        "$ref": "#/595"
      },
      {
        "$ref": "#/596"
      },
      {
        "$ref": "#/597"
      },
      {
        "$ref": "#/598"
      },
      {
        "$ref": "#/599"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "KerberosKeytab"
  },
  {
    "$type": "ObjectType",
    "name": "KerberosPasswordCredentials",
    "properties": {
      "secrets": {
        "type": {
          "$ref": "#/603"
        },
        "flags": 5,
        "description": "[Required] Kerberos password secrets."
      },
      "kerberosKdcAddress": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] IP Address or DNS HostName."
      },
      "kerberosPrincipal": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Kerberos Username"
      },
      "kerberosRealm": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Domain over which a Kerberos authentication server has the authority to authenticate a user, host or service."
      },
      "credentialsType": {
        "type": {
          "$ref": "#/611"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KerberosPasswordSecrets",
    "properties": {
      "kerberosPassword": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Kerberos password secret."
      },
      "secretsType": {
        "type": {
          "$ref": "#/610"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AccountKey"
  },
  {
    "$type": "StringLiteralType",
    "value": "Certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sas"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicePrincipal"
  },
  {
    "$type": "StringLiteralType",
    "value": "KerberosPassword"
  },
  {
    "$type": "StringLiteralType",
    "value": "KerberosKeytab"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/604"
      },
      {
        "$ref": "#/605"
      },
      {
        "$ref": "#/606"
      },
      {
        "$ref": "#/607"
      },
      {
        "$ref": "#/608"
      },
      {
        "$ref": "#/609"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "KerberosPassword"
  },
  {
    "$type": "ObjectType",
    "name": "NoneDatastoreCredentials",
    "properties": {
      "credentialsType": {
        "type": {
          "$ref": "#/613"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "ObjectType",
    "name": "SasDatastoreCredentials",
    "properties": {
      "secrets": {
        "type": {
          "$ref": "#/615"
        },
        "flags": 5,
        "description": "[Required] Storage container secrets."
      },
      "credentialsType": {
        "type": {
          "$ref": "#/623"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SasDatastoreSecrets",
    "properties": {
      "sasToken": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Storage container SAS token."
      },
      "secretsType": {
        "type": {
          "$ref": "#/622"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AccountKey"
  },
  {
    "$type": "StringLiteralType",
    "value": "Certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sas"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicePrincipal"
  },
  {
    "$type": "StringLiteralType",
    "value": "KerberosPassword"
  },
  {
    "$type": "StringLiteralType",
    "value": "KerberosKeytab"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/616"
      },
      {
        "$ref": "#/617"
      },
      {
        "$ref": "#/618"
      },
      {
        "$ref": "#/619"
      },
      {
        "$ref": "#/620"
      },
      {
        "$ref": "#/621"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Sas"
  },
  {
    "$type": "ObjectType",
    "name": "ServicePrincipalDatastoreCredentials",
    "properties": {
      "authorityUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Authority URL used for authentication."
      },
      "clientId": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 1,
        "description": "[Required] Service principal client ID."
      },
      "resourceUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource the service principal has access to."
      },
      "secrets": {
        "type": {
          "$ref": "#/625"
        },
        "flags": 5,
        "description": "[Required] Service principal secrets."
      },
      "tenantId": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 1,
        "description": "[Required] ID of the tenant to which the service principal belongs."
      },
      "credentialsType": {
        "type": {
          "$ref": "#/633"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ServicePrincipalDatastoreSecrets",
    "properties": {
      "clientSecret": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Service principal secret."
      },
      "secretsType": {
        "type": {
          "$ref": "#/632"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AccountKey"
  },
  {
    "$type": "StringLiteralType",
    "value": "Certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sas"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicePrincipal"
  },
  {
    "$type": "StringLiteralType",
    "value": "KerberosPassword"
  },
  {
    "$type": "StringLiteralType",
    "value": "KerberosKeytab"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/626"
      },
      {
        "$ref": "#/627"
      },
      {
        "$ref": "#/628"
      },
      {
        "$ref": "#/629"
      },
      {
        "$ref": "#/630"
      },
      {
        "$ref": "#/631"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicePrincipal"
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureBlobDatastore",
    "properties": {
      "accountName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Storage account name."
      },
      "containerName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Storage account container name."
      },
      "endpoint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Azure cloud endpoint for the storage account."
      },
      "protocol": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Protocol used to communicate with the storage account."
      },
      "serviceDataAccessAuthIdentity": {
        "type": {
          "$ref": "#/640"
        },
        "flags": 0,
        "description": "Indicates which identity to use to authenticate service data access to customer's storage."
      },
      "resourceGroup": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Azure Resource Group name"
      },
      "subscriptionId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Azure Subscription Id"
      },
      "datastoreType": {
        "type": {
          "$ref": "#/641"
        },
        "flags": 1,
        "description": "[Required] Storage type backing the datastore."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceSystemAssignedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceUserAssignedIdentity"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/637"
      },
      {
        "$ref": "#/638"
      },
      {
        "$ref": "#/639"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureBlob"
  },
  {
    "$type": "ObjectType",
    "name": "AzureDataLakeGen1Datastore",
    "properties": {
      "serviceDataAccessAuthIdentity": {
        "type": {
          "$ref": "#/646"
        },
        "flags": 0,
        "description": "Indicates which identity to use to authenticate service data access to customer's storage."
      },
      "storeName": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Azure Data Lake store name."
      },
      "resourceGroup": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Azure Resource Group name"
      },
      "subscriptionId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Azure Subscription Id"
      },
      "datastoreType": {
        "type": {
          "$ref": "#/647"
        },
        "flags": 1,
        "description": "[Required] Storage type backing the datastore."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceSystemAssignedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceUserAssignedIdentity"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/643"
      },
      {
        "$ref": "#/644"
      },
      {
        "$ref": "#/645"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureDataLakeGen1"
  },
  {
    "$type": "ObjectType",
    "name": "AzureDataLakeGen2Datastore",
    "properties": {
      "accountName": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Storage account name."
      },
      "endpoint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Azure cloud endpoint for the storage account."
      },
      "filesystem": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] The name of the Data Lake Gen2 filesystem."
      },
      "protocol": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Protocol used to communicate with the storage account."
      },
      "serviceDataAccessAuthIdentity": {
        "type": {
          "$ref": "#/652"
        },
        "flags": 0,
        "description": "Indicates which identity to use to authenticate service data access to customer's storage."
      },
      "resourceGroup": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Azure Resource Group name"
      },
      "subscriptionId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Azure Subscription Id"
      },
      "datastoreType": {
        "type": {
          "$ref": "#/653"
        },
        "flags": 1,
        "description": "[Required] Storage type backing the datastore."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceSystemAssignedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceUserAssignedIdentity"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/649"
      },
      {
        "$ref": "#/650"
      },
      {
        "$ref": "#/651"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureDataLakeGen2"
  },
  {
    "$type": "ObjectType",
    "name": "AzureFileDatastore",
    "properties": {
      "accountName": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Storage account name."
      },
      "endpoint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Azure cloud endpoint for the storage account."
      },
      "fileShareName": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] The name of the Azure file share that the datastore points to."
      },
      "protocol": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Protocol used to communicate with the storage account."
      },
      "serviceDataAccessAuthIdentity": {
        "type": {
          "$ref": "#/658"
        },
        "flags": 0,
        "description": "Indicates which identity to use to authenticate service data access to customer's storage."
      },
      "resourceGroup": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Azure Resource Group name"
      },
      "subscriptionId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Azure Subscription Id"
      },
      "datastoreType": {
        "type": {
          "$ref": "#/659"
        },
        "flags": 1,
        "description": "[Required] Storage type backing the datastore."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceSystemAssignedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceUserAssignedIdentity"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/655"
      },
      {
        "$ref": "#/656"
      },
      {
        "$ref": "#/657"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureFile"
  },
  {
    "$type": "ObjectType",
    "name": "HdfsDatastore",
    "properties": {
      "hdfsServerCertificate": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The TLS cert of the HDFS server. Needs to be a base64 encoded string. Required if \"Https\" protocol is selected."
      },
      "nameNodeAddress": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] IP Address or DNS HostName."
      },
      "protocol": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Protocol used to communicate with the storage account (Https/Http)."
      },
      "datastoreType": {
        "type": {
          "$ref": "#/661"
        },
        "flags": 1,
        "description": "[Required] Storage type backing the datastore."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Hdfs"
  },
  {
    "$type": "ObjectType",
    "name": "OneLakeDatastore",
    "properties": {
      "artifact": {
        "type": {
          "$ref": "#/663"
        },
        "flags": 1,
        "description": "[Required] OneLake artifact backing the datastore."
      },
      "endpoint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "OneLake endpoint to use for the datastore."
      },
      "oneLakeWorkspaceName": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] OneLake workspace name."
      },
      "serviceDataAccessAuthIdentity": {
        "type": {
          "$ref": "#/669"
        },
        "flags": 0,
        "description": "Indicates which identity to use to authenticate service data access to customer's storage."
      },
      "datastoreType": {
        "type": {
          "$ref": "#/670"
        },
        "flags": 1,
        "description": "[Required] Storage type backing the datastore."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "OneLakeArtifact",
    "discriminator": "artifactType",
    "baseProperties": {
      "artifactName": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] OneLake artifact name"
      }
    },
    "elements": {
      "LakeHouse": {
        "$ref": "#/664"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LakeHouseArtifact",
    "properties": {
      "artifactType": {
        "type": {
          "$ref": "#/665"
        },
        "flags": 1,
        "description": "[Required] OneLake artifact type"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "LakeHouse"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceSystemAssignedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "WorkspaceUserAssignedIdentity"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/666"
      },
      {
        "$ref": "#/667"
      },
      {
        "$ref": "#/668"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "OneLake"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/datastores@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/569"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/environments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/environments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/672"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/673"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/410"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/environments@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/674"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/environments/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/environments/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/676"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/677"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/424"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/environments/versions@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/678"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/featuresets"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/featuresets",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/680"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/681"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/683"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturesetContainerProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/690"
        },
        "flags": 2,
        "description": "Provisioning state for the featureset container."
      },
      "isArchived": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "latestVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The latest version inside this container."
      },
      "nextVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The next auto incremental version"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/691"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/692"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/684"
      },
      {
        "$ref": "#/685"
      },
      {
        "$ref": "#/686"
      },
      {
        "$ref": "#/687"
      },
      {
        "$ref": "#/688"
      },
      {
        "$ref": "#/689"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/featuresets@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/682"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/featuresets/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/featuresets/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/694"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/695"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/697"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturesetVersionProperties",
    "properties": {
      "entities": {
        "type": {
          "$ref": "#/698"
        },
        "flags": 0,
        "description": "Specifies list of entities"
      },
      "materializationSettings": {
        "type": {
          "$ref": "#/699"
        },
        "flags": 0,
        "description": "Specifies the materialization settings"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/747"
        },
        "flags": 2,
        "description": "Provisioning state for the featureset version container."
      },
      "specification": {
        "type": {
          "$ref": "#/748"
        },
        "flags": 0,
        "description": "Specifies the feature spec details"
      },
      "stage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies the asset stage"
      },
      "autoDeleteSetting": {
        "type": {
          "$ref": "#/343"
        },
        "flags": 0,
        "description": "Specifies the lifecycle setting of managed data asset."
      },
      "isAnonymous": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous"
      },
      "isArchived": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/749"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/750"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "MaterializationSettings",
    "properties": {
      "notification": {
        "type": {
          "$ref": "#/700"
        },
        "flags": 0,
        "description": "Specifies the notification details"
      },
      "resource": {
        "type": {
          "$ref": "#/711"
        },
        "flags": 0,
        "description": "Specifies the compute resource settings"
      },
      "schedule": {
        "type": {
          "$ref": "#/712"
        },
        "flags": 0,
        "description": "Specifies the schedule details"
      },
      "sparkConfiguration": {
        "type": {
          "$ref": "#/735"
        },
        "flags": 0,
        "description": "Specifies the spark compute settings"
      },
      "storeType": {
        "type": {
          "$ref": "#/740"
        },
        "flags": 0,
        "description": "Specifies the stores to which materialization should happen"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NotificationSetting",
    "properties": {
      "emailOn": {
        "type": {
          "$ref": "#/705"
        },
        "flags": 0,
        "description": "Send email notification to user on specified notification type"
      },
      "emails": {
        "type": {
          "$ref": "#/706"
        },
        "flags": 0,
        "description": "This is the email recipient list which has a limitation of 499 characters in total concat with comma separator"
      },
      "webhooks": {
        "type": {
          "$ref": "#/710"
        },
        "flags": 0,
        "description": "Send webhook callback to a service. Key is a user-provided name for the webhook."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "JobCompleted"
  },
  {
    "$type": "StringLiteralType",
    "value": "JobFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "JobCancelled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/701"
      },
      {
        "$ref": "#/702"
      },
      {
        "$ref": "#/703"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/704"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Webhook",
    "discriminator": "webhookType",
    "baseProperties": {
      "eventType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Send callback on a specified notification event"
      }
    },
    "elements": {
      "AzureDevOps": {
        "$ref": "#/708"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureDevOpsWebhook",
    "properties": {
      "webhookType": {
        "type": {
          "$ref": "#/709"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of service to send a callback"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureDevOps"
  },
  {
    "$type": "ObjectType",
    "name": "NotificationSettingWebhooks",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/707"
    }
  },
  {
    "$type": "ObjectType",
    "name": "MaterializationComputeResource",
    "properties": {
      "instanceType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies the instance type"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RecurrenceTrigger",
    "properties": {
      "frequency": {
        "type": {
          "$ref": "#/718"
        },
        "flags": 1,
        "description": "[Required] The frequency to trigger schedule."
      },
      "interval": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "[Required] Specifies schedule interval in conjunction with frequency"
      },
      "schedule": {
        "type": {
          "$ref": "#/719"
        },
        "flags": 0,
        "description": "The recurrence schedule."
      },
      "endTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies end time of schedule in ISO 8601, but without a UTC offset. Refer https://en.wikipedia.org/wiki/ISO_8601.\r\nRecommented format would be \"2022-06-01T00:00:01\"\r\nIf not present, the schedule will run indefinitely"
      },
      "startTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies start time of schedule in ISO 8601 format, but without a UTC offset."
      },
      "timeZone": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies time zone in which the schedule runs.\r\nTimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11"
      },
      "triggerType": {
        "type": {
          "$ref": "#/734"
        },
        "flags": 1,
        "description": "[Required]"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Minute"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hour"
  },
  {
    "$type": "StringLiteralType",
    "value": "Day"
  },
  {
    "$type": "StringLiteralType",
    "value": "Week"
  },
  {
    "$type": "StringLiteralType",
    "value": "Month"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/713"
      },
      {
        "$ref": "#/714"
      },
      {
        "$ref": "#/715"
      },
      {
        "$ref": "#/716"
      },
      {
        "$ref": "#/717"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "RecurrenceSchedule",
    "properties": {
      "hours": {
        "type": {
          "$ref": "#/720"
        },
        "flags": 1,
        "description": "[Required] List of hours for the schedule."
      },
      "minutes": {
        "type": {
          "$ref": "#/721"
        },
        "flags": 1,
        "description": "[Required] List of minutes for the schedule."
      },
      "monthDays": {
        "type": {
          "$ref": "#/722"
        },
        "flags": 0,
        "description": "List of month days for the schedule"
      },
      "weekDays": {
        "type": {
          "$ref": "#/731"
        },
        "flags": 0,
        "description": "List of days for the schedule."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/21"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/21"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/21"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Monday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Tuesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Wednesday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Thursday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Friday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Saturday"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sunday"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/723"
      },
      {
        "$ref": "#/724"
      },
      {
        "$ref": "#/725"
      },
      {
        "$ref": "#/726"
      },
      {
        "$ref": "#/727"
      },
      {
        "$ref": "#/728"
      },
      {
        "$ref": "#/729"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/730"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Recurrence"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cron"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/732"
      },
      {
        "$ref": "#/733"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "MaterializationSettingsSparkConfiguration",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Online"
  },
  {
    "$type": "StringLiteralType",
    "value": "Offline"
  },
  {
    "$type": "StringLiteralType",
    "value": "OnlineAndOffline"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/736"
      },
      {
        "$ref": "#/737"
      },
      {
        "$ref": "#/738"
      },
      {
        "$ref": "#/739"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/741"
      },
      {
        "$ref": "#/742"
      },
      {
        "$ref": "#/743"
      },
      {
        "$ref": "#/744"
      },
      {
        "$ref": "#/745"
      },
      {
        "$ref": "#/746"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "FeaturesetSpecification",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies the spec path"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/featuresets/versions@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/696"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/752"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/753"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/755"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturestoreEntityContainerProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/762"
        },
        "flags": 2,
        "description": "Provisioning state for the featurestore entity container."
      },
      "isArchived": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "latestVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The latest version inside this container."
      },
      "nextVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The next auto incremental version"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/763"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/764"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/756"
      },
      {
        "$ref": "#/757"
      },
      {
        "$ref": "#/758"
      },
      {
        "$ref": "#/759"
      },
      {
        "$ref": "#/760"
      },
      {
        "$ref": "#/761"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/754"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/766"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/767"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/769"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturestoreEntityVersionProperties",
    "properties": {
      "indexColumns": {
        "type": {
          "$ref": "#/780"
        },
        "flags": 0,
        "description": "Specifies index columns"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/787"
        },
        "flags": 2,
        "description": "Provisioning state for the featurestore entity version."
      },
      "stage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies the asset stage"
      },
      "autoDeleteSetting": {
        "type": {
          "$ref": "#/343"
        },
        "flags": 0,
        "description": "Specifies the lifecycle setting of managed data asset."
      },
      "isAnonymous": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous"
      },
      "isArchived": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/788"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/789"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IndexColumn",
    "properties": {
      "columnName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies the column name"
      },
      "dataType": {
        "type": {
          "$ref": "#/779"
        },
        "flags": 0,
        "description": "Specifies the data type"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "String"
  },
  {
    "$type": "StringLiteralType",
    "value": "Integer"
  },
  {
    "$type": "StringLiteralType",
    "value": "Long"
  },
  {
    "$type": "StringLiteralType",
    "value": "Float"
  },
  {
    "$type": "StringLiteralType",
    "value": "Double"
  },
  {
    "$type": "StringLiteralType",
    "value": "Binary"
  },
  {
    "$type": "StringLiteralType",
    "value": "Datetime"
  },
  {
    "$type": "StringLiteralType",
    "value": "Boolean"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/771"
      },
      {
        "$ref": "#/772"
      },
      {
        "$ref": "#/773"
      },
      {
        "$ref": "#/774"
      },
      {
        "$ref": "#/775"
      },
      {
        "$ref": "#/776"
      },
      {
        "$ref": "#/777"
      },
      {
        "$ref": "#/778"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/770"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/781"
      },
      {
        "$ref": "#/782"
      },
      {
        "$ref": "#/783"
      },
      {
        "$ref": "#/784"
      },
      {
        "$ref": "#/785"
      },
      {
        "$ref": "#/786"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities/versions@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/768"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/inferencePools"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/inferencePools",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/791"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/792"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "kind": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "properties": {
        "type": {
          "$ref": "#/794"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "sku": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/808"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "InferencePoolProperties",
    "properties": {
      "codeConfiguration": {
        "type": {
          "$ref": "#/538"
        },
        "flags": 0,
        "description": "Code configuration for the inference pool."
      },
      "environmentConfiguration": {
        "type": {
          "$ref": "#/795"
        },
        "flags": 0,
        "description": "EnvironmentConfiguration for the inference pool."
      },
      "modelConfiguration": {
        "type": {
          "$ref": "#/798"
        },
        "flags": 0,
        "description": "ModelConfiguration for the inference pool."
      },
      "nodeSkuType": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Compute instance type."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/805"
        },
        "flags": 2,
        "description": "Provisioning state for the pool."
      },
      "requestConfiguration": {
        "type": {
          "$ref": "#/806"
        },
        "flags": 0,
        "description": "Request configuration for the inference pool."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of the resource."
      },
      "properties": {
        "type": {
          "$ref": "#/807"
        },
        "flags": 0,
        "description": "Property dictionary. Properties can be added, but not removed or altered."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PoolEnvironmentConfiguration",
    "properties": {
      "environmentId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM resource ID of the environment specification for the inference pool."
      },
      "environmentVariables": {
        "type": {
          "$ref": "#/796"
        },
        "flags": 0,
        "description": "Environment variables configuration for the inference pool."
      },
      "livenessProbe": {
        "type": {
          "$ref": "#/797"
        },
        "flags": 0,
        "description": "Liveness probe monitors the health of the container regularly."
      },
      "readinessProbe": {
        "type": {
          "$ref": "#/797"
        },
        "flags": 0,
        "description": "Readiness probe validates if the container is ready to serve traffic. The properties and defaults are the same as liveness probe."
      },
      "startupProbe": {
        "type": {
          "$ref": "#/797"
        },
        "flags": 0,
        "description": "This verifies whether the application within a container is started. Startup probes run before any other probe, and, unless it finishes successfully, disables other probes."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PoolEnvironmentConfigurationEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProbeSettings",
    "properties": {
      "failureThreshold": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The number of failures to allow before returning an unhealthy status."
      },
      "initialDelay": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The delay before the first probe in ISO 8601 format."
      },
      "period": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The length of time between probes in ISO 8601 format."
      },
      "successThreshold": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The number of successful probes before returning a healthy status."
      },
      "timeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The probe timeout in ISO 8601 format."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PoolModelConfiguration",
    "properties": {
      "modelId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The URI path to the model."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/799"
      },
      {
        "$ref": "#/800"
      },
      {
        "$ref": "#/801"
      },
      {
        "$ref": "#/802"
      },
      {
        "$ref": "#/803"
      },
      {
        "$ref": "#/804"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "RequestConfiguration",
    "properties": {
      "maxConcurrentRequestsPerInstance": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The number of maximum concurrent requests per node allowed per deployment. Defaults to 1."
      },
      "requestTimeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The scoring timeout in ISO 8601 format.\r\nDefaults to 5000ms."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PropertiesBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/inferencePools@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/793"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/inferencePools/endpoints"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/inferencePools/endpoints",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/810"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/811"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "kind": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "properties": {
        "type": {
          "$ref": "#/813"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "sku": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/824"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "InferenceEndpointProperties",
    "properties": {
      "authMode": {
        "type": {
          "$ref": "#/815"
        },
        "flags": 1,
        "description": "[Required] Authentication mode for the endpoint."
      },
      "endpointUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Endpoint URI for the inference endpoint."
      },
      "groupId": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Group within the same pool with which this endpoint needs to be associated with."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/822"
        },
        "flags": 2,
        "description": "Provisioning state for the endpoint."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of the resource."
      },
      "properties": {
        "type": {
          "$ref": "#/823"
        },
        "flags": 0,
        "description": "Property dictionary. Properties can be added, but not removed or altered."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AAD"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/814"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/816"
      },
      {
        "$ref": "#/817"
      },
      {
        "$ref": "#/818"
      },
      {
        "$ref": "#/819"
      },
      {
        "$ref": "#/820"
      },
      {
        "$ref": "#/821"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "PropertiesBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/inferencePools/endpoints@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/812"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/inferencePools/groups"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/inferencePools/groups",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/826"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/827"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "kind": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "properties": {
        "type": {
          "$ref": "#/829"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "sku": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/838"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "InferenceGroupProperties",
    "properties": {
      "bonusExtraCapacity": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Capacity to be used from the pool's reserved capacity.\r\noptional"
      },
      "metadata": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Metadata for the inference group."
      },
      "priority": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Priority of the group within the N:Microsoft.MachineLearning.ManagementFrontEnd.Contracts.V20230801Preview.Pools.InferencePools."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/836"
        },
        "flags": 2,
        "description": "Provisioning state for the inference group."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of the resource."
      },
      "properties": {
        "type": {
          "$ref": "#/837"
        },
        "flags": 0,
        "description": "Property dictionary. Properties can be added, but not removed or altered."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/830"
      },
      {
        "$ref": "#/831"
      },
      {
        "$ref": "#/832"
      },
      {
        "$ref": "#/833"
      },
      {
        "$ref": "#/834"
      },
      {
        "$ref": "#/835"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "PropertiesBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/inferencePools/groups@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/828"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/jobs"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/jobs",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/840"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/841"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/843"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "JobBaseProperties",
    "discriminator": "jobType",
    "baseProperties": {
      "componentId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM resource ID of the component resource."
      },
      "computeId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM resource ID of the compute resource."
      },
      "displayName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Display name of job."
      },
      "experimentName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the experiment the job belongs to. If not set, the job is placed in the \"Default\" experiment."
      },
      "identity": {
        "type": {
          "$ref": "#/844"
        },
        "flags": 0,
        "description": "Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.\r\nDefaults to AmlToken if null."
      },
      "isArchived": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "notificationSetting": {
        "type": {
          "$ref": "#/700"
        },
        "flags": 0,
        "description": "Notification setting for the job"
      },
      "secretsConfiguration": {
        "type": {
          "$ref": "#/852"
        },
        "flags": 0,
        "description": "Configuration for secrets to be made available during runtime."
      },
      "services": {
        "type": {
          "$ref": "#/858"
        },
        "flags": 0,
        "description": "List of JobEndpoints.\r\nFor local jobs, a job endpoint will have an endpoint value of FileStreamObject."
      },
      "status": {
        "type": {
          "$ref": "#/874"
        },
        "flags": 2,
        "description": "Status of the job."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/875"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/876"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    },
    "elements": {
      "AutoML": {
        "$ref": "#/877"
      },
      "Command": {
        "$ref": "#/1321"
      },
      "Labeling": {
        "$ref": "#/1400"
      },
      "Pipeline": {
        "$ref": "#/1444"
      },
      "Spark": {
        "$ref": "#/1449"
      },
      "Sweep": {
        "$ref": "#/1465"
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "IdentityConfiguration",
    "discriminator": "identityType",
    "baseProperties": {},
    "elements": {
      "AMLToken": {
        "$ref": "#/845"
      },
      "Managed": {
        "$ref": "#/847"
      },
      "UserIdentity": {
        "$ref": "#/849"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AmlToken",
    "properties": {
      "identityType": {
        "type": {
          "$ref": "#/846"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of identity framework."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AMLToken"
  },
  {
    "$type": "ObjectType",
    "name": "ManagedIdentity",
    "properties": {
      "clientId": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Specifies a user-assigned identity by client ID. For system-assigned, do not set this field."
      },
      "objectId": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Specifies a user-assigned identity by object ID. For system-assigned, do not set this field."
      },
      "resourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field."
      },
      "identityType": {
        "type": {
          "$ref": "#/848"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of identity framework."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Managed"
  },
  {
    "$type": "ObjectType",
    "name": "UserIdentity",
    "properties": {
      "identityType": {
        "type": {
          "$ref": "#/850"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of identity framework."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "UserIdentity"
  },
  {
    "$type": "ObjectType",
    "name": "SecretConfiguration",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Secret Uri.\r\nSample Uri : https://myvault.vault.azure.net/secrets/mysecretname/secretversion"
      },
      "workspaceSecretName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of secret in workspace key vault."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobBaseSecretsConfiguration",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/851"
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobService",
    "properties": {
      "endpoint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Url for endpoint."
      },
      "errorMessage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Any error in the service."
      },
      "jobServiceType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Endpoint type."
      },
      "nodes": {
        "type": {
          "$ref": "#/854"
        },
        "flags": 0,
        "description": "Nodes that user would like to start the service on.\r\nIf Nodes is not set or set to null, the service will only be started on leader node."
      },
      "port": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Port for endpoint set by user."
      },
      "properties": {
        "type": {
          "$ref": "#/857"
        },
        "flags": 0,
        "description": "Additional properties to set on the endpoint."
      },
      "status": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Status of endpoint."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Nodes",
    "discriminator": "nodesValueType",
    "baseProperties": {},
    "elements": {
      "All": {
        "$ref": "#/855"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AllNodes",
    "properties": {
      "nodesValueType": {
        "type": {
          "$ref": "#/856"
        },
        "flags": 1,
        "description": "[Required] Type of the Nodes value"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "All"
  },
  {
    "$type": "ObjectType",
    "name": "JobServiceProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobBaseServices",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/853"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotStarted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Starting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Preparing"
  },
  {
    "$type": "StringLiteralType",
    "value": "Queued"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Finalizing"
  },
  {
    "$type": "StringLiteralType",
    "value": "CancelRequested"
  },
  {
    "$type": "StringLiteralType",
    "value": "Completed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotResponding"
  },
  {
    "$type": "StringLiteralType",
    "value": "Paused"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Scheduled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/859"
      },
      {
        "$ref": "#/860"
      },
      {
        "$ref": "#/861"
      },
      {
        "$ref": "#/862"
      },
      {
        "$ref": "#/863"
      },
      {
        "$ref": "#/864"
      },
      {
        "$ref": "#/865"
      },
      {
        "$ref": "#/866"
      },
      {
        "$ref": "#/867"
      },
      {
        "$ref": "#/868"
      },
      {
        "$ref": "#/869"
      },
      {
        "$ref": "#/870"
      },
      {
        "$ref": "#/871"
      },
      {
        "$ref": "#/872"
      },
      {
        "$ref": "#/873"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoMLJob",
    "properties": {
      "environmentId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ARM resource ID of the Environment specification for the job.\r\nThis is optional value to provide, if not provided, AutoML will default this to Production AutoML curated environment version when running the job."
      },
      "environmentVariables": {
        "type": {
          "$ref": "#/878"
        },
        "flags": 0,
        "description": "Environment variables included in the job."
      },
      "outputs": {
        "type": {
          "$ref": "#/916"
        },
        "flags": 0,
        "description": "Mapping of output data bindings used in the job."
      },
      "queueSettings": {
        "type": {
          "$ref": "#/917"
        },
        "flags": 0,
        "description": "Queue settings for the job"
      },
      "resources": {
        "type": {
          "$ref": "#/924"
        },
        "flags": 0,
        "description": "Compute Resource configuration for the job."
      },
      "taskDetails": {
        "type": {
          "$ref": "#/928"
        },
        "flags": 1,
        "description": "[Required] This represents scenario which can be one of Tables/NLP/Image"
      },
      "jobType": {
        "type": {
          "$ref": "#/1320"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoMLJobEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "JobOutput",
    "discriminator": "jobOutputType",
    "baseProperties": {
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description for the output."
      }
    },
    "elements": {
      "custom_model": {
        "$ref": "#/880"
      },
      "mlflow_model": {
        "$ref": "#/886"
      },
      "mltable": {
        "$ref": "#/892"
      },
      "triton_model": {
        "$ref": "#/898"
      },
      "uri_file": {
        "$ref": "#/904"
      },
      "uri_folder": {
        "$ref": "#/910"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomModelJobOutput",
    "properties": {
      "assetName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset Name."
      },
      "assetVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset Version."
      },
      "autoDeleteSetting": {
        "type": {
          "$ref": "#/343"
        },
        "flags": 0,
        "description": "Auto delete setting of output data asset."
      },
      "mode": {
        "type": {
          "$ref": "#/884"
        },
        "flags": 0,
        "description": "Output Asset Delivery Mode."
      },
      "uri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset URI."
      },
      "jobOutputType": {
        "type": {
          "$ref": "#/885"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Upload"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/881"
      },
      {
        "$ref": "#/882"
      },
      {
        "$ref": "#/883"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "custom_model"
  },
  {
    "$type": "ObjectType",
    "name": "MLFlowModelJobOutput",
    "properties": {
      "assetName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset Name."
      },
      "assetVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset Version."
      },
      "autoDeleteSetting": {
        "type": {
          "$ref": "#/343"
        },
        "flags": 0,
        "description": "Auto delete setting of output data asset."
      },
      "mode": {
        "type": {
          "$ref": "#/890"
        },
        "flags": 0,
        "description": "Output Asset Delivery Mode."
      },
      "uri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset URI."
      },
      "jobOutputType": {
        "type": {
          "$ref": "#/891"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Upload"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/887"
      },
      {
        "$ref": "#/888"
      },
      {
        "$ref": "#/889"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "mlflow_model"
  },
  {
    "$type": "ObjectType",
    "name": "MLTableJobOutput",
    "properties": {
      "assetName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset Name."
      },
      "assetVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset Version."
      },
      "autoDeleteSetting": {
        "type": {
          "$ref": "#/343"
        },
        "flags": 0,
        "description": "Auto delete setting of output data asset."
      },
      "mode": {
        "type": {
          "$ref": "#/896"
        },
        "flags": 0,
        "description": "Output Asset Delivery Mode."
      },
      "uri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset URI."
      },
      "jobOutputType": {
        "type": {
          "$ref": "#/897"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Upload"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/893"
      },
      {
        "$ref": "#/894"
      },
      {
        "$ref": "#/895"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "mltable"
  },
  {
    "$type": "ObjectType",
    "name": "TritonModelJobOutput",
    "properties": {
      "assetName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset Name."
      },
      "assetVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset Version."
      },
      "autoDeleteSetting": {
        "type": {
          "$ref": "#/343"
        },
        "flags": 0,
        "description": "Auto delete setting of output data asset."
      },
      "mode": {
        "type": {
          "$ref": "#/902"
        },
        "flags": 0,
        "description": "Output Asset Delivery Mode."
      },
      "uri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset URI."
      },
      "jobOutputType": {
        "type": {
          "$ref": "#/903"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Upload"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/899"
      },
      {
        "$ref": "#/900"
      },
      {
        "$ref": "#/901"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "triton_model"
  },
  {
    "$type": "ObjectType",
    "name": "UriFileJobOutput",
    "properties": {
      "assetName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset Name."
      },
      "assetVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset Version."
      },
      "autoDeleteSetting": {
        "type": {
          "$ref": "#/343"
        },
        "flags": 0,
        "description": "Auto delete setting of output data asset."
      },
      "mode": {
        "type": {
          "$ref": "#/908"
        },
        "flags": 0,
        "description": "Output Asset Delivery Mode."
      },
      "uri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset URI."
      },
      "jobOutputType": {
        "type": {
          "$ref": "#/909"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Upload"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/905"
      },
      {
        "$ref": "#/906"
      },
      {
        "$ref": "#/907"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_file"
  },
  {
    "$type": "ObjectType",
    "name": "UriFolderJobOutput",
    "properties": {
      "assetName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset Name."
      },
      "assetVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset Version."
      },
      "autoDeleteSetting": {
        "type": {
          "$ref": "#/343"
        },
        "flags": 0,
        "description": "Auto delete setting of output data asset."
      },
      "mode": {
        "type": {
          "$ref": "#/914"
        },
        "flags": 0,
        "description": "Output Asset Delivery Mode."
      },
      "uri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Output Asset URI."
      },
      "jobOutputType": {
        "type": {
          "$ref": "#/915"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Upload"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/911"
      },
      {
        "$ref": "#/912"
      },
      {
        "$ref": "#/913"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_folder"
  },
  {
    "$type": "ObjectType",
    "name": "AutoMLJobOutputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/879"
    }
  },
  {
    "$type": "ObjectType",
    "name": "QueueSettings",
    "properties": {
      "jobTier": {
        "type": {
          "$ref": "#/923"
        },
        "flags": 0,
        "description": "Controls the compute job tier"
      },
      "priority": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Controls the priority of the job on a compute."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Null"
  },
  {
    "$type": "StringLiteralType",
    "value": "Spot"
  },
  {
    "$type": "StringLiteralType",
    "value": "Basic"
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard"
  },
  {
    "$type": "StringLiteralType",
    "value": "Premium"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/918"
      },
      {
        "$ref": "#/919"
      },
      {
        "$ref": "#/920"
      },
      {
        "$ref": "#/921"
      },
      {
        "$ref": "#/922"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "JobResourceConfiguration",
    "properties": {
      "dockerArgs": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Extra arguments to pass to the Docker run command. This would override any parameters that have already been set by the system, or in this section. This parameter is only supported for Azure ML compute types."
      },
      "shmSize": {
        "type": {
          "$ref": "#/925"
        },
        "flags": 0,
        "description": "Size of the docker container's shared memory block. This should be in the format of (number)(unit) where number as to be greater than 0 and the unit can be one of b(bytes), k(kilobytes), m(megabytes), or g(gigabytes)."
      },
      "instanceCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Optional number of instances or nodes used by the compute target."
      },
      "instanceType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Optional type of VM used as supported by the compute target."
      },
      "locations": {
        "type": {
          "$ref": "#/926"
        },
        "flags": 0,
        "description": "Locations where the job can run."
      },
      "maxInstanceCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Optional max allowed number of instances or nodes to be used by the compute target.\r\nFor use with elastic training, currently supported by PyTorch distribution type only."
      },
      "properties": {
        "type": {
          "$ref": "#/927"
        },
        "flags": 0,
        "description": "Additional properties bag."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "\\d+[bBkKmMgG]"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceConfigurationProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "AutoMLVertical",
    "discriminator": "taskType",
    "baseProperties": {
      "logVerbosity": {
        "type": {
          "$ref": "#/935"
        },
        "flags": 0,
        "description": "Log verbosity for the job."
      },
      "targetColumnName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Target column name: This is prediction values column.\r\nAlso known as label column name in context of classification tasks."
      },
      "trainingData": {
        "type": {
          "$ref": "#/936"
        },
        "flags": 1,
        "description": "[Required] Training data input."
      }
    },
    "elements": {
      "Classification": {
        "$ref": "#/952"
      },
      "Forecasting": {
        "$ref": "#/1049"
      },
      "ImageClassification": {
        "$ref": "#/1147"
      },
      "ImageClassificationMultilabel": {
        "$ref": "#/1189"
      },
      "ImageInstanceSegmentation": {
        "$ref": "#/1199"
      },
      "ImageObjectDetection": {
        "$ref": "#/1232"
      },
      "Regression": {
        "$ref": "#/1237"
      },
      "TextClassification": {
        "$ref": "#/1275"
      },
      "TextClassificationMultilabel": {
        "$ref": "#/1301"
      },
      "TextNER": {
        "$ref": "#/1311"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSet"
  },
  {
    "$type": "StringLiteralType",
    "value": "Debug"
  },
  {
    "$type": "StringLiteralType",
    "value": "Info"
  },
  {
    "$type": "StringLiteralType",
    "value": "Warning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "StringLiteralType",
    "value": "Critical"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/929"
      },
      {
        "$ref": "#/930"
      },
      {
        "$ref": "#/931"
      },
      {
        "$ref": "#/932"
      },
      {
        "$ref": "#/933"
      },
      {
        "$ref": "#/934"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "MLTableJobInput",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/943"
        },
        "flags": 0,
        "description": "Input Asset Delivery Mode."
      },
      "uri": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description for the input."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/951"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnlyMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalDownload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/937"
      },
      {
        "$ref": "#/938"
      },
      {
        "$ref": "#/939"
      },
      {
        "$ref": "#/940"
      },
      {
        "$ref": "#/941"
      },
      {
        "$ref": "#/942"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "literal"
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_file"
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_folder"
  },
  {
    "$type": "StringLiteralType",
    "value": "mltable"
  },
  {
    "$type": "StringLiteralType",
    "value": "custom_model"
  },
  {
    "$type": "StringLiteralType",
    "value": "mlflow_model"
  },
  {
    "$type": "StringLiteralType",
    "value": "triton_model"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/944"
      },
      {
        "$ref": "#/945"
      },
      {
        "$ref": "#/946"
      },
      {
        "$ref": "#/947"
      },
      {
        "$ref": "#/948"
      },
      {
        "$ref": "#/949"
      },
      {
        "$ref": "#/950"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Classification",
    "properties": {
      "positiveLabel": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Positive label for binary metrics calculation."
      },
      "primaryMetric": {
        "type": {
          "$ref": "#/958"
        },
        "flags": 0,
        "description": "Primary metric for the task."
      },
      "trainingSettings": {
        "type": {
          "$ref": "#/959"
        },
        "flags": 0,
        "description": "Inputs for training phase for an AutoML Job."
      },
      "cvSplitColumnNames": {
        "type": {
          "$ref": "#/1004"
        },
        "flags": 0,
        "description": "Columns to use for CVSplit data."
      },
      "featurizationSettings": {
        "type": {
          "$ref": "#/1005"
        },
        "flags": 0,
        "description": "Featurization inputs needed for AutoML job."
      },
      "fixedParameters": {
        "type": {
          "$ref": "#/1027"
        },
        "flags": 0,
        "description": "Model/training parameters that will remain constant throughout training."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/1028"
        },
        "flags": 0,
        "description": "Execution constraints for AutoMLJob."
      },
      "nCrossValidations": {
        "type": {
          "$ref": "#/1029"
        },
        "flags": 0,
        "description": "Number of cross validation folds to be applied on training dataset\r\nwhen validation dataset is not provided."
      },
      "searchSpace": {
        "type": {
          "$ref": "#/1035"
        },
        "flags": 0,
        "description": "Search space for sampling different combinations of models and their hyperparameters."
      },
      "sweepSettings": {
        "type": {
          "$ref": "#/1036"
        },
        "flags": 0,
        "description": "Settings for model sweeping and hyperparameter tuning."
      },
      "testData": {
        "type": {
          "$ref": "#/936"
        },
        "flags": 0,
        "description": "Test data input."
      },
      "testDataSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The fraction of test dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "validationData": {
        "type": {
          "$ref": "#/936"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "validationDataSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "weightColumnName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to be weighted up or down."
      },
      "taskType": {
        "type": {
          "$ref": "#/1048"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AUCWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accuracy"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormMacroRecall"
  },
  {
    "$type": "StringLiteralType",
    "value": "AveragePrecisionScoreWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "PrecisionScoreWeighted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/953"
      },
      {
        "$ref": "#/954"
      },
      {
        "$ref": "#/955"
      },
      {
        "$ref": "#/956"
      },
      {
        "$ref": "#/957"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ClassificationTrainingSettings",
    "properties": {
      "allowedTrainingAlgorithms": {
        "type": {
          "$ref": "#/974"
        },
        "flags": 0,
        "description": "Allowed models for classification task."
      },
      "blockedTrainingAlgorithms": {
        "type": {
          "$ref": "#/989"
        },
        "flags": 0,
        "description": "Blocked models for classification task."
      },
      "enableDnnTraining": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable recommendation of DNN models."
      },
      "enableModelExplainability": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Flag to turn on explainability on best model."
      },
      "enableOnnxCompatibleModels": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Flag for enabling onnx compatible models."
      },
      "enableStackEnsemble": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable stack ensemble run."
      },
      "enableVoteEnsemble": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable voting ensemble run."
      },
      "ensembleModelDownloadTimeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.\r\nConfigure this parameter with a higher value than 300 secs, if more time is needed."
      },
      "stackEnsembleSettings": {
        "type": {
          "$ref": "#/990"
        },
        "flags": 0,
        "description": "Stack ensemble settings for stack ensemble run."
      },
      "trainingMode": {
        "type": {
          "$ref": "#/1003"
        },
        "flags": 0,
        "description": "TrainingMode mode - Setting to 'auto' is same as setting it to 'non-distributed' for now, however in the future may result in mixed mode or heuristics based mode selection. Default is 'auto'.\r\nIf 'Distributed' then only distributed featurization is used and distributed algorithms are chosen.\r\nIf 'NonDistributed' then only non distributed algorithms are chosen."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "LogisticRegression"
  },
  {
    "$type": "StringLiteralType",
    "value": "SGD"
  },
  {
    "$type": "StringLiteralType",
    "value": "MultinomialNaiveBayes"
  },
  {
    "$type": "StringLiteralType",
    "value": "BernoulliNaiveBayes"
  },
  {
    "$type": "StringLiteralType",
    "value": "SVM"
  },
  {
    "$type": "StringLiteralType",
    "value": "LinearSVM"
  },
  {
    "$type": "StringLiteralType",
    "value": "KNN"
  },
  {
    "$type": "StringLiteralType",
    "value": "DecisionTree"
  },
  {
    "$type": "StringLiteralType",
    "value": "RandomForest"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExtremeRandomTrees"
  },
  {
    "$type": "StringLiteralType",
    "value": "LightGBM"
  },
  {
    "$type": "StringLiteralType",
    "value": "GradientBoosting"
  },
  {
    "$type": "StringLiteralType",
    "value": "XGBoostClassifier"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/960"
      },
      {
        "$ref": "#/961"
      },
      {
        "$ref": "#/962"
      },
      {
        "$ref": "#/963"
      },
      {
        "$ref": "#/964"
      },
      {
        "$ref": "#/965"
      },
      {
        "$ref": "#/966"
      },
      {
        "$ref": "#/967"
      },
      {
        "$ref": "#/968"
      },
      {
        "$ref": "#/969"
      },
      {
        "$ref": "#/970"
      },
      {
        "$ref": "#/971"
      },
      {
        "$ref": "#/972"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/973"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "LogisticRegression"
  },
  {
    "$type": "StringLiteralType",
    "value": "SGD"
  },
  {
    "$type": "StringLiteralType",
    "value": "MultinomialNaiveBayes"
  },
  {
    "$type": "StringLiteralType",
    "value": "BernoulliNaiveBayes"
  },
  {
    "$type": "StringLiteralType",
    "value": "SVM"
  },
  {
    "$type": "StringLiteralType",
    "value": "LinearSVM"
  },
  {
    "$type": "StringLiteralType",
    "value": "KNN"
  },
  {
    "$type": "StringLiteralType",
    "value": "DecisionTree"
  },
  {
    "$type": "StringLiteralType",
    "value": "RandomForest"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExtremeRandomTrees"
  },
  {
    "$type": "StringLiteralType",
    "value": "LightGBM"
  },
  {
    "$type": "StringLiteralType",
    "value": "GradientBoosting"
  },
  {
    "$type": "StringLiteralType",
    "value": "XGBoostClassifier"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/975"
      },
      {
        "$ref": "#/976"
      },
      {
        "$ref": "#/977"
      },
      {
        "$ref": "#/978"
      },
      {
        "$ref": "#/979"
      },
      {
        "$ref": "#/980"
      },
      {
        "$ref": "#/981"
      },
      {
        "$ref": "#/982"
      },
      {
        "$ref": "#/983"
      },
      {
        "$ref": "#/984"
      },
      {
        "$ref": "#/985"
      },
      {
        "$ref": "#/986"
      },
      {
        "$ref": "#/987"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/988"
    }
  },
  {
    "$type": "ObjectType",
    "name": "StackEnsembleSettings",
    "properties": {
      "stackMetaLearnerKWargs": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 0,
        "description": "Optional parameters to pass to the initializer of the meta-learner."
      },
      "stackMetaLearnerTrainPercentage": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for training the meta-learner. Default value is 0.2."
      },
      "stackMetaLearnerType": {
        "type": {
          "$ref": "#/999"
        },
        "flags": 0,
        "description": "The meta-learner is a model trained on the output of the individual heterogeneous models."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "LogisticRegression"
  },
  {
    "$type": "StringLiteralType",
    "value": "LogisticRegressionCV"
  },
  {
    "$type": "StringLiteralType",
    "value": "LightGBMClassifier"
  },
  {
    "$type": "StringLiteralType",
    "value": "ElasticNet"
  },
  {
    "$type": "StringLiteralType",
    "value": "ElasticNetCV"
  },
  {
    "$type": "StringLiteralType",
    "value": "LightGBMRegressor"
  },
  {
    "$type": "StringLiteralType",
    "value": "LinearRegression"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/991"
      },
      {
        "$ref": "#/992"
      },
      {
        "$ref": "#/993"
      },
      {
        "$ref": "#/994"
      },
      {
        "$ref": "#/995"
      },
      {
        "$ref": "#/996"
      },
      {
        "$ref": "#/997"
      },
      {
        "$ref": "#/998"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "StringLiteralType",
    "value": "Distributed"
  },
  {
    "$type": "StringLiteralType",
    "value": "NonDistributed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1000"
      },
      {
        "$ref": "#/1001"
      },
      {
        "$ref": "#/1002"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TableVerticalFeaturizationSettings",
    "properties": {
      "blockedTransformers": {
        "type": {
          "$ref": "#/1017"
        },
        "flags": 0,
        "description": "These transformers shall not be used in featurization."
      },
      "columnNameAndTypes": {
        "type": {
          "$ref": "#/1018"
        },
        "flags": 0,
        "description": "Dictionary of column name and its type (int, float, string, datetime etc)."
      },
      "enableDnnFeaturization": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Determines whether to use Dnn based featurizers for data featurization."
      },
      "mode": {
        "type": {
          "$ref": "#/1022"
        },
        "flags": 0,
        "description": "Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.\r\nIf 'Off' is selected then no featurization is done.\r\nIf 'Custom' is selected then user can specify additional inputs to customize how featurization is done."
      },
      "transformerParams": {
        "type": {
          "$ref": "#/1026"
        },
        "flags": 0,
        "description": "User can specify additional transformers to be used along with the columns to which it would be applied and parameters for the transformer constructor."
      },
      "datasetLanguage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Dataset language, useful for the text data."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "TextTargetEncoder"
  },
  {
    "$type": "StringLiteralType",
    "value": "OneHotEncoder"
  },
  {
    "$type": "StringLiteralType",
    "value": "CatTargetEncoder"
  },
  {
    "$type": "StringLiteralType",
    "value": "TfIdf"
  },
  {
    "$type": "StringLiteralType",
    "value": "WoETargetEncoder"
  },
  {
    "$type": "StringLiteralType",
    "value": "LabelEncoder"
  },
  {
    "$type": "StringLiteralType",
    "value": "WordEmbedding"
  },
  {
    "$type": "StringLiteralType",
    "value": "NaiveBayes"
  },
  {
    "$type": "StringLiteralType",
    "value": "CountVectorizer"
  },
  {
    "$type": "StringLiteralType",
    "value": "HashOneHotEncoder"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1006"
      },
      {
        "$ref": "#/1007"
      },
      {
        "$ref": "#/1008"
      },
      {
        "$ref": "#/1009"
      },
      {
        "$ref": "#/1010"
      },
      {
        "$ref": "#/1011"
      },
      {
        "$ref": "#/1012"
      },
      {
        "$ref": "#/1013"
      },
      {
        "$ref": "#/1014"
      },
      {
        "$ref": "#/1015"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1016"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TableVerticalFeaturizationSettingsColumnNameAndTypes",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "StringLiteralType",
    "value": "Off"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1019"
      },
      {
        "$ref": "#/1020"
      },
      {
        "$ref": "#/1021"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ColumnTransformer",
    "properties": {
      "fields": {
        "type": {
          "$ref": "#/1024"
        },
        "flags": 0,
        "description": "Fields to apply transformer logic on."
      },
      "parameters": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 0,
        "description": "Different properties to be passed to transformer.\r\nInput expected is dictionary of key,value pairs in JSON format."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1023"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TableVerticalFeaturizationSettingsTransformerParams",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1025"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TableFixedParameters",
    "properties": {
      "booster": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specify the boosting type, e.g gbdt for XGBoost."
      },
      "boostingType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specify the boosting type, e.g gbdt for LightGBM."
      },
      "growPolicy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specify the grow policy, which controls the way new nodes are added to the tree."
      },
      "learningRate": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The learning rate for the training procedure."
      },
      "maxBin": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Specify the Maximum number of discrete bins to bucket continuous features ."
      },
      "maxDepth": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Specify the max depth to limit the tree depth explicitly."
      },
      "maxLeaves": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Specify the max leaves to limit the tree leaves explicitly."
      },
      "minDataInLeaf": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The minimum number of data per leaf."
      },
      "minSplitGain": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Minimum loss reduction required to make a further partition on a leaf node of the tree."
      },
      "modelName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the model to train."
      },
      "nEstimators": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Specify the number of trees (or rounds) in an model."
      },
      "numLeaves": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Specify the number of leaves."
      },
      "preprocessorName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the preprocessor to use."
      },
      "regAlpha": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "L1 regularization term on weights."
      },
      "regLambda": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "L2 regularization term on weights."
      },
      "subsample": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Subsample ratio of the training instance."
      },
      "subsampleFreq": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Frequency of subsample."
      },
      "treeMethod": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specify the tree method."
      },
      "withMean": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "If true, center before scaling the data with StandardScalar."
      },
      "withStd": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "If true, scaling the data with Unit Variance with StandardScalar."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TableVerticalLimitSettings",
    "properties": {
      "enableEarlyTermination": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations."
      },
      "exitScore": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Exit score for the AutoML job."
      },
      "maxConcurrentTrials": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Maximum Concurrent iterations."
      },
      "maxCoresPerTrial": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Max cores per iteration."
      },
      "maxNodes": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Maximum nodes to use for the experiment."
      },
      "maxTrials": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of iterations."
      },
      "sweepConcurrentTrials": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of concurrent sweeping runs that user wants to trigger."
      },
      "sweepTrials": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of sweeping runs that user wants to trigger."
      },
      "timeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "AutoML job timeout."
      },
      "trialTimeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Iteration timeout."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "NCrossValidations",
    "discriminator": "mode",
    "baseProperties": {},
    "elements": {
      "Auto": {
        "$ref": "#/1030"
      },
      "Custom": {
        "$ref": "#/1032"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoNCrossValidations",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/1031"
        },
        "flags": 1,
        "description": "[Required] Mode for determining N-Cross validations."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "ObjectType",
    "name": "CustomNCrossValidations",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "[Required] N-Cross validations value."
      },
      "mode": {
        "type": {
          "$ref": "#/1033"
        },
        "flags": 1,
        "description": "[Required] Mode for determining N-Cross validations."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "ObjectType",
    "name": "TableParameterSubspace",
    "properties": {
      "booster": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specify the boosting type, e.g gbdt for XGBoost."
      },
      "boostingType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specify the boosting type, e.g gbdt for LightGBM."
      },
      "growPolicy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specify the grow policy, which controls the way new nodes are added to the tree."
      },
      "learningRate": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The learning rate for the training procedure."
      },
      "maxBin": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specify the Maximum number of discrete bins to bucket continuous features ."
      },
      "maxDepth": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specify the max depth to limit the tree depth explicitly."
      },
      "maxLeaves": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specify the max leaves to limit the tree leaves explicitly."
      },
      "minDataInLeaf": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The minimum number of data per leaf."
      },
      "minSplitGain": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Minimum loss reduction required to make a further partition on a leaf node of the tree."
      },
      "modelName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the model to train."
      },
      "nEstimators": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specify the number of trees (or rounds) in an model."
      },
      "numLeaves": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specify the number of leaves."
      },
      "preprocessorName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the preprocessor to use."
      },
      "regAlpha": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "L1 regularization term on weights."
      },
      "regLambda": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "L2 regularization term on weights."
      },
      "subsample": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Subsample ratio of the training instance."
      },
      "subsampleFreq": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Frequency of subsample"
      },
      "treeMethod": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specify the tree method."
      },
      "withMean": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "If true, center before scaling the data with StandardScalar."
      },
      "withStd": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "If true, scaling the data with Unit Variance with StandardScalar."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1034"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TableSweepSettings",
    "properties": {
      "earlyTermination": {
        "type": {
          "$ref": "#/1037"
        },
        "flags": 0,
        "description": "Type of early termination policy for the sweeping job."
      },
      "samplingAlgorithm": {
        "type": {
          "$ref": "#/1047"
        },
        "flags": 1,
        "description": "[Required] Type of sampling algorithm."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "EarlyTerminationPolicy",
    "discriminator": "policyType",
    "baseProperties": {
      "delayEvaluation": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of intervals by which to delay the first evaluation."
      },
      "evaluationInterval": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Interval (number of runs) between policy evaluations."
      }
    },
    "elements": {
      "Bandit": {
        "$ref": "#/1038"
      },
      "MedianStopping": {
        "$ref": "#/1040"
      },
      "TruncationSelection": {
        "$ref": "#/1042"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BanditPolicy",
    "properties": {
      "slackAmount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Absolute distance allowed from the best performing run."
      },
      "slackFactor": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Ratio of the allowed distance from the best performing run."
      },
      "policyType": {
        "type": {
          "$ref": "#/1039"
        },
        "flags": 1,
        "description": "[Required] Name of policy configuration"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Bandit"
  },
  {
    "$type": "ObjectType",
    "name": "MedianStoppingPolicy",
    "properties": {
      "policyType": {
        "type": {
          "$ref": "#/1041"
        },
        "flags": 1,
        "description": "[Required] Name of policy configuration"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "MedianStopping"
  },
  {
    "$type": "ObjectType",
    "name": "TruncationSelectionPolicy",
    "properties": {
      "truncationPercentage": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The percentage of runs to cancel at each evaluation interval."
      },
      "policyType": {
        "type": {
          "$ref": "#/1043"
        },
        "flags": 1,
        "description": "[Required] Name of policy configuration"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "TruncationSelection"
  },
  {
    "$type": "StringLiteralType",
    "value": "Grid"
  },
  {
    "$type": "StringLiteralType",
    "value": "Random"
  },
  {
    "$type": "StringLiteralType",
    "value": "Bayesian"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1044"
      },
      {
        "$ref": "#/1045"
      },
      {
        "$ref": "#/1046"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Classification"
  },
  {
    "$type": "ObjectType",
    "name": "Forecasting",
    "properties": {
      "forecastingSettings": {
        "type": {
          "$ref": "#/1050"
        },
        "flags": 0,
        "description": "Forecasting task specific inputs."
      },
      "primaryMetric": {
        "type": {
          "$ref": "#/1096"
        },
        "flags": 0,
        "description": "Primary metric for forecasting task."
      },
      "trainingSettings": {
        "type": {
          "$ref": "#/1097"
        },
        "flags": 0,
        "description": "Inputs for training phase for an AutoML Job."
      },
      "cvSplitColumnNames": {
        "type": {
          "$ref": "#/1144"
        },
        "flags": 0,
        "description": "Columns to use for CVSplit data."
      },
      "featurizationSettings": {
        "type": {
          "$ref": "#/1005"
        },
        "flags": 0,
        "description": "Featurization inputs needed for AutoML job."
      },
      "fixedParameters": {
        "type": {
          "$ref": "#/1027"
        },
        "flags": 0,
        "description": "Model/training parameters that will remain constant throughout training."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/1028"
        },
        "flags": 0,
        "description": "Execution constraints for AutoMLJob."
      },
      "nCrossValidations": {
        "type": {
          "$ref": "#/1029"
        },
        "flags": 0,
        "description": "Number of cross validation folds to be applied on training dataset\r\nwhen validation dataset is not provided."
      },
      "searchSpace": {
        "type": {
          "$ref": "#/1145"
        },
        "flags": 0,
        "description": "Search space for sampling different combinations of models and their hyperparameters."
      },
      "sweepSettings": {
        "type": {
          "$ref": "#/1036"
        },
        "flags": 0,
        "description": "Settings for model sweeping and hyperparameter tuning."
      },
      "testData": {
        "type": {
          "$ref": "#/936"
        },
        "flags": 0,
        "description": "Test data input."
      },
      "testDataSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The fraction of test dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "validationData": {
        "type": {
          "$ref": "#/936"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "validationDataSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "weightColumnName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to be weighted up or down."
      },
      "taskType": {
        "type": {
          "$ref": "#/1146"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ForecastingSettings",
    "properties": {
      "countryOrRegionForHolidays": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Country or region for holidays for forecasting tasks.\r\nThese should be ISO 3166 two-letter country/region codes, for example 'US' or 'GB'."
      },
      "cvStepSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of periods between the origin time of one CV fold and the next fold. For\r\nexample, if `CVStepSize` = 3 for daily data, the origin time for each fold will be\r\nthree days apart."
      },
      "featureLags": {
        "type": {
          "$ref": "#/1053"
        },
        "flags": 0,
        "description": "Flag for generating lags for the numeric features with 'auto' or null."
      },
      "featuresUnknownAtForecastTime": {
        "type": {
          "$ref": "#/1054"
        },
        "flags": 0,
        "description": "The feature columns that are available for training but unknown at the time of forecast/inference.\r\nIf features_unknown_at_forecast_time is not set, it is assumed that all the feature columns in the dataset are known at inference time."
      },
      "forecastHorizon": {
        "type": {
          "$ref": "#/1055"
        },
        "flags": 0,
        "description": "The desired maximum forecast horizon in units of time-series frequency."
      },
      "frequency": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "When forecasting, this parameter represents the period with which the forecast is desired, for example daily, weekly, yearly, etc. The forecast frequency is dataset frequency by default."
      },
      "seasonality": {
        "type": {
          "$ref": "#/1060"
        },
        "flags": 0,
        "description": "Set time series seasonality as an integer multiple of the series frequency.\r\nIf seasonality is set to 'auto', it will be inferred."
      },
      "shortSeriesHandlingConfig": {
        "type": {
          "$ref": "#/1069"
        },
        "flags": 0,
        "description": "The parameter defining how if AutoML should handle short time series."
      },
      "targetAggregateFunction": {
        "type": {
          "$ref": "#/1075"
        },
        "flags": 0,
        "description": "The function to be used to aggregate the time series target column to conform to a user specified frequency.\r\nIf the TargetAggregateFunction is set i.e. not 'None', but the freq parameter is not set, the error is raised. The possible target aggregation functions are: \"sum\", \"max\", \"min\" and \"mean\"."
      },
      "targetLags": {
        "type": {
          "$ref": "#/1076"
        },
        "flags": 0,
        "description": "The number of past periods to lag from the target column."
      },
      "targetRollingWindowSize": {
        "type": {
          "$ref": "#/1082"
        },
        "flags": 0,
        "description": "The number of past periods used to create a rolling window average of the target column."
      },
      "timeColumnName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the time column. This parameter is required when forecasting to specify the datetime column in the input data used for building the time series and inferring its frequency."
      },
      "timeSeriesIdColumnNames": {
        "type": {
          "$ref": "#/1087"
        },
        "flags": 0,
        "description": "The names of columns used to group a timeseries. It can be used to create multiple series.\r\nIf grain is not defined, the data set is assumed to be one time-series. This parameter is used with task type forecasting."
      },
      "useStl": {
        "type": {
          "$ref": "#/1091"
        },
        "flags": 0,
        "description": "Configure STL Decomposition of the time-series target column."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1051"
      },
      {
        "$ref": "#/1052"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ForecastHorizon",
    "discriminator": "mode",
    "baseProperties": {},
    "elements": {
      "Auto": {
        "$ref": "#/1056"
      },
      "Custom": {
        "$ref": "#/1058"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoForecastHorizon",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/1057"
        },
        "flags": 1,
        "description": "[Required] Set forecast horizon value selection mode."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "ObjectType",
    "name": "CustomForecastHorizon",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "[Required] Forecast horizon value."
      },
      "mode": {
        "type": {
          "$ref": "#/1059"
        },
        "flags": 1,
        "description": "[Required] Set forecast horizon value selection mode."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Seasonality",
    "discriminator": "mode",
    "baseProperties": {},
    "elements": {
      "Auto": {
        "$ref": "#/1061"
      },
      "Custom": {
        "$ref": "#/1063"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoSeasonality",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/1062"
        },
        "flags": 1,
        "description": "[Required] Seasonality mode."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "ObjectType",
    "name": "CustomSeasonality",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "[Required] Seasonality value."
      },
      "mode": {
        "type": {
          "$ref": "#/1064"
        },
        "flags": 1,
        "description": "[Required] Seasonality mode."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pad"
  },
  {
    "$type": "StringLiteralType",
    "value": "Drop"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1065"
      },
      {
        "$ref": "#/1066"
      },
      {
        "$ref": "#/1067"
      },
      {
        "$ref": "#/1068"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sum"
  },
  {
    "$type": "StringLiteralType",
    "value": "Max"
  },
  {
    "$type": "StringLiteralType",
    "value": "Min"
  },
  {
    "$type": "StringLiteralType",
    "value": "Mean"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1070"
      },
      {
        "$ref": "#/1071"
      },
      {
        "$ref": "#/1072"
      },
      {
        "$ref": "#/1073"
      },
      {
        "$ref": "#/1074"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "TargetLags",
    "discriminator": "mode",
    "baseProperties": {},
    "elements": {
      "Auto": {
        "$ref": "#/1077"
      },
      "Custom": {
        "$ref": "#/1079"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoTargetLags",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/1078"
        },
        "flags": 1,
        "description": "[Required] Set target lags mode - Auto/Custom"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "ObjectType",
    "name": "CustomTargetLags",
    "properties": {
      "values": {
        "type": {
          "$ref": "#/1080"
        },
        "flags": 1,
        "description": "[Required] Set target lags values."
      },
      "mode": {
        "type": {
          "$ref": "#/1081"
        },
        "flags": 1,
        "description": "[Required] Set target lags mode - Auto/Custom"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/21"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "TargetRollingWindowSize",
    "discriminator": "mode",
    "baseProperties": {},
    "elements": {
      "Auto": {
        "$ref": "#/1083"
      },
      "Custom": {
        "$ref": "#/1085"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoTargetRollingWindowSize",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/1084"
        },
        "flags": 1,
        "description": "[Required] TargetRollingWindowSiz detection mode."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "ObjectType",
    "name": "CustomTargetRollingWindowSize",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "[Required] TargetRollingWindowSize value."
      },
      "mode": {
        "type": {
          "$ref": "#/1086"
        },
        "flags": 1,
        "description": "[Required] TargetRollingWindowSiz detection mode."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Season"
  },
  {
    "$type": "StringLiteralType",
    "value": "SeasonTrend"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1088"
      },
      {
        "$ref": "#/1089"
      },
      {
        "$ref": "#/1090"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "SpearmanCorrelation"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormalizedRootMeanSquaredError"
  },
  {
    "$type": "StringLiteralType",
    "value": "R2Score"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormalizedMeanAbsoluteError"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1092"
      },
      {
        "$ref": "#/1093"
      },
      {
        "$ref": "#/1094"
      },
      {
        "$ref": "#/1095"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ForecastingTrainingSettings",
    "properties": {
      "allowedTrainingAlgorithms": {
        "type": {
          "$ref": "#/1118"
        },
        "flags": 0,
        "description": "Allowed models for forecasting task."
      },
      "blockedTrainingAlgorithms": {
        "type": {
          "$ref": "#/1139"
        },
        "flags": 0,
        "description": "Blocked models for forecasting task."
      },
      "enableDnnTraining": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable recommendation of DNN models."
      },
      "enableModelExplainability": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Flag to turn on explainability on best model."
      },
      "enableOnnxCompatibleModels": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Flag for enabling onnx compatible models."
      },
      "enableStackEnsemble": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable stack ensemble run."
      },
      "enableVoteEnsemble": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable voting ensemble run."
      },
      "ensembleModelDownloadTimeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.\r\nConfigure this parameter with a higher value than 300 secs, if more time is needed."
      },
      "stackEnsembleSettings": {
        "type": {
          "$ref": "#/990"
        },
        "flags": 0,
        "description": "Stack ensemble settings for stack ensemble run."
      },
      "trainingMode": {
        "type": {
          "$ref": "#/1143"
        },
        "flags": 0,
        "description": "TrainingMode mode - Setting to 'auto' is same as setting it to 'non-distributed' for now, however in the future may result in mixed mode or heuristics based mode selection. Default is 'auto'.\r\nIf 'Distributed' then only distributed featurization is used and distributed algorithms are chosen.\r\nIf 'NonDistributed' then only non distributed algorithms are chosen."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AutoArima"
  },
  {
    "$type": "StringLiteralType",
    "value": "Prophet"
  },
  {
    "$type": "StringLiteralType",
    "value": "Naive"
  },
  {
    "$type": "StringLiteralType",
    "value": "SeasonalNaive"
  },
  {
    "$type": "StringLiteralType",
    "value": "Average"
  },
  {
    "$type": "StringLiteralType",
    "value": "SeasonalAverage"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExponentialSmoothing"
  },
  {
    "$type": "StringLiteralType",
    "value": "Arimax"
  },
  {
    "$type": "StringLiteralType",
    "value": "TCNForecaster"
  },
  {
    "$type": "StringLiteralType",
    "value": "ElasticNet"
  },
  {
    "$type": "StringLiteralType",
    "value": "GradientBoosting"
  },
  {
    "$type": "StringLiteralType",
    "value": "DecisionTree"
  },
  {
    "$type": "StringLiteralType",
    "value": "KNN"
  },
  {
    "$type": "StringLiteralType",
    "value": "LassoLars"
  },
  {
    "$type": "StringLiteralType",
    "value": "SGD"
  },
  {
    "$type": "StringLiteralType",
    "value": "RandomForest"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExtremeRandomTrees"
  },
  {
    "$type": "StringLiteralType",
    "value": "LightGBM"
  },
  {
    "$type": "StringLiteralType",
    "value": "XGBoostRegressor"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1098"
      },
      {
        "$ref": "#/1099"
      },
      {
        "$ref": "#/1100"
      },
      {
        "$ref": "#/1101"
      },
      {
        "$ref": "#/1102"
      },
      {
        "$ref": "#/1103"
      },
      {
        "$ref": "#/1104"
      },
      {
        "$ref": "#/1105"
      },
      {
        "$ref": "#/1106"
      },
      {
        "$ref": "#/1107"
      },
      {
        "$ref": "#/1108"
      },
      {
        "$ref": "#/1109"
      },
      {
        "$ref": "#/1110"
      },
      {
        "$ref": "#/1111"
      },
      {
        "$ref": "#/1112"
      },
      {
        "$ref": "#/1113"
      },
      {
        "$ref": "#/1114"
      },
      {
        "$ref": "#/1115"
      },
      {
        "$ref": "#/1116"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1117"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AutoArima"
  },
  {
    "$type": "StringLiteralType",
    "value": "Prophet"
  },
  {
    "$type": "StringLiteralType",
    "value": "Naive"
  },
  {
    "$type": "StringLiteralType",
    "value": "SeasonalNaive"
  },
  {
    "$type": "StringLiteralType",
    "value": "Average"
  },
  {
    "$type": "StringLiteralType",
    "value": "SeasonalAverage"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExponentialSmoothing"
  },
  {
    "$type": "StringLiteralType",
    "value": "Arimax"
  },
  {
    "$type": "StringLiteralType",
    "value": "TCNForecaster"
  },
  {
    "$type": "StringLiteralType",
    "value": "ElasticNet"
  },
  {
    "$type": "StringLiteralType",
    "value": "GradientBoosting"
  },
  {
    "$type": "StringLiteralType",
    "value": "DecisionTree"
  },
  {
    "$type": "StringLiteralType",
    "value": "KNN"
  },
  {
    "$type": "StringLiteralType",
    "value": "LassoLars"
  },
  {
    "$type": "StringLiteralType",
    "value": "SGD"
  },
  {
    "$type": "StringLiteralType",
    "value": "RandomForest"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExtremeRandomTrees"
  },
  {
    "$type": "StringLiteralType",
    "value": "LightGBM"
  },
  {
    "$type": "StringLiteralType",
    "value": "XGBoostRegressor"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1119"
      },
      {
        "$ref": "#/1120"
      },
      {
        "$ref": "#/1121"
      },
      {
        "$ref": "#/1122"
      },
      {
        "$ref": "#/1123"
      },
      {
        "$ref": "#/1124"
      },
      {
        "$ref": "#/1125"
      },
      {
        "$ref": "#/1126"
      },
      {
        "$ref": "#/1127"
      },
      {
        "$ref": "#/1128"
      },
      {
        "$ref": "#/1129"
      },
      {
        "$ref": "#/1130"
      },
      {
        "$ref": "#/1131"
      },
      {
        "$ref": "#/1132"
      },
      {
        "$ref": "#/1133"
      },
      {
        "$ref": "#/1134"
      },
      {
        "$ref": "#/1135"
      },
      {
        "$ref": "#/1136"
      },
      {
        "$ref": "#/1137"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1138"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "StringLiteralType",
    "value": "Distributed"
  },
  {
    "$type": "StringLiteralType",
    "value": "NonDistributed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1140"
      },
      {
        "$ref": "#/1141"
      },
      {
        "$ref": "#/1142"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1034"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Forecasting"
  },
  {
    "$type": "ObjectType",
    "name": "ImageClassification",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/1153"
        },
        "flags": 0,
        "description": "Primary metric to optimize for this task."
      },
      "modelSettings": {
        "type": {
          "$ref": "#/1154"
        },
        "flags": 0,
        "description": "Settings used for training the model."
      },
      "searchSpace": {
        "type": {
          "$ref": "#/1181"
        },
        "flags": 0,
        "description": "Search space for sampling different combinations of models and their hyperparameters."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/1182"
        },
        "flags": 1,
        "description": "[Required] Limit settings for the AutoML job."
      },
      "sweepSettings": {
        "type": {
          "$ref": "#/1183"
        },
        "flags": 0,
        "description": "Model sweeping and hyperparameter sweeping related settings."
      },
      "validationData": {
        "type": {
          "$ref": "#/936"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "validationDataSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "taskType": {
        "type": {
          "$ref": "#/1188"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AUCWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accuracy"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormMacroRecall"
  },
  {
    "$type": "StringLiteralType",
    "value": "AveragePrecisionScoreWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "PrecisionScoreWeighted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1148"
      },
      {
        "$ref": "#/1149"
      },
      {
        "$ref": "#/1150"
      },
      {
        "$ref": "#/1151"
      },
      {
        "$ref": "#/1152"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ImageModelSettingsClassification",
    "properties": {
      "trainingCropSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Image crop size that is input to the neural network for the training dataset. Must be a positive integer."
      },
      "validationCropSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Image crop size that is input to the neural network for the validation dataset. Must be a positive integer."
      },
      "validationResizeSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Image size to which to resize before cropping for validation dataset. Must be a positive integer."
      },
      "weightedLoss": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Weighted loss. The accepted values are 0 for no weighted loss.\r\n1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2."
      },
      "advancedSettings": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Settings for advanced scenarios."
      },
      "amsGradient": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable AMSGrad when optimizer is 'adam' or 'adamw'."
      },
      "augmentations": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Settings for using Augmentations."
      },
      "beta1": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]."
      },
      "beta2": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]."
      },
      "checkpointFrequency": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Frequency to store model checkpoints. Must be a positive integer."
      },
      "checkpointModel": {
        "type": {
          "$ref": "#/1155"
        },
        "flags": 0,
        "description": "The pretrained checkpoint model for incremental training."
      },
      "checkpointRunId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The id of a previous run that has a pretrained checkpoint for incremental training."
      },
      "distributed": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Whether to use distributed training."
      },
      "earlyStopping": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable early stopping logic during training."
      },
      "earlyStoppingDelay": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Minimum number of epochs or validation evaluations to wait before primary metric improvement\r\nis tracked for early stopping. Must be a positive integer."
      },
      "earlyStoppingPatience": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Minimum number of epochs or validation evaluations with no primary metric improvement before\r\nthe run is stopped. Must be a positive integer."
      },
      "enableOnnxNormalization": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable normalization when exporting ONNX model."
      },
      "evaluationFrequency": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Frequency to evaluate validation dataset to get metric scores. Must be a positive integer."
      },
      "gradientAccumulationStep": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Gradient accumulation means running a configured number of \"GradAccumulationStep\" steps without\r\nupdating the model weights while accumulating the gradients of those steps, and then using\r\nthe accumulated gradients to compute the weight updates. Must be a positive integer."
      },
      "layersToFreeze": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of layers to freeze for the model. Must be a positive integer.\r\nFor instance, passing 2 as value for 'seresnext' means\r\nfreezing layer0 and layer1. For a full list of models supported and details on layer freeze, please\r\nsee: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
      },
      "learningRate": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Initial learning rate. Must be a float in the range [0, 1]."
      },
      "learningRateScheduler": {
        "type": {
          "$ref": "#/1174"
        },
        "flags": 0,
        "description": "Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'."
      },
      "modelName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the model to use for training.\r\nFor more information on the available models please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
      },
      "momentum": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1]."
      },
      "nesterov": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable nesterov when optimizer is 'sgd'."
      },
      "numberOfEpochs": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of training epochs. Must be a positive integer."
      },
      "numberOfWorkers": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of data loader workers. Must be a non-negative integer."
      },
      "optimizer": {
        "type": {
          "$ref": "#/1179"
        },
        "flags": 0,
        "description": "Type of optimizer."
      },
      "randomSeed": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Random seed to be used when using deterministic training."
      },
      "stepLRGamma": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1]."
      },
      "stepLRStepSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Value of step size when learning rate scheduler is 'step'. Must be a positive integer."
      },
      "trainingBatchSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Training batch size. Must be a positive integer."
      },
      "validationBatchSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Validation batch size. Must be a positive integer."
      },
      "warmupCosineLRCycles": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1]."
      },
      "warmupCosineLRWarmupEpochs": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer."
      },
      "weightDecay": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1]."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MLFlowModelJobInput",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/1162"
        },
        "flags": 0,
        "description": "Input Asset Delivery Mode."
      },
      "uri": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description for the input."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/1170"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnlyMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalDownload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1156"
      },
      {
        "$ref": "#/1157"
      },
      {
        "$ref": "#/1158"
      },
      {
        "$ref": "#/1159"
      },
      {
        "$ref": "#/1160"
      },
      {
        "$ref": "#/1161"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "literal"
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_file"
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_folder"
  },
  {
    "$type": "StringLiteralType",
    "value": "mltable"
  },
  {
    "$type": "StringLiteralType",
    "value": "custom_model"
  },
  {
    "$type": "StringLiteralType",
    "value": "mlflow_model"
  },
  {
    "$type": "StringLiteralType",
    "value": "triton_model"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1163"
      },
      {
        "$ref": "#/1164"
      },
      {
        "$ref": "#/1165"
      },
      {
        "$ref": "#/1166"
      },
      {
        "$ref": "#/1167"
      },
      {
        "$ref": "#/1168"
      },
      {
        "$ref": "#/1169"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "WarmupCosine"
  },
  {
    "$type": "StringLiteralType",
    "value": "Step"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1171"
      },
      {
        "$ref": "#/1172"
      },
      {
        "$ref": "#/1173"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sgd"
  },
  {
    "$type": "StringLiteralType",
    "value": "Adam"
  },
  {
    "$type": "StringLiteralType",
    "value": "Adamw"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1175"
      },
      {
        "$ref": "#/1176"
      },
      {
        "$ref": "#/1177"
      },
      {
        "$ref": "#/1178"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ImageModelDistributionSettingsClassification",
    "properties": {
      "trainingCropSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Image crop size that is input to the neural network for the training dataset. Must be a positive integer."
      },
      "validationCropSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Image crop size that is input to the neural network for the validation dataset. Must be a positive integer."
      },
      "validationResizeSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Image size to which to resize before cropping for validation dataset. Must be a positive integer."
      },
      "weightedLoss": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Weighted loss. The accepted values are 0 for no weighted loss.\r\n1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2."
      },
      "amsGradient": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Enable AMSGrad when optimizer is 'adam' or 'adamw'."
      },
      "augmentations": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Settings for using Augmentations."
      },
      "beta1": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]."
      },
      "beta2": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]."
      },
      "distributed": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Whether to use distributer training."
      },
      "earlyStopping": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Enable early stopping logic during training."
      },
      "earlyStoppingDelay": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Minimum number of epochs or validation evaluations to wait before primary metric improvement\r\nis tracked for early stopping. Must be a positive integer."
      },
      "earlyStoppingPatience": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Minimum number of epochs or validation evaluations with no primary metric improvement before\r\nthe run is stopped. Must be a positive integer."
      },
      "enableOnnxNormalization": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Enable normalization when exporting ONNX model."
      },
      "evaluationFrequency": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Frequency to evaluate validation dataset to get metric scores. Must be a positive integer."
      },
      "gradientAccumulationStep": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gradient accumulation means running a configured number of \"GradAccumulationStep\" steps without\r\nupdating the model weights while accumulating the gradients of those steps, and then using\r\nthe accumulated gradients to compute the weight updates. Must be a positive integer."
      },
      "layersToFreeze": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Number of layers to freeze for the model. Must be a positive integer.\r\nFor instance, passing 2 as value for 'seresnext' means\r\nfreezing layer0 and layer1. For a full list of models supported and details on layer freeze, please\r\nsee: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
      },
      "learningRate": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Initial learning rate. Must be a float in the range [0, 1]."
      },
      "learningRateScheduler": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'."
      },
      "modelName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the model to use for training.\r\nFor more information on the available models please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
      },
      "momentum": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1]."
      },
      "nesterov": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Enable nesterov when optimizer is 'sgd'."
      },
      "numberOfEpochs": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Number of training epochs. Must be a positive integer."
      },
      "numberOfWorkers": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Number of data loader workers. Must be a non-negative integer."
      },
      "optimizer": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Type of optimizer. Must be either 'sgd', 'adam', or 'adamw'."
      },
      "randomSeed": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Random seed to be used when using deterministic training."
      },
      "stepLRGamma": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1]."
      },
      "stepLRStepSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Value of step size when learning rate scheduler is 'step'. Must be a positive integer."
      },
      "trainingBatchSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Training batch size. Must be a positive integer."
      },
      "validationBatchSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Validation batch size. Must be a positive integer."
      },
      "warmupCosineLRCycles": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1]."
      },
      "warmupCosineLRWarmupEpochs": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer."
      },
      "weightDecay": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1]."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1180"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ImageLimitSettings",
    "properties": {
      "maxConcurrentTrials": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Maximum number of concurrent AutoML iterations."
      },
      "maxTrials": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Maximum number of AutoML iterations."
      },
      "timeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "AutoML job timeout."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ImageSweepSettings",
    "properties": {
      "earlyTermination": {
        "type": {
          "$ref": "#/1037"
        },
        "flags": 0,
        "description": "Type of early termination policy."
      },
      "samplingAlgorithm": {
        "type": {
          "$ref": "#/1187"
        },
        "flags": 1,
        "description": "[Required] Type of the hyperparameter sampling algorithms."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Grid"
  },
  {
    "$type": "StringLiteralType",
    "value": "Random"
  },
  {
    "$type": "StringLiteralType",
    "value": "Bayesian"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1184"
      },
      {
        "$ref": "#/1185"
      },
      {
        "$ref": "#/1186"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "ImageClassification"
  },
  {
    "$type": "ObjectType",
    "name": "ImageClassificationMultilabel",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/1196"
        },
        "flags": 0,
        "description": "Primary metric to optimize for this task."
      },
      "modelSettings": {
        "type": {
          "$ref": "#/1154"
        },
        "flags": 0,
        "description": "Settings used for training the model."
      },
      "searchSpace": {
        "type": {
          "$ref": "#/1197"
        },
        "flags": 0,
        "description": "Search space for sampling different combinations of models and their hyperparameters."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/1182"
        },
        "flags": 1,
        "description": "[Required] Limit settings for the AutoML job."
      },
      "sweepSettings": {
        "type": {
          "$ref": "#/1183"
        },
        "flags": 0,
        "description": "Model sweeping and hyperparameter sweeping related settings."
      },
      "validationData": {
        "type": {
          "$ref": "#/936"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "validationDataSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "taskType": {
        "type": {
          "$ref": "#/1198"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AUCWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accuracy"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormMacroRecall"
  },
  {
    "$type": "StringLiteralType",
    "value": "AveragePrecisionScoreWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "PrecisionScoreWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "IOU"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1190"
      },
      {
        "$ref": "#/1191"
      },
      {
        "$ref": "#/1192"
      },
      {
        "$ref": "#/1193"
      },
      {
        "$ref": "#/1194"
      },
      {
        "$ref": "#/1195"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1180"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ImageClassificationMultilabel"
  },
  {
    "$type": "ObjectType",
    "name": "ImageInstanceSegmentation",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/1201"
        },
        "flags": 0,
        "description": "Primary metric to optimize for this task."
      },
      "modelSettings": {
        "type": {
          "$ref": "#/1202"
        },
        "flags": 0,
        "description": "Settings used for training the model."
      },
      "searchSpace": {
        "type": {
          "$ref": "#/1230"
        },
        "flags": 0,
        "description": "Search space for sampling different combinations of models and their hyperparameters."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/1182"
        },
        "flags": 1,
        "description": "[Required] Limit settings for the AutoML job."
      },
      "sweepSettings": {
        "type": {
          "$ref": "#/1183"
        },
        "flags": 0,
        "description": "Model sweeping and hyperparameter sweeping related settings."
      },
      "validationData": {
        "type": {
          "$ref": "#/936"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "validationDataSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "taskType": {
        "type": {
          "$ref": "#/1231"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "MeanAveragePrecision"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1200"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ImageModelSettingsObjectDetection",
    "properties": {
      "boxDetectionsPerImage": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Maximum number of detections per image, for all classes. Must be a positive integer.\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "boxScoreThreshold": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "During inference, only return proposals with a classification score greater than\r\nBoxScoreThreshold. Must be a float in the range[0, 1]."
      },
      "imageSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Image size for train and validation. Must be a positive integer.\r\nNote: The training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is only supported for the 'yolov5' algorithm."
      },
      "logTrainingMetrics": {
        "type": {
          "$ref": "#/1205"
        },
        "flags": 0,
        "description": "Enable computing and logging training metrics."
      },
      "logValidationLoss": {
        "type": {
          "$ref": "#/1208"
        },
        "flags": 0,
        "description": "Enable computing and logging validation loss."
      },
      "maxSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Maximum size of the image to be rescaled before feeding it to the backbone.\r\nMust be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "minSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Minimum size of the image to be rescaled before feeding it to the backbone.\r\nMust be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "modelSize": {
        "type": {
          "$ref": "#/1214"
        },
        "flags": 0,
        "description": "Model size. Must be 'small', 'medium', 'large', or 'xlarge'.\r\nNote: training run may get into CUDA OOM if the model size is too big.\r\nNote: This settings is only supported for the 'yolov5' algorithm."
      },
      "multiScale": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable multi-scale image by varying image size by +/- 50%.\r\nNote: training run may get into CUDA OOM if no sufficient GPU memory.\r\nNote: This settings is only supported for the 'yolov5' algorithm."
      },
      "nmsIouThreshold": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "IOU threshold used during inference in NMS post processing. Must be a float in the range [0, 1]."
      },
      "tileGridSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The grid size to use for tiling each image. Note: TileGridSize must not be\r\nNone to enable small object detection logic. A string containing two integers in mxn format.\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "tileOverlapRatio": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Overlap ratio between adjacent tiles in each dimension. Must be float in the range [0, 1).\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "tilePredictionsNmsThreshold": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The IOU threshold to use to perform NMS while merging predictions from tiles and image.\r\nUsed in validation/ inference. Must be float in the range [0, 1].\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "validationIouThreshold": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "IOU threshold to use when computing validation metric. Must be float in the range [0, 1]."
      },
      "validationMetricType": {
        "type": {
          "$ref": "#/1219"
        },
        "flags": 0,
        "description": "Metric computation method to use for validation metrics."
      },
      "advancedSettings": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Settings for advanced scenarios."
      },
      "amsGradient": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable AMSGrad when optimizer is 'adam' or 'adamw'."
      },
      "augmentations": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Settings for using Augmentations."
      },
      "beta1": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]."
      },
      "beta2": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]."
      },
      "checkpointFrequency": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Frequency to store model checkpoints. Must be a positive integer."
      },
      "checkpointModel": {
        "type": {
          "$ref": "#/1155"
        },
        "flags": 0,
        "description": "The pretrained checkpoint model for incremental training."
      },
      "checkpointRunId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The id of a previous run that has a pretrained checkpoint for incremental training."
      },
      "distributed": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Whether to use distributed training."
      },
      "earlyStopping": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable early stopping logic during training."
      },
      "earlyStoppingDelay": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Minimum number of epochs or validation evaluations to wait before primary metric improvement\r\nis tracked for early stopping. Must be a positive integer."
      },
      "earlyStoppingPatience": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Minimum number of epochs or validation evaluations with no primary metric improvement before\r\nthe run is stopped. Must be a positive integer."
      },
      "enableOnnxNormalization": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable normalization when exporting ONNX model."
      },
      "evaluationFrequency": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Frequency to evaluate validation dataset to get metric scores. Must be a positive integer."
      },
      "gradientAccumulationStep": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Gradient accumulation means running a configured number of \"GradAccumulationStep\" steps without\r\nupdating the model weights while accumulating the gradients of those steps, and then using\r\nthe accumulated gradients to compute the weight updates. Must be a positive integer."
      },
      "layersToFreeze": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of layers to freeze for the model. Must be a positive integer.\r\nFor instance, passing 2 as value for 'seresnext' means\r\nfreezing layer0 and layer1. For a full list of models supported and details on layer freeze, please\r\nsee: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
      },
      "learningRate": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Initial learning rate. Must be a float in the range [0, 1]."
      },
      "learningRateScheduler": {
        "type": {
          "$ref": "#/1223"
        },
        "flags": 0,
        "description": "Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'."
      },
      "modelName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the model to use for training.\r\nFor more information on the available models please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
      },
      "momentum": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1]."
      },
      "nesterov": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable nesterov when optimizer is 'sgd'."
      },
      "numberOfEpochs": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of training epochs. Must be a positive integer."
      },
      "numberOfWorkers": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of data loader workers. Must be a non-negative integer."
      },
      "optimizer": {
        "type": {
          "$ref": "#/1228"
        },
        "flags": 0,
        "description": "Type of optimizer."
      },
      "randomSeed": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Random seed to be used when using deterministic training."
      },
      "stepLRGamma": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1]."
      },
      "stepLRStepSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Value of step size when learning rate scheduler is 'step'. Must be a positive integer."
      },
      "trainingBatchSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Training batch size. Must be a positive integer."
      },
      "validationBatchSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Validation batch size. Must be a positive integer."
      },
      "warmupCosineLRCycles": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1]."
      },
      "warmupCosineLRWarmupEpochs": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer."
      },
      "weightDecay": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1]."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enable"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disable"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1203"
      },
      {
        "$ref": "#/1204"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enable"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disable"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1206"
      },
      {
        "$ref": "#/1207"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Small"
  },
  {
    "$type": "StringLiteralType",
    "value": "Medium"
  },
  {
    "$type": "StringLiteralType",
    "value": "Large"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExtraLarge"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1209"
      },
      {
        "$ref": "#/1210"
      },
      {
        "$ref": "#/1211"
      },
      {
        "$ref": "#/1212"
      },
      {
        "$ref": "#/1213"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Coco"
  },
  {
    "$type": "StringLiteralType",
    "value": "Voc"
  },
  {
    "$type": "StringLiteralType",
    "value": "CocoVoc"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1215"
      },
      {
        "$ref": "#/1216"
      },
      {
        "$ref": "#/1217"
      },
      {
        "$ref": "#/1218"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "WarmupCosine"
  },
  {
    "$type": "StringLiteralType",
    "value": "Step"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1220"
      },
      {
        "$ref": "#/1221"
      },
      {
        "$ref": "#/1222"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sgd"
  },
  {
    "$type": "StringLiteralType",
    "value": "Adam"
  },
  {
    "$type": "StringLiteralType",
    "value": "Adamw"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1224"
      },
      {
        "$ref": "#/1225"
      },
      {
        "$ref": "#/1226"
      },
      {
        "$ref": "#/1227"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ImageModelDistributionSettingsObjectDetection",
    "properties": {
      "boxDetectionsPerImage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Maximum number of detections per image, for all classes. Must be a positive integer.\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "boxScoreThreshold": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "During inference, only return proposals with a classification score greater than\r\nBoxScoreThreshold. Must be a float in the range[0, 1]."
      },
      "imageSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Image size for train and validation. Must be a positive integer.\r\nNote: The training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is only supported for the 'yolov5' algorithm."
      },
      "maxSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Maximum size of the image to be rescaled before feeding it to the backbone.\r\nMust be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "minSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Minimum size of the image to be rescaled before feeding it to the backbone.\r\nMust be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "modelSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Model size. Must be 'small', 'medium', 'large', or 'xlarge'.\r\nNote: training run may get into CUDA OOM if the model size is too big.\r\nNote: This settings is only supported for the 'yolov5' algorithm."
      },
      "multiScale": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Enable multi-scale image by varying image size by +/- 50%.\r\nNote: training run may get into CUDA OOM if no sufficient GPU memory.\r\nNote: This settings is only supported for the 'yolov5' algorithm."
      },
      "nmsIouThreshold": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "IOU threshold used during inference in NMS post processing. Must be float in the range [0, 1]."
      },
      "tileGridSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The grid size to use for tiling each image. Note: TileGridSize must not be\r\nNone to enable small object detection logic. A string containing two integers in mxn format.\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "tileOverlapRatio": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Overlap ratio between adjacent tiles in each dimension. Must be float in the range [0, 1).\r\nNote: This settings is not supported for the 'yolov5' algorithm."
      },
      "tilePredictionsNmsThreshold": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The IOU threshold to use to perform NMS while merging predictions from tiles and image.\r\nUsed in validation/ inference. Must be float in the range [0, 1].\r\nNote: This settings is not supported for the 'yolov5' algorithm.\r\nNMS: Non-maximum suppression"
      },
      "validationIouThreshold": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "IOU threshold to use when computing validation metric. Must be float in the range [0, 1]."
      },
      "validationMetricType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Metric computation method to use for validation metrics. Must be 'none', 'coco', 'voc', or 'coco_voc'."
      },
      "amsGradient": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Enable AMSGrad when optimizer is 'adam' or 'adamw'."
      },
      "augmentations": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Settings for using Augmentations."
      },
      "beta1": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]."
      },
      "beta2": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1]."
      },
      "distributed": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Whether to use distributer training."
      },
      "earlyStopping": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Enable early stopping logic during training."
      },
      "earlyStoppingDelay": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Minimum number of epochs or validation evaluations to wait before primary metric improvement\r\nis tracked for early stopping. Must be a positive integer."
      },
      "earlyStoppingPatience": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Minimum number of epochs or validation evaluations with no primary metric improvement before\r\nthe run is stopped. Must be a positive integer."
      },
      "enableOnnxNormalization": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Enable normalization when exporting ONNX model."
      },
      "evaluationFrequency": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Frequency to evaluate validation dataset to get metric scores. Must be a positive integer."
      },
      "gradientAccumulationStep": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gradient accumulation means running a configured number of \"GradAccumulationStep\" steps without\r\nupdating the model weights while accumulating the gradients of those steps, and then using\r\nthe accumulated gradients to compute the weight updates. Must be a positive integer."
      },
      "layersToFreeze": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Number of layers to freeze for the model. Must be a positive integer.\r\nFor instance, passing 2 as value for 'seresnext' means\r\nfreezing layer0 and layer1. For a full list of models supported and details on layer freeze, please\r\nsee: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
      },
      "learningRate": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Initial learning rate. Must be a float in the range [0, 1]."
      },
      "learningRateScheduler": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'."
      },
      "modelName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the model to use for training.\r\nFor more information on the available models please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
      },
      "momentum": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1]."
      },
      "nesterov": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Enable nesterov when optimizer is 'sgd'."
      },
      "numberOfEpochs": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Number of training epochs. Must be a positive integer."
      },
      "numberOfWorkers": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Number of data loader workers. Must be a non-negative integer."
      },
      "optimizer": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Type of optimizer. Must be either 'sgd', 'adam', or 'adamw'."
      },
      "randomSeed": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Random seed to be used when using deterministic training."
      },
      "stepLRGamma": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1]."
      },
      "stepLRStepSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Value of step size when learning rate scheduler is 'step'. Must be a positive integer."
      },
      "trainingBatchSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Training batch size. Must be a positive integer."
      },
      "validationBatchSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Validation batch size. Must be a positive integer."
      },
      "warmupCosineLRCycles": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1]."
      },
      "warmupCosineLRWarmupEpochs": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer."
      },
      "weightDecay": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1]."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1229"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ImageInstanceSegmentation"
  },
  {
    "$type": "ObjectType",
    "name": "ImageObjectDetection",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/1234"
        },
        "flags": 0,
        "description": "Primary metric to optimize for this task."
      },
      "modelSettings": {
        "type": {
          "$ref": "#/1202"
        },
        "flags": 0,
        "description": "Settings used for training the model."
      },
      "searchSpace": {
        "type": {
          "$ref": "#/1235"
        },
        "flags": 0,
        "description": "Search space for sampling different combinations of models and their hyperparameters."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/1182"
        },
        "flags": 1,
        "description": "[Required] Limit settings for the AutoML job."
      },
      "sweepSettings": {
        "type": {
          "$ref": "#/1183"
        },
        "flags": 0,
        "description": "Model sweeping and hyperparameter sweeping related settings."
      },
      "validationData": {
        "type": {
          "$ref": "#/936"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "validationDataSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "taskType": {
        "type": {
          "$ref": "#/1236"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "MeanAveragePrecision"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1233"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1229"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ImageObjectDetection"
  },
  {
    "$type": "ObjectType",
    "name": "Regression",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/1242"
        },
        "flags": 0,
        "description": "Primary metric for regression task."
      },
      "trainingSettings": {
        "type": {
          "$ref": "#/1243"
        },
        "flags": 0,
        "description": "Inputs for training phase for an AutoML Job."
      },
      "cvSplitColumnNames": {
        "type": {
          "$ref": "#/1272"
        },
        "flags": 0,
        "description": "Columns to use for CVSplit data."
      },
      "featurizationSettings": {
        "type": {
          "$ref": "#/1005"
        },
        "flags": 0,
        "description": "Featurization inputs needed for AutoML job."
      },
      "fixedParameters": {
        "type": {
          "$ref": "#/1027"
        },
        "flags": 0,
        "description": "Model/training parameters that will remain constant throughout training."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/1028"
        },
        "flags": 0,
        "description": "Execution constraints for AutoMLJob."
      },
      "nCrossValidations": {
        "type": {
          "$ref": "#/1029"
        },
        "flags": 0,
        "description": "Number of cross validation folds to be applied on training dataset\r\nwhen validation dataset is not provided."
      },
      "searchSpace": {
        "type": {
          "$ref": "#/1273"
        },
        "flags": 0,
        "description": "Search space for sampling different combinations of models and their hyperparameters."
      },
      "sweepSettings": {
        "type": {
          "$ref": "#/1036"
        },
        "flags": 0,
        "description": "Settings for model sweeping and hyperparameter tuning."
      },
      "testData": {
        "type": {
          "$ref": "#/936"
        },
        "flags": 0,
        "description": "Test data input."
      },
      "testDataSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The fraction of test dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "validationData": {
        "type": {
          "$ref": "#/936"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "validationDataSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided."
      },
      "weightColumnName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to be weighted up or down."
      },
      "taskType": {
        "type": {
          "$ref": "#/1274"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SpearmanCorrelation"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormalizedRootMeanSquaredError"
  },
  {
    "$type": "StringLiteralType",
    "value": "R2Score"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormalizedMeanAbsoluteError"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1238"
      },
      {
        "$ref": "#/1239"
      },
      {
        "$ref": "#/1240"
      },
      {
        "$ref": "#/1241"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "RegressionTrainingSettings",
    "properties": {
      "allowedTrainingAlgorithms": {
        "type": {
          "$ref": "#/1255"
        },
        "flags": 0,
        "description": "Allowed models for regression task."
      },
      "blockedTrainingAlgorithms": {
        "type": {
          "$ref": "#/1267"
        },
        "flags": 0,
        "description": "Blocked models for regression task."
      },
      "enableDnnTraining": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable recommendation of DNN models."
      },
      "enableModelExplainability": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Flag to turn on explainability on best model."
      },
      "enableOnnxCompatibleModels": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Flag for enabling onnx compatible models."
      },
      "enableStackEnsemble": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable stack ensemble run."
      },
      "enableVoteEnsemble": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enable voting ensemble run."
      },
      "ensembleModelDownloadTimeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.\r\nConfigure this parameter with a higher value than 300 secs, if more time is needed."
      },
      "stackEnsembleSettings": {
        "type": {
          "$ref": "#/990"
        },
        "flags": 0,
        "description": "Stack ensemble settings for stack ensemble run."
      },
      "trainingMode": {
        "type": {
          "$ref": "#/1271"
        },
        "flags": 0,
        "description": "TrainingMode mode - Setting to 'auto' is same as setting it to 'non-distributed' for now, however in the future may result in mixed mode or heuristics based mode selection. Default is 'auto'.\r\nIf 'Distributed' then only distributed featurization is used and distributed algorithms are chosen.\r\nIf 'NonDistributed' then only non distributed algorithms are chosen."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ElasticNet"
  },
  {
    "$type": "StringLiteralType",
    "value": "GradientBoosting"
  },
  {
    "$type": "StringLiteralType",
    "value": "DecisionTree"
  },
  {
    "$type": "StringLiteralType",
    "value": "KNN"
  },
  {
    "$type": "StringLiteralType",
    "value": "LassoLars"
  },
  {
    "$type": "StringLiteralType",
    "value": "SGD"
  },
  {
    "$type": "StringLiteralType",
    "value": "RandomForest"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExtremeRandomTrees"
  },
  {
    "$type": "StringLiteralType",
    "value": "LightGBM"
  },
  {
    "$type": "StringLiteralType",
    "value": "XGBoostRegressor"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1244"
      },
      {
        "$ref": "#/1245"
      },
      {
        "$ref": "#/1246"
      },
      {
        "$ref": "#/1247"
      },
      {
        "$ref": "#/1248"
      },
      {
        "$ref": "#/1249"
      },
      {
        "$ref": "#/1250"
      },
      {
        "$ref": "#/1251"
      },
      {
        "$ref": "#/1252"
      },
      {
        "$ref": "#/1253"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1254"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ElasticNet"
  },
  {
    "$type": "StringLiteralType",
    "value": "GradientBoosting"
  },
  {
    "$type": "StringLiteralType",
    "value": "DecisionTree"
  },
  {
    "$type": "StringLiteralType",
    "value": "KNN"
  },
  {
    "$type": "StringLiteralType",
    "value": "LassoLars"
  },
  {
    "$type": "StringLiteralType",
    "value": "SGD"
  },
  {
    "$type": "StringLiteralType",
    "value": "RandomForest"
  },
  {
    "$type": "StringLiteralType",
    "value": "ExtremeRandomTrees"
  },
  {
    "$type": "StringLiteralType",
    "value": "LightGBM"
  },
  {
    "$type": "StringLiteralType",
    "value": "XGBoostRegressor"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1256"
      },
      {
        "$ref": "#/1257"
      },
      {
        "$ref": "#/1258"
      },
      {
        "$ref": "#/1259"
      },
      {
        "$ref": "#/1260"
      },
      {
        "$ref": "#/1261"
      },
      {
        "$ref": "#/1262"
      },
      {
        "$ref": "#/1263"
      },
      {
        "$ref": "#/1264"
      },
      {
        "$ref": "#/1265"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1266"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Auto"
  },
  {
    "$type": "StringLiteralType",
    "value": "Distributed"
  },
  {
    "$type": "StringLiteralType",
    "value": "NonDistributed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1268"
      },
      {
        "$ref": "#/1269"
      },
      {
        "$ref": "#/1270"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1034"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Regression"
  },
  {
    "$type": "ObjectType",
    "name": "TextClassification",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/1281"
        },
        "flags": 0,
        "description": "Primary metric for Text-Classification task."
      },
      "featurizationSettings": {
        "type": {
          "$ref": "#/1282"
        },
        "flags": 0,
        "description": "Featurization inputs needed for AutoML job."
      },
      "fixedParameters": {
        "type": {
          "$ref": "#/1283"
        },
        "flags": 0,
        "description": "Model/training parameters that will remain constant throughout training."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/1292"
        },
        "flags": 0,
        "description": "Execution constraints for AutoMLJob."
      },
      "searchSpace": {
        "type": {
          "$ref": "#/1294"
        },
        "flags": 0,
        "description": "Search space for sampling different combinations of models and their hyperparameters."
      },
      "sweepSettings": {
        "type": {
          "$ref": "#/1295"
        },
        "flags": 0,
        "description": "Settings for model sweeping and hyperparameter tuning."
      },
      "validationData": {
        "type": {
          "$ref": "#/936"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "taskType": {
        "type": {
          "$ref": "#/1300"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AUCWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accuracy"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormMacroRecall"
  },
  {
    "$type": "StringLiteralType",
    "value": "AveragePrecisionScoreWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "PrecisionScoreWeighted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1276"
      },
      {
        "$ref": "#/1277"
      },
      {
        "$ref": "#/1278"
      },
      {
        "$ref": "#/1279"
      },
      {
        "$ref": "#/1280"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NlpVerticalFeaturizationSettings",
    "properties": {
      "datasetLanguage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Dataset language, useful for the text data."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NlpFixedParameters",
    "properties": {
      "gradientAccumulationSteps": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of steps to accumulate gradients over before running a backward pass."
      },
      "learningRate": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The learning rate for the training procedure."
      },
      "learningRateScheduler": {
        "type": {
          "$ref": "#/1291"
        },
        "flags": 0,
        "description": "The type of learning rate schedule to use during the training procedure."
      },
      "modelName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the model to train."
      },
      "numberOfEpochs": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of training epochs."
      },
      "trainingBatchSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The batch size for the training procedure."
      },
      "validationBatchSize": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The batch size to be used during evaluation."
      },
      "warmupRatio": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The warmup ratio, used alongside LrSchedulerType."
      },
      "weightDecay": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The weight decay for the training procedure."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Linear"
  },
  {
    "$type": "StringLiteralType",
    "value": "Cosine"
  },
  {
    "$type": "StringLiteralType",
    "value": "CosineWithRestarts"
  },
  {
    "$type": "StringLiteralType",
    "value": "Polynomial"
  },
  {
    "$type": "StringLiteralType",
    "value": "Constant"
  },
  {
    "$type": "StringLiteralType",
    "value": "ConstantWithWarmup"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1284"
      },
      {
        "$ref": "#/1285"
      },
      {
        "$ref": "#/1286"
      },
      {
        "$ref": "#/1287"
      },
      {
        "$ref": "#/1288"
      },
      {
        "$ref": "#/1289"
      },
      {
        "$ref": "#/1290"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NlpVerticalLimitSettings",
    "properties": {
      "maxConcurrentTrials": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Maximum Concurrent AutoML iterations."
      },
      "maxNodes": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Maximum nodes to use for the experiment."
      },
      "maxTrials": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of AutoML iterations."
      },
      "timeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "AutoML job timeout."
      },
      "trialTimeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Timeout for individual HD trials."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NlpParameterSubspace",
    "properties": {
      "gradientAccumulationSteps": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Number of steps to accumulate gradients over before running a backward pass."
      },
      "learningRate": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The learning rate for the training procedure."
      },
      "learningRateScheduler": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The type of learning rate schedule to use during the training procedure."
      },
      "modelName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the model to train."
      },
      "numberOfEpochs": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Number of training epochs."
      },
      "trainingBatchSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The batch size for the training procedure."
      },
      "validationBatchSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The batch size to be used during evaluation."
      },
      "warmupRatio": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The warmup ratio, used alongside LrSchedulerType."
      },
      "weightDecay": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The weight decay for the training procedure."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1293"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NlpSweepSettings",
    "properties": {
      "earlyTermination": {
        "type": {
          "$ref": "#/1037"
        },
        "flags": 0,
        "description": "Type of early termination policy for the sweeping job."
      },
      "samplingAlgorithm": {
        "type": {
          "$ref": "#/1299"
        },
        "flags": 1,
        "description": "[Required] Type of sampling algorithm."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Grid"
  },
  {
    "$type": "StringLiteralType",
    "value": "Random"
  },
  {
    "$type": "StringLiteralType",
    "value": "Bayesian"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1296"
      },
      {
        "$ref": "#/1297"
      },
      {
        "$ref": "#/1298"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "TextClassification"
  },
  {
    "$type": "ObjectType",
    "name": "TextClassificationMultilabel",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/1308"
        },
        "flags": 2,
        "description": "Primary metric for Text-Classification-Multilabel task.\r\nCurrently only Accuracy is supported as primary metric, hence user need not set it explicitly."
      },
      "featurizationSettings": {
        "type": {
          "$ref": "#/1282"
        },
        "flags": 0,
        "description": "Featurization inputs needed for AutoML job."
      },
      "fixedParameters": {
        "type": {
          "$ref": "#/1283"
        },
        "flags": 0,
        "description": "Model/training parameters that will remain constant throughout training."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/1292"
        },
        "flags": 0,
        "description": "Execution constraints for AutoMLJob."
      },
      "searchSpace": {
        "type": {
          "$ref": "#/1309"
        },
        "flags": 0,
        "description": "Search space for sampling different combinations of models and their hyperparameters."
      },
      "sweepSettings": {
        "type": {
          "$ref": "#/1295"
        },
        "flags": 0,
        "description": "Settings for model sweeping and hyperparameter tuning."
      },
      "validationData": {
        "type": {
          "$ref": "#/936"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "taskType": {
        "type": {
          "$ref": "#/1310"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AUCWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accuracy"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormMacroRecall"
  },
  {
    "$type": "StringLiteralType",
    "value": "AveragePrecisionScoreWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "PrecisionScoreWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "IOU"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1302"
      },
      {
        "$ref": "#/1303"
      },
      {
        "$ref": "#/1304"
      },
      {
        "$ref": "#/1305"
      },
      {
        "$ref": "#/1306"
      },
      {
        "$ref": "#/1307"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1293"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "TextClassificationMultilabel"
  },
  {
    "$type": "ObjectType",
    "name": "TextNer",
    "properties": {
      "primaryMetric": {
        "type": {
          "$ref": "#/1317"
        },
        "flags": 2,
        "description": "Primary metric for Text-NER task.\r\nOnly 'Accuracy' is supported for Text-NER, so user need not set this explicitly."
      },
      "featurizationSettings": {
        "type": {
          "$ref": "#/1282"
        },
        "flags": 0,
        "description": "Featurization inputs needed for AutoML job."
      },
      "fixedParameters": {
        "type": {
          "$ref": "#/1283"
        },
        "flags": 0,
        "description": "Model/training parameters that will remain constant throughout training."
      },
      "limitSettings": {
        "type": {
          "$ref": "#/1292"
        },
        "flags": 0,
        "description": "Execution constraints for AutoMLJob."
      },
      "searchSpace": {
        "type": {
          "$ref": "#/1318"
        },
        "flags": 0,
        "description": "Search space for sampling different combinations of models and their hyperparameters."
      },
      "sweepSettings": {
        "type": {
          "$ref": "#/1295"
        },
        "flags": 0,
        "description": "Settings for model sweeping and hyperparameter tuning."
      },
      "validationData": {
        "type": {
          "$ref": "#/936"
        },
        "flags": 0,
        "description": "Validation data inputs."
      },
      "taskType": {
        "type": {
          "$ref": "#/1319"
        },
        "flags": 1,
        "description": "[Required] Task type for AutoMLJob."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AUCWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accuracy"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormMacroRecall"
  },
  {
    "$type": "StringLiteralType",
    "value": "AveragePrecisionScoreWeighted"
  },
  {
    "$type": "StringLiteralType",
    "value": "PrecisionScoreWeighted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1312"
      },
      {
        "$ref": "#/1313"
      },
      {
        "$ref": "#/1314"
      },
      {
        "$ref": "#/1315"
      },
      {
        "$ref": "#/1316"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1293"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "TextNER"
  },
  {
    "$type": "StringLiteralType",
    "value": "AutoML"
  },
  {
    "$type": "ObjectType",
    "name": "CommandJob",
    "properties": {
      "autologgerSettings": {
        "type": {
          "$ref": "#/1322"
        },
        "flags": 0,
        "description": "Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null."
      },
      "codeId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM resource ID of the code asset."
      },
      "command": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] The command to execute on startup of the job. eg. \"python train.py\""
      },
      "distribution": {
        "type": {
          "$ref": "#/1326"
        },
        "flags": 0,
        "description": "Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, Ray, or null."
      },
      "environmentId": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] The ARM resource ID of the Environment specification for the job."
      },
      "environmentVariables": {
        "type": {
          "$ref": "#/1335"
        },
        "flags": 0,
        "description": "Environment variables included in the job."
      },
      "inputs": {
        "type": {
          "$ref": "#/1393"
        },
        "flags": 0,
        "description": "Mapping of input data bindings used in the job."
      },
      "limits": {
        "type": {
          "$ref": "#/1394"
        },
        "flags": 0,
        "description": "Command Job limit."
      },
      "outputs": {
        "type": {
          "$ref": "#/1398"
        },
        "flags": 0,
        "description": "Mapping of output data bindings used in the job."
      },
      "parameters": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 2,
        "description": "Input parameters."
      },
      "queueSettings": {
        "type": {
          "$ref": "#/917"
        },
        "flags": 0,
        "description": "Queue settings for the job"
      },
      "resources": {
        "type": {
          "$ref": "#/924"
        },
        "flags": 0,
        "description": "Compute Resource configuration for the job."
      },
      "jobType": {
        "type": {
          "$ref": "#/1399"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutologgerSettings",
    "properties": {
      "mlflowAutologger": {
        "type": {
          "$ref": "#/1325"
        },
        "flags": 1,
        "description": "[Required] Indicates whether mlflow autologger is enabled."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1323"
      },
      {
        "$ref": "#/1324"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DistributionConfiguration",
    "discriminator": "distributionType",
    "baseProperties": {},
    "elements": {
      "Mpi": {
        "$ref": "#/1327"
      },
      "PyTorch": {
        "$ref": "#/1329"
      },
      "Ray": {
        "$ref": "#/1331"
      },
      "TensorFlow": {
        "$ref": "#/1333"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Mpi",
    "properties": {
      "processCountPerInstance": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of processes per MPI node."
      },
      "distributionType": {
        "type": {
          "$ref": "#/1328"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of distribution framework."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Mpi"
  },
  {
    "$type": "ObjectType",
    "name": "PyTorch",
    "properties": {
      "processCountPerInstance": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of processes per node."
      },
      "distributionType": {
        "type": {
          "$ref": "#/1330"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of distribution framework."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "PyTorch"
  },
  {
    "$type": "ObjectType",
    "name": "Ray",
    "properties": {
      "address": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The address of Ray head node."
      },
      "dashboardPort": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The port to bind the dashboard server to."
      },
      "headNodeAdditionalArgs": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Additional arguments passed to ray start in head node."
      },
      "includeDashboard": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Provide this argument to start the Ray dashboard GUI."
      },
      "port": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The port of the head ray process."
      },
      "workerNodeAdditionalArgs": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Additional arguments passed to ray start in worker node."
      },
      "distributionType": {
        "type": {
          "$ref": "#/1332"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of distribution framework."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Ray"
  },
  {
    "$type": "ObjectType",
    "name": "TensorFlow",
    "properties": {
      "parameterServerCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of parameter server tasks."
      },
      "workerCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Number of workers. If not specified, will default to the instance count."
      },
      "distributionType": {
        "type": {
          "$ref": "#/1334"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of distribution framework."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "TensorFlow"
  },
  {
    "$type": "ObjectType",
    "name": "CommandJobEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "JobInput",
    "discriminator": "jobInputType",
    "baseProperties": {
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description for the input."
      }
    },
    "elements": {
      "custom_model": {
        "$ref": "#/1337"
      },
      "literal": {
        "$ref": "#/1346"
      },
      "mlflow_model": {
        "$ref": "#/1348"
      },
      "mltable": {
        "$ref": "#/1357"
      },
      "triton_model": {
        "$ref": "#/1366"
      },
      "uri_file": {
        "$ref": "#/1375"
      },
      "uri_folder": {
        "$ref": "#/1384"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomModelJobInput",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/1344"
        },
        "flags": 0,
        "description": "Input Asset Delivery Mode."
      },
      "uri": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/1345"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnlyMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalDownload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1338"
      },
      {
        "$ref": "#/1339"
      },
      {
        "$ref": "#/1340"
      },
      {
        "$ref": "#/1341"
      },
      {
        "$ref": "#/1342"
      },
      {
        "$ref": "#/1343"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "custom_model"
  },
  {
    "$type": "ObjectType",
    "name": "LiteralJobInput",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Literal value for the input."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/1347"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "literal"
  },
  {
    "$type": "ObjectType",
    "name": "MLFlowModelJobInput",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/1355"
        },
        "flags": 0,
        "description": "Input Asset Delivery Mode."
      },
      "uri": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/1356"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnlyMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalDownload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1349"
      },
      {
        "$ref": "#/1350"
      },
      {
        "$ref": "#/1351"
      },
      {
        "$ref": "#/1352"
      },
      {
        "$ref": "#/1353"
      },
      {
        "$ref": "#/1354"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "mlflow_model"
  },
  {
    "$type": "ObjectType",
    "name": "MLTableJobInput",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/1364"
        },
        "flags": 0,
        "description": "Input Asset Delivery Mode."
      },
      "uri": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/1365"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnlyMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalDownload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1358"
      },
      {
        "$ref": "#/1359"
      },
      {
        "$ref": "#/1360"
      },
      {
        "$ref": "#/1361"
      },
      {
        "$ref": "#/1362"
      },
      {
        "$ref": "#/1363"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "mltable"
  },
  {
    "$type": "ObjectType",
    "name": "TritonModelJobInput",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/1373"
        },
        "flags": 0,
        "description": "Input Asset Delivery Mode."
      },
      "uri": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/1374"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnlyMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalDownload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1367"
      },
      {
        "$ref": "#/1368"
      },
      {
        "$ref": "#/1369"
      },
      {
        "$ref": "#/1370"
      },
      {
        "$ref": "#/1371"
      },
      {
        "$ref": "#/1372"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "triton_model"
  },
  {
    "$type": "ObjectType",
    "name": "UriFileJobInput",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/1382"
        },
        "flags": 0,
        "description": "Input Asset Delivery Mode."
      },
      "uri": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/1383"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnlyMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalDownload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1376"
      },
      {
        "$ref": "#/1377"
      },
      {
        "$ref": "#/1378"
      },
      {
        "$ref": "#/1379"
      },
      {
        "$ref": "#/1380"
      },
      {
        "$ref": "#/1381"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_file"
  },
  {
    "$type": "ObjectType",
    "name": "UriFolderJobInput",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/1391"
        },
        "flags": 0,
        "description": "Input Asset Delivery Mode."
      },
      "uri": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/1392"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadOnlyMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReadWriteMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "StringLiteralType",
    "value": "Direct"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalMount"
  },
  {
    "$type": "StringLiteralType",
    "value": "EvalDownload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1385"
      },
      {
        "$ref": "#/1386"
      },
      {
        "$ref": "#/1387"
      },
      {
        "$ref": "#/1388"
      },
      {
        "$ref": "#/1389"
      },
      {
        "$ref": "#/1390"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_folder"
  },
  {
    "$type": "ObjectType",
    "name": "CommandJobInputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1336"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CommandJobLimits",
    "properties": {
      "jobLimitsType": {
        "type": {
          "$ref": "#/1397"
        },
        "flags": 1,
        "description": "[Required] JobLimit type."
      },
      "timeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Command"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sweep"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1395"
      },
      {
        "$ref": "#/1396"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CommandJobOutputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/879"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Command"
  },
  {
    "$type": "ObjectType",
    "name": "LabelingJobProperties",
    "properties": {
      "createdDateTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Created time of the job in UTC timezone."
      },
      "dataConfiguration": {
        "type": {
          "$ref": "#/1401"
        },
        "flags": 0,
        "description": "Configuration of data used in the job."
      },
      "jobInstructions": {
        "type": {
          "$ref": "#/1405"
        },
        "flags": 0,
        "description": "Labeling instructions of the job."
      },
      "labelCategories": {
        "type": {
          "$ref": "#/1413"
        },
        "flags": 0,
        "description": "Label categories of the job."
      },
      "labelingJobMediaProperties": {
        "type": {
          "$ref": "#/1414"
        },
        "flags": 0,
        "description": "Media type specific properties in the job."
      },
      "mlAssistConfiguration": {
        "type": {
          "$ref": "#/1426"
        },
        "flags": 0,
        "description": "Configuration of MLAssist feature in the job."
      },
      "progressMetrics": {
        "type": {
          "$ref": "#/1431"
        },
        "flags": 2,
        "description": "Progress metrics of the job."
      },
      "projectId": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "Internal id of the job(Previously called project)."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/1436"
        },
        "flags": 2,
        "description": "Specifies the labeling job provisioning state."
      },
      "statusMessages": {
        "type": {
          "$ref": "#/1442"
        },
        "flags": 2,
        "description": "Status messages of the job."
      },
      "jobType": {
        "type": {
          "$ref": "#/1443"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LabelingDataConfiguration",
    "properties": {
      "dataId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource Id of the data asset to perform labeling."
      },
      "incrementalDataRefresh": {
        "type": {
          "$ref": "#/1404"
        },
        "flags": 0,
        "description": "Indicates whether to enable incremental data refresh."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1402"
      },
      {
        "$ref": "#/1403"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "LabelingJobInstructions",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The link to a page with detailed labeling instructions for labelers."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LabelCategory",
    "properties": {
      "classes": {
        "type": {
          "$ref": "#/1409"
        },
        "flags": 0,
        "description": "Dictionary of label classes in this category."
      },
      "displayName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Display name of the label category."
      },
      "multiSelect": {
        "type": {
          "$ref": "#/1412"
        },
        "flags": 0,
        "description": "Indicates whether it is allowed to select multiple classes in this category."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LabelClass",
    "properties": {
      "displayName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Display name of the label class."
      },
      "subclasses": {
        "type": {
          "$ref": "#/1408"
        },
        "flags": 0,
        "description": "Dictionary of subclasses of the label class."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LabelClassSubclasses",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1407"
    }
  },
  {
    "$type": "ObjectType",
    "name": "LabelCategoryClasses",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1407"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1410"
      },
      {
        "$ref": "#/1411"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "LabelingJobLabelCategories",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1406"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "LabelingJobMediaProperties",
    "discriminator": "mediaType",
    "baseProperties": {},
    "elements": {
      "Image": {
        "$ref": "#/1415"
      },
      "Text": {
        "$ref": "#/1421"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LabelingJobImageProperties",
    "properties": {
      "annotationType": {
        "type": {
          "$ref": "#/1419"
        },
        "flags": 0,
        "description": "Annotation type of image labeling job."
      },
      "mediaType": {
        "type": {
          "$ref": "#/1420"
        },
        "flags": 1,
        "description": "[Required] Media type of the job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Classification"
  },
  {
    "$type": "StringLiteralType",
    "value": "BoundingBox"
  },
  {
    "$type": "StringLiteralType",
    "value": "InstanceSegmentation"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1416"
      },
      {
        "$ref": "#/1417"
      },
      {
        "$ref": "#/1418"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Image"
  },
  {
    "$type": "ObjectType",
    "name": "LabelingJobTextProperties",
    "properties": {
      "annotationType": {
        "type": {
          "$ref": "#/1424"
        },
        "flags": 0,
        "description": "Annotation type of text labeling job."
      },
      "mediaType": {
        "type": {
          "$ref": "#/1425"
        },
        "flags": 1,
        "description": "[Required] Media type of the job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Classification"
  },
  {
    "$type": "StringLiteralType",
    "value": "NamedEntityRecognition"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1422"
      },
      {
        "$ref": "#/1423"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Text"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "MLAssistConfiguration",
    "discriminator": "mlAssist",
    "baseProperties": {},
    "elements": {
      "Disabled": {
        "$ref": "#/1427"
      },
      "Enabled": {
        "$ref": "#/1429"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MLAssistConfigurationDisabled",
    "properties": {
      "mlAssist": {
        "type": {
          "$ref": "#/1428"
        },
        "flags": 1,
        "description": "[Required] Indicates whether MLAssist feature is enabled."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "ObjectType",
    "name": "MLAssistConfigurationEnabled",
    "properties": {
      "inferencingComputeBinding": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] AML compute binding used in inferencing."
      },
      "trainingComputeBinding": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] AML compute binding used in training."
      },
      "mlAssist": {
        "type": {
          "$ref": "#/1430"
        },
        "flags": 1,
        "description": "[Required] Indicates whether MLAssist feature is enabled."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "ObjectType",
    "name": "ProgressMetrics",
    "properties": {
      "completedDatapointCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "The completed datapoint count."
      },
      "incrementalDataLastRefreshDateTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time of last successful incremental data refresh in UTC."
      },
      "skippedDatapointCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "The skipped datapoint count."
      },
      "totalDatapointCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "The total datapoint count."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1432"
      },
      {
        "$ref": "#/1433"
      },
      {
        "$ref": "#/1434"
      },
      {
        "$ref": "#/1435"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "StatusMessage",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Service-defined message code."
      },
      "createdDateTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Time in UTC at which the message was created."
      },
      "level": {
        "type": {
          "$ref": "#/1441"
        },
        "flags": 2,
        "description": "Severity level of message."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "A human-readable representation of the message code."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "StringLiteralType",
    "value": "Information"
  },
  {
    "$type": "StringLiteralType",
    "value": "Warning"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1438"
      },
      {
        "$ref": "#/1439"
      },
      {
        "$ref": "#/1440"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1437"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Labeling"
  },
  {
    "$type": "ObjectType",
    "name": "PipelineJob",
    "properties": {
      "inputs": {
        "type": {
          "$ref": "#/1445"
        },
        "flags": 0,
        "description": "Inputs for the pipeline job."
      },
      "jobs": {
        "type": {
          "$ref": "#/1446"
        },
        "flags": 0,
        "description": "Jobs construct the Pipeline Job."
      },
      "outputs": {
        "type": {
          "$ref": "#/1447"
        },
        "flags": 0,
        "description": "Outputs for the pipeline job"
      },
      "settings": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 0,
        "description": "Pipeline settings, for things like ContinueRunOnStepFailure etc."
      },
      "sourceJobId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM resource ID of source job."
      },
      "jobType": {
        "type": {
          "$ref": "#/1448"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PipelineJobInputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1336"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PipelineJobJobs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PipelineJobOutputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/879"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Pipeline"
  },
  {
    "$type": "ObjectType",
    "name": "SparkJob",
    "properties": {
      "archives": {
        "type": {
          "$ref": "#/1450"
        },
        "flags": 0,
        "description": "Archive files used in the job."
      },
      "args": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Arguments for the job."
      },
      "codeId": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] ARM resource ID of the code asset."
      },
      "conf": {
        "type": {
          "$ref": "#/1451"
        },
        "flags": 0,
        "description": "Spark configured properties."
      },
      "entry": {
        "type": {
          "$ref": "#/1452"
        },
        "flags": 1,
        "description": "[Required] The entry to execute on startup of the job."
      },
      "environmentId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ARM resource ID of the Environment specification for the job."
      },
      "environmentVariables": {
        "type": {
          "$ref": "#/1457"
        },
        "flags": 0,
        "description": "Environment variables included in the job."
      },
      "files": {
        "type": {
          "$ref": "#/1458"
        },
        "flags": 0,
        "description": "Files used in the job."
      },
      "inputs": {
        "type": {
          "$ref": "#/1459"
        },
        "flags": 0,
        "description": "Mapping of input data bindings used in the job."
      },
      "jars": {
        "type": {
          "$ref": "#/1460"
        },
        "flags": 0,
        "description": "Jar files used in the job."
      },
      "outputs": {
        "type": {
          "$ref": "#/1461"
        },
        "flags": 0,
        "description": "Mapping of output data bindings used in the job."
      },
      "pyFiles": {
        "type": {
          "$ref": "#/1462"
        },
        "flags": 0,
        "description": "Python files used in the job."
      },
      "queueSettings": {
        "type": {
          "$ref": "#/917"
        },
        "flags": 0,
        "description": "Queue settings for the job"
      },
      "resources": {
        "type": {
          "$ref": "#/1463"
        },
        "flags": 0,
        "description": "Compute Resource configuration for the job."
      },
      "jobType": {
        "type": {
          "$ref": "#/1464"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SparkJobConf",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "SparkJobEntry",
    "discriminator": "sparkJobEntryType",
    "baseProperties": {},
    "elements": {
      "SparkJobPythonEntry": {
        "$ref": "#/1453"
      },
      "SparkJobScalaEntry": {
        "$ref": "#/1455"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SparkJobPythonEntry",
    "properties": {
      "file": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Relative python file path for job entry point."
      },
      "sparkJobEntryType": {
        "type": {
          "$ref": "#/1454"
        },
        "flags": 1,
        "description": "[Required] Type of the job's entry point."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SparkJobPythonEntry"
  },
  {
    "$type": "ObjectType",
    "name": "SparkJobScalaEntry",
    "properties": {
      "className": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Scala class name used as entry point."
      },
      "sparkJobEntryType": {
        "type": {
          "$ref": "#/1456"
        },
        "flags": 1,
        "description": "[Required] Type of the job's entry point."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SparkJobScalaEntry"
  },
  {
    "$type": "ObjectType",
    "name": "SparkJobEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SparkJobInputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1336"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SparkJobOutputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/879"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SparkResourceConfiguration",
    "properties": {
      "instanceType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Optional type of VM used as supported by the compute target."
      },
      "runtimeVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Version of spark runtime used for the job."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Spark"
  },
  {
    "$type": "ObjectType",
    "name": "SweepJob",
    "properties": {
      "componentConfiguration": {
        "type": {
          "$ref": "#/1466"
        },
        "flags": 0,
        "description": "Component Configuration for sweep over component"
      },
      "earlyTermination": {
        "type": {
          "$ref": "#/1037"
        },
        "flags": 0,
        "description": "Early termination policies enable canceling poor-performing runs before they complete"
      },
      "inputs": {
        "type": {
          "$ref": "#/1467"
        },
        "flags": 0,
        "description": "Mapping of input data bindings used in the job."
      },
      "limits": {
        "type": {
          "$ref": "#/1468"
        },
        "flags": 0,
        "description": "Sweep Job limit."
      },
      "objective": {
        "type": {
          "$ref": "#/1472"
        },
        "flags": 1,
        "description": "[Required] Optimization objective."
      },
      "outputs": {
        "type": {
          "$ref": "#/1476"
        },
        "flags": 0,
        "description": "Mapping of output data bindings used in the job."
      },
      "queueSettings": {
        "type": {
          "$ref": "#/917"
        },
        "flags": 0,
        "description": "Queue settings for the job"
      },
      "resources": {
        "type": {
          "$ref": "#/924"
        },
        "flags": 0,
        "description": "Compute Resource configuration for the job."
      },
      "samplingAlgorithm": {
        "type": {
          "$ref": "#/1477"
        },
        "flags": 1,
        "description": "[Required] The hyperparameter sampling algorithm"
      },
      "searchSpace": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 1,
        "description": "[Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter"
      },
      "trial": {
        "type": {
          "$ref": "#/1487"
        },
        "flags": 1,
        "description": "[Required] Trial component definition."
      },
      "jobType": {
        "type": {
          "$ref": "#/1489"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComponentConfiguration",
    "properties": {
      "pipelineSettings": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 0,
        "description": "Pipeline settings, for things like ContinueRunOnStepFailure etc."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SweepJobInputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1336"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SweepJobLimits",
    "properties": {
      "maxConcurrentTrials": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Sweep Job max concurrent trials."
      },
      "maxTotalTrials": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Sweep Job max total trials."
      },
      "trialTimeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Sweep Job Trial timeout value."
      },
      "jobLimitsType": {
        "type": {
          "$ref": "#/1471"
        },
        "flags": 1,
        "description": "[Required] JobLimit type."
      },
      "timeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Command"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sweep"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1469"
      },
      {
        "$ref": "#/1470"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Objective",
    "properties": {
      "goal": {
        "type": {
          "$ref": "#/1475"
        },
        "flags": 1,
        "description": "[Required] Defines supported metric goals for hyperparameter tuning"
      },
      "primaryMetric": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Name of the metric to optimize."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Minimize"
  },
  {
    "$type": "StringLiteralType",
    "value": "Maximize"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1473"
      },
      {
        "$ref": "#/1474"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SweepJobOutputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/879"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "SamplingAlgorithm",
    "discriminator": "samplingAlgorithmType",
    "baseProperties": {},
    "elements": {
      "Bayesian": {
        "$ref": "#/1478"
      },
      "Grid": {
        "$ref": "#/1480"
      },
      "Random": {
        "$ref": "#/1482"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BayesianSamplingAlgorithm",
    "properties": {
      "samplingAlgorithmType": {
        "type": {
          "$ref": "#/1479"
        },
        "flags": 1,
        "description": "[Required] The algorithm used for generating hyperparameter values, along with configuration properties"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Bayesian"
  },
  {
    "$type": "ObjectType",
    "name": "GridSamplingAlgorithm",
    "properties": {
      "samplingAlgorithmType": {
        "type": {
          "$ref": "#/1481"
        },
        "flags": 1,
        "description": "[Required] The algorithm used for generating hyperparameter values, along with configuration properties"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Grid"
  },
  {
    "$type": "ObjectType",
    "name": "RandomSamplingAlgorithm",
    "properties": {
      "logbase": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "An optional positive number or e in string format to be used as base for log based random sampling"
      },
      "rule": {
        "type": {
          "$ref": "#/1485"
        },
        "flags": 0,
        "description": "The specific type of random algorithm"
      },
      "seed": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "An optional integer to use as the seed for random number generation"
      },
      "samplingAlgorithmType": {
        "type": {
          "$ref": "#/1486"
        },
        "flags": 1,
        "description": "[Required] The algorithm used for generating hyperparameter values, along with configuration properties"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Random"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sobol"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1483"
      },
      {
        "$ref": "#/1484"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Random"
  },
  {
    "$type": "ObjectType",
    "name": "TrialComponent",
    "properties": {
      "codeId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM resource ID of the code asset."
      },
      "command": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] The command to execute on startup of the job. eg. \"python train.py\""
      },
      "distribution": {
        "type": {
          "$ref": "#/1326"
        },
        "flags": 0,
        "description": "Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null."
      },
      "environmentId": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] The ARM resource ID of the Environment specification for the job."
      },
      "environmentVariables": {
        "type": {
          "$ref": "#/1488"
        },
        "flags": 0,
        "description": "Environment variables included in the job."
      },
      "resources": {
        "type": {
          "$ref": "#/924"
        },
        "flags": 0,
        "description": "Compute Resource configuration for the job."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrialComponentEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Sweep"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/jobs@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/842"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/labelingJobs"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/labelingJobs",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1491"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1492"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/1494"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LabelingJobProperties",
    "properties": {
      "createdDateTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Created time of the job in UTC timezone."
      },
      "dataConfiguration": {
        "type": {
          "$ref": "#/1401"
        },
        "flags": 0,
        "description": "Configuration of data used in the job."
      },
      "jobInstructions": {
        "type": {
          "$ref": "#/1405"
        },
        "flags": 0,
        "description": "Labeling instructions of the job."
      },
      "labelCategories": {
        "type": {
          "$ref": "#/1495"
        },
        "flags": 0,
        "description": "Label categories of the job."
      },
      "labelingJobMediaProperties": {
        "type": {
          "$ref": "#/1414"
        },
        "flags": 0,
        "description": "Media type specific properties in the job."
      },
      "mlAssistConfiguration": {
        "type": {
          "$ref": "#/1426"
        },
        "flags": 0,
        "description": "Configuration of MLAssist feature in the job."
      },
      "progressMetrics": {
        "type": {
          "$ref": "#/1431"
        },
        "flags": 2,
        "description": "Progress metrics of the job."
      },
      "projectId": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "Internal id of the job(Previously called project)."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/1500"
        },
        "flags": 2,
        "description": "Specifies the labeling job provisioning state."
      },
      "statusMessages": {
        "type": {
          "$ref": "#/1501"
        },
        "flags": 2,
        "description": "Status messages of the job."
      },
      "componentId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM resource ID of the component resource."
      },
      "computeId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM resource ID of the compute resource."
      },
      "displayName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Display name of job."
      },
      "experimentName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the experiment the job belongs to. If not set, the job is placed in the \"Default\" experiment."
      },
      "identity": {
        "type": {
          "$ref": "#/844"
        },
        "flags": 0,
        "description": "Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.\r\nDefaults to AmlToken if null."
      },
      "isArchived": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the asset archived?"
      },
      "jobType": {
        "type": {
          "$ref": "#/1508"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      },
      "notificationSetting": {
        "type": {
          "$ref": "#/700"
        },
        "flags": 0,
        "description": "Notification setting for the job"
      },
      "secretsConfiguration": {
        "type": {
          "$ref": "#/1509"
        },
        "flags": 0,
        "description": "Configuration for secrets to be made available during runtime."
      },
      "services": {
        "type": {
          "$ref": "#/1510"
        },
        "flags": 0,
        "description": "List of JobEndpoints.\r\nFor local jobs, a job endpoint will have an endpoint value of FileStreamObject."
      },
      "status": {
        "type": {
          "$ref": "#/1526"
        },
        "flags": 2,
        "description": "Status of the job."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/1527"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/1528"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LabelingJobLabelCategories",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1406"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1496"
      },
      {
        "$ref": "#/1497"
      },
      {
        "$ref": "#/1498"
      },
      {
        "$ref": "#/1499"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1437"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AutoML"
  },
  {
    "$type": "StringLiteralType",
    "value": "Command"
  },
  {
    "$type": "StringLiteralType",
    "value": "Labeling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Sweep"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pipeline"
  },
  {
    "$type": "StringLiteralType",
    "value": "Spark"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1502"
      },
      {
        "$ref": "#/1503"
      },
      {
        "$ref": "#/1504"
      },
      {
        "$ref": "#/1505"
      },
      {
        "$ref": "#/1506"
      },
      {
        "$ref": "#/1507"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "JobBaseSecretsConfiguration",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/851"
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobBaseServices",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/853"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotStarted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Starting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Preparing"
  },
  {
    "$type": "StringLiteralType",
    "value": "Queued"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Finalizing"
  },
  {
    "$type": "StringLiteralType",
    "value": "CancelRequested"
  },
  {
    "$type": "StringLiteralType",
    "value": "Completed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotResponding"
  },
  {
    "$type": "StringLiteralType",
    "value": "Paused"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Scheduled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1511"
      },
      {
        "$ref": "#/1512"
      },
      {
        "$ref": "#/1513"
      },
      {
        "$ref": "#/1514"
      },
      {
        "$ref": "#/1515"
      },
      {
        "$ref": "#/1516"
      },
      {
        "$ref": "#/1517"
      },
      {
        "$ref": "#/1518"
      },
      {
        "$ref": "#/1519"
      },
      {
        "$ref": "#/1520"
      },
      {
        "$ref": "#/1521"
      },
      {
        "$ref": "#/1522"
      },
      {
        "$ref": "#/1523"
      },
      {
        "$ref": "#/1524"
      },
      {
        "$ref": "#/1525"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/labelingJobs@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/1493"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/models"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/models",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1530"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1531"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/450"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/models@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/1532"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/models/versions"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/models/versions",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1534"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1535"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/464"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/models/versions@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/1536"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1538"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1539"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "kind": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "properties": {
        "type": {
          "$ref": "#/1541"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "sku": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/1559"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "OnlineEndpointProperties",
    "properties": {
      "compute": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM resource ID of the compute if it exists.\r\noptional"
      },
      "mirrorTraffic": {
        "type": {
          "$ref": "#/1542"
        },
        "flags": 0,
        "description": "Percentage of traffic to be mirrored to each deployment without using returned scoring. Traffic values need to sum to utmost 50."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/1549"
        },
        "flags": 2,
        "description": "Provisioning state for the endpoint."
      },
      "publicNetworkAccess": {
        "type": {
          "$ref": "#/1552"
        },
        "flags": 0,
        "description": "Set to \"Enabled\" for endpoints that should allow public access when Private Link is enabled."
      },
      "traffic": {
        "type": {
          "$ref": "#/1553"
        },
        "flags": 0,
        "description": "Percentage of traffic from endpoint to divert to each deployment. Traffic values need to sum to 100."
      },
      "authMode": {
        "type": {
          "$ref": "#/1557"
        },
        "flags": 1,
        "description": "[Required] Use 'Key' for key based authentication and 'AMLToken' for Azure Machine Learning token-based authentication. 'Key' doesn't expire but 'AMLToken' does."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of the inference endpoint."
      },
      "keys": {
        "type": {
          "$ref": "#/494"
        },
        "flags": 4,
        "description": "EndpointAuthKeys to set initially on an Endpoint.\r\nThis property will always be returned as null. AuthKey values must be retrieved using the ListKeys API."
      },
      "properties": {
        "type": {
          "$ref": "#/1558"
        },
        "flags": 0,
        "description": "Property dictionary. Properties can be added, but not removed or altered."
      },
      "scoringUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Endpoint URI."
      },
      "swaggerUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Endpoint Swagger URI."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "OnlineEndpointMirrorTraffic",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/21"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1543"
      },
      {
        "$ref": "#/1544"
      },
      {
        "$ref": "#/1545"
      },
      {
        "$ref": "#/1546"
      },
      {
        "$ref": "#/1547"
      },
      {
        "$ref": "#/1548"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1550"
      },
      {
        "$ref": "#/1551"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "OnlineEndpointTraffic",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/21"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AMLToken"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "StringLiteralType",
    "value": "AADToken"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1554"
      },
      {
        "$ref": "#/1555"
      },
      {
        "$ref": "#/1556"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "EndpointPropertiesBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/1540"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints/deployments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints/deployments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1561"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1562"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "kind": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "properties": {
        "type": {
          "$ref": "#/1564"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "sku": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/1604"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "OnlineDeploymentProperties",
    "discriminator": "endpointComputeType",
    "baseProperties": {
      "appInsightsEnabled": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "If true, enables Application Insights logging."
      },
      "dataCollector": {
        "type": {
          "$ref": "#/1565"
        },
        "flags": 0,
        "description": "The mdc configuration, we disable mdc when it's null."
      },
      "egressPublicNetworkAccess": {
        "type": {
          "$ref": "#/1581"
        },
        "flags": 0,
        "description": "If Enabled, allow egress public network access. If Disabled, this will create secure egress. Default: Enabled."
      },
      "instanceType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Compute instance type."
      },
      "livenessProbe": {
        "type": {
          "$ref": "#/797"
        },
        "flags": 0,
        "description": "Liveness probe monitors the health of the container regularly."
      },
      "model": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The URI path to the model."
      },
      "modelMountPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The path to mount the model in custom container."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/1589"
        },
        "flags": 2,
        "description": "Provisioning state for the endpoint deployment."
      },
      "readinessProbe": {
        "type": {
          "$ref": "#/797"
        },
        "flags": 0,
        "description": "Readiness probe validates if the container is ready to serve traffic. The properties and defaults are the same as liveness probe."
      },
      "requestSettings": {
        "type": {
          "$ref": "#/1590"
        },
        "flags": 0,
        "description": "Request settings for the deployment."
      },
      "scaleSettings": {
        "type": {
          "$ref": "#/1591"
        },
        "flags": 0,
        "description": "Scale settings for the deployment.\r\nIf it is null or not provided,\r\nit defaults to TargetUtilizationScaleSettings for KubernetesOnlineDeployment\r\nand to DefaultScaleSettings for ManagedOnlineDeployment."
      },
      "codeConfiguration": {
        "type": {
          "$ref": "#/538"
        },
        "flags": 0,
        "description": "Code configuration for the endpoint deployment."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of the endpoint deployment."
      },
      "environmentId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM resource ID of the environment specification for the endpoint deployment."
      },
      "environmentVariables": {
        "type": {
          "$ref": "#/1596"
        },
        "flags": 0,
        "description": "Environment variables configuration for the deployment."
      },
      "properties": {
        "type": {
          "$ref": "#/1597"
        },
        "flags": 0,
        "description": "Property dictionary. Properties can be added, but not removed or altered."
      }
    },
    "elements": {
      "Kubernetes": {
        "$ref": "#/1598"
      },
      "Managed": {
        "$ref": "#/1602"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataCollector",
    "properties": {
      "collections": {
        "type": {
          "$ref": "#/1570"
        },
        "flags": 1,
        "description": "[Required] The collection configuration. Each collection has it own configuration to collect model data and the name of collection can be arbitrary string.\r\nModel data collector can be used for either payload logging or custom logging or both of them. Collection request and response are reserved for payload logging, others are for custom logging."
      },
      "requestLogging": {
        "type": {
          "$ref": "#/1571"
        },
        "flags": 0,
        "description": "The request logging configuration for mdc, it includes advanced logging settings for all collections. It's optional."
      },
      "rollingRate": {
        "type": {
          "$ref": "#/1578"
        },
        "flags": 0,
        "description": "When model data is collected to blob storage, we need to roll the data to different path to avoid logging all of them in a single blob file.\r\nIf the rolling rate is hour, all data will be collected in the blob path /yyyy/MM/dd/HH/.\r\nIf it's day, all data will be collected in blob path /yyyy/MM/dd/.\r\nThe other benefit of rolling path is that model monitoring ui is able to select a time range of data very quickly."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Collection",
    "properties": {
      "clientId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The msi client id used to collect logging to blob storage. If it's null,backend will pick a registered endpoint identity to auth."
      },
      "dataCollectionMode": {
        "type": {
          "$ref": "#/1569"
        },
        "flags": 0,
        "description": "Enable or disable data collection."
      },
      "dataId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The data asset arm resource id. Client side will ensure data asset is pointing to the blob storage, and backend will collect data to the blob storage."
      },
      "samplingRate": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The sampling rate for collection. Sampling rate 1.0 means we collect 100% of data by default."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1567"
      },
      {
        "$ref": "#/1568"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataCollectorCollections",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1566"
    }
  },
  {
    "$type": "ObjectType",
    "name": "RequestLogging",
    "properties": {
      "captureHeaders": {
        "type": {
          "$ref": "#/1572"
        },
        "flags": 0,
        "description": "For payload logging, we only collect payload by default. If customers also want to collect the specified headers, they can set them in captureHeaders so that backend will collect those headers along with payload."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Year"
  },
  {
    "$type": "StringLiteralType",
    "value": "Month"
  },
  {
    "$type": "StringLiteralType",
    "value": "Day"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hour"
  },
  {
    "$type": "StringLiteralType",
    "value": "Minute"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1573"
      },
      {
        "$ref": "#/1574"
      },
      {
        "$ref": "#/1575"
      },
      {
        "$ref": "#/1576"
      },
      {
        "$ref": "#/1577"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1579"
      },
      {
        "$ref": "#/1580"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Scaling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1582"
      },
      {
        "$ref": "#/1583"
      },
      {
        "$ref": "#/1584"
      },
      {
        "$ref": "#/1585"
      },
      {
        "$ref": "#/1586"
      },
      {
        "$ref": "#/1587"
      },
      {
        "$ref": "#/1588"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "OnlineRequestSettings",
    "properties": {
      "maxConcurrentRequestsPerInstance": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The number of maximum concurrent requests per node allowed per deployment. Defaults to 1."
      },
      "maxQueueWait": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The maximum amount of time a request will stay in the queue in ISO 8601 format.\r\nDefaults to 500ms."
      },
      "requestTimeout": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The scoring timeout in ISO 8601 format.\r\nDefaults to 5000ms."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "OnlineScaleSettings",
    "discriminator": "scaleType",
    "baseProperties": {},
    "elements": {
      "Default": {
        "$ref": "#/1592"
      },
      "TargetUtilization": {
        "$ref": "#/1594"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefaultScaleSettings",
    "properties": {
      "scaleType": {
        "type": {
          "$ref": "#/1593"
        },
        "flags": 1,
        "description": "[Required] Type of deployment scaling algorithm"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "ObjectType",
    "name": "TargetUtilizationScaleSettings",
    "properties": {
      "maxInstances": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances."
      },
      "minInstances": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The minimum number of instances to always be present."
      },
      "pollingInterval": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds."
      },
      "targetUtilizationPercentage": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Target CPU usage for the autoscaler."
      },
      "scaleType": {
        "type": {
          "$ref": "#/1595"
        },
        "flags": 1,
        "description": "[Required] Type of deployment scaling algorithm"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "TargetUtilization"
  },
  {
    "$type": "ObjectType",
    "name": "EndpointDeploymentPropertiesBaseEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "EndpointDeploymentPropertiesBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesOnlineDeployment",
    "properties": {
      "containerResourceRequirements": {
        "type": {
          "$ref": "#/1599"
        },
        "flags": 0,
        "description": "The resource requirements for the container (cpu and memory)."
      },
      "endpointComputeType": {
        "type": {
          "$ref": "#/1601"
        },
        "flags": 1,
        "description": "[Required] The compute type of the endpoint."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerResourceRequirements",
    "properties": {
      "containerResourceLimits": {
        "type": {
          "$ref": "#/1600"
        },
        "flags": 0,
        "description": "Container resource limit info:"
      },
      "containerResourceRequests": {
        "type": {
          "$ref": "#/1600"
        },
        "flags": 0,
        "description": "Container resource request info:"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerResourceSettings",
    "properties": {
      "cpu": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Number of vCPUs request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
      },
      "gpu": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Number of Nvidia GPU cards request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
      },
      "memory": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Memory size request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Kubernetes"
  },
  {
    "$type": "ObjectType",
    "name": "ManagedOnlineDeployment",
    "properties": {
      "endpointComputeType": {
        "type": {
          "$ref": "#/1603"
        },
        "flags": 1,
        "description": "[Required] The compute type of the endpoint."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Managed"
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints/deployments@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/1563"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/schedules"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/schedules",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1606"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1607"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/1609"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScheduleProperties",
    "properties": {
      "action": {
        "type": {
          "$ref": "#/1610"
        },
        "flags": 1,
        "description": "[Required] Specifies the action of the schedule"
      },
      "displayName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Display name of schedule."
      },
      "isEnabled": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the schedule enabled?"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/1815"
        },
        "flags": 2,
        "description": "Provisioning state for the schedule."
      },
      "trigger": {
        "type": {
          "$ref": "#/1816"
        },
        "flags": 1,
        "description": "[Required] Specifies the trigger details"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/1827"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/1828"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ScheduleActionBase",
    "discriminator": "actionType",
    "baseProperties": {},
    "elements": {
      "CreateJob": {
        "$ref": "#/1611"
      },
      "CreateMonitor": {
        "$ref": "#/1613"
      },
      "ImportData": {
        "$ref": "#/1791"
      },
      "InvokeBatchEndpoint": {
        "$ref": "#/1807"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "JobScheduleAction",
    "properties": {
      "jobDefinition": {
        "type": {
          "$ref": "#/843"
        },
        "flags": 1,
        "description": "[Required] Defines Schedule action definition details."
      },
      "actionType": {
        "type": {
          "$ref": "#/1612"
        },
        "flags": 1,
        "description": "[Required] Specifies the action type of the schedule"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CreateJob"
  },
  {
    "$type": "ObjectType",
    "name": "CreateMonitorAction",
    "properties": {
      "monitorDefinition": {
        "type": {
          "$ref": "#/1614"
        },
        "flags": 1,
        "description": "[Required] Defines the monitor."
      },
      "actionType": {
        "type": {
          "$ref": "#/1790"
        },
        "flags": 1,
        "description": "[Required] Specifies the action type of the schedule"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitorDefinition",
    "properties": {
      "alertNotificationSettings": {
        "type": {
          "$ref": "#/1615"
        },
        "flags": 0,
        "description": "The monitor's notification settings."
      },
      "computeConfiguration": {
        "type": {
          "$ref": "#/1618"
        },
        "flags": 1,
        "description": "[Required] The ARM resource ID of the compute resource to run the monitoring job on."
      },
      "monitoringTarget": {
        "type": {
          "$ref": "#/1626"
        },
        "flags": 0,
        "description": "The ARM resource ID of either the model or deployment targeted by this monitor."
      },
      "signals": {
        "type": {
          "$ref": "#/1789"
        },
        "flags": 1,
        "description": "[Required] The signals to monitor."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitorNotificationSettings",
    "properties": {
      "emailNotificationSettings": {
        "type": {
          "$ref": "#/1616"
        },
        "flags": 0,
        "description": "The AML notification email settings."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitorEmailNotificationSettings",
    "properties": {
      "emails": {
        "type": {
          "$ref": "#/1617"
        },
        "flags": 0,
        "description": "This is the email recipient list which has a limitation of 499 characters in total."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "MonitorComputeConfigurationBase",
    "discriminator": "computeType",
    "baseProperties": {},
    "elements": {
      "ServerlessSpark": {
        "$ref": "#/1619"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitorServerlessSparkCompute",
    "properties": {
      "computeIdentity": {
        "type": {
          "$ref": "#/1620"
        },
        "flags": 1,
        "description": "[Required] The identity scheme leveraged to by the spark jobs running on serverless Spark."
      },
      "instanceType": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] The instance type running the Spark job."
      },
      "runtimeVersion": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] The Spark runtime version."
      },
      "computeType": {
        "type": {
          "$ref": "#/1625"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "MonitorComputeIdentityBase",
    "discriminator": "computeIdentityType",
    "baseProperties": {},
    "elements": {
      "AmlToken": {
        "$ref": "#/1621"
      },
      "ManagedIdentity": {
        "$ref": "#/1623"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AmlTokenComputeIdentity",
    "properties": {
      "computeIdentityType": {
        "type": {
          "$ref": "#/1622"
        },
        "flags": 1,
        "description": "[Required] Monitor compute identity type enum."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AmlToken"
  },
  {
    "$type": "ObjectType",
    "name": "ManagedComputeIdentity",
    "properties": {
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "computeIdentityType": {
        "type": {
          "$ref": "#/1624"
        },
        "flags": 1,
        "description": "[Required] Monitor compute identity type enum."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServerlessSpark"
  },
  {
    "$type": "ObjectType",
    "name": "MonitoringTarget",
    "properties": {
      "deploymentId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ARM resource ID of either the deployment targeted by this monitor."
      },
      "modelId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ARM resource ID of either the model targeted by this monitor."
      },
      "taskType": {
        "type": {
          "$ref": "#/1630"
        },
        "flags": 1,
        "description": "[Required] The machine learning task type of the model."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Classification"
  },
  {
    "$type": "StringLiteralType",
    "value": "Regression"
  },
  {
    "$type": "StringLiteralType",
    "value": "QuestionAnswering"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1627"
      },
      {
        "$ref": "#/1628"
      },
      {
        "$ref": "#/1629"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "MonitoringSignalBase",
    "discriminator": "signalType",
    "baseProperties": {
      "notificationTypes": {
        "type": {
          "$ref": "#/1635"
        },
        "flags": 0,
        "description": "The current notification mode for this signal."
      },
      "properties": {
        "type": {
          "$ref": "#/1636"
        },
        "flags": 0,
        "description": "Property dictionary. Properties can be added, but not removed or altered."
      }
    },
    "elements": {
      "Custom": {
        "$ref": "#/1637"
      },
      "DataDrift": {
        "$ref": "#/1663"
      },
      "DataQuality": {
        "$ref": "#/1698"
      },
      "FeatureAttributionDrift": {
        "$ref": "#/1718"
      },
      "GenerationSafetyQuality": {
        "$ref": "#/1728"
      },
      "GenerationTokenStatistics": {
        "$ref": "#/1744"
      },
      "ModelPerformance": {
        "$ref": "#/1752"
      },
      "PredictionDrift": {
        "$ref": "#/1768"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AmlNotification"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureMonitor"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1632"
      },
      {
        "$ref": "#/1633"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1634"
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitoringSignalBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomMonitoringSignal",
    "properties": {
      "componentId": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] ARM resource ID of the component resource used to calculate the custom metrics."
      },
      "inputAssets": {
        "type": {
          "$ref": "#/1654"
        },
        "flags": 0,
        "description": "Monitoring assets to take as input. Key is the component input port name, value is the data asset."
      },
      "inputs": {
        "type": {
          "$ref": "#/1655"
        },
        "flags": 0,
        "description": "Extra component parameters to take as input. Key is the component literal input port name, value is the parameter value."
      },
      "metricThresholds": {
        "type": {
          "$ref": "#/1658"
        },
        "flags": 1,
        "description": "[Required] A list of metrics to calculate and their associated thresholds."
      },
      "workspaceConnection": {
        "type": {
          "$ref": "#/1659"
        },
        "flags": 1,
        "description": "[Required] A list of metrics to calculate and their associated thresholds."
      },
      "signalType": {
        "type": {
          "$ref": "#/1662"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "MonitoringInputDataBase",
    "discriminator": "inputDataType",
    "baseProperties": {
      "columns": {
        "type": {
          "$ref": "#/1639"
        },
        "flags": 0,
        "description": "Mapping of column names to special uses."
      },
      "dataContext": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The context metadata of the data source."
      },
      "jobInputType": {
        "type": {
          "$ref": "#/1647"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of job."
      },
      "uri": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Input Asset URI."
      }
    },
    "elements": {
      "Fixed": {
        "$ref": "#/1648"
      },
      "Rolling": {
        "$ref": "#/1650"
      },
      "Static": {
        "$ref": "#/1652"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitoringInputDataBaseColumns",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "literal"
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_file"
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_folder"
  },
  {
    "$type": "StringLiteralType",
    "value": "mltable"
  },
  {
    "$type": "StringLiteralType",
    "value": "custom_model"
  },
  {
    "$type": "StringLiteralType",
    "value": "mlflow_model"
  },
  {
    "$type": "StringLiteralType",
    "value": "triton_model"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1640"
      },
      {
        "$ref": "#/1641"
      },
      {
        "$ref": "#/1642"
      },
      {
        "$ref": "#/1643"
      },
      {
        "$ref": "#/1644"
      },
      {
        "$ref": "#/1645"
      },
      {
        "$ref": "#/1646"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "FixedInputData",
    "properties": {
      "inputDataType": {
        "type": {
          "$ref": "#/1649"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Fixed"
  },
  {
    "$type": "ObjectType",
    "name": "RollingInputData",
    "properties": {
      "preprocessingComponentId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ARM resource ID of the component resource used to preprocess the data."
      },
      "windowOffset": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "[Required] The time offset between the end of the data window and the monitor's current run time."
      },
      "windowSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "[Required] The size of the trailing data window."
      },
      "inputDataType": {
        "type": {
          "$ref": "#/1651"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Rolling"
  },
  {
    "$type": "ObjectType",
    "name": "StaticInputData",
    "properties": {
      "preprocessingComponentId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ARM resource ID of the component resource used to preprocess the data."
      },
      "windowEnd": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "[Required] The end date of the data window."
      },
      "windowStart": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "[Required] The start date of the data window."
      },
      "inputDataType": {
        "type": {
          "$ref": "#/1653"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Static"
  },
  {
    "$type": "ObjectType",
    "name": "CustomMonitoringSignalInputAssets",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1638"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomMonitoringSignalInputs",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1336"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] The user-defined metric to calculate."
      },
      "threshold": {
        "type": {
          "$ref": "#/1657"
        },
        "flags": 0,
        "description": "The threshold value. If null, a default value will be set depending on the selected metric."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitoringThreshold",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The threshold value. If null, the set default is dependent on the metric type."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1656"
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitoringWorkspaceConnection",
    "properties": {
      "environmentVariables": {
        "type": {
          "$ref": "#/1660"
        },
        "flags": 0,
        "description": "The properties of a workspace service connection to store as environment variables in the submitted jobs.\r\nKey is workspace connection property path, name is environment variable key."
      },
      "secrets": {
        "type": {
          "$ref": "#/1661"
        },
        "flags": 0,
        "description": "The properties of a workspace service connection to store as secrets in the submitted jobs.\r\nKey is workspace connection property path, name is secret key."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitoringWorkspaceConnectionEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitoringWorkspaceConnectionSecrets",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "ObjectType",
    "name": "DataDriftMonitoringSignal",
    "properties": {
      "dataSegment": {
        "type": {
          "$ref": "#/1664"
        },
        "flags": 0,
        "description": "The data segment used for scoping on a subset of the data population."
      },
      "featureDataTypeOverride": {
        "type": {
          "$ref": "#/1669"
        },
        "flags": 0,
        "description": "A dictionary that maps feature names to their respective data types."
      },
      "featureImportanceSettings": {
        "type": {
          "$ref": "#/1670"
        },
        "flags": 0,
        "description": "The settings for computing feature importance."
      },
      "features": {
        "type": {
          "$ref": "#/1674"
        },
        "flags": 0,
        "description": "The feature filter which identifies which feature to calculate drift over."
      },
      "metricThresholds": {
        "type": {
          "$ref": "#/1696"
        },
        "flags": 1,
        "description": "[Required] A list of metrics to calculate and their associated thresholds."
      },
      "productionData": {
        "type": {
          "$ref": "#/1638"
        },
        "flags": 1,
        "description": "[Required] The data which drift will be calculated for."
      },
      "referenceData": {
        "type": {
          "$ref": "#/1638"
        },
        "flags": 1,
        "description": "[Required] The data to calculate drift against."
      },
      "signalType": {
        "type": {
          "$ref": "#/1697"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "MonitoringDataSegment",
    "properties": {
      "feature": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The feature to segment the data on."
      },
      "values": {
        "type": {
          "$ref": "#/1665"
        },
        "flags": 0,
        "description": "Filters for only the specified values of the given segmented feature."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Numerical"
  },
  {
    "$type": "StringLiteralType",
    "value": "Categorical"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1666"
      },
      {
        "$ref": "#/1667"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataDriftMonitoringSignalFeatureDataTypeOverride",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1668"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeatureImportanceSettings",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/1673"
        },
        "flags": 0,
        "description": "The mode of operation for computing feature importance."
      },
      "targetColumn": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the target column within the input data asset."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1671"
      },
      {
        "$ref": "#/1672"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "MonitoringFeatureFilterBase",
    "discriminator": "filterType",
    "baseProperties": {},
    "elements": {
      "AllFeatures": {
        "$ref": "#/1675"
      },
      "FeatureSubset": {
        "$ref": "#/1677"
      },
      "TopNByAttribution": {
        "$ref": "#/1680"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AllFeatures",
    "properties": {
      "filterType": {
        "type": {
          "$ref": "#/1676"
        },
        "flags": 1,
        "description": "[Required] Specifies the feature filter to leverage when selecting features to calculate metrics over."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AllFeatures"
  },
  {
    "$type": "ObjectType",
    "name": "FeatureSubset",
    "properties": {
      "features": {
        "type": {
          "$ref": "#/1678"
        },
        "flags": 1,
        "description": "[Required] The list of features to include."
      },
      "filterType": {
        "type": {
          "$ref": "#/1679"
        },
        "flags": 1,
        "description": "[Required] Specifies the feature filter to leverage when selecting features to calculate metrics over."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "FeatureSubset"
  },
  {
    "$type": "ObjectType",
    "name": "TopNFeaturesByAttribution",
    "properties": {
      "top": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The number of top features to include."
      },
      "filterType": {
        "type": {
          "$ref": "#/1681"
        },
        "flags": 1,
        "description": "[Required] Specifies the feature filter to leverage when selecting features to calculate metrics over."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "TopNByAttribution"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DataDriftMetricThresholdBase",
    "discriminator": "dataType",
    "baseProperties": {
      "threshold": {
        "type": {
          "$ref": "#/1657"
        },
        "flags": 0,
        "description": "The threshold value. If null, a default value will be set depending on the selected metric."
      }
    },
    "elements": {
      "Categorical": {
        "$ref": "#/1683"
      },
      "Numerical": {
        "$ref": "#/1689"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CategoricalDataDriftMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/1687"
        },
        "flags": 1,
        "description": "[Required] The categorical data drift metric to calculate."
      },
      "dataType": {
        "type": {
          "$ref": "#/1688"
        },
        "flags": 1,
        "description": "[Required] Specifies the data type of the metric threshold."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "JensenShannonDistance"
  },
  {
    "$type": "StringLiteralType",
    "value": "PopulationStabilityIndex"
  },
  {
    "$type": "StringLiteralType",
    "value": "PearsonsChiSquaredTest"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1684"
      },
      {
        "$ref": "#/1685"
      },
      {
        "$ref": "#/1686"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Categorical"
  },
  {
    "$type": "ObjectType",
    "name": "NumericalDataDriftMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/1694"
        },
        "flags": 1,
        "description": "[Required] The numerical data drift metric to calculate."
      },
      "dataType": {
        "type": {
          "$ref": "#/1695"
        },
        "flags": 1,
        "description": "[Required] Specifies the data type of the metric threshold."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "JensenShannonDistance"
  },
  {
    "$type": "StringLiteralType",
    "value": "PopulationStabilityIndex"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormalizedWassersteinDistance"
  },
  {
    "$type": "StringLiteralType",
    "value": "TwoSampleKolmogorovSmirnovTest"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1690"
      },
      {
        "$ref": "#/1691"
      },
      {
        "$ref": "#/1692"
      },
      {
        "$ref": "#/1693"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Numerical"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1682"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DataDrift"
  },
  {
    "$type": "ObjectType",
    "name": "DataQualityMonitoringSignal",
    "properties": {
      "featureDataTypeOverride": {
        "type": {
          "$ref": "#/1702"
        },
        "flags": 0,
        "description": "A dictionary that maps feature names to their respective data types."
      },
      "featureImportanceSettings": {
        "type": {
          "$ref": "#/1670"
        },
        "flags": 0,
        "description": "The settings for computing feature importance."
      },
      "features": {
        "type": {
          "$ref": "#/1674"
        },
        "flags": 0,
        "description": "The features to calculate drift over."
      },
      "metricThresholds": {
        "type": {
          "$ref": "#/1716"
        },
        "flags": 1,
        "description": "[Required] A list of metrics to calculate and their associated thresholds."
      },
      "productionData": {
        "type": {
          "$ref": "#/1638"
        },
        "flags": 1,
        "description": "[Required] The data produced by the production service which drift will be calculated for."
      },
      "referenceData": {
        "type": {
          "$ref": "#/1638"
        },
        "flags": 1,
        "description": "[Required] The data to calculate drift against."
      },
      "signalType": {
        "type": {
          "$ref": "#/1717"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Numerical"
  },
  {
    "$type": "StringLiteralType",
    "value": "Categorical"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1699"
      },
      {
        "$ref": "#/1700"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DataQualityMonitoringSignalFeatureDataTypeOverride",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1701"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DataQualityMetricThresholdBase",
    "discriminator": "dataType",
    "baseProperties": {
      "threshold": {
        "type": {
          "$ref": "#/1657"
        },
        "flags": 0,
        "description": "The threshold value. If null, a default value will be set depending on the selected metric."
      }
    },
    "elements": {
      "Categorical": {
        "$ref": "#/1704"
      },
      "Numerical": {
        "$ref": "#/1710"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CategoricalDataQualityMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/1708"
        },
        "flags": 1,
        "description": "[Required] The categorical data quality metric to calculate."
      },
      "dataType": {
        "type": {
          "$ref": "#/1709"
        },
        "flags": 1,
        "description": "[Required] Specifies the data type of the metric threshold."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NullValueRate"
  },
  {
    "$type": "StringLiteralType",
    "value": "DataTypeErrorRate"
  },
  {
    "$type": "StringLiteralType",
    "value": "OutOfBoundsRate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1705"
      },
      {
        "$ref": "#/1706"
      },
      {
        "$ref": "#/1707"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Categorical"
  },
  {
    "$type": "ObjectType",
    "name": "NumericalDataQualityMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/1714"
        },
        "flags": 1,
        "description": "[Required] The numerical data quality metric to calculate."
      },
      "dataType": {
        "type": {
          "$ref": "#/1715"
        },
        "flags": 1,
        "description": "[Required] Specifies the data type of the metric threshold."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NullValueRate"
  },
  {
    "$type": "StringLiteralType",
    "value": "DataTypeErrorRate"
  },
  {
    "$type": "StringLiteralType",
    "value": "OutOfBoundsRate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1711"
      },
      {
        "$ref": "#/1712"
      },
      {
        "$ref": "#/1713"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Numerical"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1703"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DataQuality"
  },
  {
    "$type": "ObjectType",
    "name": "FeatureAttributionDriftMonitoringSignal",
    "properties": {
      "featureDataTypeOverride": {
        "type": {
          "$ref": "#/1722"
        },
        "flags": 0,
        "description": "A dictionary that maps feature names to their respective data types."
      },
      "featureImportanceSettings": {
        "type": {
          "$ref": "#/1670"
        },
        "flags": 0,
        "description": "The settings for computing feature importance."
      },
      "metricThreshold": {
        "type": {
          "$ref": "#/1723"
        },
        "flags": 1,
        "description": "[Required] A list of metrics to calculate and their associated thresholds."
      },
      "productionData": {
        "type": {
          "$ref": "#/1726"
        },
        "flags": 1,
        "description": "[Required] The data which drift will be calculated for."
      },
      "referenceData": {
        "type": {
          "$ref": "#/1638"
        },
        "flags": 1,
        "description": "[Required] The data to calculate drift against."
      },
      "signalType": {
        "type": {
          "$ref": "#/1727"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Numerical"
  },
  {
    "$type": "StringLiteralType",
    "value": "Categorical"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1719"
      },
      {
        "$ref": "#/1720"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "FeatureAttributionDriftMonitoringSignalFeatureDataTypeOverride",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1721"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeatureAttributionMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/1725"
        },
        "flags": 1,
        "description": "[Required] The feature attribution metric to calculate."
      },
      "threshold": {
        "type": {
          "$ref": "#/1657"
        },
        "flags": 0,
        "description": "The threshold value. If null, a default value will be set depending on the selected metric."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NormalizedDiscountedCumulativeGain"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1724"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1638"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "FeatureAttributionDrift"
  },
  {
    "$type": "ObjectType",
    "name": "GenerationSafetyQualityMonitoringSignal",
    "properties": {
      "metricThresholds": {
        "type": {
          "$ref": "#/1741"
        },
        "flags": 1,
        "description": "[Required] Gets or sets the metrics to calculate and the corresponding thresholds."
      },
      "productionData": {
        "type": {
          "$ref": "#/1742"
        },
        "flags": 0,
        "description": "Gets or sets the production data for computing metrics."
      },
      "samplingRate": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "[Required] The sample rate of the production data, should be greater than 0 and at most 1."
      },
      "workspaceConnectionId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the workspace connection ID used to connect to the content generation endpoint."
      },
      "signalType": {
        "type": {
          "$ref": "#/1743"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GenerationSafetyQualityMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/1740"
        },
        "flags": 1,
        "description": "[Required] Gets or sets the feature attribution metric to calculate."
      },
      "threshold": {
        "type": {
          "$ref": "#/1657"
        },
        "flags": 0,
        "description": "Gets or sets the threshold value.\r\nIf null, a default value will be set depending on the selected metric."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AcceptableGroundednessScorePerInstance"
  },
  {
    "$type": "StringLiteralType",
    "value": "AggregatedGroundednessPassRate"
  },
  {
    "$type": "StringLiteralType",
    "value": "AcceptableCoherenceScorePerInstance"
  },
  {
    "$type": "StringLiteralType",
    "value": "AggregatedCoherencePassRate"
  },
  {
    "$type": "StringLiteralType",
    "value": "AcceptableFluencyScorePerInstance"
  },
  {
    "$type": "StringLiteralType",
    "value": "AggregatedFluencyPassRate"
  },
  {
    "$type": "StringLiteralType",
    "value": "AcceptableSimilarityScorePerInstance"
  },
  {
    "$type": "StringLiteralType",
    "value": "AggregatedSimilarityPassRate"
  },
  {
    "$type": "StringLiteralType",
    "value": "AcceptableRelevanceScorePerInstance"
  },
  {
    "$type": "StringLiteralType",
    "value": "AggregatedRelevancePassRate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1730"
      },
      {
        "$ref": "#/1731"
      },
      {
        "$ref": "#/1732"
      },
      {
        "$ref": "#/1733"
      },
      {
        "$ref": "#/1734"
      },
      {
        "$ref": "#/1735"
      },
      {
        "$ref": "#/1736"
      },
      {
        "$ref": "#/1737"
      },
      {
        "$ref": "#/1738"
      },
      {
        "$ref": "#/1739"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1729"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1638"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "GenerationSafetyQuality"
  },
  {
    "$type": "ObjectType",
    "name": "GenerationTokenUsageSignal",
    "properties": {
      "metricThresholds": {
        "type": {
          "$ref": "#/1749"
        },
        "flags": 1,
        "description": "[Required] Gets or sets the metrics to calculate and the corresponding thresholds."
      },
      "productionData": {
        "type": {
          "$ref": "#/1750"
        },
        "flags": 0,
        "description": "Gets or sets the production data for computing metrics."
      },
      "samplingRate": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "[Required] The sample rate of the production data, should be greater than 0 and at most 1."
      },
      "signalType": {
        "type": {
          "$ref": "#/1751"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GenerationTokenUsageMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/1748"
        },
        "flags": 1,
        "description": "[Required] Gets or sets the feature attribution metric to calculate."
      },
      "threshold": {
        "type": {
          "$ref": "#/1657"
        },
        "flags": 0,
        "description": "Gets or sets the threshold value.\r\nIf null, a default value will be set depending on the selected metric."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "TotalTokenCount"
  },
  {
    "$type": "StringLiteralType",
    "value": "TotalTokenCountPerGroup"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1746"
      },
      {
        "$ref": "#/1747"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1745"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1638"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "GenerationTokenStatistics"
  },
  {
    "$type": "ObjectType",
    "name": "ModelPerformanceSignal",
    "properties": {
      "dataSegment": {
        "type": {
          "$ref": "#/1664"
        },
        "flags": 0,
        "description": "The data segment."
      },
      "metricThreshold": {
        "type": {
          "$ref": "#/1753"
        },
        "flags": 1,
        "description": "[Required] A list of metrics to calculate and their associated thresholds."
      },
      "productionData": {
        "type": {
          "$ref": "#/1766"
        },
        "flags": 1,
        "description": "[Required] The data produced by the production service which performance will be calculated for."
      },
      "referenceData": {
        "type": {
          "$ref": "#/1638"
        },
        "flags": 1,
        "description": "[Required] The reference data used as the basis to calculate model performance."
      },
      "signalType": {
        "type": {
          "$ref": "#/1767"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ModelPerformanceMetricThresholdBase",
    "discriminator": "modelType",
    "baseProperties": {
      "threshold": {
        "type": {
          "$ref": "#/1657"
        },
        "flags": 0,
        "description": "The threshold value. If null, a default value will be set depending on the selected metric."
      }
    },
    "elements": {
      "Classification": {
        "$ref": "#/1754"
      },
      "Regression": {
        "$ref": "#/1760"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClassificationModelPerformanceMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/1758"
        },
        "flags": 1,
        "description": "[Required] The classification model performance to calculate."
      },
      "modelType": {
        "type": {
          "$ref": "#/1759"
        },
        "flags": 1,
        "description": "[Required] Specifies the data type of the metric threshold."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accuracy"
  },
  {
    "$type": "StringLiteralType",
    "value": "Precision"
  },
  {
    "$type": "StringLiteralType",
    "value": "Recall"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1755"
      },
      {
        "$ref": "#/1756"
      },
      {
        "$ref": "#/1757"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Classification"
  },
  {
    "$type": "ObjectType",
    "name": "RegressionModelPerformanceMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/1764"
        },
        "flags": 1,
        "description": "[Required] The regression model performance metric to calculate."
      },
      "modelType": {
        "type": {
          "$ref": "#/1765"
        },
        "flags": 1,
        "description": "[Required] Specifies the data type of the metric threshold."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "MeanAbsoluteError"
  },
  {
    "$type": "StringLiteralType",
    "value": "RootMeanSquaredError"
  },
  {
    "$type": "StringLiteralType",
    "value": "MeanSquaredError"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1761"
      },
      {
        "$ref": "#/1762"
      },
      {
        "$ref": "#/1763"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Regression"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1638"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ModelPerformance"
  },
  {
    "$type": "ObjectType",
    "name": "PredictionDriftMonitoringSignal",
    "properties": {
      "featureDataTypeOverride": {
        "type": {
          "$ref": "#/1772"
        },
        "flags": 0,
        "description": "A dictionary that maps feature names to their respective data types."
      },
      "metricThresholds": {
        "type": {
          "$ref": "#/1787"
        },
        "flags": 1,
        "description": "[Required] A list of metrics to calculate and their associated thresholds."
      },
      "productionData": {
        "type": {
          "$ref": "#/1638"
        },
        "flags": 1,
        "description": "[Required] The data which drift will be calculated for."
      },
      "referenceData": {
        "type": {
          "$ref": "#/1638"
        },
        "flags": 1,
        "description": "[Required] The data to calculate drift against."
      },
      "signalType": {
        "type": {
          "$ref": "#/1788"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of signal to monitor."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Numerical"
  },
  {
    "$type": "StringLiteralType",
    "value": "Categorical"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1769"
      },
      {
        "$ref": "#/1770"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "PredictionDriftMonitoringSignalFeatureDataTypeOverride",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1771"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "PredictionDriftMetricThresholdBase",
    "discriminator": "dataType",
    "baseProperties": {
      "threshold": {
        "type": {
          "$ref": "#/1657"
        },
        "flags": 0,
        "description": "The threshold value. If null, a default value will be set depending on the selected metric."
      }
    },
    "elements": {
      "Categorical": {
        "$ref": "#/1774"
      },
      "Numerical": {
        "$ref": "#/1780"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CategoricalPredictionDriftMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/1778"
        },
        "flags": 1,
        "description": "[Required] The categorical prediction drift metric to calculate."
      },
      "dataType": {
        "type": {
          "$ref": "#/1779"
        },
        "flags": 1,
        "description": "[Required] Specifies the data type of the metric threshold."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "JensenShannonDistance"
  },
  {
    "$type": "StringLiteralType",
    "value": "PopulationStabilityIndex"
  },
  {
    "$type": "StringLiteralType",
    "value": "PearsonsChiSquaredTest"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1775"
      },
      {
        "$ref": "#/1776"
      },
      {
        "$ref": "#/1777"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Categorical"
  },
  {
    "$type": "ObjectType",
    "name": "NumericalPredictionDriftMetricThreshold",
    "properties": {
      "metric": {
        "type": {
          "$ref": "#/1785"
        },
        "flags": 1,
        "description": "[Required] The numerical prediction drift metric to calculate."
      },
      "dataType": {
        "type": {
          "$ref": "#/1786"
        },
        "flags": 1,
        "description": "[Required] Specifies the data type of the metric threshold."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "JensenShannonDistance"
  },
  {
    "$type": "StringLiteralType",
    "value": "PopulationStabilityIndex"
  },
  {
    "$type": "StringLiteralType",
    "value": "NormalizedWassersteinDistance"
  },
  {
    "$type": "StringLiteralType",
    "value": "TwoSampleKolmogorovSmirnovTest"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1781"
      },
      {
        "$ref": "#/1782"
      },
      {
        "$ref": "#/1783"
      },
      {
        "$ref": "#/1784"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Numerical"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1773"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "PredictionDrift"
  },
  {
    "$type": "ObjectType",
    "name": "MonitorDefinitionSignals",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1631"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CreateMonitor"
  },
  {
    "$type": "ObjectType",
    "name": "ImportDataAction",
    "properties": {
      "dataImportDefinition": {
        "type": {
          "$ref": "#/1792"
        },
        "flags": 1,
        "description": "[Required] Defines Schedule action definition details."
      },
      "actionType": {
        "type": {
          "$ref": "#/1806"
        },
        "flags": 1,
        "description": "[Required] Specifies the action type of the schedule"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DataImport",
    "properties": {
      "assetName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the asset for data import job to create"
      },
      "source": {
        "type": {
          "$ref": "#/1793"
        },
        "flags": 0,
        "description": "Source data of the asset to import from"
      },
      "dataType": {
        "type": {
          "$ref": "#/1803"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of data."
      },
      "dataUri": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330"
      },
      "intellectualProperty": {
        "type": {
          "$ref": "#/393"
        },
        "flags": 0,
        "description": "Intellectual Property details. Used if data is an Intellectual Property."
      },
      "stage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Stage in the data lifecycle assigned to this data asset"
      },
      "autoDeleteSetting": {
        "type": {
          "$ref": "#/343"
        },
        "flags": 0,
        "description": "Specifies the lifecycle setting of managed data asset."
      },
      "isAnonymous": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous"
      },
      "isArchived": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/1804"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/1805"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DataImportSource",
    "discriminator": "sourceType",
    "baseProperties": {
      "connection": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Workspace connection for data import source storage"
      }
    },
    "elements": {
      "database": {
        "$ref": "#/1794"
      },
      "file_system": {
        "$ref": "#/1798"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DatabaseSource",
    "properties": {
      "query": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "SQL Query statement for data import Database source"
      },
      "storedProcedure": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "SQL StoredProcedure on data import Database source"
      },
      "storedProcedureParams": {
        "type": {
          "$ref": "#/1796"
        },
        "flags": 0,
        "description": "SQL StoredProcedure parameters"
      },
      "tableName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the table on data import Database source"
      },
      "sourceType": {
        "type": {
          "$ref": "#/1797"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of data."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DatabaseSourceStoredProcedureParamsItem",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1795"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "database"
  },
  {
    "$type": "ObjectType",
    "name": "FileSystemSource",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Path on data import FileSystem source"
      },
      "sourceType": {
        "type": {
          "$ref": "#/1799"
        },
        "flags": 1,
        "description": "[Required] Specifies the type of data."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "file_system"
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_file"
  },
  {
    "$type": "StringLiteralType",
    "value": "uri_folder"
  },
  {
    "$type": "StringLiteralType",
    "value": "mltable"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1800"
      },
      {
        "$ref": "#/1801"
      },
      {
        "$ref": "#/1802"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ImportData"
  },
  {
    "$type": "ObjectType",
    "name": "EndpointScheduleAction",
    "properties": {
      "endpointInvocationDefinition": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 1,
        "description": "[Required] Defines Schedule action definition details.\r\n<see href=\"TBD\" />"
      },
      "actionType": {
        "type": {
          "$ref": "#/1808"
        },
        "flags": 1,
        "description": "[Required] Specifies the action type of the schedule"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "InvokeBatchEndpoint"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1809"
      },
      {
        "$ref": "#/1810"
      },
      {
        "$ref": "#/1811"
      },
      {
        "$ref": "#/1812"
      },
      {
        "$ref": "#/1813"
      },
      {
        "$ref": "#/1814"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "TriggerBase",
    "discriminator": "triggerType",
    "baseProperties": {
      "endTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies end time of schedule in ISO 8601, but without a UTC offset. Refer https://en.wikipedia.org/wiki/ISO_8601.\r\nRecommented format would be \"2022-06-01T00:00:01\"\r\nIf not present, the schedule will run indefinitely"
      },
      "startTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies start time of schedule in ISO 8601 format, but without a UTC offset."
      },
      "timeZone": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies time zone in which the schedule runs.\r\nTimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11"
      }
    },
    "elements": {
      "Cron": {
        "$ref": "#/1817"
      },
      "Recurrence": {
        "$ref": "#/1819"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CronTrigger",
    "properties": {
      "expression": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Specifies cron expression of schedule.\r\nThe expression should follow NCronTab format."
      },
      "triggerType": {
        "type": {
          "$ref": "#/1818"
        },
        "flags": 1,
        "description": "[Required]"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Cron"
  },
  {
    "$type": "ObjectType",
    "name": "RecurrenceTrigger",
    "properties": {
      "frequency": {
        "type": {
          "$ref": "#/1825"
        },
        "flags": 1,
        "description": "[Required] The frequency to trigger schedule."
      },
      "interval": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "[Required] Specifies schedule interval in conjunction with frequency"
      },
      "schedule": {
        "type": {
          "$ref": "#/719"
        },
        "flags": 0,
        "description": "The recurrence schedule."
      },
      "triggerType": {
        "type": {
          "$ref": "#/1826"
        },
        "flags": 1,
        "description": "[Required]"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Minute"
  },
  {
    "$type": "StringLiteralType",
    "value": "Hour"
  },
  {
    "$type": "StringLiteralType",
    "value": "Day"
  },
  {
    "$type": "StringLiteralType",
    "value": "Week"
  },
  {
    "$type": "StringLiteralType",
    "value": "Month"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1820"
      },
      {
        "$ref": "#/1821"
      },
      {
        "$ref": "#/1822"
      },
      {
        "$ref": "#/1823"
      },
      {
        "$ref": "#/1824"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Recurrence"
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/schedules@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/1608"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/serverlessEndpoints"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/serverlessEndpoints",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1830"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1831"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "kind": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "properties": {
        "type": {
          "$ref": "#/1833"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "sku": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/1847"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ServerlessEndpointProperties",
    "properties": {
      "authMode": {
        "type": {
          "$ref": "#/1836"
        },
        "flags": 0,
        "description": "Specifies the authentication mode for the Serverless endpoint."
      },
      "capacityReservation": {
        "type": {
          "$ref": "#/1837"
        },
        "flags": 0,
        "description": "Optional capacity reservation information for the endpoint. When specified, the Serverless Endpoint\r\nwill be allocated capacity from the specified capacity reservation group."
      },
      "inferenceEndpoint": {
        "type": {
          "$ref": "#/1838"
        },
        "flags": 2,
        "description": "The inference uri to target when making requests against the serverless endpoint"
      },
      "offer": {
        "type": {
          "$ref": "#/314"
        },
        "flags": 1,
        "description": "[Required] The publisher-defined Serverless Offer to provision the endpoint with."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/1846"
        },
        "flags": 2,
        "description": "Provisioning state for the endpoint."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "StringLiteralType",
    "value": "AAD"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1834"
      },
      {
        "$ref": "#/1835"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ServerlessEndpointCapacityReservation",
    "properties": {
      "capacityReservationGroupId": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Specifies a capacity reservation group ID to allocate capacity from."
      },
      "endpointReservedCapacity": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Specifies a capacity amount to reserve for this endpoint within the parent capacity reservation group."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ServerlessInferenceEndpoint",
    "properties": {
      "headers": {
        "type": {
          "$ref": "#/1839"
        },
        "flags": 2,
        "description": "Specifies any required headers to target this serverless endpoint."
      },
      "uri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 3,
        "description": "[Required] The inference uri to target when making requests against the Serverless Endpoint."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ServerlessInferenceEndpointHeaders",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1840"
      },
      {
        "$ref": "#/1841"
      },
      {
        "$ref": "#/1842"
      },
      {
        "$ref": "#/1843"
      },
      {
        "$ref": "#/1844"
      },
      {
        "$ref": "#/1845"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/serverlessEndpoints@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/1832"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{2,32}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/registries"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/registries",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/1849"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1850"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1851"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "kind": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "properties": {
        "type": {
          "$ref": "#/1853"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "sku": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/1875"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryProperties",
    "properties": {
      "discoveryUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Discovery URL for the Registry"
      },
      "intellectualPropertyPublisher": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "IntellectualPropertyPublisher for the registry"
      },
      "managedResourceGroup": {
        "type": {
          "$ref": "#/1854"
        },
        "flags": 0,
        "description": "ResourceId of the managed RG if the registry has system created resources"
      },
      "mlFlowRegistryUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "MLFlow Registry URI for the Registry"
      },
      "registryPrivateEndpointConnections": {
        "type": {
          "$ref": "#/1866"
        },
        "flags": 0,
        "description": "Private endpoint connections info used for pending connections in private link portal"
      },
      "publicNetworkAccess": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Is the Registry accessible from the internet?\r\nPossible values: \"Enabled\" or \"Disabled\""
      },
      "regionDetails": {
        "type": {
          "$ref": "#/1874"
        },
        "flags": 0,
        "description": "Details of each region the registry is in"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ArmResourceId",
    "properties": {
      "resourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Arm ResourceId is in the format \"/subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Storage/storageAccounts/{StorageAccountName}\"\r\nor \"/subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{AcrName}\""
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryPrivateEndpointConnection",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "This is the private endpoint connection name created on SRP\r\nFull resource id: /subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.MachineLearningServices/{resourceType}/{resourceName}/registryPrivateEndpointConnections/{peConnectionName}"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Same as workspace location."
      },
      "properties": {
        "type": {
          "$ref": "#/1856"
        },
        "flags": 0,
        "description": "Properties of the Private Endpoint Connection"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryPrivateEndpointConnectionProperties",
    "properties": {
      "groupIds": {
        "type": {
          "$ref": "#/1857"
        },
        "flags": 0,
        "description": "The group ids"
      },
      "privateEndpoint": {
        "type": {
          "$ref": "#/1858"
        },
        "flags": 0,
        "description": "The PE network resource that is linked to this PE connection."
      },
      "registryPrivateLinkServiceConnectionState": {
        "type": {
          "$ref": "#/1859"
        },
        "flags": 0,
        "description": "The connection state."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "One of null, \"Succeeded\", \"Provisioning\", \"Failed\". While not approved, it's null."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointResource",
    "properties": {
      "subnetArmId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The subnetId that the private endpoint is connected to."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The ARM identifier for Private Endpoint"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryPrivateLinkServiceConnectionState",
    "properties": {
      "actionsRequired": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Some RP chose \"None\". Other RPs use this for region expansion."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "User-defined message that, per NRP doc, may be used for approval-related message."
      },
      "status": {
        "type": {
          "$ref": "#/1865"
        },
        "flags": 0,
        "description": "Connection status of the service consumer with the service provider"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Approved"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rejected"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disconnected"
  },
  {
    "$type": "StringLiteralType",
    "value": "Timeout"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1860"
      },
      {
        "$ref": "#/1861"
      },
      {
        "$ref": "#/1862"
      },
      {
        "$ref": "#/1863"
      },
      {
        "$ref": "#/1864"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1855"
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryRegionArmDetails",
    "properties": {
      "acrDetails": {
        "type": {
          "$ref": "#/1870"
        },
        "flags": 0,
        "description": "List of ACR accounts"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The location where the registry exists"
      },
      "storageAccountDetails": {
        "type": {
          "$ref": "#/1873"
        },
        "flags": 0,
        "description": "List of storage accounts"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AcrDetails",
    "properties": {
      "systemCreatedAcrAccount": {
        "type": {
          "$ref": "#/1869"
        },
        "flags": 0,
        "description": "Details of system created ACR account to be used for the Registry"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemCreatedAcrAccount",
    "properties": {
      "acrAccountName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the ACR account"
      },
      "acrAccountSku": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "SKU of the ACR account"
      },
      "armResourceId": {
        "type": {
          "$ref": "#/1854"
        },
        "flags": 0,
        "description": "This is populated once the ACR account is created."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1868"
    }
  },
  {
    "$type": "ObjectType",
    "name": "StorageAccountDetails",
    "properties": {
      "systemCreatedStorageAccount": {
        "type": {
          "$ref": "#/1872"
        },
        "flags": 0,
        "description": "Details of system created storage account to be used for the registry"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemCreatedStorageAccount",
    "properties": {
      "allowBlobPublicAccess": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Public blob access allowed"
      },
      "armResourceId": {
        "type": {
          "$ref": "#/1854"
        },
        "flags": 0,
        "description": "This is populated once the storage account is created."
      },
      "storageAccountHnsEnabled": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "HNS enabled for storage account"
      },
      "storageAccountName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the storage account"
      },
      "storageAccountType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Allowed values:\r\n\"Standard_LRS\",\r\n\"Standard_GRS\",\r\n\"Standard_RAGRS\",\r\n\"Standard_ZRS\",\r\n\"Standard_GZRS\",\r\n\"Standard_RAGZRS\",\r\n\"Premium_LRS\",\r\n\"Premium_ZRS\""
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1871"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1867"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/registries@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/1852"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/1877"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1878"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1879"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "kind": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "properties": {
        "type": {
          "$ref": "#/1881"
        },
        "flags": 1,
        "description": "Additional attributes of the entity."
      },
      "sku": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Optional. This field is required to be implemented by the RP because AML is supporting more than one tier"
      },
      "tags": {
        "type": {
          "$ref": "#/1977"
        },
        "flags": 0,
        "description": "Dictionary of <string>"
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceProperties",
    "properties": {
      "allowPublicAccessWhenBehindVnet": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "The flag to indicate whether to allow public access when behind VNet."
      },
      "applicationInsights": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM id of the application insights associated with this workspace."
      },
      "associatedWorkspaces": {
        "type": {
          "$ref": "#/1882"
        },
        "flags": 0
      },
      "containerRegistries": {
        "type": {
          "$ref": "#/1883"
        },
        "flags": 0
      },
      "containerRegistry": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM id of the container registry associated with this workspace."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The description of this workspace."
      },
      "discoveryUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services"
      },
      "enableDataIsolation": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0
      },
      "encryption": {
        "type": {
          "$ref": "#/1884"
        },
        "flags": 0
      },
      "existingWorkspaces": {
        "type": {
          "$ref": "#/1890"
        },
        "flags": 0
      },
      "featureStoreSettings": {
        "type": {
          "$ref": "#/1891"
        },
        "flags": 0,
        "description": "Settings for feature store type workspace."
      },
      "friendlyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The friendly name for this workspace. This name in mutable"
      },
      "hbiWorkspace": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service"
      },
      "hubResourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "imageBuildCompute": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The compute name for image build"
      },
      "keyVault": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created"
      },
      "keyVaults": {
        "type": {
          "$ref": "#/1893"
        },
        "flags": 0
      },
      "managedNetwork": {
        "type": {
          "$ref": "#/1894"
        },
        "flags": 0,
        "description": "Managed Network settings for a machine learning workspace."
      },
      "mlFlowTrackingUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The URI associated with this workspace that machine learning flow must point at to set up tracking."
      },
      "notebookInfo": {
        "type": {
          "$ref": "#/1932"
        },
        "flags": 2,
        "description": "The notebook info of Azure ML workspace."
      },
      "primaryUserAssignedIdentity": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The user assigned identity resource id that represents the workspace identity."
      },
      "privateEndpointConnections": {
        "type": {
          "$ref": "#/1950"
        },
        "flags": 2,
        "description": "The list of private endpoint connections in the workspace."
      },
      "privateLinkCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "Count of private connections in the workspace"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/1958"
        },
        "flags": 2,
        "description": "The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning."
      },
      "publicNetworkAccess": {
        "type": {
          "$ref": "#/1961"
        },
        "flags": 0,
        "description": "Whether requests from Public Network are allowed."
      },
      "serverlessComputeSettings": {
        "type": {
          "$ref": "#/1962"
        },
        "flags": 0,
        "description": "Settings for serverless compute created in the workspace"
      },
      "serviceManagedResourcesSettings": {
        "type": {
          "$ref": "#/1963"
        },
        "flags": 0,
        "description": "The service managed resource settings."
      },
      "serviceProvisionedResourceGroup": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace"
      },
      "sharedPrivateLinkResources": {
        "type": {
          "$ref": "#/1973"
        },
        "flags": 0,
        "description": "The list of shared private link resources in this workspace."
      },
      "softDeleteRetentionInDays": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Retention time in days after workspace get soft deleted."
      },
      "storageAccount": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created"
      },
      "storageAccounts": {
        "type": {
          "$ref": "#/1974"
        },
        "flags": 0
      },
      "storageHnsEnabled": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 2,
        "description": "If the storage associated with the workspace has hierarchical namespace(HNS) enabled."
      },
      "systemDatastoresAuthMode": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The auth mode used for accessing the system datastores of the workspace."
      },
      "tenantId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The tenant id associated with this workspace."
      },
      "v1LegacyMode": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Enabling v1_legacy_mode may prevent you from using features provided by the v2 API."
      },
      "workspaceHubConfig": {
        "type": {
          "$ref": "#/1975"
        },
        "flags": 0,
        "description": "WorkspaceHub's configuration object."
      },
      "workspaceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The immutable id associated with this workspace."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "EncryptionProperty",
    "properties": {
      "cosmosDbResourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The byok cosmosdb account that customer brings to store customer's data\r\nwith encryption"
      },
      "identity": {
        "type": {
          "$ref": "#/1885"
        },
        "flags": 0,
        "description": "Identity to be used with the keyVault"
      },
      "keyVaultProperties": {
        "type": {
          "$ref": "#/1886"
        },
        "flags": 1,
        "description": "KeyVault details to do the encryption"
      },
      "searchAccountResourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The byok search account that customer brings to store customer's data\r\nwith encryption"
      },
      "status": {
        "type": {
          "$ref": "#/1889"
        },
        "flags": 1,
        "description": "Indicates whether or not the encryption is enabled for the workspace."
      },
      "storageAccountResourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The byok storage account that customer brings to store customer's data\r\nwith encryption"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IdentityForCmk",
    "properties": {
      "userAssignedIdentity": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "UserAssignedIdentity to be used to fetch the encryption key from keyVault"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KeyVaultProperties",
    "properties": {
      "identityClientId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Currently, we support only SystemAssigned MSI.\r\nWe need this when we support UserAssignedIdentities"
      },
      "keyIdentifier": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "KeyVault key identifier to encrypt the data"
      },
      "keyVaultArmId": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "KeyVault Arm Id that contains the data encryption key"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1887"
      },
      {
        "$ref": "#/1888"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeatureStoreSettings",
    "properties": {
      "computeRuntime": {
        "type": {
          "$ref": "#/1892"
        },
        "flags": 0
      },
      "offlineStoreConnectionName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "onlineStoreConnectionName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ComputeRuntimeDto",
    "properties": {
      "sparkRuntimeVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedNetworkSettings",
    "properties": {
      "isolationMode": {
        "type": {
          "$ref": "#/1898"
        },
        "flags": 0,
        "description": "Isolation mode for the managed network of a machine learning workspace."
      },
      "networkId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2
      },
      "outboundRules": {
        "type": {
          "$ref": "#/1922"
        },
        "flags": 0,
        "description": "Dictionary of <OutboundRule>"
      },
      "status": {
        "type": {
          "$ref": "#/1923"
        },
        "flags": 0,
        "description": "Status of the Provisioning for the managed network of a machine learning workspace."
      },
      "changeableIsolationModes": {
        "type": {
          "$ref": "#/1931"
        },
        "flags": 2,
        "description": "Detail isolation modes for the managed network of a machine learning workspace."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "AllowInternetOutbound"
  },
  {
    "$type": "StringLiteralType",
    "value": "AllowOnlyApprovedOutbound"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1895"
      },
      {
        "$ref": "#/1896"
      },
      {
        "$ref": "#/1897"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "OutboundRule",
    "discriminator": "type",
    "baseProperties": {
      "category": {
        "type": {
          "$ref": "#/1903"
        },
        "flags": 0,
        "description": "Category of a managed network outbound rule of a machine learning workspace."
      },
      "status": {
        "type": {
          "$ref": "#/1906"
        },
        "flags": 0,
        "description": "Type of a managed network outbound rule of a machine learning workspace."
      }
    },
    "elements": {
      "FQDN": {
        "$ref": "#/1907"
      },
      "PrivateEndpoint": {
        "$ref": "#/1909"
      },
      "ServiceTag": {
        "$ref": "#/1915"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Required"
  },
  {
    "$type": "StringLiteralType",
    "value": "Recommended"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserDefined"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1900"
      },
      {
        "$ref": "#/1901"
      },
      {
        "$ref": "#/1902"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Inactive"
  },
  {
    "$type": "StringLiteralType",
    "value": "Active"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1904"
      },
      {
        "$ref": "#/1905"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "FqdnOutboundRule",
    "properties": {
      "destination": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "type": {
        "type": {
          "$ref": "#/1908"
        },
        "flags": 1,
        "description": "Type of a managed network outbound rule of a machine learning workspace."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "FQDN"
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointOutboundRule",
    "properties": {
      "destination": {
        "type": {
          "$ref": "#/1910"
        },
        "flags": 0,
        "description": "Private Endpoint destination for a Private Endpoint Outbound Rule for the managed network of a machine learning workspace."
      },
      "type": {
        "type": {
          "$ref": "#/1914"
        },
        "flags": 1,
        "description": "Type of a managed network outbound rule of a machine learning workspace."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointDestination",
    "properties": {
      "serviceResourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "sparkEnabled": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0
      },
      "sparkStatus": {
        "type": {
          "$ref": "#/1913"
        },
        "flags": 0,
        "description": "Type of a managed network Outbound Rule of a machine learning workspace."
      },
      "subresourceTarget": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Inactive"
  },
  {
    "$type": "StringLiteralType",
    "value": "Active"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1911"
      },
      {
        "$ref": "#/1912"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "PrivateEndpoint"
  },
  {
    "$type": "ObjectType",
    "name": "ServiceTagOutboundRule",
    "properties": {
      "destination": {
        "type": {
          "$ref": "#/1916"
        },
        "flags": 0,
        "description": "Service Tag destination for a Service Tag Outbound Rule for the managed network of a machine learning workspace."
      },
      "type": {
        "type": {
          "$ref": "#/1921"
        },
        "flags": 1,
        "description": "Type of a managed network outbound rule of a machine learning workspace."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ServiceTagDestination",
    "properties": {
      "action": {
        "type": {
          "$ref": "#/1919"
        },
        "flags": 0,
        "description": "The action enum for networking rule."
      },
      "addressPrefixes": {
        "type": {
          "$ref": "#/1920"
        },
        "flags": 2,
        "description": "Optional, if provided, the ServiceTag property will be ignored."
      },
      "portRanges": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "protocol": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "serviceTag": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Allow"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deny"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1917"
      },
      {
        "$ref": "#/1918"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ServiceTag"
  },
  {
    "$type": "ObjectType",
    "name": "ManagedNetworkSettingsOutboundRules",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/1899"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedNetworkProvisionStatus",
    "properties": {
      "sparkReady": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0
      },
      "status": {
        "type": {
          "$ref": "#/1926"
        },
        "flags": 0,
        "description": "Status for the managed network of a machine learning workspace."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Inactive"
  },
  {
    "$type": "StringLiteralType",
    "value": "Active"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1924"
      },
      {
        "$ref": "#/1925"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "AllowInternetOutbound"
  },
  {
    "$type": "StringLiteralType",
    "value": "AllowOnlyApprovedOutbound"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1927"
      },
      {
        "$ref": "#/1928"
      },
      {
        "$ref": "#/1929"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1930"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NotebookResourceInfo",
    "properties": {
      "fqdn": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "isPrivateLinkEnabled": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0
      },
      "notebookPreparationError": {
        "type": {
          "$ref": "#/1933"
        },
        "flags": 0,
        "description": "The error that occurs when preparing notebook."
      },
      "resourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "the data plane resourceId that used to initialize notebook component"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NotebookPreparationError",
    "properties": {
      "errorMessage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "statusCode": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnection",
    "properties": {
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Same as workspace location."
      },
      "properties": {
        "type": {
          "$ref": "#/1935"
        },
        "flags": 0,
        "description": "Private endpoint connection properties."
      },
      "sku": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Optional. This field is required to be implemented by the RP because AML is supporting more than one tier"
      },
      "tags": {
        "type": {
          "$ref": "#/1949"
        },
        "flags": 0,
        "description": "Dictionary of <string>"
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnectionProperties",
    "properties": {
      "privateEndpoint": {
        "type": {
          "$ref": "#/1936"
        },
        "flags": 0,
        "description": "The Private Endpoint resource."
      },
      "privateLinkServiceConnectionState": {
        "type": {
          "$ref": "#/1937"
        },
        "flags": 0,
        "description": "The connection state."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/1948"
        },
        "flags": 0,
        "description": "The current provisioning state."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspacePrivateEndpointResource",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "e.g. /subscriptions/{networkSubscriptionId}/resourceGroups/{rgName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}"
      },
      "subnetArmId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The subnetId that the private endpoint is connected to."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateLinkServiceConnectionState",
    "properties": {
      "actionsRequired": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Some RP chose \"None\". Other RPs use this for region expansion."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "User-defined message that, per NRP doc, may be used for approval-related message."
      },
      "status": {
        "type": {
          "$ref": "#/1943"
        },
        "flags": 0,
        "description": "Connection status of the service consumer with the service provider"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Approved"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rejected"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disconnected"
  },
  {
    "$type": "StringLiteralType",
    "value": "Timeout"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1938"
      },
      {
        "$ref": "#/1939"
      },
      {
        "$ref": "#/1940"
      },
      {
        "$ref": "#/1941"
      },
      {
        "$ref": "#/1942"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1944"
      },
      {
        "$ref": "#/1945"
      },
      {
        "$ref": "#/1946"
      },
      {
        "$ref": "#/1947"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnectionTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1934"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1951"
      },
      {
        "$ref": "#/1952"
      },
      {
        "$ref": "#/1953"
      },
      {
        "$ref": "#/1954"
      },
      {
        "$ref": "#/1955"
      },
      {
        "$ref": "#/1956"
      },
      {
        "$ref": "#/1957"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1959"
      },
      {
        "$ref": "#/1960"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ServerlessComputeSettings",
    "properties": {
      "serverlessComputeCustomSubnet": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The resource ID of an existing virtual network subnet in which serverless compute nodes should be deployed"
      },
      "serverlessComputeNoPublicIP": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "The flag to signal if serverless compute nodes deployed in custom vNet would have no public IP addresses for a workspace with private endpoint"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ServiceManagedResourcesSettings",
    "properties": {
      "cosmosDb": {
        "type": {
          "$ref": "#/1964"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CosmosDbSettings",
    "properties": {
      "collectionsThroughput": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SharedPrivateLinkResource",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Unique name of the private link"
      },
      "properties": {
        "type": {
          "$ref": "#/1966"
        },
        "flags": 0,
        "description": "Properties of a shared private link resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SharedPrivateLinkResourceProperty",
    "properties": {
      "groupId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "group id of the private link"
      },
      "privateLinkResourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "the resource id that private link links to"
      },
      "requestMessage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Request message"
      },
      "status": {
        "type": {
          "$ref": "#/1972"
        },
        "flags": 0,
        "description": "Connection status of the service consumer with the service provider"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Approved"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rejected"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disconnected"
  },
  {
    "$type": "StringLiteralType",
    "value": "Timeout"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1967"
      },
      {
        "$ref": "#/1968"
      },
      {
        "$ref": "#/1969"
      },
      {
        "$ref": "#/1970"
      },
      {
        "$ref": "#/1971"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/1965"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceHubConfig",
    "properties": {
      "additionalWorkspaceStorageAccounts": {
        "type": {
          "$ref": "#/1976"
        },
        "flags": 0
      },
      "defaultWorkspaceResourceGroup": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/1880"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/connections"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/connections",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/1877"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1979"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1980"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/1982"
        },
        "flags": 1
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "WorkspaceConnectionPropertiesV2",
    "discriminator": "authType",
    "baseProperties": {
      "category": {
        "type": {
          "$ref": "#/1999"
        },
        "flags": 0,
        "description": "Category of the connection"
      },
      "createdByWorkspaceArmId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The arm id of the workspace which created this connection"
      },
      "expiryTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "isSharedToAll": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "whether this connection will be shared to all the project workspace under the hub"
      },
      "metadata": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 0,
        "description": "Any object"
      },
      "target": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    },
    "elements": {
      "AccessKey": {
        "$ref": "#/2000"
      },
      "ApiKey": {
        "$ref": "#/2003"
      },
      "CustomKeys": {
        "$ref": "#/2006"
      },
      "ManagedIdentity": {
        "$ref": "#/2010"
      },
      "None": {
        "$ref": "#/2013"
      },
      "PAT": {
        "$ref": "#/2015"
      },
      "SAS": {
        "$ref": "#/2018"
      },
      "ServicePrincipal": {
        "$ref": "#/2021"
      },
      "UsernamePassword": {
        "$ref": "#/2024"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "PythonFeed"
  },
  {
    "$type": "StringLiteralType",
    "value": "ContainerRegistry"
  },
  {
    "$type": "StringLiteralType",
    "value": "Git"
  },
  {
    "$type": "StringLiteralType",
    "value": "S3"
  },
  {
    "$type": "StringLiteralType",
    "value": "Snowflake"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureSqlDb"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureSynapseAnalytics"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureMySqlDb"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzurePostgresDb"
  },
  {
    "$type": "StringLiteralType",
    "value": "ADLSGen2"
  },
  {
    "$type": "StringLiteralType",
    "value": "Redis"
  },
  {
    "$type": "StringLiteralType",
    "value": "ApiKey"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureOpenAI"
  },
  {
    "$type": "StringLiteralType",
    "value": "CognitiveSearch"
  },
  {
    "$type": "StringLiteralType",
    "value": "CognitiveService"
  },
  {
    "$type": "StringLiteralType",
    "value": "CustomKeys"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/1983"
      },
      {
        "$ref": "#/1984"
      },
      {
        "$ref": "#/1985"
      },
      {
        "$ref": "#/1986"
      },
      {
        "$ref": "#/1987"
      },
      {
        "$ref": "#/1988"
      },
      {
        "$ref": "#/1989"
      },
      {
        "$ref": "#/1990"
      },
      {
        "$ref": "#/1991"
      },
      {
        "$ref": "#/1992"
      },
      {
        "$ref": "#/1993"
      },
      {
        "$ref": "#/1994"
      },
      {
        "$ref": "#/1995"
      },
      {
        "$ref": "#/1996"
      },
      {
        "$ref": "#/1997"
      },
      {
        "$ref": "#/1998"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AccessKeyAuthTypeWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/2001"
        },
        "flags": 0
      },
      "authType": {
        "type": {
          "$ref": "#/2002"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionAccessKey",
    "properties": {
      "accessKeyId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "secretAccessKey": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AccessKey"
  },
  {
    "$type": "ObjectType",
    "name": "ApiKeyAuthWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/2004"
        },
        "flags": 0,
        "description": "Api key object for workspace connection credential."
      },
      "authType": {
        "type": {
          "$ref": "#/2005"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionApiKey",
    "properties": {
      "key": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ApiKey"
  },
  {
    "$type": "ObjectType",
    "name": "CustomKeysWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/2007"
        },
        "flags": 0,
        "description": "Custom Keys credential object"
      },
      "authType": {
        "type": {
          "$ref": "#/2009"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomKeys",
    "properties": {
      "keys": {
        "type": {
          "$ref": "#/2008"
        },
        "flags": 0,
        "description": "Dictionary of <string>"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CustomKeys",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CustomKeys"
  },
  {
    "$type": "ObjectType",
    "name": "ManagedIdentityAuthTypeWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/2011"
        },
        "flags": 0
      },
      "authType": {
        "type": {
          "$ref": "#/2012"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionManagedIdentity",
    "properties": {
      "clientId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "resourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "ObjectType",
    "name": "NoneAuthTypeWorkspaceConnectionProperties",
    "properties": {
      "authType": {
        "type": {
          "$ref": "#/2014"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "ObjectType",
    "name": "PATAuthTypeWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/2016"
        },
        "flags": 0
      },
      "authType": {
        "type": {
          "$ref": "#/2017"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionPersonalAccessToken",
    "properties": {
      "pat": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "PAT"
  },
  {
    "$type": "ObjectType",
    "name": "SASAuthTypeWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/2019"
        },
        "flags": 0
      },
      "authType": {
        "type": {
          "$ref": "#/2020"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionSharedAccessSignature",
    "properties": {
      "sas": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SAS"
  },
  {
    "$type": "ObjectType",
    "name": "ServicePrincipalAuthTypeWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/2022"
        },
        "flags": 0
      },
      "authType": {
        "type": {
          "$ref": "#/2023"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionServicePrincipal",
    "properties": {
      "clientId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "clientSecret": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "tenantId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicePrincipal"
  },
  {
    "$type": "ObjectType",
    "name": "UsernamePasswordAuthTypeWorkspaceConnectionProperties",
    "properties": {
      "credentials": {
        "type": {
          "$ref": "#/2025"
        },
        "flags": 0
      },
      "authType": {
        "type": {
          "$ref": "#/2026"
        },
        "flags": 1,
        "description": "Authentication type of the connection target"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionUsernamePassword",
    "properties": {
      "password": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "username": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "UsernamePassword"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/connections@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/1981"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/outboundRules"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/outboundRules",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/1877"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/2028"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2029"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/1899"
        },
        "flags": 1,
        "description": "Outbound Rule for the managed network of a machine learning workspace."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/outboundRules@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/2030"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/2032"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2033"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Same as workspace location."
      },
      "properties": {
        "type": {
          "$ref": "#/1935"
        },
        "flags": 0,
        "description": "Private endpoint connection properties."
      },
      "sku": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Optional. This field is required to be implemented by the RP because AML is supporting more than one tier"
      },
      "tags": {
        "type": {
          "$ref": "#/2035"
        },
        "flags": 0,
        "description": "Dictionary of <string>"
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnectionTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/2034"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.MachineLearningServices/workspaces/featuresets/versions/features"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.MachineLearningServices/workspaces/featuresets/versions/features",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/309"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/2037"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2038"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/2040"
        },
        "flags": 2,
        "description": "[Required] Additional attributes of the entity."
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeatureProperties",
    "properties": {
      "dataType": {
        "type": {
          "$ref": "#/2049"
        },
        "flags": 0,
        "description": "Specifies type"
      },
      "featureName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies name"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The asset description text."
      },
      "properties": {
        "type": {
          "$ref": "#/2050"
        },
        "flags": 0,
        "description": "The asset property dictionary."
      },
      "tags": {
        "type": {
          "$ref": "#/2051"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "String"
  },
  {
    "$type": "StringLiteralType",
    "value": "Integer"
  },
  {
    "$type": "StringLiteralType",
    "value": "Long"
  },
  {
    "$type": "StringLiteralType",
    "value": "Float"
  },
  {
    "$type": "StringLiteralType",
    "value": "Double"
  },
  {
    "$type": "StringLiteralType",
    "value": "Binary"
  },
  {
    "$type": "StringLiteralType",
    "value": "Datetime"
  },
  {
    "$type": "StringLiteralType",
    "value": "Boolean"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2041"
      },
      {
        "$ref": "#/2042"
      },
      {
        "$ref": "#/2043"
      },
      {
        "$ref": "#/2044"
      },
      {
        "$ref": "#/2045"
      },
      {
        "$ref": "#/2046"
      },
      {
        "$ref": "#/2047"
      },
      {
        "$ref": "#/2048"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceBaseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.MachineLearningServices/workspaces/featuresets/versions/features@2023-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/2039"
    },
    "flags": 1
  },
  {
    "$type": "ObjectType",
    "name": "QuotaUpdateParameters",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/2057"
        },
        "flags": 0,
        "description": "The list for update quota."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Region of workspace quota to be updated."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "QuotaBaseProperties",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies the resource ID."
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies the resource type."
      },
      "limit": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The maximum permitted quota of the resource."
      },
      "unit": {
        "type": {
          "$ref": "#/2056"
        },
        "flags": 0,
        "description": "An enum describing the unit of quota measurement."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Count"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2055"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2054"
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateWorkspaceQuotasResult",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/2071"
        },
        "flags": 2,
        "description": "The list of workspace quota update result."
      },
      "nextLink": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The URI to fetch the next page of workspace quota update result. Call ListNext() with this to fetch the next page of Workspace Quota update result."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UpdateWorkspaceQuotas",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Specifies the resource ID."
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Specifies the resource type."
      },
      "limit": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The maximum permitted quota of the resource."
      },
      "unit": {
        "type": {
          "$ref": "#/2061"
        },
        "flags": 2,
        "description": "An enum describing the unit of quota measurement."
      },
      "status": {
        "type": {
          "$ref": "#/2070"
        },
        "flags": 0,
        "description": "Status of update workspace quota."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Count"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2060"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Undefined"
  },
  {
    "$type": "StringLiteralType",
    "value": "Success"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failure"
  },
  {
    "$type": "StringLiteralType",
    "value": "InvalidQuotaBelowClusterMinimum"
  },
  {
    "$type": "StringLiteralType",
    "value": "InvalidQuotaExceedsSubscriptionLimit"
  },
  {
    "$type": "StringLiteralType",
    "value": "InvalidVMFamilyName"
  },
  {
    "$type": "StringLiteralType",
    "value": "OperationNotSupportedForSku"
  },
  {
    "$type": "StringLiteralType",
    "value": "OperationNotEnabledForRegion"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2062"
      },
      {
        "$ref": "#/2063"
      },
      {
        "$ref": "#/2064"
      },
      {
        "$ref": "#/2065"
      },
      {
        "$ref": "#/2066"
      },
      {
        "$ref": "#/2067"
      },
      {
        "$ref": "#/2068"
      },
      {
        "$ref": "#/2069"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2059"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "updateQuotas",
    "resourceType": "Microsoft.MachineLearningServices/locations",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2058"
    },
    "input": {
      "$ref": "#/2053"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/107"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "customServices",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/computes",
    "apiVersion": "2023-08-01-preview",
    "input": {
      "$ref": "#/2073"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AmlComputeNodesInformation",
    "properties": {
      "nodes": {
        "type": {
          "$ref": "#/2084"
        },
        "flags": 2,
        "description": "The collection of returned AmlCompute nodes details."
      },
      "nextLink": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The continuation token."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AmlComputeNodeInformation",
    "properties": {
      "nodeId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "ID of the compute node."
      },
      "privateIpAddress": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Private IP address of the compute node."
      },
      "publicIpAddress": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Public IP address of the compute node."
      },
      "port": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "SSH port number of the node."
      },
      "nodeState": {
        "type": {
          "$ref": "#/2083"
        },
        "flags": 2,
        "description": "State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted."
      },
      "runId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "ID of the Experiment running on the node, if any else null."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "idle"
  },
  {
    "$type": "StringLiteralType",
    "value": "running"
  },
  {
    "$type": "StringLiteralType",
    "value": "preparing"
  },
  {
    "$type": "StringLiteralType",
    "value": "unusable"
  },
  {
    "$type": "StringLiteralType",
    "value": "leaving"
  },
  {
    "$type": "StringLiteralType",
    "value": "preempted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2077"
      },
      {
        "$ref": "#/2078"
      },
      {
        "$ref": "#/2079"
      },
      {
        "$ref": "#/2080"
      },
      {
        "$ref": "#/2081"
      },
      {
        "$ref": "#/2082"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2076"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listNodes",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/computes",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2075"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ComputeSecrets",
    "discriminator": "computeType",
    "baseProperties": {},
    "elements": {
      "AKS": {
        "$ref": "#/2087"
      },
      "Databricks": {
        "$ref": "#/2089"
      },
      "VirtualMachine": {
        "$ref": "#/2091"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AksComputeSecrets",
    "properties": {
      "userKubeConfig": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Content of kubeconfig file that can be used to connect to the Kubernetes cluster."
      },
      "adminKubeConfig": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Content of kubeconfig file that can be used to connect to the Kubernetes cluster."
      },
      "imagePullSecretName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Image registry pull secret."
      },
      "computeType": {
        "type": {
          "$ref": "#/2088"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AKS"
  },
  {
    "$type": "ObjectType",
    "name": "DatabricksComputeSecrets",
    "properties": {
      "databricksAccessToken": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "access token for databricks account."
      },
      "computeType": {
        "type": {
          "$ref": "#/2090"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Databricks"
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineSecrets",
    "properties": {
      "administratorAccount": {
        "type": {
          "$ref": "#/289"
        },
        "flags": 0,
        "description": "Admin credentials for virtual machine."
      },
      "computeType": {
        "type": {
          "$ref": "#/2092"
        },
        "flags": 1,
        "description": "The type of compute"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "VirtualMachine"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/computes",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2086"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "start",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/computes",
    "apiVersion": "2023-08-01-preview"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "stop",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/computes",
    "apiVersion": "2023-08-01-preview"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "restart",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/computes",
    "apiVersion": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "IdleShutdownSetting",
    "properties": {
      "idleTimeBeforeShutdown": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Time is defined in ISO8601 format. Minimum is 15 min, maximum is 3 days."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "updateIdleShutdownSetting",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/computes",
    "apiVersion": "2023-08-01-preview",
    "input": {
      "$ref": "#/2097"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineSizeListResult",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/2116"
        },
        "flags": 0,
        "description": "The list of virtual machine sizes supported by AmlCompute."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualMachineSize",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the virtual machine size."
      },
      "family": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The family name of the virtual machine size."
      },
      "vCPUs": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "The number of vCPUs supported by the virtual machine size."
      },
      "gpus": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "The number of gPUs supported by the virtual machine size."
      },
      "osVhdSizeMB": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "The OS VHD disk size, in MB, allowed by the virtual machine size."
      },
      "maxResourceVolumeMB": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "The resource volume size, in MB, allowed by the virtual machine size."
      },
      "memoryGB": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "The amount of memory, in GB, supported by the virtual machine size."
      },
      "lowPriorityCapable": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 2,
        "description": "Specifies if the virtual machine size supports low priority VMs."
      },
      "premiumIO": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 2,
        "description": "Specifies if the virtual machine size supports premium IO."
      },
      "estimatedVMPrices": {
        "type": {
          "$ref": "#/2101"
        },
        "flags": 0,
        "description": "The estimated price information for using a VM."
      },
      "supportedComputeTypes": {
        "type": {
          "$ref": "#/2115"
        },
        "flags": 0,
        "description": "Specifies the compute types supported by the virtual machine size."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EstimatedVMPrices",
    "properties": {
      "billingCurrency": {
        "type": {
          "$ref": "#/2103"
        },
        "flags": 1,
        "description": "Three lettered code specifying the currency of the VM price. Example: USD"
      },
      "unitOfMeasure": {
        "type": {
          "$ref": "#/2105"
        },
        "flags": 1,
        "description": "The unit of time measurement for the specified VM price. Example: OneHour"
      },
      "values": {
        "type": {
          "$ref": "#/2114"
        },
        "flags": 1,
        "description": "The list of estimated prices for using a VM of a particular OS type, tier, etc."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "USD"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2102"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "OneHour"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2104"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "EstimatedVMPrice",
    "properties": {
      "retailPrice": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "The price charged for using the VM."
      },
      "osType": {
        "type": {
          "$ref": "#/2109"
        },
        "flags": 1,
        "description": "Operating system type used by the VM."
      },
      "vmTier": {
        "type": {
          "$ref": "#/2113"
        },
        "flags": 1,
        "description": "The type of the VM."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Linux"
  },
  {
    "$type": "StringLiteralType",
    "value": "Windows"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2107"
      },
      {
        "$ref": "#/2108"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard"
  },
  {
    "$type": "StringLiteralType",
    "value": "LowPriority"
  },
  {
    "$type": "StringLiteralType",
    "value": "Spot"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2110"
      },
      {
        "$ref": "#/2111"
      },
      {
        "$ref": "#/2112"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2106"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2100"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "getAllowedVmSizesForResize",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/computes",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2099"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResizeSchema",
    "properties": {
      "targetVMSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the virtual machine size."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "resize",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/computes",
    "apiVersion": "2023-08-01-preview",
    "input": {
      "$ref": "#/2118"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PendingUploadRequestDto",
    "properties": {
      "pendingUploadId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "If PendingUploadId = null then random guid will be used."
      },
      "pendingUploadType": {
        "type": {
          "$ref": "#/2123"
        },
        "flags": 0,
        "description": "TemporaryBlobReference is the only supported type"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "TemporaryBlobReference"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2121"
      },
      {
        "$ref": "#/2122"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "PendingUploadResponseDto",
    "properties": {
      "blobReferenceForConsumption": {
        "type": {
          "$ref": "#/2125"
        },
        "flags": 0,
        "description": "Container level read, write, list SAS"
      },
      "pendingUploadId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ID for this upload request"
      },
      "pendingUploadType": {
        "type": {
          "$ref": "#/2131"
        },
        "flags": 0,
        "description": "TemporaryBlobReference is the only supported type"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BlobReferenceForConsumptionDto",
    "properties": {
      "blobUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Blob URI path for client to upload data.\r\nExample: https://blob.windows.core.net/Container/Path"
      },
      "credential": {
        "type": {
          "$ref": "#/2126"
        },
        "flags": 0,
        "description": "Credential info to access storage account"
      },
      "storageAccountArmId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Arm ID of the storage account to use"
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "PendingUploadCredentialDto",
    "discriminator": "credentialType",
    "baseProperties": {},
    "elements": {
      "SAS": {
        "$ref": "#/2127"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SASCredentialDto",
    "properties": {
      "sasUri": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "Full SAS Uri, including the storage, container/blob path and SAS token"
      },
      "credentialType": {
        "type": {
          "$ref": "#/2128"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SAS"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "TemporaryBlobReference"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2129"
      },
      {
        "$ref": "#/2130"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceFunctionType",
    "name": "startPendingUpload",
    "resourceType": "Microsoft.MachineLearningServices/registries/codes/versions",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2124"
    },
    "input": {
      "$ref": "#/2120"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "startPendingUpload",
    "resourceType": "Microsoft.MachineLearningServices/registries/data/versions",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2124"
    },
    "input": {
      "$ref": "#/2120"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PackageRequest",
    "properties": {
      "baseEnvironmentSource": {
        "type": {
          "$ref": "#/2135"
        },
        "flags": 0,
        "description": "Base environment to start with."
      },
      "environmentVariables": {
        "type": {
          "$ref": "#/2138"
        },
        "flags": 0,
        "description": "Collection of environment variables."
      },
      "inferencingServer": {
        "type": {
          "$ref": "#/2139"
        },
        "flags": 1,
        "description": "[Required] Inferencing server configurations."
      },
      "inputs": {
        "type": {
          "$ref": "#/2164"
        },
        "flags": 0,
        "description": "Collection of inputs."
      },
      "modelConfiguration": {
        "type": {
          "$ref": "#/2165"
        },
        "flags": 0,
        "description": "Model configuration including the mount mode."
      },
      "properties": {
        "type": {
          "$ref": "#/2169"
        },
        "flags": 0,
        "description": "Property dictionary. Properties can be added, removed, and updated."
      },
      "tags": {
        "type": {
          "$ref": "#/2170"
        },
        "flags": 0,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "targetEnvironmentId": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Arm ID of the target environment to be created by package operation."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "BaseEnvironmentSource",
    "discriminator": "baseEnvironmentSourceType",
    "baseProperties": {},
    "elements": {
      "EnvironmentAsset": {
        "$ref": "#/2136"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BaseEnvironmentId",
    "properties": {
      "resourceId": {
        "type": {
          "$ref": "#/315"
        },
        "flags": 1,
        "description": "[Required] Resource id accepting ArmId or AzureMlId."
      },
      "baseEnvironmentSourceType": {
        "type": {
          "$ref": "#/2137"
        },
        "flags": 1,
        "description": "[Required] Base environment type."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "EnvironmentAsset"
  },
  {
    "$type": "ObjectType",
    "name": "PackageRequestEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "InferencingServer",
    "discriminator": "serverType",
    "baseProperties": {},
    "elements": {
      "AzureMLBatch": {
        "$ref": "#/2140"
      },
      "AzureMLOnline": {
        "$ref": "#/2142"
      },
      "Custom": {
        "$ref": "#/2144"
      },
      "Triton": {
        "$ref": "#/2148"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureMLBatchInferencingServer",
    "properties": {
      "codeConfiguration": {
        "type": {
          "$ref": "#/538"
        },
        "flags": 0,
        "description": "Code configuration for AML batch inferencing server."
      },
      "serverType": {
        "type": {
          "$ref": "#/2141"
        },
        "flags": 1,
        "description": "[Required] Inferencing server type for various targets."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureMLBatch"
  },
  {
    "$type": "ObjectType",
    "name": "AzureMLOnlineInferencingServer",
    "properties": {
      "codeConfiguration": {
        "type": {
          "$ref": "#/538"
        },
        "flags": 0,
        "description": "Code configuration for AML inferencing server."
      },
      "serverType": {
        "type": {
          "$ref": "#/2143"
        },
        "flags": 1,
        "description": "[Required] Inferencing server type for various targets."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureMLOnline"
  },
  {
    "$type": "ObjectType",
    "name": "CustomInferencingServer",
    "properties": {
      "inferenceConfiguration": {
        "type": {
          "$ref": "#/2145"
        },
        "flags": 0,
        "description": "Inference configuration for custom inferencing."
      },
      "serverType": {
        "type": {
          "$ref": "#/2147"
        },
        "flags": 1,
        "description": "[Required] Inferencing server type for various targets."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "OnlineInferenceConfiguration",
    "properties": {
      "configurations": {
        "type": {
          "$ref": "#/2146"
        },
        "flags": 0,
        "description": "Additional configurations"
      },
      "entryScript": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Entry script or command to invoke."
      },
      "livenessRoute": {
        "type": {
          "$ref": "#/433"
        },
        "flags": 0,
        "description": "The route to check the liveness of the inference server container."
      },
      "readinessRoute": {
        "type": {
          "$ref": "#/433"
        },
        "flags": 0,
        "description": "The route to check the readiness of the inference server container."
      },
      "scoringRoute": {
        "type": {
          "$ref": "#/433"
        },
        "flags": 0,
        "description": "The port to send the scoring requests to, within the inference server container."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "OnlineInferenceConfigurationConfigurations",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Custom"
  },
  {
    "$type": "ObjectType",
    "name": "TritonInferencingServer",
    "properties": {
      "inferenceConfiguration": {
        "type": {
          "$ref": "#/2145"
        },
        "flags": 0,
        "description": "Inference configuration for Triton."
      },
      "serverType": {
        "type": {
          "$ref": "#/2149"
        },
        "flags": 1,
        "description": "[Required] Inferencing server type for various targets."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Triton"
  },
  {
    "$type": "ObjectType",
    "name": "ModelPackageInput",
    "properties": {
      "inputType": {
        "type": {
          "$ref": "#/2153"
        },
        "flags": 1,
        "description": "[Required] Type of the input included in the target image."
      },
      "mode": {
        "type": {
          "$ref": "#/2156"
        },
        "flags": 0,
        "description": "Input delivery mode of the input."
      },
      "mountPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Relative mount path of the input in the target image."
      },
      "path": {
        "type": {
          "$ref": "#/2157"
        },
        "flags": 1,
        "description": "[Required] Location of the input."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "UriFile"
  },
  {
    "$type": "StringLiteralType",
    "value": "UriFolder"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2151"
      },
      {
        "$ref": "#/2152"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Copy"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2154"
      },
      {
        "$ref": "#/2155"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "PackageInputPathBase",
    "discriminator": "inputPathType",
    "baseProperties": {},
    "elements": {
      "PathId": {
        "$ref": "#/2158"
      },
      "PathVersion": {
        "$ref": "#/2160"
      },
      "Url": {
        "$ref": "#/2162"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PackageInputPathId",
    "properties": {
      "resourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Input resource id."
      },
      "inputPathType": {
        "type": {
          "$ref": "#/2159"
        },
        "flags": 1,
        "description": "[Required] Input path type for package inputs."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "PathId"
  },
  {
    "$type": "ObjectType",
    "name": "PackageInputPathVersion",
    "properties": {
      "resourceName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Input resource name."
      },
      "resourceVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Input resource version."
      },
      "inputPathType": {
        "type": {
          "$ref": "#/2161"
        },
        "flags": 1,
        "description": "[Required] Input path type for package inputs."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "PathVersion"
  },
  {
    "$type": "ObjectType",
    "name": "PackageInputPathUrl",
    "properties": {
      "url": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Input path url."
      },
      "inputPathType": {
        "type": {
          "$ref": "#/2163"
        },
        "flags": 1,
        "description": "[Required] Input path type for package inputs."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Url"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2150"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ModelConfiguration",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/2168"
        },
        "flags": 0,
        "description": "Input delivery mode for the model."
      },
      "mountPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Relative mounting path of the model in the target image."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Copy"
  },
  {
    "$type": "StringLiteralType",
    "value": "Download"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2166"
      },
      {
        "$ref": "#/2167"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "PackageRequestProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PackageRequestTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PackageResponse",
    "properties": {
      "baseEnvironmentSource": {
        "type": {
          "$ref": "#/2135"
        },
        "flags": 2,
        "description": "Base environment to start with."
      },
      "buildId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Build id of the image build operation."
      },
      "buildState": {
        "type": {
          "$ref": "#/2176"
        },
        "flags": 2,
        "description": "Build state of the image build operation."
      },
      "environmentVariables": {
        "type": {
          "$ref": "#/2177"
        },
        "flags": 2,
        "description": "Collection of environment variables."
      },
      "inferencingServer": {
        "type": {
          "$ref": "#/2139"
        },
        "flags": 2,
        "description": "Inferencing server configurations."
      },
      "inputs": {
        "type": {
          "$ref": "#/2178"
        },
        "flags": 2,
        "description": "Collection of inputs."
      },
      "logUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Log url of the image build operation."
      },
      "modelConfiguration": {
        "type": {
          "$ref": "#/2165"
        },
        "flags": 2,
        "description": "Model configuration including the mount mode."
      },
      "properties": {
        "type": {
          "$ref": "#/2179"
        },
        "flags": 2,
        "description": "Property dictionary. Tags can be added, removed, and updated."
      },
      "tags": {
        "type": {
          "$ref": "#/2180"
        },
        "flags": 2,
        "description": "Tag dictionary. Tags can be added, removed, and updated."
      },
      "targetEnvironmentId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Asset ID of the target environment created by package operation."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotStarted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2172"
      },
      {
        "$ref": "#/2173"
      },
      {
        "$ref": "#/2174"
      },
      {
        "$ref": "#/2175"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "PackageResponseEnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2150"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PackageResponseProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PackageResponseTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "package",
    "resourceType": "Microsoft.MachineLearningServices/registries/models/versions",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2171"
    },
    "input": {
      "$ref": "#/2134"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "startPendingUpload",
    "resourceType": "Microsoft.MachineLearningServices/registries/models/versions",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2124"
    },
    "input": {
      "$ref": "#/2120"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listkeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/batchEndpoints",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/494"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "startPendingUpload",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/codes/versions",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2124"
    },
    "input": {
      "$ref": "#/2120"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "DatastoreSecrets",
    "discriminator": "secretsType",
    "baseProperties": {},
    "elements": {
      "AccountKey": {
        "$ref": "#/2186"
      },
      "Certificate": {
        "$ref": "#/2188"
      },
      "KerberosKeytab": {
        "$ref": "#/2190"
      },
      "KerberosPassword": {
        "$ref": "#/2192"
      },
      "Sas": {
        "$ref": "#/2194"
      },
      "ServicePrincipal": {
        "$ref": "#/2196"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AccountKeyDatastoreSecrets",
    "properties": {
      "key": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Storage account key."
      },
      "secretsType": {
        "type": {
          "$ref": "#/2187"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AccountKey"
  },
  {
    "$type": "ObjectType",
    "name": "CertificateDatastoreSecrets",
    "properties": {
      "certificate": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Service principal certificate."
      },
      "secretsType": {
        "type": {
          "$ref": "#/2189"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Certificate"
  },
  {
    "$type": "ObjectType",
    "name": "KerberosKeytabSecrets",
    "properties": {
      "kerberosKeytab": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Kerberos keytab secret."
      },
      "secretsType": {
        "type": {
          "$ref": "#/2191"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "KerberosKeytab"
  },
  {
    "$type": "ObjectType",
    "name": "KerberosPasswordSecrets",
    "properties": {
      "kerberosPassword": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Kerberos password secret."
      },
      "secretsType": {
        "type": {
          "$ref": "#/2193"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "KerberosPassword"
  },
  {
    "$type": "ObjectType",
    "name": "SasDatastoreSecrets",
    "properties": {
      "sasToken": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Storage container SAS token."
      },
      "secretsType": {
        "type": {
          "$ref": "#/2195"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Sas"
  },
  {
    "$type": "ObjectType",
    "name": "ServicePrincipalDatastoreSecrets",
    "properties": {
      "clientSecret": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Service principal secret."
      },
      "secretsType": {
        "type": {
          "$ref": "#/2197"
        },
        "flags": 1,
        "description": "[Required] Credential type used to authentication with storage."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "ServicePrincipal"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listSecrets",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/datastores",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2185"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturesetVersionBackfillRequest",
    "properties": {
      "dataAvailabilityStatus": {
        "type": {
          "$ref": "#/2205"
        },
        "flags": 0,
        "description": "Specified the data availability status that you want to backfill"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies description"
      },
      "displayName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies description"
      },
      "featureWindow": {
        "type": {
          "$ref": "#/2206"
        },
        "flags": 0,
        "description": "Specifies the backfill feature window to be materialized"
      },
      "jobId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specify the jobId to retry the failed materialization"
      },
      "properties": {
        "type": {
          "$ref": "#/2207"
        },
        "flags": 0,
        "description": "Specifies the properties"
      },
      "resource": {
        "type": {
          "$ref": "#/711"
        },
        "flags": 0,
        "description": "Specifies the compute resource settings"
      },
      "sparkConfiguration": {
        "type": {
          "$ref": "#/2208"
        },
        "flags": 0,
        "description": "Specifies the spark compute settings"
      },
      "tags": {
        "type": {
          "$ref": "#/2209"
        },
        "flags": 0,
        "description": "Specifies the tags"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Incomplete"
  },
  {
    "$type": "StringLiteralType",
    "value": "Complete"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2200"
      },
      {
        "$ref": "#/2201"
      },
      {
        "$ref": "#/2202"
      },
      {
        "$ref": "#/2203"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2204"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeatureWindow",
    "properties": {
      "featureWindowEnd": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies the feature window end time"
      },
      "featureWindowStart": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies the feature window start time"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturesetVersionBackfillRequestProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturesetVersionBackfillRequestSparkConfiguration",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturesetVersionBackfillRequestTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "FeaturesetVersionBackfillResponse",
    "properties": {
      "jobIds": {
        "type": {
          "$ref": "#/2211"
        },
        "flags": 0,
        "description": "List of jobs submitted as part of the backfill request."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "backfill",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/featuresets/versions",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2210"
    },
    "input": {
      "$ref": "#/2199"
    }
  },
  {
    "$type": "ObjectType",
    "name": "PoolStatus",
    "properties": {
      "actualCapacity": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Gets or sets the actual number of instances in the pool."
      },
      "groupCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Gets or sets the actual number of groups in the pool."
      },
      "requestedCapacity": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Gets or sets the requested number of instances for the pool."
      },
      "reservedCapacity": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Gets or sets the number of instances in the pool reserved by the system."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "getStatus",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/inferencePools",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2213"
    }
  },
  {
    "$type": "ObjectType",
    "name": "GroupStatus",
    "properties": {
      "actualCapacityInfo": {
        "type": {
          "$ref": "#/2216"
        },
        "flags": 0,
        "description": "Gets or sets the actual capacity info for the group."
      },
      "bonusExtraCapacity": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Gets or sets capacity used from the pool's reserved capacity."
      },
      "endpointCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Gets or sets the actual number of endpoints in the group."
      },
      "requestedCapacity": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Gets or sets the request number of instances for the group."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ActualCapacityInfo",
    "properties": {
      "allocated": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Gets or sets the total number of instances for the group."
      },
      "assignmentFailed": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Gets or sets the number of instances which failed to successfully complete assignment."
      },
      "assignmentSuccess": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Gets or sets the number of instances which successfully completed assignment."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "getStatus",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/inferencePools/groups",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2215"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "cancel",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/jobs",
    "apiVersion": "2023-08-01-preview"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ExportSummary",
    "discriminator": "format",
    "baseProperties": {
      "endDateTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time when the export was completed."
      },
      "exportedRowCount": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2,
        "description": "The total number of labeled datapoints exported."
      },
      "labelingJobId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Name and identifier of the job containing exported labels."
      },
      "startDateTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time when the export was requested."
      }
    },
    "elements": {
      "CSV": {
        "$ref": "#/2220"
      },
      "Coco": {
        "$ref": "#/2222"
      },
      "Dataset": {
        "$ref": "#/2224"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CsvExportSummary",
    "properties": {
      "containerName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The container name to which the labels will be exported."
      },
      "snapshotPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The output path where the labels will be exported."
      },
      "format": {
        "type": {
          "$ref": "#/2221"
        },
        "flags": 1,
        "description": "[Required] The format of exported labels, also as the discriminator."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CSV"
  },
  {
    "$type": "ObjectType",
    "name": "CocoExportSummary",
    "properties": {
      "containerName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The container name to which the labels will be exported."
      },
      "snapshotPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The output path where the labels will be exported."
      },
      "format": {
        "type": {
          "$ref": "#/2223"
        },
        "flags": 1,
        "description": "[Required] The format of exported labels, also as the discriminator."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Coco"
  },
  {
    "$type": "ObjectType",
    "name": "DatasetExportSummary",
    "properties": {
      "labeledAssetName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The unique name of the labeled data asset."
      },
      "format": {
        "type": {
          "$ref": "#/2225"
        },
        "flags": 1,
        "description": "[Required] The format of exported labels, also as the discriminator."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Dataset"
  },
  {
    "$type": "ResourceFunctionType",
    "name": "exportLabels",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/labelingJobs",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2219"
    },
    "input": {
      "$ref": "#/2219"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "pause",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/labelingJobs",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/1494"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "resume",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/labelingJobs",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/1494"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "package",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/models/versions",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2171"
    },
    "input": {
      "$ref": "#/2134"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/494"
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegenerateEndpointKeysRequest",
    "properties": {
      "keyType": {
        "type": {
          "$ref": "#/2234"
        },
        "flags": 1,
        "description": "[Required] Specification for which type of key to generate. Primary or Secondary."
      },
      "keyValue": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The value the key is set to."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Primary"
  },
  {
    "$type": "StringLiteralType",
    "value": "Secondary"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2232"
      },
      {
        "$ref": "#/2233"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceFunctionType",
    "name": "regenerateKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints",
    "apiVersion": "2023-08-01-preview",
    "input": {
      "$ref": "#/2231"
    }
  },
  {
    "$type": "ObjectType",
    "name": "EndpointAuthToken",
    "properties": {
      "accessToken": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Access token for endpoint authentication."
      },
      "expiryTimeUtc": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Access token expiry time (UTC)."
      },
      "refreshAfterTimeUtc": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Refresh access token after time (UTC)."
      },
      "tokenType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Access token type."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "token",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2236"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentLogsRequest",
    "properties": {
      "containerType": {
        "type": {
          "$ref": "#/2242"
        },
        "flags": 0,
        "description": "The type of container to retrieve logs from."
      },
      "tail": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The maximum number of lines to tail."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "StorageInitializer"
  },
  {
    "$type": "StringLiteralType",
    "value": "InferenceServer"
  },
  {
    "$type": "StringLiteralType",
    "value": "ModelDataCollector"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2239"
      },
      {
        "$ref": "#/2240"
      },
      {
        "$ref": "#/2241"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentLogs",
    "properties": {
      "content": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The retrieved online deployment logs."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "getLogs",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints/deployments",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2243"
    },
    "input": {
      "$ref": "#/2238"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/serverlessEndpoints",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/494"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "regenerateKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/serverlessEndpoints",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/494"
    },
    "input": {
      "$ref": "#/2231"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ServerlessEndpointStatus",
    "properties": {
      "metrics": {
        "type": {
          "$ref": "#/2248"
        },
        "flags": 2,
        "description": "The model-specific metrics from the backing inference endpoint."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ServerlessEndpointStatusMetrics",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "getStatus",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/serverlessEndpoints",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2247"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Registry",
    "properties": {
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Managed service identity (system assigned and/or user assigned identities)"
      },
      "kind": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type."
      },
      "properties": {
        "type": {
          "$ref": "#/1853"
        },
        "flags": 1,
        "description": "[Required] Additional attributes of the entity."
      },
      "sku": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Sku details required for ARM contract for Autoscaling."
      },
      "tags": {
        "type": {
          "$ref": "#/2251"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "removeRegions",
    "resourceType": "Microsoft.MachineLearningServices/registries",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2250"
    },
    "input": {
      "$ref": "#/2250"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseWorkspaceParameters",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/2254"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestProperties",
    "properties": {
      "applicationInsights": {
        "type": {
          "$ref": "#/2255"
        },
        "flags": 0,
        "description": "Setting for diagnosing dependent application insights"
      },
      "containerRegistry": {
        "type": {
          "$ref": "#/2256"
        },
        "flags": 0,
        "description": "Setting for diagnosing dependent container registry"
      },
      "dnsResolution": {
        "type": {
          "$ref": "#/2257"
        },
        "flags": 0,
        "description": "Setting for diagnosing dns resolution"
      },
      "keyVault": {
        "type": {
          "$ref": "#/2258"
        },
        "flags": 0,
        "description": "Setting for diagnosing dependent key vault"
      },
      "nsg": {
        "type": {
          "$ref": "#/2259"
        },
        "flags": 0,
        "description": "Setting for diagnosing network security group"
      },
      "others": {
        "type": {
          "$ref": "#/2260"
        },
        "flags": 0,
        "description": "Setting for diagnosing unclassified category of problems"
      },
      "requiredResourceProviders": {
        "type": {
          "$ref": "#/2261"
        },
        "flags": 0,
        "description": "Setting for diagnosing the presence of required resource providers in the workspace."
      },
      "resourceLock": {
        "type": {
          "$ref": "#/2262"
        },
        "flags": 0,
        "description": "Setting for diagnosing resource lock"
      },
      "storageAccount": {
        "type": {
          "$ref": "#/2263"
        },
        "flags": 0,
        "description": "Setting for diagnosing dependent storage account"
      },
      "udr": {
        "type": {
          "$ref": "#/2264"
        },
        "flags": 0,
        "description": "Setting for diagnosing user defined routing"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesApplicationInsights",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesContainerRegistry",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesDnsResolution",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesKeyVault",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesNsg",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesOthers",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesRequiredResourceProviders",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesResourceLock",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesStorageAccount",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseRequestPropertiesUdr",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseResponseResult",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/2266"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseResponseResultValue",
    "properties": {
      "userDefinedRouteResults": {
        "type": {
          "$ref": "#/2272"
        },
        "flags": 0
      },
      "networkSecurityRuleResults": {
        "type": {
          "$ref": "#/2273"
        },
        "flags": 0
      },
      "resourceLockResults": {
        "type": {
          "$ref": "#/2274"
        },
        "flags": 0
      },
      "dnsResolutionResults": {
        "type": {
          "$ref": "#/2275"
        },
        "flags": 0
      },
      "storageAccountResults": {
        "type": {
          "$ref": "#/2276"
        },
        "flags": 0
      },
      "keyVaultResults": {
        "type": {
          "$ref": "#/2277"
        },
        "flags": 0
      },
      "containerRegistryResults": {
        "type": {
          "$ref": "#/2278"
        },
        "flags": 0
      },
      "applicationInsightsResults": {
        "type": {
          "$ref": "#/2279"
        },
        "flags": 0
      },
      "otherResults": {
        "type": {
          "$ref": "#/2280"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnoseResult",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Code for workspace setup error"
      },
      "level": {
        "type": {
          "$ref": "#/2271"
        },
        "flags": 2,
        "description": "Level of workspace setup error"
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Message of workspace setup error"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Warning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Error"
  },
  {
    "$type": "StringLiteralType",
    "value": "Information"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/2268"
      },
      {
        "$ref": "#/2269"
      },
      {
        "$ref": "#/2270"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2267"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2267"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2267"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2267"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2267"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2267"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2267"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2267"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2267"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "diagnose",
    "resourceType": "Microsoft.MachineLearningServices/workspaces",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2265"
    },
    "input": {
      "$ref": "#/2253"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ListWorkspaceKeysResult",
    "properties": {
      "appInsightsInstrumentationKey": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 2,
        "description": "The access key of the workspace app insights"
      },
      "containerRegistryCredentials": {
        "type": {
          "$ref": "#/2283"
        },
        "flags": 0
      },
      "notebookAccessKeys": {
        "type": {
          "$ref": "#/2286"
        },
        "flags": 0
      },
      "userStorageArmId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The arm Id key of the workspace storage"
      },
      "userStorageKey": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 2,
        "description": "The access key of the workspace storage"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistryListCredentialsResult",
    "properties": {
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The location of the workspace ACR"
      },
      "passwords": {
        "type": {
          "$ref": "#/2285"
        },
        "flags": 0
      },
      "username": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The username of the workspace ACR"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Password",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 2
      },
      "value": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 2
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2284"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ListNotebookKeysResult",
    "properties": {
      "primaryAccessKey": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 2,
        "description": "The primary access key of the Notebook"
      },
      "secondaryAccessKey": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 2,
        "description": "The secondary access key of the Notebook"
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2282"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NotebookAccessTokenResult",
    "properties": {
      "accessToken": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 2
      },
      "expiresIn": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 2
      },
      "hostName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2
      },
      "notebookResourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2
      },
      "publicDns": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2
      },
      "refreshToken": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 2
      },
      "scope": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2
      },
      "tokenType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listNotebookAccessToken",
    "resourceType": "Microsoft.MachineLearningServices/workspaces",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2288"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listNotebookKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2286"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ListStorageAccountKeysResult",
    "properties": {
      "userStorageKey": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 2,
        "description": "The access key of the storage"
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listStorageAccountKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2291"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "prepareNotebook",
    "resourceType": "Microsoft.MachineLearningServices/workspaces",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/1932"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "resyncKeys",
    "resourceType": "Microsoft.MachineLearningServices/workspaces",
    "apiVersion": "2023-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "ManagedNetworkProvisionOptions",
    "properties": {
      "includeSpark": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "provisionManagedNetwork",
    "resourceType": "Microsoft.MachineLearningServices/workspaces",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/1923"
    },
    "input": {
      "$ref": "#/2295"
    }
  },
  {
    "$type": "ObjectType",
    "name": "WorkspaceConnectionPropertiesV2BasicResource",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/1982"
        },
        "flags": 1
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listsecrets",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/connections",
    "apiVersion": "2023-08-01-preview",
    "output": {
      "$ref": "#/2297"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "testconnection",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/connections",
    "apiVersion": "2023-08-01-preview",
    "input": {
      "$ref": "#/2297"
    }
  }
]