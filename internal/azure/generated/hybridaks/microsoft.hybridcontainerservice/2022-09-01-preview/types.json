[
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 63,
    "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.HybridContainerService/provisionedClusters"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-09-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.HybridContainerService/provisionedClusters",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Identity for the Provisioned cluster."
      },
      "properties": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 0,
        "description": "All properties of the provisioned cluster"
      },
      "systemData": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/118"
        },
        "flags": 0
      },
      "tags": {
        "type": {
          "$ref": "#/119"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProvisionedClusterIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The principal id of provisioned cluster identity. This property will only be provided for a system assigned identity."
      },
      "tenantId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The tenant id associated with the provisioned cluster. This property will only be provided for a system assigned identity."
      },
      "type": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 1,
        "description": "The type of identity used for the provisioned cluster. The type SystemAssigned, includes a system created identity. The type None means no identity is assigned to the provisioned cluster."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ProvisionedClustersAllPropertiesOrProvisionedClustersResponseProperties",
    "properties": {
      "aadProfile": {
        "type": {
          "$ref": "#/10"
        },
        "flags": 0,
        "description": "AAD profile for the provisioned cluster."
      },
      "windowsProfile": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "WindowsProfile - Profile for Windows VMs in the Provisioned Cluster."
      },
      "httpProxyConfig": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 0,
        "description": "HttpProxyConfig - Configurations for provisioning the cluster with HTTP proxy servers."
      },
      "enableRbac": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0,
        "description": "EnableRBAC - Whether to enable Kubernetes Role-Based Access Control."
      },
      "linuxProfile": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "LinuxProfile - The profile for Linux VMs in the Provisioned Cluster."
      },
      "features": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 0,
        "description": "Additional features specs like Arc Agent Onboarding."
      },
      "addonProfiles": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 0,
        "description": "AddonProfiles - Profile of managed cluster add-on."
      },
      "controlPlane": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 0,
        "description": "ControlPlane - ControlPlane Configuration"
      },
      "kubernetesVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "KubernetesVersion - Version of Kubernetes specified when creating the managed cluster."
      },
      "networkProfile": {
        "type": {
          "$ref": "#/50"
        },
        "flags": 0,
        "description": "NetworkProfile - Profile of network configuration."
      },
      "nodeResourceGroup": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "NodeResourceGroup - Name of the resource group containing agent pool nodes."
      },
      "agentPoolProfiles": {
        "type": {
          "$ref": "#/83"
        },
        "flags": 0,
        "description": "The agent pools of the cluster."
      },
      "cloudProviderProfile": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "The underlying cloud infra provider properties."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 2
      },
      "status": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 2,
        "description": "HybridAKSClusterStatus defines the observed state of HybridAKSCluster"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AADProfileOrAADProfileResponse",
    "properties": {
      "serverAppSecret": {
        "type": {
          "$ref": "#/11"
        },
        "flags": 4,
        "description": "The server AAD application secret."
      },
      "adminGroupObjectIDs": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "The list of AAD group object IDs that will have admin role of the cluster."
      },
      "clientAppID": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The client AAD application ID."
      },
      "enableAzureRbac": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0,
        "description": "Whether to enable Azure RBAC for Kubernetes authorization."
      },
      "managed": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0,
        "description": "Whether to enable managed AAD."
      },
      "serverAppID": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The server AAD application ID."
      },
      "tenantID": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription."
      }
    }
  },
  {
    "$type": "StringType",
    "sensitive": true
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ObjectType",
    "name": "WindowsProfileOrWindowsProfileResponse",
    "properties": {
      "adminUsername": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "AdminUsername - Specifies the name of the administrator account. <br><br> **restriction:** Cannot end in \".\" <br><br> **Disallowed values:** \"administrator\", \"admin\", \"user\", \"user1\", \"test\", \"user2\", \"test1\", \"user3\", \"admin1\", \"1\", \"123\", \"a\", \"actuser\", \"adm\", \"admin2\", \"aspnet\", \"backup\", \"console\", \"david\", \"guest\", \"john\", \"owner\", \"root\", \"server\", \"sql\", \"support\", \"support_388945a0\", \"sys\", \"test2\", \"test3\", \"user4\", \"user5\". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters"
      },
      "enableCsiProxy": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0,
        "description": "EnableCSIProxy - Whether to enable CSI proxy."
      },
      "licenseType": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "LicenseType - The licenseType to use for Windows VMs. Windows_Server is used to enable Azure Hybrid User Benefits for Windows VMs. Possible values include: 'None', 'Windows_Server'"
      },
      "adminPassword": {
        "type": {
          "$ref": "#/11"
        },
        "flags": 4,
        "description": "AdminPassword - Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\\W_]) <br><br> **Disallowed values:** \"abc@123\", \"P@$$w0rd\", \"P@ssw0rd\", \"P@ssword123\", \"Pa$$word\", \"pass@word1\", \"Password!\", \"Password1\", \"Password22\", \"iloveyou!\""
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Windows_Server"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/15"
      },
      {
        "$ref": "#/16"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "HttpProxyConfigOrHttpProxyConfigResponse",
    "properties": {
      "httpProxy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The HTTP proxy server endpoint to use."
      },
      "httpsProxy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The HTTPS proxy server endpoint to use."
      },
      "noProxy": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 0,
        "description": "The endpoints that should not go through proxy."
      },
      "trustedCa": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Alternative CA cert to use for connecting to proxy servers."
      },
      "username": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Username to use for connecting to proxy server"
      },
      "password": {
        "type": {
          "$ref": "#/11"
        },
        "flags": 4,
        "description": "Password to use for connecting to proxy server"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "LinuxProfileProperties",
    "properties": {
      "adminUsername": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "AdminUsername - The administrator username to use for Linux VMs."
      },
      "ssh": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "SSH - SSH configuration for Linux-based VMs running on Azure."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LinuxProfilePropertiesSsh",
    "properties": {
      "publicKeys": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "PublicKeys - The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LinuxProfilePropertiesSshPublicKeysItem",
    "properties": {
      "keyData": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "KeyData - Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/22"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProvisionedClustersCommonPropertiesFeatures",
    "properties": {
      "arcAgentProfile": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 0,
        "description": "Arc agentry configuration for the provisioned cluster."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ArcAgentProfile",
    "properties": {
      "agentVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Version of the Arc agents to be installed on the provisioned Provisioned cluster resource"
      },
      "agentAutoUpgrade": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 0,
        "description": "Indicates whether the Arc agents on the provisioned clusters be upgraded automatically to the latest version. Defaults to Enabled."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/26"
      },
      {
        "$ref": "#/27"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AddonProfiles",
    "properties": {
      "config": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 0,
        "description": "Config - Key-value pairs for configuring an add-on."
      },
      "enabled": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0,
        "description": "Enabled - Whether the add-on is enabled or not."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AddonProfilesConfig",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProvisionedClustersCommonPropertiesAddonProfiles",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/29"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ControlPlaneProfile",
    "properties": {
      "controlPlaneEndpoint": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "API server endpoint for the control plane"
      },
      "linuxProfile": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Profile for Linux VMs in the container service cluster."
      },
      "count": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1."
      },
      "availabilityZones": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 0,
        "description": "AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones"
      },
      "maxCount": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The maximum number of nodes for auto-scaling"
      },
      "maxPods": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The maximum number of pods that can run on a node."
      },
      "minCount": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The minimum number of nodes for auto-scaling"
      },
      "mode": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 0,
        "description": "Mode - AgentPoolMode represents mode of an agent pool. Possible values include: 'System', 'LB', 'User'. Default is 'User'"
      },
      "nodeLabels": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 0,
        "description": "NodeLabels - Agent pool node labels to be persisted across all nodes in agent pool."
      },
      "nodeTaints": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 0,
        "description": "NodeTaints - Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
      },
      "osType": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'"
      },
      "nodeImageVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The version of node image"
      },
      "vmSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "VmSize - The size of the agent pool VMs."
      },
      "cloudProviderProfile": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "The underlying cloud infra provider properties."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Unique name of the agent pool profile in the context of the subscription and resource group."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ControlPlaneEndpointProfileControlPlaneEndpoint",
    "properties": {
      "hostIP": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Host IP address for API server"
      },
      "port": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Port for the API server"
      }
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "System"
  },
  {
    "$type": "StringLiteralType",
    "value": "LB"
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/36"
      },
      {
        "$ref": "#/37"
      },
      {
        "$ref": "#/38"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AgentPoolProfileNodeLabels",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Linux"
  },
  {
    "$type": "StringLiteralType",
    "value": "Windows"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/42"
      },
      {
        "$ref": "#/43"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CloudProviderProfile",
    "properties": {
      "infraNetworkProfile": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 0,
        "description": "InfraNetworkProfile - List of infra network profiles for the provisioned cluster"
      },
      "infraStorageProfile": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "InfraStorageProfile - List of infra storage profiles for the provisioned cluster"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CloudProviderProfileInfraNetworkProfile",
    "properties": {
      "vnetSubnetIds": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 0,
        "description": "Array of references to azure resource corresponding to the new HybridAKSNetwork object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridContainerService/virtualNetworks/{virtualNetworkName}"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "CloudProviderProfileInfraStorageProfile",
    "properties": {
      "storageSpaceIds": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Reference to azure resource corresponding to the new HybridAKSStorage object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridContainerService/storageSpaces/{storageSpaceName}"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NetworkProfile",
    "properties": {
      "loadBalancerProfile": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 0,
        "description": "LoadBalancerProfile - Profile of the cluster load balancer."
      },
      "loadBalancerSku": {
        "type": {
          "$ref": "#/66"
        },
        "flags": 0,
        "description": "LoadBalancerSku - The load balancer sku for the provisioned cluster. Possible values: 'unstacked-haproxy', 'stacked-kube-vip', 'stacked-metallb', 'unmanaged'. The default is 'unmanaged'."
      },
      "dnsServiceIP": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "DNSServiceIP - An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr."
      },
      "networkPolicy": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 0,
        "description": "NetworkPolicy - Network policy used for building Kubernetes network. Possible values include: 'calico', 'flannel'. Default is 'calico'"
      },
      "podCidr": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used."
      },
      "podCidrs": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 0,
        "description": "The CIDR notation IP ranges from which to assign pod IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking."
      },
      "serviceCidr": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ServiceCidr - A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges."
      },
      "serviceCidrs": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 0,
        "description": "The CIDR notation IP ranges from which to assign service cluster IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "LoadBalancerProfile",
    "properties": {
      "linuxProfile": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Profile for Linux VMs in the container service cluster."
      },
      "count": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1."
      },
      "availabilityZones": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 0,
        "description": "AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones"
      },
      "maxCount": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The maximum number of nodes for auto-scaling"
      },
      "maxPods": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The maximum number of pods that can run on a node."
      },
      "minCount": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The minimum number of nodes for auto-scaling"
      },
      "mode": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 0,
        "description": "Mode - AgentPoolMode represents mode of an agent pool. Possible values include: 'System', 'LB', 'User'. Default is 'User'"
      },
      "nodeLabels": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0,
        "description": "NodeLabels - Agent pool node labels to be persisted across all nodes in agent pool."
      },
      "nodeTaints": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 0,
        "description": "NodeTaints - Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
      },
      "osType": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 0,
        "description": "OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'"
      },
      "nodeImageVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The version of node image"
      },
      "vmSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "VmSize - The size of the agent pool VMs."
      },
      "cloudProviderProfile": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "The underlying cloud infra provider properties."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Unique name of the agent pool profile in the context of the subscription and resource group."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "System"
  },
  {
    "$type": "StringLiteralType",
    "value": "LB"
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/53"
      },
      {
        "$ref": "#/54"
      },
      {
        "$ref": "#/55"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AgentPoolProfileNodeLabels",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Linux"
  },
  {
    "$type": "StringLiteralType",
    "value": "Windows"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/59"
      },
      {
        "$ref": "#/60"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "unstacked-haproxy"
  },
  {
    "$type": "StringLiteralType",
    "value": "stacked-kube-vip"
  },
  {
    "$type": "StringLiteralType",
    "value": "stacked-metallb"
  },
  {
    "$type": "StringLiteralType",
    "value": "unmanaged"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/62"
      },
      {
        "$ref": "#/63"
      },
      {
        "$ref": "#/64"
      },
      {
        "$ref": "#/65"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "calico"
  },
  {
    "$type": "StringLiteralType",
    "value": "flannel"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/67"
      },
      {
        "$ref": "#/68"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NamedAgentPoolProfile",
    "properties": {
      "count": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1."
      },
      "availabilityZones": {
        "type": {
          "$ref": "#/73"
        },
        "flags": 0,
        "description": "AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones"
      },
      "maxCount": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The maximum number of nodes for auto-scaling"
      },
      "maxPods": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The maximum number of pods that can run on a node."
      },
      "minCount": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The minimum number of nodes for auto-scaling"
      },
      "mode": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 0,
        "description": "Mode - AgentPoolMode represents mode of an agent pool. Possible values include: 'System', 'LB', 'User'. Default is 'User'"
      },
      "nodeLabels": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0,
        "description": "NodeLabels - Agent pool node labels to be persisted across all nodes in agent pool."
      },
      "nodeTaints": {
        "type": {
          "$ref": "#/79"
        },
        "flags": 0,
        "description": "NodeTaints - Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
      },
      "osType": {
        "type": {
          "$ref": "#/82"
        },
        "flags": 0,
        "description": "OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'"
      },
      "nodeImageVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The version of node image"
      },
      "vmSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "VmSize - The size of the agent pool VMs."
      },
      "cloudProviderProfile": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "The underlying cloud infra provider properties."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Unique name of the agent pool profile in the context of the subscription and resource group."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "System"
  },
  {
    "$type": "StringLiteralType",
    "value": "LB"
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/74"
      },
      {
        "$ref": "#/75"
      },
      {
        "$ref": "#/76"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AgentPoolProfileNodeLabels",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Linux"
  },
  {
    "$type": "StringLiteralType",
    "value": "Windows"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/80"
      },
      {
        "$ref": "#/81"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/72"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Created"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/84"
      },
      {
        "$ref": "#/85"
      },
      {
        "$ref": "#/86"
      },
      {
        "$ref": "#/87"
      },
      {
        "$ref": "#/88"
      },
      {
        "$ref": "#/89"
      },
      {
        "$ref": "#/90"
      },
      {
        "$ref": "#/91"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ProvisionedClustersCommonPropertiesStatus",
    "properties": {
      "featuresStatus": {
        "type": {
          "$ref": "#/94"
        },
        "flags": 0,
        "description": "Additional features status like Arc Agent Onboarding."
      },
      "addonStatus": {
        "type": {
          "$ref": "#/104"
        },
        "flags": 0,
        "description": "AddonStatus - Status of Addons"
      },
      "errorMessage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ErrorMessage - Error messages during creation of cluster"
      },
      "provisioningStatus": {
        "type": {
          "$ref": "#/105"
        },
        "flags": 0,
        "description": "Contains Provisioning errors"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProvisionedClustersCommonPropertiesStatusFeaturesStatus",
    "properties": {
      "arcAgentStatus": {
        "type": {
          "$ref": "#/95"
        },
        "flags": 0,
        "description": "Defines the observed Arc Agent status that is resourceSynced back to the ARM resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ArcAgentStatus",
    "properties": {
      "deploymentState": {
        "type": {
          "$ref": "#/102"
        },
        "flags": 0,
        "description": "Observed deployment state of the Arc Agents on the target cluster. Possible values include: 'pending', 'provisioning', 'provisioned', 'deleting', 'failed', 'upgrading'"
      },
      "errorMessage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Error messages while onboarding/upgrading/uninstalling the Arc agents"
      },
      "onboardingPublicKey": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Onboarding public key for provisioning the Managed identity for the HybridAKS cluster. Will be used to create the hybridIdentityMetadata proxy resource and will not be persisted."
      },
      "agentVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Version of the Arc agents currently running on the Provisioned cluster resource."
      },
      "coreCount": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "Number of CPU cores present in the Provisioned cluster resource"
      },
      "managedIdentityCertificateExpirationTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ManagedIdentity certificate expiration time (ValidUntil)."
      },
      "lastConnectivityTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Last connected timestamp of the Provisioned cluster resource."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "provisioned"
  },
  {
    "$type": "StringLiteralType",
    "value": "deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "upgrading"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/96"
      },
      {
        "$ref": "#/97"
      },
      {
        "$ref": "#/98"
      },
      {
        "$ref": "#/99"
      },
      {
        "$ref": "#/100"
      },
      {
        "$ref": "#/101"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AddonStatus",
    "properties": {
      "errorMessage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ErrorMessage will be set in the event that there is a terminal problem reconciling the AddOn and will contain a more verbose string suitable for logging and human consumption."
      },
      "phase": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc."
      },
      "ready": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProvisionedClustersCommonPropertiesStatusAddonStatus",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/103"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProvisionedClustersCommonPropertiesStatusProvisioningStatus",
    "properties": {
      "error": {
        "type": {
          "$ref": "#/106"
        },
        "flags": 0
      },
      "operationId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "phase": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc."
      },
      "status": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProvisionedClustersCommonPropertiesStatusProvisioningStatusError",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/112"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/117"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/108"
      },
      {
        "$ref": "#/109"
      },
      {
        "$ref": "#/110"
      },
      {
        "$ref": "#/111"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/113"
      },
      {
        "$ref": "#/114"
      },
      {
        "$ref": "#/115"
      },
      {
        "$ref": "#/116"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ProvisionedClustersExtendedLocationOrProvisionedClustersResponseExtendedLocation",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The extended location type."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The extended location name."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.HybridContainerService/provisionedClusters@2022-09-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/4"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 3,
    "maxLength": 64
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.HybridContainerService/provisionedClusters/hybridIdentityMetadata"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-09-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.HybridContainerService/provisionedClusters/hybridIdentityMetadata",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/121"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/122"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/123"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/125"
        },
        "flags": 1,
        "description": "Resource properties."
      },
      "systemData": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 2,
        "description": "The system data."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HybridIdentityMetadataProperties",
    "properties": {
      "resourceUid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Unique id of the parent provisioned cluster resource."
      },
      "publicKey": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Onboarding public key for provisioning the Managed identity for the HybridAKS cluster."
      },
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "The identity of the provisioned cluster."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "provisioning state of the hybridIdentityMetadata resource."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.HybridContainerService/provisionedClusters/hybridIdentityMetadata@2022-09-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/124"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.HybridContainerService/provisionedClusters/agentPools"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-09-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.HybridContainerService/provisionedClusters/agentPools",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/121"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/127"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/128"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/130"
        },
        "flags": 0
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The resource location"
      },
      "tags": {
        "type": {
          "$ref": "#/150"
        },
        "flags": 0,
        "description": "Resource tags"
      },
      "systemData": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/151"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AgentPoolProperties",
    "properties": {
      "count": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1."
      },
      "availabilityZones": {
        "type": {
          "$ref": "#/131"
        },
        "flags": 0,
        "description": "AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones"
      },
      "maxCount": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The maximum number of nodes for auto-scaling"
      },
      "maxPods": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The maximum number of pods that can run on a node."
      },
      "minCount": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The minimum number of nodes for auto-scaling"
      },
      "mode": {
        "type": {
          "$ref": "#/135"
        },
        "flags": 0,
        "description": "Mode - AgentPoolMode represents mode of an agent pool. Possible values include: 'System', 'LB', 'User'. Default is 'User'"
      },
      "nodeLabels": {
        "type": {
          "$ref": "#/136"
        },
        "flags": 0,
        "description": "NodeLabels - Agent pool node labels to be persisted across all nodes in agent pool."
      },
      "nodeTaints": {
        "type": {
          "$ref": "#/137"
        },
        "flags": 0,
        "description": "NodeTaints - Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
      },
      "osType": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 0,
        "description": "OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'"
      },
      "nodeImageVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The version of node image"
      },
      "vmSize": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "VmSize - The size of the agent pool VMs."
      },
      "cloudProviderProfile": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "The underlying cloud infra provider properties."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/146"
        },
        "flags": 2
      },
      "status": {
        "type": {
          "$ref": "#/147"
        },
        "flags": 0,
        "description": "HybridAKSNodePoolStatus defines the observed state of HybridAKSNodePool"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "System"
  },
  {
    "$type": "StringLiteralType",
    "value": "LB"
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/132"
      },
      {
        "$ref": "#/133"
      },
      {
        "$ref": "#/134"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AgentPoolProfileNodeLabels",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Linux"
  },
  {
    "$type": "StringLiteralType",
    "value": "Windows"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/138"
      },
      {
        "$ref": "#/139"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/141"
      },
      {
        "$ref": "#/142"
      },
      {
        "$ref": "#/143"
      },
      {
        "$ref": "#/144"
      },
      {
        "$ref": "#/145"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AgentPoolProvisioningStatusStatus",
    "properties": {
      "errorMessage": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ErrorMessage - Error messages during creation of cluster"
      },
      "provisioningStatus": {
        "type": {
          "$ref": "#/148"
        },
        "flags": 0,
        "description": "Contains Provisioning errors"
      },
      "readyReplicas": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "Total number of ready machines targeted by this deployment."
      },
      "replicas": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "Total number of non-terminated machines targeted by this deployment"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AgentPoolProvisioningStatusStatusProvisioningStatus",
    "properties": {
      "error": {
        "type": {
          "$ref": "#/149"
        },
        "flags": 0
      },
      "operationId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "phase": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc."
      },
      "status": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AgentPoolProvisioningStatusError",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AgentPoolTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AgentPoolExtendedLocation",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The extended location type."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The extended location name."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.HybridContainerService/provisionedClusters/agentPools@2022-09-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/129"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.HybridContainerService/storageSpaces"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-09-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.HybridContainerService/storageSpaces",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/121"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/153"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/154"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/156"
        },
        "flags": 0,
        "description": "HybridAKSStorageSpec defines the desired state of HybridAKSStorage"
      },
      "systemData": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/171"
        },
        "flags": 0
      },
      "tags": {
        "type": {
          "$ref": "#/172"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StorageSpacesProperties",
    "properties": {
      "hciStorageProfile": {
        "type": {
          "$ref": "#/157"
        },
        "flags": 0
      },
      "vmwareStorageProfile": {
        "type": {
          "$ref": "#/158"
        },
        "flags": 0
      },
      "provisioningState": {
        "type": {
          "$ref": "#/167"
        },
        "flags": 2
      },
      "status": {
        "type": {
          "$ref": "#/168"
        },
        "flags": 0,
        "description": "HybridAKSStorageStatus defines the observed state of HybridAKSStorage"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StorageSpacesPropertiesHciStorageProfile",
    "properties": {
      "mocGroup": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource group in MOC(Microsoft On-premises Cloud)"
      },
      "mocLocation": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Location in MOC(Microsoft On-premises Cloud)"
      },
      "mocStorageContainer": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the storage container in MOC(Microsoft On-premises Cloud)"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StorageSpacesPropertiesVmwareStorageProfile",
    "properties": {
      "datacenter": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the datacenter in VSphere"
      },
      "datastore": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the datastore in VSphere"
      },
      "folder": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the folder in VSphere"
      },
      "resourcePool": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the resource pool in VSphere"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Created"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/159"
      },
      {
        "$ref": "#/160"
      },
      {
        "$ref": "#/161"
      },
      {
        "$ref": "#/162"
      },
      {
        "$ref": "#/163"
      },
      {
        "$ref": "#/164"
      },
      {
        "$ref": "#/165"
      },
      {
        "$ref": "#/166"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "StorageSpacesPropertiesStatus",
    "properties": {
      "provisioningStatus": {
        "type": {
          "$ref": "#/169"
        },
        "flags": 0,
        "description": "Contains Provisioning errors"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StorageSpacesPropertiesStatusProvisioningStatus",
    "properties": {
      "error": {
        "type": {
          "$ref": "#/170"
        },
        "flags": 0
      },
      "operationId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "phase": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc."
      },
      "status": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StorageSpacesPropertiesStatusProvisioningStatusError",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "StorageSpacesExtendedLocation",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The extended location type."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The extended location name."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.HybridContainerService/storageSpaces@2022-09-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/155"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.HybridContainerService/virtualNetworks"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-09-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.HybridContainerService/virtualNetworks",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/121"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/174"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 0,
        "description": "HybridAKSNetworkSpec defines the desired state of HybridAKSNetwork"
      },
      "systemData": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/200"
        },
        "flags": 0
      },
      "tags": {
        "type": {
          "$ref": "#/201"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualNetworksProperties",
    "properties": {
      "infraVnetProfile": {
        "type": {
          "$ref": "#/178"
        },
        "flags": 0
      },
      "vipPool": {
        "type": {
          "$ref": "#/183"
        },
        "flags": 0,
        "description": "Virtual IP Pool for Kubernetes"
      },
      "vmipPool": {
        "type": {
          "$ref": "#/185"
        },
        "flags": 0,
        "description": "IP Pool for Virtual Machines"
      },
      "dhcpServers": {
        "type": {
          "$ref": "#/186"
        },
        "flags": 2,
        "description": "Address of the DHCP servers associated with the network"
      },
      "dnsServers": {
        "type": {
          "$ref": "#/187"
        },
        "flags": 0,
        "description": "Address of the DNS servers associated with the network"
      },
      "gateway": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Address of the Gateway associated with the network"
      },
      "ipAddressPrefix": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "IP Address Prefix of the network"
      },
      "vlanID": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "VLAN Id used by the network"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/196"
        },
        "flags": 2
      },
      "status": {
        "type": {
          "$ref": "#/197"
        },
        "flags": 2,
        "description": "HybridAKSNetworkStatus defines the observed state of HybridAKSNetwork"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualNetworksPropertiesInfraVnetProfile",
    "properties": {
      "hci": {
        "type": {
          "$ref": "#/179"
        },
        "flags": 0,
        "description": "Infra network profile for HCI platform"
      },
      "networkCloud": {
        "type": {
          "$ref": "#/180"
        },
        "flags": 0,
        "description": "Infra network profile for the NetworkCloud platform"
      },
      "vmware": {
        "type": {
          "$ref": "#/181"
        },
        "flags": 0,
        "description": "Infra network profile for VMware platform"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualNetworksPropertiesInfraVnetProfileHci",
    "properties": {
      "mocGroup": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource group in MOC(Microsoft On-premises Cloud)"
      },
      "mocLocation": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Location in MOC(Microsoft On-premises Cloud)"
      },
      "mocVnetName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Virtual Network name in MOC(Microsoft On-premises Cloud)"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualNetworksPropertiesInfraVnetProfileNetworkCloud",
    "properties": {
      "networkId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ARM ID of Network Cloud Network Resource to Associate with this VirtualNetwork"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualNetworksPropertiesInfraVnetProfileVmware",
    "properties": {
      "segmentName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the network segment in VSphere"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualNetworksPropertiesVipPoolItem",
    "properties": {
      "endIP": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Ending IP address for the IP Pool"
      },
      "startIP": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Starting IP address for the IP Pool"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/182"
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualNetworksPropertiesVmipPoolItem",
    "properties": {
      "endIP": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Ending IP address for the IP Pool"
      },
      "startIP": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Starting IP address for the IP Pool"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/184"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Created"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/188"
      },
      {
        "$ref": "#/189"
      },
      {
        "$ref": "#/190"
      },
      {
        "$ref": "#/191"
      },
      {
        "$ref": "#/192"
      },
      {
        "$ref": "#/193"
      },
      {
        "$ref": "#/194"
      },
      {
        "$ref": "#/195"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "VirtualNetworksPropertiesStatus",
    "properties": {
      "provisioningStatus": {
        "type": {
          "$ref": "#/198"
        },
        "flags": 0,
        "description": "Contains Provisioning errors"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualNetworksPropertiesStatusProvisioningStatus",
    "properties": {
      "error": {
        "type": {
          "$ref": "#/199"
        },
        "flags": 0
      },
      "operationId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "phase": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc."
      },
      "status": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualNetworksPropertiesStatusProvisioningStatusError",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "VirtualNetworksExtendedLocation",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The extended location type."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The extended location name."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.HybridContainerService/virtualNetworks@2022-09-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/176"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.HybridContainerService/provisionedClusters/upgradeProfiles"
  },
  {
    "$type": "StringLiteralType",
    "value": "2022-09-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.HybridContainerService/provisionedClusters/upgradeProfiles",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/203"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/204"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/205"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/207"
        },
        "flags": 2,
        "description": "The properties of the upgrade profile."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProvisionedClusterUpgradeProfileProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2
      },
      "controlPlaneProfile": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 1,
        "description": "The list of available upgrade versions for the control plane."
      },
      "agentPoolProfiles": {
        "type": {
          "$ref": "#/214"
        },
        "flags": 1,
        "description": "The list of available upgrade versions for agent pools."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProvisionedClusterPoolUpgradeProfile",
    "properties": {
      "kubernetesVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The Kubernetes version (major.minor.patch)."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The Agent Pool name."
      },
      "osType": {
        "type": {
          "$ref": "#/211"
        },
        "flags": 2,
        "description": "OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'"
      },
      "upgrades": {
        "type": {
          "$ref": "#/213"
        },
        "flags": 0,
        "description": "List of orchestrator types and versions available for upgrade."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Linux"
  },
  {
    "$type": "StringLiteralType",
    "value": "Windows"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/209"
      },
      {
        "$ref": "#/210"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ProvisionedClusterPoolUpgradeProfileProperties",
    "properties": {
      "kubernetesVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The Kubernetes version (major.minor.patch)."
      },
      "isPreview": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 2,
        "description": "Whether the Kubernetes version is currently in preview."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/212"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/208"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.HybridContainerService/provisionedClusters/upgradeProfiles@2022-09-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/206"
    },
    "flags": 1
  },
  {
    "$type": "ResourceFunctionType",
    "name": "upgradeNodeImageVersionForEntireCluster",
    "resourceType": "Microsoft.HybridContainerService/provisionedClusters",
    "apiVersion": "2022-09-01-preview"
  }
]