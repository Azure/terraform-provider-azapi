[
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Security/securityConnectors"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-08-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Security/securityConnectors",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "systemData": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      },
      "properties": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Security connector data"
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Location where the resource is stored"
      },
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Kind of the resource"
      },
      "etag": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Entity tag is used for comparing two or more entities from the same requested resource."
      },
      "tags": {
        "type": {
          "$ref": "#/165"
        },
        "flags": 0,
        "description": "A list of key value pairs that describe the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/5"
      },
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/12"
      },
      {
        "$ref": "#/13"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SecurityConnectorProperties",
    "properties": {
      "hierarchyIdentifier": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The multi cloud resource identifier (account id in case of AWS connector, project number in case of GCP connector)."
      },
      "hierarchyIdentifierTrialEndDate": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The date on which the trial period will end, if applicable. Trial period exists for 30 days after upgrading to payed offerings."
      },
      "environmentName": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 0,
        "description": "The multi cloud resource's cloud name."
      },
      "offerings": {
        "type": {
          "$ref": "#/131"
        },
        "flags": 0,
        "description": "A collection of offerings for the security connector."
      },
      "environmentData": {
        "type": {
          "$ref": "#/132"
        },
        "flags": 0,
        "description": "The security connector environment data."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Azure"
  },
  {
    "$type": "StringLiteralType",
    "value": "AWS"
  },
  {
    "$type": "StringLiteralType",
    "value": "GCP"
  },
  {
    "$type": "StringLiteralType",
    "value": "Github"
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureDevOps"
  },
  {
    "$type": "StringLiteralType",
    "value": "GitLab"
  },
  {
    "$type": "StringLiteralType",
    "value": "DockerHub"
  },
  {
    "$type": "StringLiteralType",
    "value": "JFrog"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/16"
      },
      {
        "$ref": "#/17"
      },
      {
        "$ref": "#/18"
      },
      {
        "$ref": "#/19"
      },
      {
        "$ref": "#/20"
      },
      {
        "$ref": "#/21"
      },
      {
        "$ref": "#/22"
      },
      {
        "$ref": "#/23"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "CloudOffering",
    "discriminator": "offeringType",
    "baseProperties": {
      "description": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The offering description."
      }
    },
    "elements": {
      "CspmMonitorAws": {
        "$ref": "#/26"
      },
      "CspmMonitorAzureDevOps": {
        "$ref": "#/29"
      },
      "CspmMonitorDockerHub": {
        "$ref": "#/31"
      },
      "CspmMonitorGcp": {
        "$ref": "#/33"
      },
      "CspmMonitorGitLab": {
        "$ref": "#/36"
      },
      "CspmMonitorGithub": {
        "$ref": "#/38"
      },
      "CspmMonitorJFrog": {
        "$ref": "#/40"
      },
      "DefenderCspmAws": {
        "$ref": "#/42"
      },
      "DefenderCspmDockerHub": {
        "$ref": "#/57"
      },
      "DefenderCspmGcp": {
        "$ref": "#/59"
      },
      "DefenderCspmJFrog": {
        "$ref": "#/66"
      },
      "DefenderForContainersAws": {
        "$ref": "#/69"
      },
      "DefenderForContainersDockerHub": {
        "$ref": "#/79"
      },
      "DefenderForContainersGcp": {
        "$ref": "#/81"
      },
      "DefenderForContainersJFrog": {
        "$ref": "#/88"
      },
      "DefenderForDatabasesAws": {
        "$ref": "#/90"
      },
      "DefenderForDatabasesGcp": {
        "$ref": "#/96"
      },
      "DefenderForServersAws": {
        "$ref": "#/100"
      },
      "DefenderForServersGcp": {
        "$ref": "#/116"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CspmMonitorAwsOffering",
    "properties": {
      "nativeCloudConnection": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "The native cloud connection configuration"
      },
      "offeringType": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CspmMonitorAwsOfferingNativeCloudConnection",
    "properties": {
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for this feature"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CspmMonitorAws"
  },
  {
    "$type": "ObjectType",
    "name": "CspmMonitorAzureDevOpsOffering",
    "properties": {
      "offeringType": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CspmMonitorAzureDevOps"
  },
  {
    "$type": "ObjectType",
    "name": "CspmMonitorDockerHubOffering",
    "properties": {
      "offeringType": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CspmMonitorDockerHub"
  },
  {
    "$type": "ObjectType",
    "name": "CspmMonitorGcpOffering",
    "properties": {
      "nativeCloudConnection": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "The native cloud connection configuration"
      },
      "offeringType": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CspmMonitorGcpOfferingNativeCloudConnection",
    "properties": {
      "workloadIdentityProviderId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The GCP workload identity provider id for the offering"
      },
      "serviceAccountEmailAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The service account email address in GCP for this offering"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CspmMonitorGcp"
  },
  {
    "$type": "ObjectType",
    "name": "CspmMonitorGitLabOffering",
    "properties": {
      "offeringType": {
        "type": {
          "$ref": "#/37"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CspmMonitorGitLab"
  },
  {
    "$type": "ObjectType",
    "name": "CspmMonitorGithubOffering",
    "properties": {
      "offeringType": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CspmMonitorGithub"
  },
  {
    "$type": "ObjectType",
    "name": "CspmMonitorJFrogOffering",
    "properties": {
      "offeringType": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "CspmMonitorJFrog"
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmAwsOffering",
    "properties": {
      "vmScanners": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "The Microsoft Defender for CSPM offering VM scanning configuration"
      },
      "dataSensitivityDiscovery": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "The Microsoft Defender Data Sensitivity discovery configuration"
      },
      "databasesDspm": {
        "type": {
          "$ref": "#/50"
        },
        "flags": 0,
        "description": "The databases DSPM configuration"
      },
      "ciem": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 0,
        "description": "Defenders CSPM Permissions Management offering configurations"
      },
      "mdcContainersImageAssessment": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 0,
        "description": "The Microsoft Defender container image assessment configuration"
      },
      "mdcContainersAgentlessDiscoveryK8s": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "The Microsoft Defender container agentless discovery K8s configuration"
      },
      "offeringType": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmAwsOfferingVmScanners",
    "properties": {
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for this feature"
      },
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is VM scanning enabled"
      },
      "configuration": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "Configuration for VM scanning"
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ObjectType",
    "name": "VmScannersBaseConfiguration",
    "properties": {
      "scanningMode": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 0,
        "description": "The scanning mode for the VM scan."
      },
      "exclusionTags": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Tags that indicates that a resource should not be scanned"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/46"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "VmScannersBaseConfigurationExclusionTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmAwsOfferingDataSensitivityDiscovery",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Microsoft Defender Data Sensitivity discovery enabled"
      },
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for this feature"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmAwsOfferingDatabasesDspm",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is databases DSPM protection enabled"
      },
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for this feature"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmAwsOfferingCiem",
    "properties": {
      "ciemDiscovery": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 0,
        "description": "Defender CSPM Permissions Management discovery configuration"
      },
      "ciemOidc": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 0,
        "description": "AWS Defender CSPM Permissions Management OIDC (open id connect) connection configurations"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmAwsOfferingCiemDiscovery",
    "properties": {
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for Permissions Management discovery"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmAwsOfferingCiemOidc",
    "properties": {
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for Permissions Management used for oidc connection"
      },
      "azureActiveDirectoryAppName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "the azure active directory app name used of authenticating against AWS"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmAwsOfferingMdcContainersImageAssessment",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Microsoft Defender container image assessment enabled"
      },
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for this feature"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmAwsOfferingMdcContainersAgentlessDiscoveryK8S",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Microsoft Defender container agentless discovery K8s enabled"
      },
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for this feature"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DefenderCspmAws"
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmDockerHubOffering",
    "properties": {
      "offeringType": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DefenderCspmDockerHub"
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmGcpOffering",
    "properties": {
      "ciemDiscovery": {
        "type": {
          "$ref": "#/60"
        },
        "flags": 0,
        "description": "GCP Defenders CSPM Permissions Management OIDC (Open ID connect) connection configurations"
      },
      "vmScanners": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 0,
        "description": "The Microsoft Defender for CSPM VM scanning configuration"
      },
      "dataSensitivityDiscovery": {
        "type": {
          "$ref": "#/62"
        },
        "flags": 0,
        "description": "The Microsoft Defender Data Sensitivity discovery configuration"
      },
      "mdcContainersImageAssessment": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 0,
        "description": "The Microsoft Defender Container image assessment configuration"
      },
      "mdcContainersAgentlessDiscoveryK8s": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 0,
        "description": "The Microsoft Defender Container agentless discovery configuration"
      },
      "offeringType": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmGcpOfferingCiemDiscovery",
    "properties": {
      "workloadIdentityProviderId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The GCP workload identity provider id for Permissions Management offering"
      },
      "serviceAccountEmailAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The service account email address in GCP for Permissions Management offering"
      },
      "azureActiveDirectoryAppName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "the azure active directory app name used of authenticating against GCP workload identity federation"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmGcpOfferingVmScanners",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is VM scanning enabled"
      },
      "configuration": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "Configuration for VM scanning"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmGcpOfferingDataSensitivityDiscovery",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Microsoft Defender Data Sensitivity discovery enabled"
      },
      "workloadIdentityProviderId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The workload identity provider id in GCP for this feature"
      },
      "serviceAccountEmailAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The service account email address in GCP for this feature"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmGcpOfferingMdcContainersImageAssessment",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Microsoft Defender container image assessment enabled"
      },
      "workloadIdentityProviderId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The workload identity provider id in GCP for this feature"
      },
      "serviceAccountEmailAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The service account email address in GCP for this feature"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmGcpOfferingMdcContainersAgentlessDiscoveryK8S",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Microsoft Defender container agentless discovery enabled"
      },
      "workloadIdentityProviderId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The workload identity provider id in GCP for this feature"
      },
      "serviceAccountEmailAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The service account email address in GCP for this feature"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DefenderCspmGcp"
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmJFrogOffering",
    "properties": {
      "mdcContainersImageAssessment": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 0,
        "description": "The Microsoft Defender Container image assessment configuration"
      },
      "offeringType": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderCspmJFrogOfferingMdcContainersImageAssessment",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Microsoft Defender container image assessment enabled"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DefenderCspmJFrog"
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForContainersAwsOffering",
    "properties": {
      "kubernetesService": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 0,
        "description": "The kubernetes service connection configuration"
      },
      "kubernetesDataCollection": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 0,
        "description": "The kubernetes data collection connection configuration"
      },
      "cloudWatchToKinesis": {
        "type": {
          "$ref": "#/72"
        },
        "flags": 0,
        "description": "The cloudwatch to kinesis connection configuration"
      },
      "kinesisToS3": {
        "type": {
          "$ref": "#/73"
        },
        "flags": 0,
        "description": "The kinesis to s3 connection configuration"
      },
      "enableAuditLogsAutoProvisioning": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is audit logs data collection enabled"
      },
      "enableDefenderAgentAutoProvisioning": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Microsoft Defender for Cloud Kubernetes agent auto provisioning enabled"
      },
      "enablePolicyAgentAutoProvisioning": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Policy Kubernetes agent auto provisioning enabled"
      },
      "kubeAuditRetentionTime": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 0,
        "description": "The retention time in days of kube audit logs set on the CloudWatch log group"
      },
      "dataCollectionExternalId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The externalId used by the data reader to prevent the confused deputy attack"
      },
      "mdcContainersImageAssessment": {
        "type": {
          "$ref": "#/75"
        },
        "flags": 0,
        "description": "The Microsoft Defender container image assessment configuration"
      },
      "mdcContainersAgentlessDiscoveryK8s": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 0,
        "description": "The Microsoft Defender container agentless discovery K8s configuration"
      },
      "vmScanners": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 0,
        "description": "The Microsoft Defender for Container K8s VM host scanning configuration"
      },
      "offeringType": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForContainersAwsOfferingKubernetesService",
    "properties": {
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for this feature used for provisioning resources"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForContainersAwsOfferingKubernetesDataCollection",
    "properties": {
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for this feature used for reading data"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForContainersAwsOfferingCloudWatchToKinesis",
    "properties": {
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS used by CloudWatch to transfer data into Kinesis"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForContainersAwsOfferingKinesisToS3",
    "properties": {
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS used by Kinesis to transfer data into S3"
      }
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForContainersAwsOfferingMdcContainersImageAssessment",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Microsoft Defender container image assessment enabled"
      },
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for this feature"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForContainersAwsOfferingMdcContainersAgentlessDiscoveryK8S",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Microsoft Defender container agentless discovery K8s enabled"
      },
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for this feature"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForContainersAwsOfferingVmScanners",
    "properties": {
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for this feature"
      },
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is VM scanning enabled"
      },
      "configuration": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "Configuration for VM scanning"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DefenderForContainersAws"
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForContainersDockerHubOffering",
    "properties": {
      "offeringType": {
        "type": {
          "$ref": "#/80"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DefenderForContainersDockerHub"
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForContainersGcpOffering",
    "properties": {
      "nativeCloudConnection": {
        "type": {
          "$ref": "#/82"
        },
        "flags": 0,
        "description": "The native cloud connection configuration"
      },
      "dataPipelineNativeCloudConnection": {
        "type": {
          "$ref": "#/83"
        },
        "flags": 0,
        "description": "The native cloud connection configuration"
      },
      "enableAuditLogsAutoProvisioning": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is audit logs data collection enabled"
      },
      "enableDefenderAgentAutoProvisioning": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Microsoft Defender for Cloud Kubernetes agent auto provisioning enabled"
      },
      "enablePolicyAgentAutoProvisioning": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Policy Kubernetes agent auto provisioning enabled"
      },
      "mdcContainersImageAssessment": {
        "type": {
          "$ref": "#/84"
        },
        "flags": 0,
        "description": "The Microsoft Defender Container image assessment configuration"
      },
      "mdcContainersAgentlessDiscoveryK8s": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 0,
        "description": "The Microsoft Defender Container agentless discovery configuration"
      },
      "vmScanners": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 0,
        "description": "The Microsoft Defender for Container K8s VM host scanning configuration"
      },
      "offeringType": {
        "type": {
          "$ref": "#/87"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForContainersGcpOfferingNativeCloudConnection",
    "properties": {
      "serviceAccountEmailAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The service account email address in GCP for this offering"
      },
      "workloadIdentityProviderId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The GCP workload identity provider id for this offering"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForContainersGcpOfferingDataPipelineNativeCloudConnection",
    "properties": {
      "serviceAccountEmailAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The data collection service account email address in GCP for this offering"
      },
      "workloadIdentityProviderId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The data collection GCP workload identity provider id for this offering"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForContainersGcpOfferingMdcContainersImageAssessment",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Microsoft Defender container image assessment enabled"
      },
      "workloadIdentityProviderId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The workload identity provider id in GCP for this feature"
      },
      "serviceAccountEmailAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The service account email address in GCP for this feature"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForContainersGcpOfferingMdcContainersAgentlessDiscoveryK8S",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Microsoft Defender container agentless discovery enabled"
      },
      "workloadIdentityProviderId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The workload identity provider id in GCP for this feature"
      },
      "serviceAccountEmailAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The service account email address in GCP for this feature"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForContainersGcpOfferingVmScanners",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is VM scanning enabled"
      },
      "configuration": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "Configuration for VM scanning"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DefenderForContainersGcp"
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForContainersJFrogOffering",
    "properties": {
      "offeringType": {
        "type": {
          "$ref": "#/89"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DefenderForContainersJFrog"
  },
  {
    "$type": "ObjectType",
    "name": "DefenderFoDatabasesAwsOffering",
    "properties": {
      "arcAutoProvisioning": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 0,
        "description": "The ARC autoprovisioning configuration"
      },
      "rds": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 0,
        "description": "The RDS configuration"
      },
      "databasesDspm": {
        "type": {
          "$ref": "#/94"
        },
        "flags": 0,
        "description": "The databases data security posture management (DSPM) configuration"
      },
      "offeringType": {
        "type": {
          "$ref": "#/95"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderFoDatabasesAwsOfferingArcAutoProvisioning",
    "properties": {
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for this feature"
      },
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is arc auto provisioning enabled"
      },
      "configuration": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 0,
        "description": "Configuration for servers Arc auto provisioning for a given environment"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ArcAutoProvisioningConfiguration",
    "properties": {
      "proxy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Optional HTTP proxy endpoint to use for the Arc agent"
      },
      "privateLinkScope": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Optional Arc private link scope resource id to link the Arc agent"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderFoDatabasesAwsOfferingRds",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is RDS protection enabled"
      },
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for this feature"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderFoDatabasesAwsOfferingDatabasesDspm",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is databases data security posture management (DSPM) protection enabled"
      },
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for this feature"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DefenderForDatabasesAws"
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForDatabasesGcpOffering",
    "properties": {
      "arcAutoProvisioning": {
        "type": {
          "$ref": "#/97"
        },
        "flags": 0,
        "description": "The ARC autoprovisioning configuration"
      },
      "defenderForDatabasesArcAutoProvisioning": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 0,
        "description": "The native cloud connection configuration"
      },
      "offeringType": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForDatabasesGcpOfferingArcAutoProvisioning",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is arc auto provisioning enabled"
      },
      "configuration": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 0,
        "description": "Configuration for servers Arc auto provisioning for a given environment"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForDatabasesGcpOfferingDefenderForDatabasesArcAutoProvisioning",
    "properties": {
      "serviceAccountEmailAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The service account email address in GCP for this offering"
      },
      "workloadIdentityProviderId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The GCP workload identity provider id for this offering"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DefenderForDatabasesGcp"
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForServersAwsOffering",
    "properties": {
      "defenderForServers": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 0,
        "description": "The Defender for servers connection configuration"
      },
      "arcAutoProvisioning": {
        "type": {
          "$ref": "#/102"
        },
        "flags": 0,
        "description": "The ARC autoprovisioning configuration"
      },
      "vaAutoProvisioning": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 0,
        "description": "The Vulnerability Assessment autoprovisioning configuration"
      },
      "mdeAutoProvisioning": {
        "type": {
          "$ref": "#/108"
        },
        "flags": 0,
        "description": "The Microsoft Defender for Endpoint autoprovisioning configuration"
      },
      "subPlan": {
        "type": {
          "$ref": "#/110"
        },
        "flags": 0,
        "description": "configuration for the servers offering subPlan"
      },
      "vmScanners": {
        "type": {
          "$ref": "#/114"
        },
        "flags": 0,
        "description": "The Microsoft Defender for Server VM scanning configuration"
      },
      "offeringType": {
        "type": {
          "$ref": "#/115"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForServersAwsOfferingDefenderForServers",
    "properties": {
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for this feature"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForServersAwsOfferingArcAutoProvisioning",
    "properties": {
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for this feature"
      },
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is arc auto provisioning enabled"
      },
      "configuration": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 0,
        "description": "Configuration for servers Arc auto provisioning for a given environment"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForServersAwsOfferingVaAutoProvisioning",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Vulnerability Assessment auto provisioning enabled"
      },
      "configuration": {
        "type": {
          "$ref": "#/104"
        },
        "flags": 0,
        "description": "configuration for Vulnerability Assessment autoprovisioning"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForServersAwsOfferingVaAutoProvisioningConfiguration",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 0,
        "description": "The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Qualys"
  },
  {
    "$type": "StringLiteralType",
    "value": "TVM"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/105"
      },
      {
        "$ref": "#/106"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForServersAwsOfferingMdeAutoProvisioning",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Microsoft Defender for Endpoint auto provisioning enabled"
      },
      "configuration": {
        "type": {
          "$ref": "#/109"
        },
        "flags": 0,
        "description": "configuration for Microsoft Defender for Endpoint autoprovisioning"
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForServersAwsOfferingSubPlan",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/113"
        },
        "flags": 0,
        "description": "The available sub plans"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "P1"
  },
  {
    "$type": "StringLiteralType",
    "value": "P2"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/111"
      },
      {
        "$ref": "#/112"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForServersAwsOfferingVmScanners",
    "properties": {
      "cloudRoleArn": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The cloud role ARN in AWS for this feature"
      },
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is VM scanning enabled"
      },
      "configuration": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "Configuration for VM scanning"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DefenderForServersAws"
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForServersGcpOffering",
    "properties": {
      "defenderForServers": {
        "type": {
          "$ref": "#/117"
        },
        "flags": 0,
        "description": "The Defender for servers connection configuration"
      },
      "arcAutoProvisioning": {
        "type": {
          "$ref": "#/118"
        },
        "flags": 0,
        "description": "The ARC autoprovisioning configuration"
      },
      "vaAutoProvisioning": {
        "type": {
          "$ref": "#/119"
        },
        "flags": 0,
        "description": "The Vulnerability Assessment autoprovisioning configuration"
      },
      "mdeAutoProvisioning": {
        "type": {
          "$ref": "#/124"
        },
        "flags": 0,
        "description": "The Microsoft Defender for Endpoint autoprovisioning configuration"
      },
      "subPlan": {
        "type": {
          "$ref": "#/125"
        },
        "flags": 0,
        "description": "configuration for the servers offering subPlan"
      },
      "vmScanners": {
        "type": {
          "$ref": "#/129"
        },
        "flags": 0,
        "description": "The Microsoft Defender for Server VM scanning configuration"
      },
      "offeringType": {
        "type": {
          "$ref": "#/130"
        },
        "flags": 1,
        "description": "The type of the security offering."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForServersGcpOfferingDefenderForServers",
    "properties": {
      "workloadIdentityProviderId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The workload identity provider id in GCP for this feature"
      },
      "serviceAccountEmailAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The service account email address in GCP for this feature"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForServersGcpOfferingArcAutoProvisioning",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is arc auto provisioning enabled"
      },
      "configuration": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 0,
        "description": "Configuration for servers Arc auto provisioning for a given environment"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForServersGcpOfferingVaAutoProvisioning",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Vulnerability Assessment auto provisioning enabled"
      },
      "configuration": {
        "type": {
          "$ref": "#/120"
        },
        "flags": 0,
        "description": "configuration for Vulnerability Assessment autoprovisioning"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForServersGcpOfferingVaAutoProvisioningConfiguration",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/123"
        },
        "flags": 0,
        "description": "The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Qualys"
  },
  {
    "$type": "StringLiteralType",
    "value": "TVM"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/121"
      },
      {
        "$ref": "#/122"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForServersGcpOfferingMdeAutoProvisioning",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is Microsoft Defender for Endpoint auto provisioning enabled"
      },
      "configuration": {
        "type": {
          "$ref": "#/109"
        },
        "flags": 0,
        "description": "configuration for Microsoft Defender for Endpoint autoprovisioning"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForServersGcpOfferingSubPlan",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/128"
        },
        "flags": 0,
        "description": "The available sub plans"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "P1"
  },
  {
    "$type": "StringLiteralType",
    "value": "P2"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/126"
      },
      {
        "$ref": "#/127"
      },
      {
        "$ref": "#/0"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DefenderForServersGcpOfferingVmScanners",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Is VM scanning enabled"
      },
      "configuration": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "Configuration for VM scanning"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "DefenderForServersGcp"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/25"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "EnvironmentData",
    "discriminator": "environmentType",
    "baseProperties": {},
    "elements": {
      "AwsAccount": {
        "$ref": "#/133"
      },
      "AzureDevOpsScope": {
        "$ref": "#/142"
      },
      "DockerHubOrganization": {
        "$ref": "#/144"
      },
      "GcpProject": {
        "$ref": "#/149"
      },
      "GithubScope": {
        "$ref": "#/158"
      },
      "GitlabScope": {
        "$ref": "#/160"
      },
      "JFrogArtifactory": {
        "$ref": "#/162"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AwsEnvironmentData",
    "properties": {
      "organizationalData": {
        "type": {
          "$ref": "#/134"
        },
        "flags": 0,
        "description": "The AWS account's organizational data"
      },
      "regions": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 0,
        "description": "list of regions to scan"
      },
      "accountName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The AWS account name"
      },
      "scanInterval": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 0,
        "description": "Scan interval in hours (value should be between 1-hour to 24-hours)"
      },
      "environmentType": {
        "type": {
          "$ref": "#/141"
        },
        "flags": 1,
        "description": "The type of the environment data."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "AwsOrganizationalData",
    "discriminator": "organizationMembershipType",
    "baseProperties": {},
    "elements": {
      "Member": {
        "$ref": "#/135"
      },
      "Organization": {
        "$ref": "#/137"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AwsOrganizationalDataMember",
    "properties": {
      "parentHierarchyId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "If the multi cloud account is not of membership type organization, this will be the ID of the account's parent"
      },
      "organizationMembershipType": {
        "type": {
          "$ref": "#/136"
        },
        "flags": 1,
        "description": "The multi cloud account's membership type in the organization"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Member"
  },
  {
    "$type": "ObjectType",
    "name": "AwsOrganizationalDataMaster",
    "properties": {
      "stacksetName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset"
      },
      "excludedAccountIds": {
        "type": {
          "$ref": "#/138"
        },
        "flags": 0,
        "description": "If the multi cloud account is of membership type organization, list of accounts excluded from offering"
      },
      "organizationMembershipType": {
        "type": {
          "$ref": "#/139"
        },
        "flags": 1,
        "description": "The multi cloud account's membership type in the organization"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Organization"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AwsAccount"
  },
  {
    "$type": "ObjectType",
    "name": "AzureDevOpsScopeEnvironmentData",
    "properties": {
      "environmentType": {
        "type": {
          "$ref": "#/143"
        },
        "flags": 1,
        "description": "The type of the environment data."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AzureDevOpsScope"
  },
  {
    "$type": "ObjectType",
    "name": "DockerHubEnvironmentData",
    "properties": {
      "authentication": {
        "type": {
          "$ref": "#/145"
        },
        "flags": 0,
        "description": "The Docker Hub organization authentication details"
      },
      "scanInterval": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 0,
        "description": "Scan interval in hours (value should be between 1-hour to 24-hours)"
      },
      "environmentType": {
        "type": {
          "$ref": "#/148"
        },
        "flags": 1,
        "description": "The type of the environment data."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Authentication",
    "discriminator": "authenticationType",
    "baseProperties": {},
    "elements": {
      "AccessToken": {
        "$ref": "#/146"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AccessTokenAuthentication",
    "properties": {
      "username": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The user name that will be used while authenticating with the onboarded environment"
      },
      "accessToken": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The access token that will be used while authenticating with the onboarded environment"
      },
      "authenticationType": {
        "type": {
          "$ref": "#/147"
        },
        "flags": 1,
        "description": "The authentication type"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "AccessToken"
  },
  {
    "$type": "StringLiteralType",
    "value": "DockerHubOrganization"
  },
  {
    "$type": "ObjectType",
    "name": "GcpProjectEnvironmentData",
    "properties": {
      "organizationalData": {
        "type": {
          "$ref": "#/150"
        },
        "flags": 0,
        "description": "The Gcp project's organizational data"
      },
      "projectDetails": {
        "type": {
          "$ref": "#/156"
        },
        "flags": 0,
        "description": "The Gcp project's details"
      },
      "scanInterval": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 0,
        "description": "Scan interval in hours (value should be between 1-hour to 24-hours)"
      },
      "environmentType": {
        "type": {
          "$ref": "#/157"
        },
        "flags": 1,
        "description": "The type of the environment data."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "GcpOrganizationalData",
    "discriminator": "organizationMembershipType",
    "baseProperties": {},
    "elements": {
      "Member": {
        "$ref": "#/151"
      },
      "Organization": {
        "$ref": "#/153"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GcpOrganizationalDataMember",
    "properties": {
      "parentHierarchyId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "If the multi cloud account is not of membership type organization, this will be the ID of the project's parent"
      },
      "managementProjectNumber": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The GCP management project number from organizational onboarding"
      },
      "organizationMembershipType": {
        "type": {
          "$ref": "#/152"
        },
        "flags": 1,
        "description": "The multi cloud account's membership type in the organization"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Member"
  },
  {
    "$type": "ObjectType",
    "name": "GcpOrganizationalDataOrganization",
    "properties": {
      "excludedProjectNumbers": {
        "type": {
          "$ref": "#/154"
        },
        "flags": 0,
        "description": "If the multi cloud account is of membership type organization, list of accounts excluded from offering"
      },
      "serviceAccountEmailAddress": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The service account email address which represents the organization level permissions container."
      },
      "workloadIdentityProviderId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The GCP workload identity provider id which represents the permissions required to auto provision security connectors"
      },
      "organizationName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "GCP organization name"
      },
      "organizationMembershipType": {
        "type": {
          "$ref": "#/155"
        },
        "flags": 1,
        "description": "The multi cloud account's membership type in the organization"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Organization"
  },
  {
    "$type": "ObjectType",
    "name": "GcpProjectDetails",
    "properties": {
      "projectNumber": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The unique GCP Project number"
      },
      "projectId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The GCP Project id"
      },
      "workloadIdentityPoolId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "The GCP workload identity federation pool id"
      },
      "projectName": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "GCP project name"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "GcpProject"
  },
  {
    "$type": "ObjectType",
    "name": "GithubScopeEnvironmentData",
    "properties": {
      "environmentType": {
        "type": {
          "$ref": "#/159"
        },
        "flags": 1,
        "description": "The type of the environment data."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "GithubScope"
  },
  {
    "$type": "ObjectType",
    "name": "GitlabScopeEnvironmentData",
    "properties": {
      "environmentType": {
        "type": {
          "$ref": "#/161"
        },
        "flags": 1,
        "description": "The type of the environment data."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "GitlabScope"
  },
  {
    "$type": "ObjectType",
    "name": "JFrogEnvironmentData",
    "properties": {
      "scanInterval": {
        "type": {
          "$ref": "#/163"
        },
        "flags": 0,
        "description": "Scan interval in hours (value should be between 1-hour to 24-hours)"
      },
      "environmentType": {
        "type": {
          "$ref": "#/164"
        },
        "flags": 1,
        "description": "The type of the environment data."
      }
    }
  },
  {
    "$type": "IntegerType",
    "minValue": 1,
    "maxValue": 24
  },
  {
    "$type": "StringLiteralType",
    "value": "JFrogArtifactory"
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Security/securityConnectors@2024-08-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/3"
    },
    "flags": 0
  }
]