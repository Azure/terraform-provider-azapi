[
  {
    "$type": "StringType",
    "minLength": 3,
    "maxLength": 63,
    "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DeviceRegistry/assets"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-11-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DeviceRegistry/assets",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Asset resource properties."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 1,
        "description": "The extended location."
      },
      "tags": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssetProperties",
    "properties": {
      "uuid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Globally unique, immutable, non-reusable id."
      },
      "assetType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource path to asset type (model) definition."
      },
      "enabled": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Enabled/Disabled status of the asset."
      },
      "externalAssetId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Asset id provided by the customer."
      },
      "displayName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Human-readable display name."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Human-readable description of the asset."
      },
      "assetEndpointProfileUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "A reference to the asset endpoint profile (connection information) used by brokers to connect to an endpoint that provides data points for this asset. Must have the format <ModuleCR.metadata.namespace>/<ModuleCR.metadata.name>."
      },
      "version": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 2,
        "description": "An integer that is incremented each time the resource is modified."
      },
      "manufacturer": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Asset manufacturer name."
      },
      "manufacturerUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Asset manufacturer URI."
      },
      "model": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Asset model name."
      },
      "productCode": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Asset product code."
      },
      "hardwareRevision": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Revision number of the hardware."
      },
      "softwareRevision": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Revision number of the software."
      },
      "documentationUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Reference to the documentation."
      },
      "serialNumber": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Asset serial number."
      },
      "attributes": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 0,
        "description": "A set of key-value pairs that contain custom attributes set by the customer."
      },
      "defaultDataPointsConfiguration": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Protocol-specific default configuration for all data points. Each data point can have its own configuration that overrides the default settings here. This assumes that each asset instance has one protocol."
      },
      "defaultEventsConfiguration": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Protocol-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here. This assumes that each asset instance has one protocol."
      },
      "dataPoints": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Array of data points that are part of the asset. Each data point can reference an asset type capability and have per-data point configuration. See below for more details for the definition of the dataPoints element."
      },
      "events": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 0,
        "description": "Array of events that are part of the asset. Each event can reference an asset type capability and have per-event configuration. See below for more details about the definition of the events element."
      },
      "status": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 2,
        "description": "Provisioning state of the resource."
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ObjectType",
    "name": "AssetPropertiesAttributes",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/8"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssetPropertiesDataPointsItem",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the data point."
      },
      "dataSource": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The address of the source of the data in the asset (e.g. URL) so that a client can access the data source on the asset."
      },
      "capabilityId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The path to the type definition of the capability (e.g. DTMI, OPC UA information model node id, etc.), for example dtmi:com:example:Robot:_contents:__prop1;1."
      },
      "observabilityMode": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 0,
        "description": "An indication of how the data point should be mapped to OpenTelemetry."
      },
      "dataPointConfiguration": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Protocol-specific configuration for the data point. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "none"
  },
  {
    "$type": "StringLiteralType",
    "value": "counter"
  },
  {
    "$type": "StringLiteralType",
    "value": "gauge"
  },
  {
    "$type": "StringLiteralType",
    "value": "histogram"
  },
  {
    "$type": "StringLiteralType",
    "value": "log"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/12"
      },
      {
        "$ref": "#/13"
      },
      {
        "$ref": "#/14"
      },
      {
        "$ref": "#/15"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/10"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssetPropertiesEventsItem",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The name of the event."
      },
      "eventNotifier": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The address of the notifier of the event in the asset (e.g. URL) so that a client can access the event on the asset."
      },
      "capabilityId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The path to the type definition of the capability (e.g. DTMI, OPC UA information model node id, etc.), for example dtmi:com:example:Robot:_contents:__prop1;1."
      },
      "observabilityMode": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "An indication of how the event should be mapped to OpenTelemetry."
      },
      "eventConfiguration": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Protocol-specific configuration for the event. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "none"
  },
  {
    "$type": "StringLiteralType",
    "value": "log"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/19"
      },
      {
        "$ref": "#/20"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/18"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssetPropertiesStatus",
    "properties": {
      "errors": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 0,
        "description": "Array object to transfer and persist errors that originate from the Edge."
      },
      "version": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "A read only incremental counter indicating the number of times the configuration has been modified from the perspective of the current actual (Edge) state of the Asset. Edge would be the only writer of this value and would sync back up to the cloud. In steady state, this should equal version."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssetPropertiesStatusErrorsItem",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "Error code for classification of errors (ex: 400, 404, 500, etc.)."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Human readable helpful error message to provide additional context for error (ex: “capability Id 'foo' does not exist”)."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/24"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/26"
      },
      {
        "$ref": "#/27"
      },
      {
        "$ref": "#/28"
      },
      {
        "$ref": "#/29"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AssetExtendedLocation",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The extended location type."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The extended location name."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/34"
      },
      {
        "$ref": "#/35"
      },
      {
        "$ref": "#/36"
      },
      {
        "$ref": "#/37"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/39"
      },
      {
        "$ref": "#/40"
      },
      {
        "$ref": "#/41"
      },
      {
        "$ref": "#/42"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DeviceRegistry/assets@2023-11-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/4"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.DeviceRegistry/assetEndpointProfiles"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-11-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.DeviceRegistry/assetEndpointProfiles",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Asset Endpoint Profile resource properties."
      },
      "extendedLocation": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 1,
        "description": "The extended location."
      },
      "tags": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssetEndpointProfileProperties",
    "properties": {
      "uuid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Globally unique, immutable, non-reusable id."
      },
      "targetAddress": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration."
      },
      "userAuthentication": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Defines the client authentication mechanism to the server."
      },
      "transportAuthentication": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 0,
        "description": "Defines the authentication mechanism for the southbound connector connecting to the shop floor/OT device."
      },
      "additionalConfiguration": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF)."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 2,
        "description": "Provisioning state of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssetEndpointProfilePropertiesUserAuthentication",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 1,
        "description": "Defines the mode to authenticate the user of the client at the server."
      },
      "usernamePasswordCredentials": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 0,
        "description": "Defines the username and password references when UsernamePassword user authentication mode is selected."
      },
      "x509Credentials": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Defines the certificate reference when Certificate user authentication mode is selected."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Anonymous"
  },
  {
    "$type": "StringLiteralType",
    "value": "Certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "UsernamePassword"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/50"
      },
      {
        "$ref": "#/51"
      },
      {
        "$ref": "#/52"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AssetEndpointProfilePropertiesUserAuthenticationUsernamePasswordCredentials",
    "properties": {
      "usernameReference": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "A reference to secret containing the username."
      },
      "passwordReference": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "A reference to secret containing the password."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssetEndpointProfilePropertiesUserAuthenticationX509Credentials",
    "properties": {
      "certificateReference": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "A reference to secret containing the certificate and private key (e.g. stored as .der/.pem or .der/.pfx)."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssetEndpointProfilePropertiesTransportAuthentication",
    "properties": {
      "ownCertificates": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 1,
        "description": "Defines a reference to a secret which contains all certificates and private keys that can be used by the southbound connector connecting to the shop floor/OT device. The accepted extensions are .der for certificates and .pfx/.pem for private keys."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AssetEndpointProfilePropertiesTransportAuthenticationOwnCertificatesItem",
    "properties": {
      "certThumbprint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Certificate thumbprint."
      },
      "certSecretReference": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Secret Reference name (cert and private key)."
      },
      "certPasswordReference": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Secret Reference Name (Pfx or Pem password)"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/57"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/59"
      },
      {
        "$ref": "#/60"
      },
      {
        "$ref": "#/61"
      },
      {
        "$ref": "#/62"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AssetEndpointProfileExtendedLocation",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The extended location type."
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The extended location name."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.DeviceRegistry/assetEndpointProfiles@2023-11-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/47"
    },
    "flags": 0
  }
]