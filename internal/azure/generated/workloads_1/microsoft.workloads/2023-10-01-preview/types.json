[
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z0-9-_]+$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Workloads/monitors"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Workloads/monitors",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "identity": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "The Managed service identity."
      },
      "properties": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 0,
        "description": "SAP monitor properties"
      },
      "tags": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedServiceIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "tenantId": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "userAssignedIdentities": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."
      },
      "type": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 1,
        "description": "The managed service identity for all identities."
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 36,
    "maxLength": 36,
    "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "The principal ID of the assigned identity."
      },
      "clientId": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "The client ID of the assigned identity."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentities",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/7"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "MonitorProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 2,
        "description": "State of provisioning of the SAP monitor."
      },
      "errors": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 2,
        "description": "Defines the SAP monitor errors."
      },
      "appLocation": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region."
      },
      "routingPreference": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 0,
        "description": "Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET."
      },
      "zoneRedundancyPreference": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Sets the preference for zone redundancy on resources created for the SAP monitor. By default resources will be created which do not support zone redundancy."
      },
      "managedResourceGroupConfiguration": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 0,
        "description": "Managed resource group configuration"
      },
      "logAnalyticsWorkspaceArmId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ARM ID of the Log Analytics Workspace that is used for SAP monitoring."
      },
      "monitorSubnet": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The subnet which the SAP monitor will be deployed in"
      },
      "msiArmId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The ARM ID of the MSI used for SAP monitoring."
      },
      "storageAccountArmId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The ARM ID of the Storage account used for SAP monitoring."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Migrating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/14"
      },
      {
        "$ref": "#/15"
      },
      {
        "$ref": "#/16"
      },
      {
        "$ref": "#/17"
      },
      {
        "$ref": "#/18"
      },
      {
        "$ref": "#/19"
      },
      {
        "$ref": "#/20"
      },
      {
        "$ref": "#/21"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "MonitorPropertiesErrors",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Server-defined set of error codes."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Human-readable representation of the error."
      },
      "target": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Target of the error."
      },
      "details": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 2,
        "description": "Array of details about specific errors that led to this reported error."
      },
      "innerError": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 2,
        "description": "Object containing more specific information than  the current object about the error."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Error",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Server-defined set of error codes."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Human-readable representation of the error."
      },
      "target": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Target of the error."
      },
      "details": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 2,
        "description": "Array of details about specific errors that led to this reported error."
      },
      "innerError": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 2,
        "description": "Object containing more specific information than  the current object about the error."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/24"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ErrorInnerError",
    "properties": {
      "innerError": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 0,
        "description": "Standard error object."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/24"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Default"
  },
  {
    "$type": "StringLiteralType",
    "value": "RouteAll"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/28"
      },
      {
        "$ref": "#/29"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ManagedRGConfiguration",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Managed resource group name"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/34"
      },
      {
        "$ref": "#/35"
      },
      {
        "$ref": "#/36"
      },
      {
        "$ref": "#/37"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/39"
      },
      {
        "$ref": "#/40"
      },
      {
        "$ref": "#/41"
      },
      {
        "$ref": "#/42"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Workloads/monitors@2023-10-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/4"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z0-9-]+$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Workloads/monitors/providerInstances"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Workloads/monitors/providerInstances",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Provider Instance properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProviderInstanceProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 2,
        "description": "State of provisioning of the provider instance"
      },
      "health": {
        "type": {
          "$ref": "#/59"
        },
        "flags": 2,
        "description": "Resource health details"
      },
      "errors": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 2,
        "description": "Defines the provider instance errors."
      },
      "providerSettings": {
        "type": {
          "$ref": "#/67"
        },
        "flags": 0,
        "description": "Defines the provider specific properties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Migrating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/50"
      },
      {
        "$ref": "#/51"
      },
      {
        "$ref": "#/52"
      },
      {
        "$ref": "#/53"
      },
      {
        "$ref": "#/54"
      },
      {
        "$ref": "#/55"
      },
      {
        "$ref": "#/56"
      },
      {
        "$ref": "#/57"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Health",
    "properties": {
      "healthState": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 2,
        "description": "State of health of the provider instance"
      },
      "impactingReasons": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Reasons impacting health state"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Healthy"
  },
  {
    "$type": "StringLiteralType",
    "value": "Degraded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unavailable"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/60"
      },
      {
        "$ref": "#/61"
      },
      {
        "$ref": "#/62"
      },
      {
        "$ref": "#/63"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ProviderInstancePropertiesErrors",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Server-defined set of error codes."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Human-readable representation of the error."
      },
      "target": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Target of the error."
      },
      "details": {
        "type": {
          "$ref": "#/66"
        },
        "flags": 2,
        "description": "Array of details about specific errors that led to this reported error."
      },
      "innerError": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 2,
        "description": "Object containing more specific information than  the current object about the error."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/24"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ProviderSpecificProperties",
    "discriminator": "providerType",
    "baseProperties": {},
    "elements": {
      "Db2": {
        "$ref": "#/68"
      },
      "MsSqlServer": {
        "$ref": "#/75"
      },
      "PrometheusHaCluster": {
        "$ref": "#/81"
      },
      "PrometheusOS": {
        "$ref": "#/87"
      },
      "SapHana": {
        "$ref": "#/93"
      },
      "SapNetWeaver": {
        "$ref": "#/99"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DB2ProviderInstanceProperties",
    "properties": {
      "hostname": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the target virtual machine name."
      },
      "dbName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the db2 database name."
      },
      "dbPort": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the db2 database sql port."
      },
      "dbUsername": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the db2 database user name."
      },
      "dbPassword": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 0,
        "description": "Gets or sets the db2 database password."
      },
      "dbPasswordUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the key vault URI to secret with the database password."
      },
      "sapSid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SAP System Identifier"
      },
      "sslPreference": {
        "type": {
          "$ref": "#/73"
        },
        "flags": 0,
        "description": "Gets or sets certificate preference if secure communication is enabled."
      },
      "sslCertificateUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the blob URI to SSL certificate for the DB2 Database."
      },
      "providerType": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 1,
        "description": "The provider type. For example, the value can be SapHana."
      }
    }
  },
  {
    "$type": "StringType",
    "sensitive": true
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "RootCertificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServerCertificate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/70"
      },
      {
        "$ref": "#/71"
      },
      {
        "$ref": "#/72"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Db2"
  },
  {
    "$type": "ObjectType",
    "name": "MsSqlServerProviderInstanceProperties",
    "properties": {
      "hostname": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SQL server host name."
      },
      "dbPort": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the database sql port."
      },
      "dbUsername": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the database user name."
      },
      "dbPassword": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 0,
        "description": "Gets or sets the database password."
      },
      "dbPasswordUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the key vault URI to secret with the database password."
      },
      "sapSid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SAP System Identifier"
      },
      "sslPreference": {
        "type": {
          "$ref": "#/79"
        },
        "flags": 0,
        "description": "Gets or sets certificate preference if secure communication is enabled."
      },
      "sslCertificateUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the blob URI to SSL certificate for the SQL Database."
      },
      "providerType": {
        "type": {
          "$ref": "#/80"
        },
        "flags": 1,
        "description": "The provider type. For example, the value can be SapHana."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "RootCertificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServerCertificate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/76"
      },
      {
        "$ref": "#/77"
      },
      {
        "$ref": "#/78"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "MsSqlServer"
  },
  {
    "$type": "ObjectType",
    "name": "PrometheusHaClusterProviderInstanceProperties",
    "properties": {
      "prometheusUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "URL of the Node Exporter endpoint."
      },
      "hostname": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the target machine name."
      },
      "sid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the cluster sid."
      },
      "clusterName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the clusterName."
      },
      "sslPreference": {
        "type": {
          "$ref": "#/85"
        },
        "flags": 0,
        "description": "Gets or sets certificate preference if secure communication is enabled."
      },
      "sslCertificateUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the blob URI to SSL certificate for the HA cluster exporter."
      },
      "providerType": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 1,
        "description": "The provider type. For example, the value can be SapHana."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "RootCertificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServerCertificate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/82"
      },
      {
        "$ref": "#/83"
      },
      {
        "$ref": "#/84"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "PrometheusHaCluster"
  },
  {
    "$type": "ObjectType",
    "name": "PrometheusOSProviderInstanceProperties",
    "properties": {
      "prometheusUrl": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "URL of the Node Exporter endpoint"
      },
      "sslPreference": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 0,
        "description": "Gets or sets certificate preference if secure communication is enabled."
      },
      "sslCertificateUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the blob URI to SSL certificate for the prometheus node exporter."
      },
      "sapSid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SAP System Identifier"
      },
      "providerType": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 1,
        "description": "The provider type. For example, the value can be SapHana."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "RootCertificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServerCertificate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/88"
      },
      {
        "$ref": "#/89"
      },
      {
        "$ref": "#/90"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "PrometheusOS"
  },
  {
    "$type": "ObjectType",
    "name": "HanaDbProviderInstanceProperties",
    "properties": {
      "hostname": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the target virtual machine size."
      },
      "dbName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the hana database name."
      },
      "sqlPort": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the database sql port."
      },
      "instanceNumber": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the database instance number."
      },
      "dbUsername": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the database user name."
      },
      "dbPassword": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 0,
        "description": "Gets or sets the database password."
      },
      "dbPasswordUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the key vault URI to secret with the database password."
      },
      "sslCertificateUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the blob URI to SSL certificate for the DB."
      },
      "sslHostNameInCertificate": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the hostname(s) in the SSL certificate."
      },
      "sslPreference": {
        "type": {
          "$ref": "#/97"
        },
        "flags": 0,
        "description": "Gets or sets certificate preference if secure communication is enabled."
      },
      "sapSid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SAP System Identifier."
      },
      "providerType": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 1,
        "description": "The provider type. For example, the value can be SapHana."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "RootCertificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServerCertificate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/94"
      },
      {
        "$ref": "#/95"
      },
      {
        "$ref": "#/96"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "SapHana"
  },
  {
    "$type": "ObjectType",
    "name": "SapNetWeaverProviderInstanceProperties",
    "properties": {
      "sapSid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SAP System Identifier"
      },
      "sapHostname": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the target virtual machine IP Address/FQDN."
      },
      "sapInstanceNr": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the instance number of SAP NetWeaver."
      },
      "sapHostFileEntries": {
        "type": {
          "$ref": "#/100"
        },
        "flags": 0,
        "description": "Gets or sets the list of HostFile Entries"
      },
      "sapUsername": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SAP user name."
      },
      "sapPassword": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 0,
        "description": "Sets the SAP password."
      },
      "sapPasswordUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the key vault URI to secret with the SAP password."
      },
      "sapClientId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SAP Client ID."
      },
      "sapPortNumber": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the SAP HTTP port number."
      },
      "sslCertificateUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the blob URI to SSL certificate for the SAP system."
      },
      "sslPreference": {
        "type": {
          "$ref": "#/104"
        },
        "flags": 0,
        "description": "Gets or sets certificate preference if secure communication is enabled."
      },
      "providerType": {
        "type": {
          "$ref": "#/105"
        },
        "flags": 1,
        "description": "The provider type. For example, the value can be SapHana."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "RootCertificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "ServerCertificate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/101"
      },
      {
        "$ref": "#/102"
      },
      {
        "$ref": "#/103"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "SapNetWeaver"
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Workloads/monitors/providerInstances@2023-10-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/48"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Workloads/monitors/sapLandscapeMonitor"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Workloads/monitors/sapLandscapeMonitor",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/108"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/109"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/111"
        },
        "flags": 0,
        "description": "Sap Landscape Monitor properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SapLandscapeMonitorProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/117"
        },
        "flags": 2,
        "description": "State of provisioning of the SAP monitor."
      },
      "grouping": {
        "type": {
          "$ref": "#/118"
        },
        "flags": 0,
        "description": "Gets or sets the SID groupings by landscape and Environment."
      },
      "topMetricsThresholds": {
        "type": {
          "$ref": "#/125"
        },
        "flags": 0,
        "description": "Gets or sets the list Top Metric Thresholds for SAP Landscape Monitor Dashboard"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Created"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/112"
      },
      {
        "$ref": "#/113"
      },
      {
        "$ref": "#/114"
      },
      {
        "$ref": "#/115"
      },
      {
        "$ref": "#/116"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SapLandscapeMonitorPropertiesGrouping",
    "properties": {
      "landscape": {
        "type": {
          "$ref": "#/121"
        },
        "flags": 0,
        "description": "Gets or sets the list of landscape to SID mappings."
      },
      "sapApplication": {
        "type": {
          "$ref": "#/122"
        },
        "flags": 0,
        "description": "Gets or sets the list of Sap Applications to SID mappings."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SapLandscapeMonitorSidMapping",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the name of the grouping."
      },
      "topSid": {
        "type": {
          "$ref": "#/120"
        },
        "flags": 0,
        "description": "Gets or sets the list of SID's."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/119"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/119"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SapLandscapeMonitorMetricThresholds",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets or sets the name of the threshold."
      },
      "green": {
        "type": {
          "$ref": "#/124"
        },
        "flags": 0,
        "description": "Gets or sets the threshold value for Green."
      },
      "yellow": {
        "type": {
          "$ref": "#/124"
        },
        "flags": 0,
        "description": "Gets or sets the threshold value for Yellow."
      },
      "red": {
        "type": {
          "$ref": "#/124"
        },
        "flags": 0,
        "description": "Gets or sets the threshold value for Red."
      }
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/123"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Workloads/monitors/sapLandscapeMonitor@2023-10-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/110"
    },
    "flags": 0
  }
]