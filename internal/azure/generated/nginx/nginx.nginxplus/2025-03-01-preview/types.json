[
  {
    "$type": "StringType",
    "pattern": "^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"
  },
  {
    "$type": "StringLiteralType",
    "value": "NGINX.NGINXPLUS/nginxDeployments"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-03-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "NGINX.NGINXPLUS/nginxDeployments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "identity": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "The managed service identities assigned to this resource."
      },
      "sku": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 0,
        "description": "The SKU (Stock Keeping Unit) assigned to this resource."
      },
      "tags": {
        "type": {
          "$ref": "#/60"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxDeploymentProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 2,
        "description": "The provisioning state of the deployment."
      },
      "nginxVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The Nginx version."
      },
      "networkProfile": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 1,
        "description": "The network profile."
      },
      "ipAddress": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The IP address of the deployment."
      },
      "enableDiagnosticsSupport": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 1,
        "description": "Whether diagnostics support is enabled."
      },
      "logging": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 1,
        "description": "Logging configuration."
      },
      "scalingProperties": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 1,
        "description": "Scaling properties."
      },
      "autoUpgradeProfile": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 1,
        "description": "Auto-upgrade profile."
      },
      "userProfile": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 1,
        "description": "User profile."
      },
      "nginxAppProtect": {
        "type": {
          "$ref": "#/37"
        },
        "flags": 1,
        "description": "Nginx App Protect configuration."
      },
      "dataplaneApiEndpoint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Dataplane API endpoint."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleted"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/12"
      },
      {
        "$ref": "#/13"
      },
      {
        "$ref": "#/14"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NginxNetworkProfile",
    "properties": {
      "frontEndIPConfiguration": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 1,
        "description": "Frontend IP configuration."
      },
      "networkInterfaceConfiguration": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 1,
        "description": "Network interface configuration."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxFrontendIPConfiguration",
    "properties": {
      "publicIPAddresses": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 1,
        "description": "Public IP addresses."
      },
      "privateIPAddresses": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 1,
        "description": "Private IP addresses."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxPublicIPAddress",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The resource ID of the public IP address."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/18"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxPrivateIPAddress",
    "properties": {
      "privateIPAddress": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The private IP address."
      },
      "privateIPAllocationMethod": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 1,
        "description": "The allocation method for the private IP."
      },
      "subnetId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The subnet resource ID."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Static"
  },
  {
    "$type": "StringLiteralType",
    "value": "Dynamic"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/21"
      },
      {
        "$ref": "#/22"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/20"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxNetworkInterfaceConfiguration",
    "properties": {
      "subnetId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The subnet resource ID."
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ObjectType",
    "name": "NginxLogging",
    "properties": {
      "storageAccount": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 1,
        "description": "Storage account configuration."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxStorageAccount",
    "properties": {
      "accountName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The storage account name."
      },
      "containerName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The container name."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxDeploymentScalingProperties",
    "properties": {
      "capacity": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 1,
        "description": "The capacity of the deployment."
      },
      "autoScaleSettings": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 1,
        "description": "Auto-scale settings."
      }
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ObjectType",
    "name": "AutoScaleSettings",
    "properties": {
      "profiles": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 1,
        "description": "List of scale profiles."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScaleProfile",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the scale profile."
      },
      "capacity": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 1,
        "description": "Capacity settings for the scale profile."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScaleProfileCapacity",
    "properties": {
      "min": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 1,
        "description": "Minimum capacity."
      },
      "max": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 1,
        "description": "Maximum capacity."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/32"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoUpgradeProfile",
    "properties": {
      "upgradeChannel": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The upgrade channel."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxDeploymentUserProfile",
    "properties": {
      "preferredEmail": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The preferred email address."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxAppProtect",
    "properties": {
      "webApplicationFirewallSettings": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 1,
        "description": "Web application firewall settings."
      },
      "webApplicationFirewallStatus": {
        "type": {
          "$ref": "#/42"
        },
        "flags": 1,
        "description": "Web application firewall status."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WebApplicationFirewallSettings",
    "properties": {
      "activationState": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 1,
        "description": "The activation state of the WAF."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/39"
      },
      {
        "$ref": "#/40"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "WebApplicationFirewallStatus",
    "properties": {
      "wafRelease": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The WAF release version."
      },
      "attackSignaturesPackage": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 1,
        "description": "Attack signatures package."
      },
      "botSignaturesPackage": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 1,
        "description": "Bot signatures package."
      },
      "threatCampaignsPackage": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 1,
        "description": "Threat campaigns package."
      },
      "componentVersions": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 1,
        "description": "Component versions."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WebApplicationFirewallPackage",
    "properties": {
      "version": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The package version."
      },
      "revisionDatetime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The revision datetime."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WebApplicationFirewallComponentVersions",
    "properties": {
      "wafEngineVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "WAF engine version."
      },
      "wafNginxVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "WAF Nginx version."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedServiceIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 2,
        "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "tenantId": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 2,
        "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity."
      },
      "type": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 1,
        "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."
      },
      "userAssignedIdentities": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 0,
        "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 36,
    "maxLength": 36,
    "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned,UserAssigned"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/47"
      },
      {
        "$ref": "#/48"
      },
      {
        "$ref": "#/49"
      },
      {
        "$ref": "#/50"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 2,
        "description": "The principal ID of the assigned identity."
      },
      "clientId": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 2,
        "description": "The client ID of the assigned identity."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentities",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/52"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Sku",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
      },
      "tier": {
        "type": {
          "$ref": "#/59"
        },
        "flags": 0,
        "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
      },
      "size": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code."
      },
      "family": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
      },
      "capacity": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 0,
        "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Free"
  },
  {
    "$type": "StringLiteralType",
    "value": "Basic"
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard"
  },
  {
    "$type": "StringLiteralType",
    "value": "Premium"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/55"
      },
      {
        "$ref": "#/56"
      },
      {
        "$ref": "#/57"
      },
      {
        "$ref": "#/58"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/66"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/62"
      },
      {
        "$ref": "#/63"
      },
      {
        "$ref": "#/64"
      },
      {
        "$ref": "#/65"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/67"
      },
      {
        "$ref": "#/68"
      },
      {
        "$ref": "#/69"
      },
      {
        "$ref": "#/70"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "NGINX.NGINXPLUS/nginxDeployments@2025-03-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/4"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "NGINX.NGINXPLUS/nginxDeployments/apiKeys"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-03-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "NGINX.NGINXPLUS/nginxDeployments/apiKeys",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/73"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ApiKeyRequestPropertiesOrApiKeyResponseProperties",
    "properties": {
      "secretText": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 5,
        "description": "The secret text for the API key"
      },
      "endDateTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Expiry of the key in UTC date-time format."
      },
      "hint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "This is the name of the API key."
      }
    }
  },
  {
    "$type": "StringType",
    "sensitive": true
  },
  {
    "$type": "ResourceType",
    "name": "NGINX.NGINXPLUS/nginxDeployments/apiKeys@2025-03-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/75"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "pattern": "^[a-zA-Z0-9-]{3,24}$"
  },
  {
    "$type": "StringLiteralType",
    "value": "NGINX.NGINXPLUS/nginxDeployments/certificates"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-03-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "NGINX.NGINXPLUS/nginxDeployments/certificates",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/79"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/80"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/81"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/83"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxCertificateProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 2,
        "description": "The provisioning state of the certificate."
      },
      "keyVirtualPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The virtual path to the key file. This is a path that would be used in an Nginx configuration file, for example, /etc/nginx/ssl/key.key."
      },
      "certificateVirtualPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The virtual path to the certificate file. This is a path that would be used in an Nginx configuration file, for example, /etc/nginx/ssl/cert.pem."
      },
      "keyVaultSecretId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The Key Vault secret ID. Example: `https://myvault.vault.azure.net/secrets/mysecret/1234567890abcdef1234567890abcdef`."
      },
      "sha1Thumbprint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The SHA1 thumbprint of the certificate."
      },
      "keyVaultSecretVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The Key Vault secret version."
      },
      "keyVaultSecretCreated": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The creation time of the Key Vault secret in UTC RFC 3339 format.\nExample: `2025-07-08T10:11:08.856Z`."
      },
      "certificateError": {
        "type": {
          "$ref": "#/94"
        },
        "flags": 0,
        "description": "Error details for the certificate, if any."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleted"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/84"
      },
      {
        "$ref": "#/85"
      },
      {
        "$ref": "#/86"
      },
      {
        "$ref": "#/87"
      },
      {
        "$ref": "#/88"
      },
      {
        "$ref": "#/89"
      },
      {
        "$ref": "#/90"
      },
      {
        "$ref": "#/91"
      },
      {
        "$ref": "#/92"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NginxCertificateErrorResponseBody",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The error code."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The error message."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "NGINX.NGINXPLUS/nginxDeployments/certificates@2025-03-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/82"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "NGINX.NGINXPLUS/nginxDeployments/configurations"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-03-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "NGINX.NGINXPLUS/nginxDeployments/configurations",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/79"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/96"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/97"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxConfigurationRequestPropertiesOrNginxConfigurationResponseProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/109"
        },
        "flags": 2,
        "description": "Provisioning state of the configuration."
      },
      "files": {
        "type": {
          "$ref": "#/111"
        },
        "flags": 0,
        "description": "List of configuration files."
      },
      "protectedFiles": {
        "type": {
          "$ref": "#/113"
        },
        "flags": 0,
        "description": "List of protected file requests."
      },
      "package": {
        "type": {
          "$ref": "#/114"
        },
        "flags": 0,
        "description": "Configuration package data."
      },
      "rootFile": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Root file path."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleted"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/100"
      },
      {
        "$ref": "#/101"
      },
      {
        "$ref": "#/102"
      },
      {
        "$ref": "#/103"
      },
      {
        "$ref": "#/104"
      },
      {
        "$ref": "#/105"
      },
      {
        "$ref": "#/106"
      },
      {
        "$ref": "#/107"
      },
      {
        "$ref": "#/108"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NginxConfigurationFile",
    "properties": {
      "content": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "File content in Nginx configuration format, base64 encoded."
      },
      "virtualPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Virtual path of the file."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/110"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxConfigurationProtectedFileContentOrNginxConfigurationProtectedFileResult",
    "properties": {
      "content": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 4,
        "description": "File content in Nginx configuration format, UTF-8 encoded."
      },
      "virtualPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Virtual path of the file."
      },
      "contentHash": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Content hash of the file using SHA-256 algorithm."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/112"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxConfigurationPackage",
    "properties": {
      "data": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Package data. This is base64 encoded content of the files archive."
      },
      "protectedFiles": {
        "type": {
          "$ref": "#/115"
        },
        "flags": 0,
        "description": "List of protected files in the package.\nThese are standard file paths relative to the archive uploaded"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "NGINX.NGINXPLUS/nginxDeployments/configurations@2025-03-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/98"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "NGINX.NGINXPLUS/nginxDeployments/wafPolicies"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-03-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "NGINX.NGINXPLUS/nginxDeployments/wafPolicies",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/79"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/117"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/118"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/120"
        },
        "flags": 0,
        "description": "The resource-specific properties for this resource."
      },
      "systemData": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxDeploymentWafPolicyProperties",
    "properties": {
      "content": {
        "type": {
          "$ref": "#/121"
        },
        "flags": 1,
        "description": "The raw policy content (base64-encoded)."
      },
      "filepath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The file path of the WAF policy."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/131"
        },
        "flags": 2,
        "description": "The provisioning state of the WAF policy."
      },
      "compilingState": {
        "type": {
          "$ref": "#/132"
        },
        "flags": 1,
        "description": "The compiling status of the WAF policy."
      },
      "applyingState": {
        "type": {
          "$ref": "#/133"
        },
        "flags": 1,
        "description": "The applying status of the WAF policy."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleted"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/122"
      },
      {
        "$ref": "#/123"
      },
      {
        "$ref": "#/124"
      },
      {
        "$ref": "#/125"
      },
      {
        "$ref": "#/126"
      },
      {
        "$ref": "#/127"
      },
      {
        "$ref": "#/128"
      },
      {
        "$ref": "#/129"
      },
      {
        "$ref": "#/130"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentWafPolicyCompilingStatus",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The compilation status code. Can be any free form text"
      },
      "displayStatus": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The human-readable compilation status."
      },
      "time": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The timestamp when compilation status was recorded in UTC timezone and RFC 3339 format.\nExample: `2025-07-08T10:11:08.856Z`."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentWafPolicyApplyingStatus",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The apply status code. Can be any free form text"
      },
      "displayStatus": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The human-readable apply status."
      },
      "time": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The timestamp when apply status was recorded in UTC."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "NGINX.NGINXPLUS/nginxDeployments/wafPolicies@2025-03-01-preview",
    "scopeType": 8,
    "body": {
      "$ref": "#/119"
    },
    "flags": 0
  },
  {
    "$type": "ObjectType",
    "name": "NginxDeploymentDefaultWafPolicyListResponse",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/137"
        },
        "flags": 1,
        "description": "List of default WAF policies."
      },
      "nextLink": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "URL to fetch the next page of WAF policies."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxDeploymentDefaultWafPolicy",
    "properties": {
      "content": {
        "type": {
          "$ref": "#/121"
        },
        "flags": 1,
        "description": "The raw policy content, base64-encoded."
      },
      "filepath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The file path where this policy would be placed."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/136"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listDefaultWafPolicies",
    "resourceType": "NGINX.NGINXPLUS/nginxDeployments",
    "apiVersion": "2025-03-01-preview",
    "output": {
      "$ref": "#/135"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AnalysisCreate",
    "properties": {
      "config": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 1,
        "description": "Configuration details for analysis."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AnalysisConfig",
    "properties": {
      "rootFile": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The root file of the NGINX config file(s). It must match one of the files' filepath."
      },
      "files": {
        "type": {
          "$ref": "#/141"
        },
        "flags": 0,
        "description": "List of configuration files."
      },
      "protectedFiles": {
        "type": {
          "$ref": "#/143"
        },
        "flags": 0,
        "description": "List of protected files."
      },
      "package": {
        "type": {
          "$ref": "#/114"
        },
        "flags": 0,
        "description": "Configuration package details."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/110"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxConfigurationProtectedFileContent",
    "properties": {
      "content": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "File content in Nginx configuration format, UTF-8 encoded."
      },
      "virtualPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Virtual path of the file."
      },
      "contentHash": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Content hash of the file using SHA-256 algorithm."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/142"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AnalysisResult",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The status of the analysis."
      },
      "data": {
        "type": {
          "$ref": "#/145"
        },
        "flags": 0,
        "description": "Analysis result data."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AnalysisResultContent",
    "properties": {
      "errors": {
        "type": {
          "$ref": "#/147"
        },
        "flags": 0,
        "description": "List of errors found during analysis."
      },
      "diagnostics": {
        "type": {
          "$ref": "#/152"
        },
        "flags": 0,
        "description": "List of diagnostics found during analysis."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AnalysisDiagnostic",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Unique identifier for the error."
      },
      "directive": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The directive being analyzed."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Description of the error."
      },
      "file": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The filepath of the most relevant config file."
      },
      "line": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 1,
        "description": "Line number where the error was found."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Error message."
      },
      "rule": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Rule that triggered the error."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/146"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DiagnosticItem",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Unique identifier for the diagnostic error type. Generated by the analyzer as a free form text."
      },
      "directive": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The directive being analyzed. This is a free form text that can be used to identify the directive."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Description of the diagnostic."
      },
      "file": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The filepath of the most relevant config file."
      },
      "line": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 1,
        "description": "Line number where the diagnostic was found."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Diagnostic message."
      },
      "rule": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Rule that triggered the diagnostic. Rule names can be any free form text that can be used to identify."
      },
      "level": {
        "type": {
          "$ref": "#/151"
        },
        "flags": 1,
        "description": "Warning or Info."
      },
      "category": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Category of warning like Best-practices, Recommendation, Security etc. Can be any free form text."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Info"
  },
  {
    "$type": "StringLiteralType",
    "value": "Warning"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/149"
      },
      {
        "$ref": "#/150"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/148"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "analyze",
    "resourceType": "NGINX.NGINXPLUS/nginxDeployments/configurations",
    "apiVersion": "2025-03-01-preview",
    "output": {
      "$ref": "#/144"
    },
    "input": {
      "$ref": "#/139"
    }
  }
]